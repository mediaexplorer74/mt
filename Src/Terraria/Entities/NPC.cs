// NPC

using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using System;
using System.Collections.Generic;
using GameManager.DataStructures;
using GameManager.GameContent;
using GameManager.GameContent.Achievements;
using GameManager.GameContent.Events;
using GameManager.GameContent.Tile_Entities;
using GameManager.GameContent.UI;
using GameManager.ID;

namespace GameManager
{
    public class NPC : Entity
    {
        public static readonly int[, , ,] MoonLordAttacksArray = NPC.InitializeMoonLordAttacks();
        public static readonly int[,] MoonLordAttacksArray2 = NPC.InitializeMoonLordAttacks2();
        public static int MoonLordCountdown = 0;
        public static int immuneTime = 20;
        public static int maxAI = 4;
        public static int goldCritterChance = 150;
        public static int[] killCount = new int[540];
        public static float waveKills = 0.0f;
        public static int waveCount = 0;
        public static bool taxCollector = false;
        private static int spawnSpaceX = 3;
        private static int spawnSpaceY = 3;
        private static float gravity = 0.3f;
        private static int maxAttack = 20;
        private static int[] attackNPC = new int[NPC.maxAttack];
        public static int fireFlyFriendly = 0;
        public static int fireFlyChance = 0;
        public static int fireFlyMultiple = 0;
        public static int butterflyChance = 0;
        public static int golemBoss = -1;
        public static int plantBoss = -1;
        public static int crimsonBoss = -1;
        public static int sWidth = 1920;
        public static int sHeight = 1080;
        private static int spawnRangeX = (int)((double)(NPC.sWidth / 16) * 0.7);
        private static int spawnRangeY = (int)((double)(NPC.sHeight / 16) * 0.7);
        public static int safeRangeX = (int)((double)(NPC.sWidth / 16) * 0.52);
        public static int safeRangeY = (int)((double)(NPC.sHeight / 16) * 0.52);
        private static int activeRangeX = (int)((double)NPC.sWidth * 2.1);
        private static int activeRangeY = (int)((double)NPC.sHeight * 2.1);
        private static int townRangeX = NPC.sWidth;
        private static int townRangeY = NPC.sHeight;
        private static bool noSpawnCycle = false;
        private static int activeTime = 750;
        private static int defaultSpawnRate = 600;
        private static int defaultMaxSpawns = 5;
        public static bool savedTaxCollector = false;
        public static bool savedGoblin = false;
        public static bool savedWizard = false;
        public static bool savedMech = false;
        public static bool savedAngler = false;
        public static bool savedStylist = false;
        public static bool downedBoss1 = false;
        public static bool downedBoss2 = false;
        public static bool downedBoss3 = false;
        public static bool downedQueenBee = false;
        public static bool downedSlimeKing = false;
        public static bool downedGoblins = false;
        public static bool downedFrost = false;
        public static bool downedPirates = false;
        public static bool downedClown = false;
        public static bool downedPlantBoss = false;
        public static bool downedGolemBoss = false;
        public static bool downedMartians = false;
        public static bool downedFishron = false;
        public static bool downedHalloweenTree = false;
        public static bool downedHalloweenKing = false;
        public static bool downedChristmasIceQueen = false;
        public static bool downedChristmasTree = false;
        public static bool downedChristmasSantank = false;
        public static bool downedAncientCultist = false;
        public static bool downedMoonlord = false;
        public static bool downedTowerSolar = false;
        public static bool downedTowerVortex = false;
        public static bool downedTowerNebula = false;
        public static bool downedTowerStardust = false;
        public static int ShieldStrengthTowerSolar = 0;
        public static int ShieldStrengthTowerVortex = 0;
        public static int ShieldStrengthTowerNebula = 0;
        public static int ShieldStrengthTowerStardust = 0;
        public static int LunarShieldPowerNormal = 100;
        public static int LunarShieldPowerExpert = 150;
        public static bool TowerActiveSolar = false;
        public static bool TowerActiveVortex = false;
        public static bool TowerActiveNebula = false;
        public static bool TowerActiveStardust = false;
        public static bool LunarApocalypseIsUp = false;
        public static bool downedMechBossAny = false;
        public static bool downedMechBoss1 = false;
        public static bool downedMechBoss2 = false;
        public static bool downedMechBoss3 = false;
        private static int spawnRate = NPC.defaultSpawnRate;
        private static int maxSpawns = NPC.defaultMaxSpawns;
        public static bool travelNPC = false;
        public static int[,] cavernMonsterType = new int[2, 3];
        private static int ignorePlayerInteractions = 0;
        public short releaseOwner = (short)byte.MaxValue;
        public bool[] playerInteraction = new bool[(int)byte.MaxValue];
        public float takenDamageMultiplier = 1f;
        private byte[] streamPlayer = new byte[(int)byte.MaxValue];
        public Vector2[] oldPos = new Vector2[10];
        public float[] oldRot = new float[10];
        public int realLife = -1;
        public float npcSlots = 1f;
        public int[] buffType = new int[5];
        public int[] buffTime = new int[5];
        public bool[] buffImmune = new bool[191];
        public bool chaseable = true;
        public bool canGhostHeal = true;
        public int[] immune = new int[256];
        public int directionY = 1;
        public float[] ai = new float[NPC.maxAI];
        public float[] localAI = new float[NPC.maxAI];
        public int target = -1;
        public float scale = 1f;
        public float knockBackResist = 1f;
        public int spriteDirection = -1;
        public int homeTileX = -1;
        public int homeTileY = -1;
        public int oldHomeTileX = -1;
        public int oldHomeTileY = -1;
        public const int MaxMoonLordCountdown = 3600;
        public const int maxBuffs = 5;
        public const int breathMax = 200;
        public int teleportStyle;
        public float teleportTime;
        public int netSpam;
        public bool dripping;
        public bool drippingSlime;
        public short catchItem;
        public int rarity;
        public float gfxOffY;
        public float stepSpeed;
        public bool teleporting;
        public bool stairFall;
        private byte netStream;
        private byte npcNameLookup;
        public bool setFrameSize;
        public int netSkip;
        public bool netAlways;
        public bool dontCountMe;
        public bool midas;
        public bool ichor;
        public bool onFire;
        public bool onFire2;
        public bool onFrostBurn;
        public bool poisoned;
        public bool venom;
        public bool shadowFlame;
        public bool soulDrain;
        public int lifeRegen;
        public int lifeRegenCount;
        public bool confused;
        public bool loveStruck;
        public bool stinky;
        public bool dryadWard;
        public bool immortal;
        public bool javelined;
        public bool celled;
        public bool dryadBane;
        public bool daybreak;
        public int soundDelay;
        public int type;
        public int aiAction;
        public int aiStyle;
        public bool justHit;
        public int timeLeft;
        public int damage;
        public int defense;
        public int defDamage;
        public int defDefense;
        public bool coldDamage;
        public bool trapImmune;
        public int soundHit;
        public int soundKilled;
        public int life;
        public int lifeMax;
        public Rectangle targetRect;
        public double frameCounter;
        public Rectangle frame;
        public string displayName;
        public Color color;
        public int alpha;
        public bool hide;
        public new int oldDirection;
        public int oldDirectionY;
        public int oldTarget;
        public float rotation;
        public bool noGravity;
        public bool noTileCollide;
        public bool netUpdate;
        public bool netUpdate2;
        public bool collideX;
        public bool collideY;
        public bool boss;
        public bool behindTiles;
        public bool lavaImmune;
        public float value;
        public float extraValue;
        public bool dontTakeDamage;
        public int netID;
        public bool townNPC;
        public bool homeless;
        public bool oldHomeless;
        public bool friendly;
        public bool closeDoor;
        public int doorX;
        public int doorY;
        public int friendlyRegen;
        public int breath;
        public int breathCounter;
        public bool reflectingProjectiles;
        public int lastPortalColorIndex;

        public static bool downedTowers
        {
            get
            {
                if (NPC.downedTowerSolar && NPC.downedTowerVortex && NPC.downedTowerNebula)
                    return NPC.downedTowerStardust;
                return false;
            }
        }

        public static int ShieldStrengthTowerMax
        {
            get
            {
                if (!Main.expertMode)
                    return NPC.LunarShieldPowerNormal;
                return NPC.LunarShieldPowerExpert;
            }
        }

        public static bool TowersDefeated
        {
            get
            {
                if (NPC.TowerActiveSolar && NPC.TowerActiveVortex && NPC.TowerActiveNebula)
                    return NPC.TowerActiveStardust;
                return false;
            }
        }

        public float Opacity
        {
            get
            {
                return (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
            }
            set
            {
                this.alpha = (int)MathHelper.Clamp((float)((1.0 - (double)value) * (double)byte.MaxValue), 0.0f, (float)byte.MaxValue);
            }
        }

        public bool CanTalk
        {
            get
            {
                if ((this.townNPC || this.type == 453) && this.aiStyle == 7)
                    return (double)this.velocity.Y == 0.0;
                return false;
            }
        }

        public bool HasValidTarget
        {
            get
            {
                if (this.target >= 0 && this.target < (int)byte.MaxValue && Main.player[this.target].active)
                    return !Main.player[this.target].dead;
                return false;
            }
        }

        public static int[, , ,] InitializeMoonLordAttacks()
        {
            int[, , ,] numArray;
            if (NPC.MoonLordAttacksArray != null)
            {
                numArray = NPC.MoonLordAttacksArray;
                for (int index1 = 0; index1 < numArray.GetLength(0); ++index1)
                {
                    for (int index2 = 0; index2 < numArray.GetLength(1); ++index2)
                    {
                        for (int index3 = 0; index3 < numArray.GetLength(2); ++index3)
                        {
                            for (int index4 = 0; index4 < numArray.GetLength(3); ++index4)
                                numArray[index1, index2, index3, index4] = 0;
                        }
                    }
                }
            }
            else
                numArray = new int[3, 3, 2, 5];
            numArray[0, 0, 0, 0] = 0;
            numArray[0, 0, 1, 0] = 60;
            numArray[0, 0, 0, 1] = 1;
            numArray[0, 0, 1, 1] = 70;
            numArray[0, 0, 0, 2] = 2;
            numArray[0, 0, 1, 2] = 330;
            numArray[0, 0, 0, 3] = 0;
            numArray[0, 0, 1, 3] = 60;
            numArray[0, 0, 0, 4] = 3;
            numArray[0, 0, 1, 4] = 90;
            numArray[0, 1, 0, 0] = 1;
            numArray[0, 1, 1, 0] = 70;
            numArray[0, 1, 0, 1] = 0;
            numArray[0, 1, 1, 1] = 120;
            numArray[0, 1, 0, 2] = 3;
            numArray[0, 1, 1, 2] = 90;
            numArray[0, 1, 0, 3] = 0;
            numArray[0, 1, 1, 3] = 120;
            numArray[0, 1, 0, 4] = 2;
            numArray[0, 1, 1, 4] = 390;
            numArray[0, 2, 0, 0] = 3;
            numArray[0, 2, 1, 0] = 90;
            numArray[0, 2, 0, 1] = 0;
            numArray[0, 2, 1, 1] = 120;
            numArray[0, 2, 0, 2] = 2;
            numArray[0, 2, 1, 2] = 435;
            numArray[0, 2, 0, 3] = 0;
            numArray[0, 2, 1, 3] = 120;
            numArray[0, 2, 0, 4] = 1;
            numArray[0, 2, 1, 4] = 375;
            numArray[1, 0, 0, 0] = 0;
            numArray[1, 0, 1, 0] = 0;
            numArray[1, 0, 0, 1] = 0;
            numArray[1, 0, 1, 1] = 0;
            numArray[1, 0, 0, 2] = 0;
            numArray[1, 0, 1, 2] = 0;
            numArray[1, 0, 0, 3] = 0;
            numArray[1, 0, 1, 3] = 0;
            numArray[1, 0, 0, 4] = 0;
            numArray[1, 0, 1, 4] = 0;
            numArray[1, 1, 0, 0] = 0;
            numArray[1, 1, 1, 0] = 0;
            numArray[1, 1, 0, 1] = 0;
            numArray[1, 1, 1, 1] = 0;
            numArray[1, 1, 0, 2] = 0;
            numArray[1, 1, 1, 2] = 0;
            numArray[1, 1, 0, 3] = 0;
            numArray[1, 1, 1, 3] = 0;
            numArray[1, 1, 0, 4] = 0;
            numArray[1, 1, 1, 4] = 0;
            numArray[1, 2, 0, 0] = 0;
            numArray[1, 2, 1, 0] = 0;
            numArray[1, 2, 0, 1] = 0;
            numArray[1, 2, 1, 1] = 0;
            numArray[1, 2, 0, 2] = 0;
            numArray[1, 2, 1, 2] = 0;
            numArray[1, 2, 0, 3] = 0;
            numArray[1, 2, 1, 3] = 0;
            numArray[1, 2, 0, 4] = 0;
            numArray[1, 2, 1, 4] = 0;
            numArray[2, 0, 0, 0] = 0;
            numArray[2, 0, 1, 0] = 0;
            numArray[2, 0, 0, 1] = 0;
            numArray[2, 0, 1, 1] = 0;
            numArray[2, 0, 0, 2] = 0;
            numArray[2, 0, 1, 2] = 0;
            numArray[2, 0, 0, 3] = 0;
            numArray[2, 0, 1, 3] = 0;
            numArray[2, 0, 0, 4] = 0;
            numArray[2, 0, 1, 4] = 0;
            numArray[2, 1, 0, 0] = 0;
            numArray[2, 1, 1, 0] = 0;
            numArray[2, 1, 0, 1] = 0;
            numArray[2, 1, 1, 1] = 0;
            numArray[2, 1, 0, 2] = 0;
            numArray[2, 1, 1, 2] = 0;
            numArray[2, 1, 0, 3] = 0;
            numArray[2, 1, 1, 3] = 0;
            numArray[2, 1, 0, 4] = 0;
            numArray[2, 1, 1, 4] = 0;
            numArray[2, 2, 0, 0] = 0;
            numArray[2, 2, 1, 0] = 0;
            numArray[2, 2, 0, 1] = 0;
            numArray[2, 2, 1, 1] = 0;
            numArray[2, 2, 0, 2] = 0;
            numArray[2, 2, 1, 2] = 0;
            numArray[2, 2, 0, 3] = 0;
            numArray[2, 2, 1, 3] = 0;
            numArray[2, 2, 0, 4] = 0;
            numArray[2, 2, 1, 4] = 0;
            NPC.InitializeMoonLordAttacks2();
            return numArray;
        }

        public static int[,] InitializeMoonLordAttacks2()
        {
            int[,] numArray;
            if (NPC.MoonLordAttacksArray2 != null)
            {
                numArray = NPC.MoonLordAttacksArray2;
                for (int index1 = 0; index1 < numArray.GetLength(0); ++index1)
                {
                    for (int index2 = 0; index2 < numArray.GetLength(1); ++index2)
                        numArray[index1, index2] = 0;
                }
            }
            else
                numArray = new int[2, 10];
            numArray[0, 0] = 0;
            numArray[1, 0] = 90;
            numArray[0, 1] = 1;
            numArray[1, 1] = 90;
            numArray[0, 2] = 0;
            numArray[1, 2] = 90;
            numArray[0, 3] = 2;
            numArray[1, 3] = 135;
            numArray[0, 4] = 0;
            numArray[1, 4] = 90;
            numArray[0, 5] = 3;
            numArray[1, 5] = 200;
            numArray[0, 6] = 0;
            numArray[1, 6] = 90;
            numArray[0, 7] = 4;
            numArray[1, 7] = 375;
            numArray[0, 8] = 0;
            numArray[1, 8] = 90;
            numArray[0, 9] = 2;
            numArray[1, 9] = 135;
            return numArray;
        }

        public static string getNewNPCName(int npcType)
        {
            if (WorldGen.genRand == null)
                WorldGen.genRand = new Random();
            switch (npcType)
            {
                case 441:
                    switch (WorldGen.genRand.Next(20))
                    {
                        case 0:
                            return "McKinly";
                        case 1:
                            return "Millard";
                        case 2:
                            return "Fillmore";
                        case 3:
                            return "Rutherford";
                        case 4:
                            return "Chester";
                        case 5:
                            return "Grover";
                        case 6:
                            return "Cleveland";
                        case 7:
                            return "Theodore";
                        case 8:
                            return "Herbert";
                        case 9:
                            return "Warren";
                        case 10:
                            return "Lyndon";
                        case 11:
                            return "Ronald";
                        case 12:
                            return "Harrison";
                        case 13:
                            return "Woodrow";
                        case 14:
                            return "Tweed";
                        case 15:
                            return "Blanton";
                        case 16:
                            return "Dwyer";
                        case 17:
                            return "Carroll";
                        default:
                            return "Agnew";
                    }
                case 453:
                    switch (WorldGen.genRand.Next(8))
                    {
                        case 0:
                            return "Skellington";
                        case 1:
                            return "Bones McGee";
                        case 2:
                            return "Gloomy Mays";
                        case 3:
                            return "Jack Sellington";
                        case 4:
                            return "Billy Marrows";
                        case 5:
                            return "Tom";
                        case 6:
                            return "Rattles Magoo";
                        case 7:
                            return "Mandible Calavera";
                        default:
                            return "No-Eyed Wiley";
                    }
                case 353:
                    switch (WorldGen.genRand.Next(20))
                    {
                        case 0:
                            return "Bri";
                        case 1:
                            return "Brianne";
                        case 2:
                            return "Flora";
                        case 3:
                            return "Iris";
                        case 4:
                            return "Scarlett";
                        case 5:
                            return "Lola";
                        case 6:
                            return "Hazel";
                        case 7:
                            return "Stella";
                        case 8:
                            return "Pearl";
                        case 9:
                            return "Tallulah";
                        case 10:
                            return "Ruby";
                        case 11:
                            return "Esmeralda";
                        case 12:
                            return "Kylie";
                        case 13:
                            return "Kati";
                        case 14:
                            return "Biah";
                        case 15:
                            return "Meliyah";
                        case 16:
                            return "Petra";
                        case 17:
                            return "Rox";
                        case 18:
                            return "Roxanne";
                        default:
                            return "Annabel";
                    }
                case 368:
                    switch (WorldGen.genRand.Next(13))
                    {
                        case 0:
                            return "Abraham";
                        case 1:
                            return "Bohemas";
                        case 2:
                            return "Eladon";
                        case 3:
                            return "Aphraim";
                        case 4:
                            return "Gallius";
                        case 5:
                            return "Llewellyn";
                        case 6:
                            return "Riley";
                        case 7:
                            return "Rawleigh";
                        case 8:
                            return "Shipton";
                        case 9:
                            return "Romeo";
                        case 10:
                            return "Aedan";
                        case 11:
                            return "Mercer";
                        default:
                            return "Willy";
                    }
                case 369:
                    switch (WorldGen.genRand.Next(22))
                    {
                        case 0:
                            return "Bobby";
                        case 1:
                            return "Sammy";
                        case 2:
                            return "Jimmy";
                        case 3:
                            return "Danny";
                        case 4:
                            return "Timmy";
                        case 5:
                            return "Simon";
                        case 6:
                            return "Johnny";
                        case 7:
                            return "Billy";
                        case 8:
                            return "Matty";
                        case 9:
                            return "Bart";
                        case 10:
                            return "Phillip";
                        case 11:
                            return "Spencer";
                        case 12:
                            return "Nathan";
                        case 13:
                            return "Grayson";
                        case 14:
                            return "Bryce";
                        case 15:
                            return "Miles";
                        case 16:
                            return "Charles";
                        case 17:
                            return "Adam";
                        case 18:
                            return "Tyler";
                        case 19:
                            return "Jey";
                        case 20:
                            return "Ivan";
                        default:
                            return "Izzy";
                    }
                case 178:
                    switch (WorldGen.genRand.Next(20))
                    {
                        case 0:
                            return "Whitney";
                        case 1:
                            return "Verity";
                        case 2:
                            return "Ada";
                        case 3:
                            return "Cornelia";
                        case 4:
                            return "Lydia";
                        case 5:
                            return "Leila";
                        case 6:
                            return "Minerva";
                        case 7:
                            return "Emeline";
                        case 8:
                            return "Cynthia";
                        case 9:
                            return "Fidelia";
                        case 10:
                            return "Lilly";
                        case 11:
                            return "Phoebe";
                        case 12:
                            return "Zylphia";
                        case 13:
                            return "Zelda";
                        case 14:
                            return "Selina";
                        case 15:
                            return "Hope";
                        case 16:
                            return "Isabella";
                        case 17:
                            return "Judith";
                        case 18:
                            return "Savannah";
                        default:
                            return "Vivian";
                    }
                case 207:
                    switch (WorldGen.genRand.Next(16))
                    {
                        case 0:
                            return "Abdosir";
                        case 1:
                            return "Akbar";
                        case 2:
                            return "Bodashtart";
                        case 3:
                            return "Danel";
                        case 4:
                            return "Hanno";
                        case 5:
                            return "Hiram";
                        case 6:
                            return "Kanmi";
                        case 7:
                            return "Philosir";
                        case 8:
                            return "Tabnit";
                        case 9:
                            return "Yutpan";
                        case 10:
                            return "Ahirom";
                        case 11:
                            return "Batnoam";
                        case 12:
                            return "Sikarbaal";
                        case 13:
                            return "Hannibal";
                        case 14:
                            return "Yehomilk";
                        default:
                            return "Ahinadab";
                    }
                case 208:
                    switch (WorldGen.genRand.Next(17))
                    {
                        case 0:
                            return "Candy";
                        case 1:
                            return "Isis";
                        case 2:
                            return "Trixy";
                        case 3:
                            return "Destiny";
                        case 4:
                            return "Lexus";
                        case 5:
                            return "Bambi";
                        case 6:
                            return "Bailey";
                        case 7:
                            return "Glitter";
                        case 8:
                            return "Sparkle";
                        case 9:
                            return "Paris";
                        case 10:
                            return "Dazzle";
                        case 11:
                            return "Fantasy";
                        case 12:
                            return "Bunny";
                        case 13:
                            return "Sugar";
                        case 14:
                            return "Fantasia";
                        case 15:
                            return "Star";
                        default:
                            return "Cherry";
                    }
                case 209:
                    switch (WorldGen.genRand.Next(23))
                    {
                        case 0:
                            return "Alpha";
                        case 1:
                            return "Beta";
                        case 2:
                            return "Delta";
                        case 3:
                            return "Omega";
                        case 4:
                            return "Gamma";
                        case 5:
                            return "Theta";
                        case 6:
                            return "Kappa";
                        case 7:
                            return "Omicron";
                        case 8:
                            return "Sigma";
                        case 9:
                            return "Upsilon";
                        case 10:
                            return "Phi";
                        case 11:
                            return "Zeta";
                        case 12:
                            return "Lambda";
                        case 13:
                            return "Nu";
                        case 14:
                            return "Ci";
                        case 15:
                            return "Rho";
                        case 16:
                            return "Phi";
                        case 17:
                            return "Fender";
                        case 18:
                            return "T-3E0";
                        case 19:
                            return "Niner-7";
                        case 20:
                            return "A.N.D.Y";
                        case 21:
                            return "Syn-X";
                        default:
                            return "Mu";
                    }
                case 227:
                    switch (WorldGen.genRand.Next(17))
                    {
                        case 0:
                            return "Marco";
                        case 1:
                            return "Guido";
                        case 2:
                            return "Enzo";
                        case 3:
                            return "Martino";
                        case 4:
                            return "Mauro";
                        case 5:
                            return "Lorenzo";
                        case 6:
                            return "Ludo";
                        case 7:
                            return "Luciano";
                        case 8:
                            return "Carlo";
                        case 9:
                            return "Bruno";
                        case 10:
                            return "Mario";
                        case 11:
                            return "Leonardo";
                        case 12:
                            return "Raphael";
                        case 13:
                            return "Luigi";
                        case 14:
                            return "Luca";
                        case 15:
                            return "Darren";
                        default:
                            return "Stefano";
                    }
                case 228:
                    switch (WorldGen.genRand.Next(10))
                    {
                        case 0:
                            return "Abibe";
                        case 1:
                            return "Jamundi";
                        case 2:
                            return "U'wa";
                        case 3:
                            return "Tairona";
                        case 4:
                            return "Xirigua";
                        case 5:
                            return "Zop'a";
                        case 6:
                            return "Opuni";
                        case 7:
                            return "Kogi-ghi";
                        case 8:
                            return "Konah";
                        default:
                            return "Gboto";
                    }
                case 229:
                    switch (WorldGen.genRand.Next(11))
                    {
                        case 0:
                            return "David";
                        case 1:
                            return "Red Beard";
                        case 2:
                            return "Jack";
                        case 3:
                            return "Black Beard";
                        case 4:
                            return "Captain Morgan";
                        case 5:
                            return "Wet Beard";
                        case 6:
                            return "James T. Beard";
                        case 7:
                            return "Gunpowder Garry";
                        case 8:
                            return "Captain Stoney Dirt";
                        case 9:
                            return "Jake";
                        default:
                            return "Captain Bullywort";
                    }
                case 107:
                    switch (WorldGen.genRand.Next(25))
                    {
                        case 0:
                            return "Grodax";
                        case 1:
                            return "Sarx";
                        case 2:
                            return "Xon";
                        case 3:
                            return "Mrunok";
                        case 4:
                            return "Nuxatk";
                        case 5:
                            return "Tgerd";
                        case 6:
                            return "Darz";
                        case 7:
                            return "Smador";
                        case 8:
                            return "Stazen";
                        case 9:
                            return "Mobart";
                        case 10:
                            return "Knogs";
                        case 11:
                            return "Tkanus";
                        case 12:
                            return "Negurk";
                        case 13:
                            return "Nort";
                        case 14:
                            return "Durnok";
                        case 15:
                            return "Trogem";
                        case 16:
                            return "Stezom";
                        case 17:
                            return "Gnudar";
                        case 18:
                            return "Ragz";
                        case 19:
                            return "Fahd";
                        case 20:
                            return "Xanos";
                        case 21:
                            return "Arback";
                        case 22:
                            return "Fjell";
                        case 23:
                            return "Dalek";
                        default:
                            return "Knub";
                    }
                case 108:
                    switch (WorldGen.genRand.Next(21))
                    {
                        case 0:
                            return "Dalamar";
                        case 1:
                            return "Dulais";
                        case 2:
                            return "Elric";
                        case 3:
                            return "Arddun";
                        case 4:
                            return "Maelor";
                        case 5:
                            return "Leomund";
                        case 6:
                            return "Hirael";
                        case 7:
                            return "Gwentor";
                        case 8:
                            return "Greum";
                        case 9:
                            return "Gearroid";
                        case 10:
                            return "Fizban";
                        case 11:
                            return "Ningauble";
                        case 12:
                            return "Seonag";
                        case 13:
                            return "Sargon";
                        case 14:
                            return "Merlyn";
                        case 15:
                            return "Magius";
                        case 16:
                            return "Berwyn";
                        case 17:
                            return "Arwyn";
                        case 18:
                            return "Alasdair";
                        case 19:
                            return "Tagar";
                        default:
                            return "Xanadu";
                    }
                case 124:
                    switch (WorldGen.genRand.Next(24))
                    {
                        case 0:
                            return "Shayna";
                        case 1:
                            return "Korrie";
                        case 2:
                            return "Ginger";
                        case 3:
                            return "Brooke";
                        case 4:
                            return "Jenny";
                        case 5:
                            return "Autumn";
                        case 6:
                            return "Nancy";
                        case 7:
                            return "Ella";
                        case 8:
                            return "Kayla";
                        case 9:
                            return "Selah";
                        case 10:
                            return "Sophia";
                        case 11:
                            return "Marshanna";
                        case 12:
                            return "Lauren";
                        case 13:
                            return "Trisha";
                        case 14:
                            return "Shirlena";
                        case 15:
                            return "Sheena";
                        case 16:
                            return "Ellen";
                        case 17:
                            return "Amy";
                        case 18:
                            return "Dawn";
                        case 19:
                            return "Susana";
                        case 20:
                            return "Meredith";
                        case 21:
                            return "Selene";
                        case 22:
                            return "Terra";
                        default:
                            return "Sally";
                    }
                case 160:
                    switch (WorldGen.genRand.Next(12))
                    {
                        case 0:
                            return "Reishi";
                        case 1:
                            return "Maitake";
                        case 2:
                            return "Chanterelle";
                        case 3:
                            return "Porcini";
                        case 4:
                            return "Shimeji";
                        case 5:
                            return "Amanita";
                        case 6:
                            return "Muscaria";
                        case 7:
                            return "Agaric";
                        case 8:
                            return "Cremini";
                        case 9:
                            return "Morel";
                        case 10:
                            return "Enoki";
                        default:
                            return "Shiitake";
                    }
                case 17:
                    switch (WorldGen.genRand.Next(23))
                    {
                        case 0:
                            return "Alfred";
                        case 1:
                            return "Barney";
                        case 2:
                            return "Calvin";
                        case 3:
                            return "Edmund";
                        case 4:
                            return "Edwin";
                        case 5:
                            return "Eugene";
                        case 6:
                            return "Frank";
                        case 7:
                            return "Frederick";
                        case 8:
                            return "Gilbert";
                        case 9:
                            return "Gus";
                        case 10:
                            return "Wilbur";
                        case 11:
                            return "Seymour";
                        case 12:
                            return "Louis";
                        case 13:
                            return "Humphrey";
                        case 14:
                            return "Harold";
                        case 15:
                            return "Milton";
                        case 16:
                            return "Mortimer";
                        case 17:
                            return "Howard";
                        case 18:
                            return "Walter";
                        case 19:
                            return "Finn";
                        case 20:
                            return "Isaac";
                        case 21:
                            return "Joseph";
                        default:
                            return "Ralph";
                    }
                case 18:
                    switch (WorldGen.genRand.Next(24))
                    {
                        case 0:
                            return "Molly";
                        case 1:
                            return "Amy";
                        case 2:
                            return "Claire";
                        case 3:
                            return "Emily";
                        case 4:
                            return "Katie";
                        case 5:
                            return "Madeline";
                        case 6:
                            return "Katelyn";
                        case 7:
                            return "Emma";
                        case 8:
                            return "Abigail";
                        case 9:
                            return "Carly";
                        case 10:
                            return "Jenna";
                        case 11:
                            return "Heather";
                        case 12:
                            return "Katherine";
                        case 13:
                            return "Caitlin";
                        case 14:
                            return "Kaitlin";
                        case 15:
                            return "Holly";
                        case 16:
                            return "Kaitlyn";
                        case 17:
                            return "Hannah";
                        case 18:
                            return "Kathryn";
                        case 19:
                            return "Lorraine";
                        case 20:
                            return "Helen";
                        case 21:
                            return "Kayla";
                        case 22:
                            return "Lisa";
                        default:
                            return "Allison";
                    }
                case 19:
                    switch (WorldGen.genRand.Next(24))
                    {
                        case 0:
                            return "DeShawn";
                        case 1:
                            return "DeAndre";
                        case 2:
                            return "Marquis";
                        case 3:
                            return "Darnell";
                        case 4:
                            return "Terrell";
                        case 5:
                            return "Malik";
                        case 6:
                            return "Trevon";
                        case 7:
                            return "Tyrone";
                        case 8:
                            return "Willie";
                        case 9:
                            return "Dominique";
                        case 10:
                            return "Demetrius";
                        case 11:
                            return "Reginald";
                        case 12:
                            return "Jamal";
                        case 13:
                            return "Maurice";
                        case 14:
                            return "Jalen";
                        case 15:
                            return "Darius";
                        case 16:
                            return "Xavier";
                        case 17:
                            return "Terrance";
                        case 18:
                            return "Andre";
                        case 19:
                            return "Dante";
                        case 20:
                            return "Brimst";
                        case 21:
                            return "Bronson";
                        case 22:
                            return "Tony";
                        default:
                            return "Darryl";
                    }
                case 20:
                    switch (WorldGen.genRand.Next(22))
                    {
                        case 0:
                            return "Alalia";
                        case 1:
                            return "Alalia";
                        case 2:
                            return "Alura";
                        case 3:
                            return "Ariella";
                        case 4:
                            return "Caelia";
                        case 5:
                            return "Calista";
                        case 6:
                            return "Chryseis";
                        case 7:
                            return "Emerenta";
                        case 8:
                            return "Elysia";
                        case 9:
                            return "Evvie";
                        case 10:
                            return "Faye";
                        case 11:
                            return "Felicitae";
                        case 12:
                            return "Lunette";
                        case 13:
                            return "Nata";
                        case 14:
                            return "Nissa";
                        case 15:
                            return "Tatiana";
                        case 16:
                            return "Rosalva";
                        case 17:
                            return "Shea";
                        case 18:
                            return "Tania";
                        case 19:
                            return "Isis";
                        case 20:
                            return "Celestia";
                        default:
                            return "Xylia";
                    }
                case 22:
                    switch (WorldGen.genRand.Next(35))
                    {
                        case 0:
                            return "Joe";
                        case 1:
                            return "Connor";
                        case 2:
                            return "Tanner";
                        case 3:
                            return "Wyatt";
                        case 4:
                            return "Cody";
                        case 5:
                            return "Levi";
                        case 6:
                            return "Luke";
                        case 7:
                            return "Jack";
                        case 8:
                            return "Scott";
                        case 9:
                            return "Logan";
                        case 10:
                            return "Cole";
                        case 11:
                            return "Asher";
                        case 12:
                            return "Bradley";
                        case 13:
                            return "Jacob";
                        case 14:
                            return "Garrett";
                        case 15:
                            return "Dylan";
                        case 16:
                            return "Maxwell";
                        case 17:
                            return "Steve";
                        case 18:
                            return "Brett";
                        case 19:
                            return "Andrew";
                        case 20:
                            return "Harley";
                        case 21:
                            return "Kyle";
                        case 22:
                            return "Jake";
                        case 23:
                            return "Ryan";
                        case 24:
                            return "Jeffrey";
                        case 25:
                            return "Seth";
                        case 26:
                            return "Marty";
                        case 27:
                            return "Brandon";
                        case 28:
                            return "Zach";
                        case 29:
                            return "Jeff";
                        case 30:
                            return "Daniel";
                        case 31:
                            return "Trent";
                        case 32:
                            return "Kevin";
                        case 33:
                            return "Brian";
                        default:
                            return "Colin";
                    }
                case 38:
                    switch (WorldGen.genRand.Next(22))
                    {
                        case 0:
                            return "Dolbere";
                        case 1:
                            return "Bazdin";
                        case 2:
                            return "Durim";
                        case 3:
                            return "Tordak";
                        case 4:
                            return "Garval";
                        case 5:
                            return "Morthal";
                        case 6:
                            return "Oten";
                        case 7:
                            return "Dolgen";
                        case 8:
                            return "Gimli";
                        case 9:
                            return "Gimut";
                        case 10:
                            return "Duerthen";
                        case 11:
                            return "Beldin";
                        case 12:
                            return "Jarut";
                        case 13:
                            return "Ovbere";
                        case 14:
                            return "Norkas";
                        case 15:
                            return "Dolgrim";
                        case 16:
                            return "Boften";
                        case 17:
                            return "Norsun";
                        case 18:
                            return "Dias";
                        case 19:
                            return "Fikod";
                        case 20:
                            return "Urist";
                        default:
                            return "Darur";
                    }
                case 54:
                    switch (WorldGen.genRand.Next(25))
                    {
                        case 0:
                            return "Sebastian";
                        case 1:
                            return "Rupert";
                        case 2:
                            return "Clive";
                        case 3:
                            return "Nigel";
                        case 4:
                            return "Mervyn";
                        case 5:
                            return "Cedric";
                        case 6:
                            return "Pip";
                        case 7:
                            return "Cyril";
                        case 8:
                            return "Fitz";
                        case 9:
                            return "Lloyd";
                        case 10:
                            return "Arthur";
                        case 11:
                            return "Rodney";
                        case 12:
                            return "Graham";
                        case 13:
                            return "Edward";
                        case 14:
                            return "Alfred";
                        case 15:
                            return "Edmund";
                        case 16:
                            return "Henry";
                        case 17:
                            return "Herald";
                        case 18:
                            return "Roland";
                        case 19:
                            return "Lincoln";
                        case 20:
                            return "Lloyd";
                        case 21:
                            return "Edgar";
                        case 22:
                            return "Eustace";
                        case 23:
                            return "Benjamin";
                        default:
                            return "Rodrick";
                    }
                default:
                    return "";
            }
        }

        public static void setNPCName(string newName, int npcType, bool resetExtras = false)
        {
            bool flag = false;
            for (int index = 0; index < 200; ++index)
            {
                if (Main.npc[index].active && Main.npc[index].type == npcType)
                {
                    if (flag)
                    {
                        Main.npc[index].displayName = NPC.getNewNPCName(npcType);
                    }
                    else
                    {
                        Main.npc[index].displayName = newName;
                        if (!resetExtras)
                            break;
                        flag = true;
                    }
                }
            }
        }

        public static string firstNPCName(int npcType)
        {
            for (int index = 0; index < 200; ++index)
            {
                if (Main.npc[index].active && Main.npc[index].type == npcType)
                    return Main.npc[index].displayName;
            }
            return NPC.getNewNPCName(npcType);
        }

        public static bool MechSpawn(float x, float y, int type)
        {
            int num1 = 0;
            int num2 = 0;
            int num3 = 0;
            for (int index = 0; index < 200; ++index)
            {
                if (Main.npc[index].active && Main.npc[index].type == type)
                {
                    ++num1;
                    Vector2 vector2 = new Vector2(x, y);
                    float num4 = Main.npc[index].position.X - vector2.X;
                    float num5 = Main.npc[index].position.Y - vector2.Y;
                    float num6 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                    if ((double)num6 < 200.0)
                        ++num2;
                    if ((double)num6 < 600.0)
                        ++num3;
                }
            }
            return num2 < 3 && num3 < 6 && num1 < 10;
        }

        public static int TypeToNum(int type)
        {
            if (type == 17)
                return 2;
            if (type == 18)
                return 3;
            if (type == 19)
                return 6;
            if (type == 20)
                return 5;
            if (type == 22)
                return 1;
            if (type == 38)
                return 4;
            if (type == 54)
                return 7;
            if (type == 107)
                return 9;
            if (type == 108)
                return 10;
            if (type == 124)
                return 8;
            if (type == 142)
                return 11;
            if (type == 160)
                return 12;
            if (type == 178)
                return 13;
            if (type == 207)
                return 14;
            if (type == 208)
                return 15;
            if (type == 209)
                return 16;
            if (type == 227)
                return 17;
            if (type == 228)
                return 18;
            if (type == 229)
                return 19;
            if (type == 353)
                return 20;
            if (type == 368)
                return 21;
            if (type == 369)
                return 22;
            return type == 441 ? 23 : -1;
        }

        public static int NumToType(int type)
        {
            if (type == 2)
                return 17;
            if (type == 3)
                return 18;
            if (type == 6)
                return 19;
            if (type == 5)
                return 20;
            if (type == 1)
                return 22;
            if (type == 4)
                return 38;
            if (type == 7)
                return 54;
            if (type == 9)
                return 107;
            if (type == 10)
                return 108;
            if (type == 8)
                return 124;
            if (type == 11)
                return 142;
            if (type == 12)
                return 160;
            if (type == 13)
                return 178;
            if (type == 14)
                return 207;
            if (type == 15)
                return 208;
            if (type == 16)
                return 209;
            if (type == 17)
                return 227;
            if (type == 18)
                return 228;
            if (type == 19)
                return 229;
            if (type == 20)
                return 353;
            if (type == 21)
                return 368;
            if (type == 22)
                return 369;
            return type == 23 ? 441 : -1;
        }

        public int GetBossHeadTextureIndex()
        {
            int num = NPCID.Sets.BossHeadTextures[this.type];
            switch (this.type)
            {
                case 262:
                    if (this.life <= this.lifeMax / 2)
                    {
                        num = 12;
                        break;
                    }
                    break;
                case 439:
                    if ((double)this.ai[0] == 5.0 && this.alpha == (int)byte.MaxValue)
                    {
                        num = -1;
                        break;
                    }
                    break;
                case 440:
                    if ((double)this.ai[0] != 5.0 || this.alpha == (int)byte.MaxValue)
                    {
                        num = -1;
                        break;
                    }
                    break;
                case 4:
                    if ((double)this.ai[0] >= 2.0)
                    {
                        num = 1;
                        break;
                    }
                    break;
                case 125:
                    if ((double)this.ai[0] >= 3.0)
                    {
                        num = 20;
                        break;
                    }
                    break;
                case 126:
                    if ((double)this.ai[0] >= 3.0)
                    {
                        num = 21;
                        break;
                    }
                    break;
            }
            return num;
        }

        public float GetBossHeadRotation()
        {
            float num = 0.0f;
            switch (this.type)
            {
                case (int)sbyte.MaxValue:
                case 35:
                    if ((double)this.ai[1] == 1.0 || (double)this.ai[1] == 2.0)
                    {
                        num = this.rotation;
                        break;
                    }
                    break;
                case 262:
                case 68:
                    num = this.rotation;
                    break;
                case 345:
                    if ((double)this.ai[0] == 2.0)
                    {
                        num = this.rotation;
                        break;
                    }
                    break;
            }
            return num;
        }

        public SpriteEffects GetBossHeadSpriteEffects()
        {
            SpriteEffects spriteEffects = SpriteEffects.None;
            if (this.type == 491 && this.spriteDirection == 1)
                spriteEffects = SpriteEffects.FlipHorizontally;
            return spriteEffects;
        }

        public int BannerID()
        {
            if (this.netID >= -10)
                return this.netID;
            return this.type;
        }

        public void netDefaults(int type)
        {
            if (type < 0)
            {
                if (type == -1)
                    this.SetDefaults("Slimeling");
                else if (type == -2)
                    this.SetDefaults("Slimer2");
                else if (type == -3)
                    this.SetDefaults("Green Slime");
                else if (type == -4)
                    this.SetDefaults("Pinky");
                else if (type == -5)
                    this.SetDefaults("Baby Slime");
                else if (type == -6)
                    this.SetDefaults("Black Slime");
                else if (type == -7)
                    this.SetDefaults("Purple Slime");
                else if (type == -8)
                    this.SetDefaults("Red Slime");
                else if (type == -9)
                    this.SetDefaults("Yellow Slime");
                else if (type == -10)
                    this.SetDefaults("Jungle Slime");
                else if (type == -11)
                    this.SetDefaults("Little Eater");
                else if (type == -12)
                    this.SetDefaults("Big Eater");
                else if (type == -13)
                    this.SetDefaults("Short Bones");
                else if (type == -14)
                    this.SetDefaults("Big Boned");
                else if (type == -15)
                    this.SetDefaults("Heavy Skeleton");
                else if (type == -16)
                    this.SetDefaults("Little Stinger");
                else if (type == -17)
                    this.SetDefaults("Big Stinger");
                else if (type == -18)
                    this.SetDefaults("Tiny Moss Hornet");
                else if (type == -19)
                    this.SetDefaults("Little Moss Hornet");
                else if (type == -20)
                    this.SetDefaults("Big Moss Hornet");
                else if (type == -21)
                    this.SetDefaults("Giant Moss Hornet");
                else if (type == -22)
                    this.SetDefaults("Little Crimera");
                else if (type == -23)
                    this.SetDefaults("Big Crimera");
                else if (type == -24)
                    this.SetDefaults("Little Crimslime");
                else if (type == -25)
                    this.SetDefaults("Big Crimslime");
                else if (type == -26)
                    this.SetDefaults("Small Zombie");
                else if (type == -27)
                    this.SetDefaults("Big Zombie");
                else if (type == -28)
                    this.SetDefaults("Small Bald Zombie");
                else if (type == -29)
                    this.SetDefaults("Big Bald Zombie");
                else if (type == -30)
                    this.SetDefaults("Small Pincushion Zombie");
                else if (type == -31)
                    this.SetDefaults("Big Pincushion Zombie");
                else if (type == -32)
                    this.SetDefaults("Small Slimed Zombie");
                else if (type == -33)
                    this.SetDefaults("Big Slimed Zombie");
                else if (type == -34)
                    this.SetDefaults("Small Swamp Zombie");
                else if (type == -35)
                    this.SetDefaults("Big Swamp Zombie");
                else if (type == -36)
                    this.SetDefaults("Small Twiggy Zombie");
                else if (type == -37)
                    this.SetDefaults("Big Twiggy Zombie");
                else if (type == -38)
                    this.SetDefaults("Cataract Eye 2");
                else if (type == -39)
                    this.SetDefaults("Sleepy Eye 2");
                else if (type == -40)
                    this.SetDefaults("Dialated Eye 2");
                else if (type == -41)
                    this.SetDefaults("Green Eye 2");
                else if (type == -42)
                    this.SetDefaults("Purple Eye 2");
                else if (type == -43)
                    this.SetDefaults("Demon Eye 2");
                else if (type == -44)
                    this.SetDefaults("Small Female Zombie");
                else if (type == -45)
                    this.SetDefaults("Big Female Zombie");
                else if (type == -46)
                    this.SetDefaults("Small Skeleton");
                else if (type == -47)
                    this.SetDefaults("Big Skeleton");
                else if (type == -48)
                    this.SetDefaults("Small Headache Skeleton");
                else if (type == -49)
                    this.SetDefaults("Big Headache Skeleton");
                else if (type == -50)
                    this.SetDefaults("Small Misassembled Skeleton");
                else if (type == -51)
                    this.SetDefaults("Big Misassembled Skeleton");
                else if (type == -52)
                    this.SetDefaults("Small Pantless Skeleton");
                else if (type == -53)
                    this.SetDefaults("Big Pantless Skeleton");
                else if (type == -54)
                    this.SetDefaults("Small Rain Zombie");
                else if (type == -55)
                    this.SetDefaults("Big Rain Zombie");
                else if (type == -56)
                    this.SetDefaults("Little Hornet Fatty");
                else if (type == -57)
                    this.SetDefaults("Big Hornet Fatty");
                else if (type == -58)
                    this.SetDefaults("Little Hornet Honey");
                else if (type == -59)
                    this.SetDefaults("Big Hornet Honey");
                else if (type == -60)
                    this.SetDefaults("Little Hornet Leafy");
                else if (type == -61)
                    this.SetDefaults("Big Hornet Leafy");
                else if (type == -62)
                    this.SetDefaults("Little Hornet Spikey");
                else if (type == -63)
                    this.SetDefaults("Big Hornet Spikey");
                else if (type == -64)
                {
                    this.SetDefaults("Little Hornet Stingy");
                }
                else
                {
                    if (type != -65)
                        return;
                    this.SetDefaults("Big Hornet Stingy");
                }
            }
            else
                this.SetDefaults(type, -1f);
        }

        public void SetDefaults(string Name)
        {
            bool flag = false;
            this.SetDefaults(0, -1f);
            if (Name == "Slimeling")
            {
                this.SetDefaults(81, 0.6f);
                this.name = Name;
                this.damage = 45;
                this.defense = 10;
                this.life = 90;
                this.knockBackResist *= 1.2f;
                this.value = 100f;
                this.netID = -1;
                flag = true;
            }
            else if (Name == "Slimer2")
            {
                this.SetDefaults(81, 0.9f);
                this.displayName = "Slimer";
                this.name = Name;
                this.damage = 45;
                this.defense = 20;
                this.life = 90;
                this.knockBackResist *= 1.2f;
                this.value = 100f;
                this.netID = -2;
                flag = true;
            }
            else if (Name == "Green Slime")
            {
                this.SetDefaults(1, 0.9f);
                this.name = Name;
                this.damage = 6;
                this.defense = 0;
                this.life = 14;
                this.knockBackResist *= 1.2f;
                this.color = new Color(0, 220, 40, 100);
                this.value = 3f;
                this.netID = -3;
                flag = true;
            }
            else if (Name == "Pinky")
            {
                this.SetDefaults(1, 0.6f);
                this.name = Name;
                this.damage = 5;
                this.defense = 5;
                this.life = 150;
                this.knockBackResist *= 1.4f;
                this.color = new Color(250, 30, 90, 90);
                this.value = 10000f;
                this.netID = -4;
                flag = true;
            }
            else if (Name == "Baby Slime")
            {
                this.SetDefaults(1, 0.9f);
                this.name = Name;
                this.damage = 13;
                this.defense = 4;
                this.life = 30;
                this.knockBackResist *= 0.95f;
                this.alpha = 120;
                this.color = new Color(0, 0, 0, 50);
                this.value = 10f;
                this.netID = -5;
                flag = true;
            }
            else if (Name == "Black Slime")
            {
                this.SetDefaults(1, 1.05f);
                this.name = Name;
                this.damage = 15;
                this.defense = 4;
                this.life = 45;
                this.color = new Color(0, 0, 0, 50);
                this.value = 20f;
                this.netID = -6;
                flag = true;
            }
            else if (Name == "Purple Slime")
            {
                this.SetDefaults(1, 1.2f);
                this.name = Name;
                this.damage = 12;
                this.defense = 6;
                this.life = 40;
                this.knockBackResist *= 0.9f;
                this.color = new Color(200, 0, (int)byte.MaxValue, 150);
                this.value = 10f;
                this.netID = -7;
                flag = true;
            }
            else if (Name == "Red Slime")
            {
                this.SetDefaults(1, 1.025f);
                this.name = Name;
                this.damage = 12;
                this.defense = 4;
                this.life = 35;
                this.color = new Color((int)byte.MaxValue, 30, 0, 100);
                this.value = 8f;
                this.netID = -8;
                flag = true;
            }
            else if (Name == "Yellow Slime")
            {
                this.SetDefaults(1, 1.2f);
                this.name = Name;
                this.damage = 15;
                this.defense = 7;
                this.life = 45;
                this.color = new Color((int)byte.MaxValue, (int)byte.MaxValue, 0, 100);
                this.value = 10f;
                this.netID = -9;
                flag = true;
            }
            else if (Name == "Jungle Slime")
            {
                this.SetDefaults(1, 1.1f);
                this.name = Name;
                this.damage = 18;
                this.defense = 6;
                this.life = 60;
                this.color = new Color(143, 215, 93, 100);
                this.value = 500f;
                this.netID = -10;
                flag = true;
            }
            else if (Name == "Little Eater")
            {
                this.SetDefaults(6, 0.85f);
                this.name = Name;
                this.displayName = "Eater of Souls";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -11;
            }
            else if (Name == "Big Eater")
            {
                this.SetDefaults(6, 1.15f);
                this.name = Name;
                this.displayName = "Eater of Souls";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -12;
            }
            else if (Name == "Short Bones")
            {
                this.SetDefaults(31, 0.9f);
                this.name = Name;
                this.displayName = "Angry Bones";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.netID = -13;
            }
            else if (Name == "Big Boned")
            {
                this.SetDefaults(31, 1.15f);
                this.name = Name;
                this.displayName = "Angry Bones";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale * 1.1);
                this.life = (int)((double)this.life * (double)this.scale * 1.1);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = 2f;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -14;
            }
            else if (Name == "Heavy Skeleton")
            {
                this.SetDefaults(77, 1.15f);
                this.name = Name;
                this.displayName = "Armored Skeleton";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale * 1.1);
                this.life = 400;
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = 2f;
                this.knockBackResist *= 2f - this.scale;
                this.height = 44;
                this.netID = -15;
            }
            else if (Name == "Little Stinger")
            {
                this.SetDefaults(42, 0.85f);
                this.displayName = "Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -16;
            }
            else if (Name == "Big Stinger")
            {
                this.SetDefaults(42, 1.2f);
                this.displayName = "Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -17;
            }
            else if (Name == "Tiny Moss Hornet")
            {
                this.SetDefaults(176, 0.8f);
                this.displayName = "Moss Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -18;
            }
            else if (Name == "Little Moss Hornet")
            {
                this.SetDefaults(176, 0.9f);
                this.displayName = "Moss Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -19;
            }
            else if (Name == "Big Moss Hornet")
            {
                this.SetDefaults(176, 1.1f);
                this.displayName = "Moss Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -20;
            }
            else if (Name == "Giant Moss Hornet")
            {
                this.SetDefaults(176, 1.2f);
                this.displayName = "Moss Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -21;
            }
            else if (Name == "Little Crimera")
            {
                this.SetDefaults(173, 0.85f);
                this.displayName = "Crimera";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -22;
            }
            else if (Name == "Big Crimera")
            {
                this.SetDefaults(173, 1.15f);
                this.displayName = "Crimera";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -23;
            }
            else if (Name == "Little Crimslime")
            {
                this.SetDefaults(183, 0.85f);
                this.displayName = "Crimslime";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -24;
            }
            else if (Name == "Big Crimslime")
            {
                this.SetDefaults(183, 1.15f);
                this.displayName = "Crimslime";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -25;
            }
            else if (Name == "Small Zombie")
            {
                this.SetDefaults(3, 0.9f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -26;
            }
            else if (Name == "Big Zombie")
            {
                this.SetDefaults(3, 1.1f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -27;
            }
            else if (Name == "Small Bald Zombie")
            {
                this.SetDefaults(132, 0.85f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -28;
            }
            else if (Name == "Big Bald Zombie")
            {
                this.SetDefaults(132, 1.15f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -29;
            }
            else if (Name == "Small Pincushion Zombie")
            {
                this.SetDefaults(186, 0.93f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -30;
            }
            else if (Name == "Big Pincushion Zombie")
            {
                this.SetDefaults(186, 1.13f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -31;
            }
            else if (Name == "Small Slimed Zombie")
            {
                this.SetDefaults(187, 0.89f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -32;
            }
            else if (Name == "Big Slimed Zombie")
            {
                this.SetDefaults(187, 1.11f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -33;
            }
            else if (Name == "Small Swamp Zombie")
            {
                this.SetDefaults(188, 0.87f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -34;
            }
            else if (Name == "Big Swamp Zombie")
            {
                this.SetDefaults(188, 1.13f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -35;
            }
            else if (Name == "Small Twiggy Zombie")
            {
                this.SetDefaults(189, 0.92f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -36;
            }
            else if (Name == "Big Twiggy Zombie")
            {
                this.SetDefaults(189, 1.08f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -37;
            }
            else if (Name == "Cataract Eye 2")
            {
                this.SetDefaults(190, 1.15f);
                this.name = Name;
                this.displayName = "Demon Eye";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -38;
            }
            else if (Name == "Sleepy Eye 2")
            {
                this.SetDefaults(191, 1.1f);
                this.name = Name;
                this.displayName = "Demon Eye";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -39;
            }
            else if (Name == "Dialated Eye 2")
            {
                this.SetDefaults(192, 0.9f);
                this.name = Name;
                this.displayName = "Demon Eye";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -40;
            }
            else if (Name == "Green Eye 2")
            {
                this.SetDefaults(193, 0.85f);
                this.name = Name;
                this.displayName = "Demon Eye";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -41;
            }
            else if (Name == "Purple Eye 2")
            {
                this.SetDefaults(194, 1.1f);
                this.name = Name;
                this.displayName = "Demon Eye";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -42;
            }
            else if (Name == "Demon Eye 2")
            {
                this.SetDefaults(2, 1.15f);
                this.name = Name;
                this.displayName = "Demon Eye";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -43;
            }
            else if (Name == "Small Female Zombie")
            {
                this.SetDefaults(200, 0.87f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -44;
            }
            else if (Name == "Big Female Zombie")
            {
                this.SetDefaults(200, 1.05f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -45;
            }
            else if (Name == "Small Skeleton")
            {
                this.SetDefaults(21, 0.9f);
                this.name = Name;
                this.displayName = "Skeleton";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -46;
            }
            else if (Name == "Big Skeleton")
            {
                this.SetDefaults(21, 1.1f);
                this.name = Name;
                this.displayName = "Skeleton";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -47;
            }
            else if (Name == "Small Headache Skeleton")
            {
                this.SetDefaults(201, 0.93f);
                this.name = Name;
                this.displayName = "Skeleton";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -48;
            }
            else if (Name == "Big Headache Skeleton")
            {
                this.SetDefaults(201, 1.07f);
                this.name = Name;
                this.displayName = "Skeleton";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -49;
            }
            else if (Name == "Small Misassembled Skeleton")
            {
                this.SetDefaults(202, 0.87f);
                this.name = Name;
                this.displayName = "Skeleton";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -50;
            }
            else if (Name == "Big Misassembled Skeleton")
            {
                this.SetDefaults(202, 1.13f);
                this.name = Name;
                this.displayName = "Skeleton";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -51;
            }
            else if (Name == "Small Pantless Skeleton")
            {
                this.SetDefaults(203, 0.85f);
                this.name = Name;
                this.displayName = "Skeleton";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -52;
            }
            else if (Name == "Big Pantless Skeleton")
            {
                this.SetDefaults(203, 1.15f);
                this.name = Name;
                this.displayName = "Skeleton";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -53;
            }
            else if (Name == "Small Rain Zombie")
            {
                this.SetDefaults(223, 0.9f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -54;
            }
            else if (Name == "Big Rain Zombie")
            {
                this.SetDefaults(223, 1.1f);
                this.name = Name;
                this.displayName = "Zombie";
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -55;
            }
            else if (Name == "Little Hornet Fatty")
            {
                this.SetDefaults(231, 0.85f);
                this.displayName = "Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -56;
            }
            else if (Name == "Big Hornet Fatty")
            {
                this.SetDefaults(231, 1.25f);
                this.displayName = "Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -57;
            }
            else if (Name == "Little Hornet Honey")
            {
                this.SetDefaults(232, 0.8f);
                this.displayName = "Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -58;
            }
            else if (Name == "Big Hornet Honey")
            {
                this.SetDefaults(232, 1.15f);
                this.displayName = "Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -59;
            }
            else if (Name == "Little Hornet Leafy")
            {
                this.SetDefaults(233, 0.92f);
                this.displayName = "Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -60;
            }
            else if (Name == "Big Hornet Leafy")
            {
                this.SetDefaults(233, 1.1f);
                this.displayName = "Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -61;
            }
            else if (Name == "Little Hornet Spikey")
            {
                this.SetDefaults(234, 0.78f);
                this.displayName = "Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -62;
            }
            else if (Name == "Big Hornet Spikey")
            {
                this.SetDefaults(234, 1.16f);
                this.displayName = "Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -63;
            }
            else if (Name == "Little Hornet Stingy")
            {
                this.SetDefaults(235, 0.87f);
                this.displayName = "Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -64;
            }
            else if (Name == "Big Hornet Stingy")
            {
                this.SetDefaults(235, 1.21f);
                this.displayName = "Hornet";
                this.name = Name;
                this.defense = (int)((double)this.defense * (double)this.scale);
                this.damage = (int)((double)this.damage * (double)this.scale);
                this.life = (int)((double)this.life * (double)this.scale);
                this.value = (float)(int)((double)this.value * (double)this.scale);
                this.npcSlots = this.npcSlots * this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -65;
            }
            else if (Name != "")
            {
                for (int Type = 1; Type < 540; ++Type)
                {
                    if (Main.npcName[Type] == Name)
                    {
                        this.SetDefaults(Type, -1f);
                        return;
                    }
                }
                this.SetDefaults(0, -1f);
                this.active = false;
            }
            else
                this.active = false;
            this.displayName = Lang.npcName(this.netID, false);
            this.lifeMax = this.life;
            this.defDamage = this.damage;
            this.defDefense = this.defense;
            if (!Main.expertMode || !flag)
                return;
            this.scaleStats();
        }

        public void SetDefaultsKeepPlayerInteraction(int Type)
        {
            bool[] flagArray = new bool[this.playerInteraction.Length];
            for (int index = 0; index < this.playerInteraction.Length; ++index)
                flagArray[index] = this.playerInteraction[index];
            this.SetDefaults(Type, -1f);
            for (int index = 0; index < this.playerInteraction.Length; ++index)
                this.playerInteraction[index] = flagArray[index];
        }

        public void SetDefaults(int Type, float scaleOverride = -1f)
        {
            this.takenDamageMultiplier = 1f;
            this.extraValue = 0.0f;
            for (int index = 0; index < this.playerInteraction.Length; ++index)
                this.playerInteraction[index] = false;
            this.rarity = 0;
            this.dontCountMe = false;
            this.releaseOwner = (short)byte.MaxValue;
            this.catchItem = (short)0;
            this.npcNameLookup = (byte)0;
            this.netStream = (byte)32;
            bool flag = false;
            this.netID = 0;
            this.netAlways = false;
            this.netSpam = 0;
            int newSize = 10;
            if (Type >= 0)
                newSize = NPCID.Sets.TrailCacheLength[Type];
            if (newSize != this.oldPos.Length)
            {
                Array.Resize<Vector2>(ref this.oldPos, newSize);
                Array.Resize<float>(ref this.oldRot, newSize);
            }
            for (int index = 0; index < this.oldPos.Length; ++index)
            {
                this.oldRot[index] = 0.0f;
                this.oldPos[index].X = 0.0f;
                this.oldPos[index].Y = 0.0f;
            }
            for (int index = 0; index < 5; ++index)
            {
                this.buffTime[index] = 0;
                this.buffType[index] = 0;
            }
            for (int index = 0; index < 191; ++index)
                this.buffImmune[index] = false;
            this.setFrameSize = false;
            this.buffImmune[31] = true;
            this.netSkip = -2;
            this.realLife = -1;
            this.lifeRegen = 0;
            this.lifeRegenCount = 0;
            this.poisoned = false;
            this.soulDrain = false;
            this.venom = false;
            this.shadowFlame = false;
            this.onFire = false;
            this.midas = false;
            this.ichor = false;
            this.onFrostBurn = false;
            this.confused = false;
            this.loveStruck = false;
            this.stinky = false;
            this.dryadWard = false;
            this.onFire2 = false;
            this.justHit = false;
            this.dontTakeDamage = false;
            this.npcSlots = 1f;
            this.lavaImmune = false;
            this.lavaWet = false;
            this.wetCount = (byte)0;
            this.wet = false;
            this.townNPC = false;
            this.homeless = false;
            this.homeTileX = -1;
            this.homeTileY = -1;
            this.friendly = false;
            this.behindTiles = false;
            this.boss = false;
            this.noTileCollide = false;
            this.rotation = 0.0f;
            this.active = true;
            this.alpha = 0;
            this.color = new Color();
            this.collideX = false;
            this.collideY = false;
            this.direction = 0;
            this.oldDirection = this.direction;
            this.frameCounter = 0.0;
            this.netUpdate = true;
            this.netUpdate2 = false;
            this.knockBackResist = 1f;
            this.name = "";
            this.displayName = "";
            this.noGravity = false;
            this.scale = 1f;
            this.soundHit = 0;
            this.soundKilled = 0;
            this.spriteDirection = -1;
            this.target = (int)byte.MaxValue;
            this.oldTarget = this.target;
            this.targetRect = new Rectangle();
            this.timeLeft = NPC.activeTime;
            this.type = Type;
            this.value = 0.0f;
            this.coldDamage = false;
            this.trapImmune = false;
            this.hide = false;
            this.immortal = false;
            this.chaseable = true;
            this.breath = 200;
            this.breathCounter = 0;
            this.reflectingProjectiles = false;
            this.canGhostHeal = true;
            this.javelined = false;
            this.daybreak = false;
            this.celled = false;
            this.dryadBane = false;
            for (int index = 0; index < NPC.maxAI; ++index)
                this.ai[index] = 0.0f;
            for (int index = 0; index < NPC.maxAI; ++index)
                this.localAI[index] = 0.0f;
            if (this.type == 1)
            {
                this.name = "Blue Slime";
                this.width = 24;
                this.height = 18;
                this.aiStyle = 1;
                this.damage = 7;
                this.defense = 2;
                this.lifeMax = 25;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 175;
                this.color = new Color(0, 80, (int)byte.MaxValue, 100);
                this.value = 25f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 2)
            {
                this.name = "Demon Eye";
                this.width = 30;
                this.height = 32;
                this.aiStyle = 2;
                this.damage = 18;
                this.defense = 2;
                this.lifeMax = 60;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                this.value = 75f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 3)
            {
                this.name = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 14;
                this.defense = 6;
                this.lifeMax = 45;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 60f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 430)
            {
                this.name = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 14;
                this.defense = 6;
                this.lifeMax = 45;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 60f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 431)
            {
                this.name = "Zombie Eskimo";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 16;
                this.defense = 8;
                this.lifeMax = 50;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.45f;
                this.value = 80f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 432)
            {
                this.name = "Pincushion Zombie";
                this.displayName = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 16;
                this.defense = 8;
                this.lifeMax = 50;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.45f;
                this.value = 65f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 433)
            {
                this.name = "Slimed Zombie";
                this.displayName = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 13;
                this.defense = 6;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.55f;
                this.value = 55f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 434)
            {
                this.name = "Swamp Zombie";
                this.displayName = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 13;
                this.defense = 8;
                this.lifeMax = 45;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.45f;
                this.value = 80f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 435)
            {
                this.name = "Twiggy Zombie";
                this.displayName = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 16;
                this.defense = 4;
                this.lifeMax = 45;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.55f;
                this.value = 70f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 436)
            {
                this.name = "Female Zombie";
                this.displayName = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 12;
                this.defense = 4;
                this.lifeMax = 38;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.6f;
                this.value = 65f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 4)
            {
                this.name = "Eye of Cthulhu";
                this.width = 100;
                this.height = 110;
                this.aiStyle = 4;
                this.damage = 15;
                this.defense = 12;
                this.lifeMax = 2800;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.timeLeft = NPC.activeTime * 30;
                this.boss = true;
                this.value = 30000f;
                this.npcSlots = 5f;
            }
            else if (this.type == 5)
            {
                this.name = "Servant of Cthulhu";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 5;
                this.damage = 12;
                this.defense = 0;
                this.lifeMax = 8;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
            }
            else if (this.type == 6)
            {
                this.npcSlots = 1f;
                this.name = "Eater of Souls";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 5;
                this.damage = 22;
                this.defense = 8;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.knockBackResist = 0.5f;
                this.value = 90f;
            }
            else if (this.type == 7)
            {
                this.displayName = "Devourer";
                this.npcSlots = 3.5f;
                this.name = "Devourer Head";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 6;
                this.damage = 31;
                this.defense = 2;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 140f;
                this.netAlways = true;
            }
            else if (this.type == 8)
            {
                this.displayName = "Devourer";
                this.name = "Devourer Body";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 16;
                this.defense = 6;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 140f;
                this.dontCountMe = true;
            }
            else if (this.type == 9)
            {
                this.displayName = "Devourer";
                this.name = "Devourer Tail";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 13;
                this.defense = 10;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 140f;
                this.dontCountMe = true;
            }
            else if (this.type == 10)
            {
                this.displayName = "Giant Worm";
                this.name = "Giant Worm Head";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 8;
                this.defense = 0;
                this.lifeMax = 30;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 40f;
            }
            else if (this.type == 11)
            {
                this.displayName = "Giant Worm";
                this.name = "Giant Worm Body";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 4;
                this.defense = 4;
                this.lifeMax = 30;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 40f;
                this.dontCountMe = true;
            }
            else if (this.type == 12)
            {
                this.displayName = "Giant Worm";
                this.name = "Giant Worm Tail";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 4;
                this.defense = 6;
                this.lifeMax = 30;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 40f;
                this.dontCountMe = true;
            }
            else if (this.type == 13)
            {
                this.displayName = "Eater of Worlds";
                this.npcSlots = 5f;
                this.name = "Eater of Worlds Head";
                this.width = 38;
                this.height = 38;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 22;
                this.defense = 2;
                this.lifeMax = 65;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 300f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
            }
            else if (this.type == 14)
            {
                this.displayName = "Eater of Worlds";
                this.name = "Eater of Worlds Body";
                this.width = 38;
                this.height = 38;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 13;
                this.defense = 4;
                this.lifeMax = 150;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 300f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.dontCountMe = true;
            }
            else if (this.type == 15)
            {
                this.displayName = "Eater of Worlds";
                this.name = "Eater of Worlds Tail";
                this.width = 38;
                this.height = 38;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 11;
                this.defense = 8;
                this.lifeMax = 220;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 300f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.dontCountMe = true;
            }
            else if (this.type == 16)
            {
                this.npcSlots = 2f;
                this.name = "Mother Slime";
                this.width = 36;
                this.height = 24;
                this.aiStyle = 1;
                this.damage = 20;
                this.defense = 7;
                this.lifeMax = 90;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 120;
                this.color = new Color(0, 0, 0, 50);
                this.value = 75f;
                this.scale = 1.25f;
                this.knockBackResist = 0.6f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 17)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Merchant";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 18)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Nurse";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 19)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Arms Dealer";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 20)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Dryad";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 21)
            {
                this.name = "Skeleton";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 8;
                this.lifeMax = 60;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 100f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 22)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Guide";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 23)
            {
                this.name = "Meteor Head";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 5;
                this.damage = 40;
                this.defense = 6;
                this.lifeMax = 26;
                this.soundHit = 3;
                this.soundKilled = 3;
                this.noGravity = true;
                this.noTileCollide = true;
                this.value = 80f;
                this.knockBackResist = 0.4f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
            }
            else if (this.type == 24)
            {
                this.npcSlots = 3f;
                this.name = "Fire Imp";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 30;
                this.defense = 16;
                this.lifeMax = 70;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.lavaImmune = true;
                this.value = 350f;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
            }
            else if (this.type == 25)
            {
                this.name = "Burning Sphere";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 9;
                this.damage = 30;
                this.defense = 0;
                this.lifeMax = 1;
                this.soundHit = 3;
                this.soundKilled = 3;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.alpha = 100;
            }
            else if (this.type == 31)
            {
                this.name = "Angry Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 26;
                this.defense = 8;
                this.lifeMax = 80;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.8f;
                this.value = 130f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 32)
            {
                this.name = "Dark Caster";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 20;
                this.defense = 2;
                this.lifeMax = 50;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.6f;
                this.value = 140f;
                this.npcSlots = 2f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 33)
            {
                this.name = "Water Sphere";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 9;
                this.damage = 20;
                this.defense = 0;
                this.lifeMax = 1;
                this.soundHit = 3;
                this.soundKilled = 3;
                this.noGravity = true;
                this.noTileCollide = true;
                this.alpha = (int)byte.MaxValue;
                this.knockBackResist = 0.0f;
            }
            else if (this.type == 34)
            {
                this.name = "Cursed Skull";
                this.width = 26;
                this.height = 28;
                this.aiStyle = 10;
                this.damage = 35;
                this.defense = 6;
                this.lifeMax = 40;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.noGravity = true;
                this.noTileCollide = true;
                this.value = 150f;
                this.knockBackResist = 0.2f;
                this.npcSlots = 0.75f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
            }
            else if (this.type == 35)
            {
                this.displayName = "Skeletron";
                this.name = "Skeletron Head";
                this.width = 80;
                this.height = 102;
                this.aiStyle = 11;
                this.damage = 32;
                this.defense = 10;
                this.lifeMax = 4400;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.noGravity = true;
                this.noTileCollide = true;
                this.value = 50000f;
                this.knockBackResist = 0.0f;
                this.boss = true;
                this.npcSlots = 6f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.buffImmune[189] = this.buffImmune[169] = this.buffImmune[183] = true;
            }
            else if (this.type == 36)
            {
                this.displayName = "Skeletron";
                this.name = "Skeletron Hand";
                this.width = 52;
                this.height = 52;
                this.aiStyle = 12;
                this.damage = 20;
                this.defense = 14;
                this.lifeMax = 600;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
            }
            else if (this.type == 37)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Old Man";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 38)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Demolitionist";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 39)
            {
                this.npcSlots = 6f;
                this.name = "Bone Serpent Head";
                this.displayName = "Bone Serpent";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 30;
                this.defense = 10;
                this.lifeMax = 250;
                this.soundHit = 2;
                this.soundKilled = 5;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 1200f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
            }
            else if (this.type == 40)
            {
                this.name = "Bone Serpent Body";
                this.displayName = "Bone Serpent";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 15;
                this.defense = 12;
                this.lifeMax = 250;
                this.soundHit = 2;
                this.soundKilled = 5;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 1200f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.dontCountMe = true;
            }
            else if (this.type == 41)
            {
                this.name = "Bone Serpent Tail";
                this.displayName = "Bone Serpent";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 10;
                this.defense = 18;
                this.lifeMax = 250;
                this.soundHit = 2;
                this.soundKilled = 5;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 1200f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.dontCountMe = true;
            }
            else if (this.type == 42)
            {
                this.name = "Hornet";
                this.width = 34;
                this.height = 32;
                this.aiStyle = 5;
                this.damage = 26;
                this.defense = 12;
                this.lifeMax = 48;
                this.soundHit = 1;
                this.knockBackResist = 0.5f;
                this.soundKilled = 1;
                this.value = 200f;
                this.noGravity = true;
                this.buffImmune[20] = true;
            }
            else if (this.type == 43)
            {
                this.noGravity = true;
                this.noTileCollide = true;
                this.name = "Man Eater";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 13;
                this.damage = 34;
                this.defense = 10;
                this.lifeMax = 110;
                this.soundHit = 1;
                this.knockBackResist = 0.0f;
                this.soundKilled = 1;
                this.value = 350f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 44)
            {
                this.name = "Undead Miner";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 22;
                this.defense = 9;
                this.lifeMax = 70;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 250f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 45)
            {
                this.name = "Tim";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 20;
                this.defense = 4;
                this.lifeMax = 200;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.6f;
                this.value = 5000f;
                this.buffImmune[20] = true;
                this.rarity = 4;
            }
            else if (this.type == 46 || this.type == 303 || this.type == 337)
            {
                this.name = "Bunny";
                this.width = 18;
                this.height = 20;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.catchItem = (short)2019;
            }
            else if (this.type == 47)
            {
                this.name = "Corrupt Bunny";
                this.width = 18;
                this.height = 20;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 4;
                this.lifeMax = 70;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 500f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 48)
            {
                this.name = "Harpy";
                this.width = 24;
                this.height = 34;
                this.aiStyle = 14;
                this.damage = 25;
                this.defense = 8;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.knockBackResist = 0.6f;
                this.soundKilled = 1;
                this.value = 300f;
            }
            else if (this.type == 49)
            {
                this.npcSlots = 0.5f;
                this.name = "Cave Bat";
                this.width = 22;
                this.height = 18;
                this.aiStyle = 14;
                this.damage = 13;
                this.defense = 2;
                this.lifeMax = 16;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 4;
                this.value = 90f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 50)
            {
                this.boss = true;
                this.name = "King Slime";
                this.width = 98;
                this.height = 92;
                this.aiStyle = 15;
                this.damage = 40;
                this.defense = 10;
                this.lifeMax = 2000;
                this.knockBackResist = 0.0f;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 30;
                this.value = 10000f;
                this.scale = 1.25f;
                this.buffImmune[20] = true;
                this.timeLeft = NPC.activeTime * 30;
            }
            else if (this.type == 51)
            {
                this.npcSlots = 0.5f;
                this.name = "Jungle Bat";
                this.width = 22;
                this.height = 18;
                this.aiStyle = 14;
                this.damage = 20;
                this.defense = 4;
                this.lifeMax = 34;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 4;
                this.value = 80f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 52)
            {
                this.name = "Doctor Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 10;
                this.lifeMax = 500;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 1000f;
                this.buffImmune[31] = false;
                this.rarity = 2;
            }
            else if (this.type == 53)
            {
                this.name = "The Groom";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 14;
                this.defense = 8;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 1000f;
                this.buffImmune[31] = false;
                this.rarity = 2;
            }
            else if (this.type == 54)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Clothier";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 55)
            {
                this.noGravity = true;
                this.name = "Goldfish";
                this.width = 20;
                this.height = 18;
                this.aiStyle = 16;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.catchItem = (short)261;
            }
            else if (this.type == 56)
            {
                this.noTileCollide = true;
                this.noGravity = true;
                this.name = "Snatcher";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 13;
                this.damage = 25;
                this.defense = 10;
                this.lifeMax = 60;
                this.soundHit = 1;
                this.knockBackResist = 0.0f;
                this.soundKilled = 1;
                this.value = 90f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 57)
            {
                this.noGravity = true;
                this.name = "Corrupt Goldfish";
                this.width = 18;
                this.height = 20;
                this.aiStyle = 16;
                this.damage = 30;
                this.defense = 6;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 500f;
            }
            else if (this.type == 58)
            {
                this.npcSlots = 0.5f;
                this.noGravity = true;
                this.name = "Piranha";
                this.width = 18;
                this.height = 20;
                this.aiStyle = 16;
                this.damage = 25;
                this.defense = 2;
                this.lifeMax = 30;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 50f;
            }
            else if (this.type == 59)
            {
                this.name = "Lava Slime";
                this.width = 24;
                this.height = 18;
                this.aiStyle = 1;
                this.damage = 15;
                this.defense = 10;
                this.lifeMax = 50;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.scale = 1.1f;
                this.alpha = 50;
                this.lavaImmune = true;
                this.value = 120f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 60)
            {
                this.npcSlots = 0.5f;
                this.name = "Hellbat";
                this.width = 22;
                this.height = 18;
                this.aiStyle = 14;
                this.damage = 35;
                this.defense = 8;
                this.lifeMax = 46;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 4;
                this.value = 120f;
                this.scale = 1.1f;
                this.lavaImmune = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 61)
            {
                this.name = "Vulture";
                this.width = 36;
                this.height = 36;
                this.aiStyle = 17;
                this.damage = 15;
                this.defense = 4;
                this.lifeMax = 40;
                this.knockBackResist = 0.8f;
                this.soundHit = 28;
                this.soundKilled = 31;
                this.value = 60f;
            }
            else if (this.type == 62)
            {
                this.npcSlots = 2f;
                this.name = "Demon";
                this.width = 28;
                this.height = 48;
                this.aiStyle = 14;
                this.damage = 32;
                this.defense = 8;
                this.lifeMax = 120;
                this.soundHit = 21;
                this.knockBackResist = 0.8f;
                this.soundKilled = 24;
                this.value = 300f;
                this.lavaImmune = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
            }
            else if (this.type == 63)
            {
                this.noGravity = true;
                this.name = "Blue Jellyfish";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 18;
                this.damage = 25;
                this.defense = 4;
                this.lifeMax = 34;
                this.soundHit = 25;
                this.soundKilled = 28;
                this.value = 100f;
                this.alpha = 20;
            }
            else if (this.type == 64)
            {
                this.noGravity = true;
                this.name = "Pink Jellyfish";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 18;
                this.damage = 30;
                this.defense = 6;
                this.lifeMax = 70;
                this.soundHit = 25;
                this.soundKilled = 28;
                this.value = 100f;
                this.alpha = 20;
            }
            else if (this.type == 65)
            {
                this.noGravity = true;
                this.name = "Shark";
                this.width = 100;
                this.height = 24;
                this.aiStyle = 16;
                this.damage = 40;
                this.defense = 2;
                this.lifeMax = 300;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 400f;
                this.knockBackResist = 0.7f;
            }
            else if (this.type == 66)
            {
                this.npcSlots = 2f;
                this.name = "Voodoo Demon";
                this.width = 28;
                this.height = 48;
                this.aiStyle = 14;
                this.damage = 32;
                this.defense = 8;
                this.lifeMax = 140;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                this.value = 1000f;
                this.lavaImmune = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
            }
            else if (this.type == 67)
            {
                this.name = "Crab";
                this.width = 28;
                this.height = 20;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 10;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 60f;
            }
            else if (this.type == 68)
            {
                this.name = "Dungeon Guardian";
                this.width = 80;
                this.height = 102;
                this.aiStyle = 11;
                this.damage = 1000;
                this.defense = 9999;
                this.lifeMax = 9999;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.buffImmune[189] = this.buffImmune[169] = this.buffImmune[183] = true;
            }
            else if (this.type == 69)
            {
                this.name = "Antlion";
                this.width = 24;
                this.height = 24;
                this.aiStyle = 19;
                this.damage = 10;
                this.defense = 6;
                this.lifeMax = 45;
                this.soundHit = 31;
                this.soundKilled = 34;
                this.knockBackResist = 0.0f;
                this.value = 60f;
                this.behindTiles = true;
            }
            else if (this.type == 70)
            {
                this.npcSlots = 0.3f;
                this.name = "Spike Ball";
                this.width = 34;
                this.height = 34;
                this.aiStyle = 20;
                this.damage = 32;
                this.defense = 100;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.dontTakeDamage = true;
                this.scale = 1.5f;
            }
            else if (this.type == 71)
            {
                this.npcSlots = 2f;
                this.name = "Dungeon Slime";
                this.width = 36;
                this.height = 24;
                this.aiStyle = 1;
                this.damage = 30;
                this.defense = 7;
                this.lifeMax = 150;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 60;
                this.value = 150f;
                this.scale = 1.25f;
                this.knockBackResist = 0.6f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.rarity = 1;
            }
            else if (this.type == 72)
            {
                this.npcSlots = 0.3f;
                this.name = "Blazing Wheel";
                this.width = 34;
                this.height = 34;
                this.aiStyle = 21;
                this.damage = 24;
                this.defense = 100;
                this.lifeMax = 100;
                this.alpha = 100;
                this.behindTiles = true;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.dontTakeDamage = true;
                this.scale = 1.2f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
            }
            else if (this.type == 73)
            {
                this.name = "Goblin Scout";
                this.scale = 0.95f;
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 6;
                this.lifeMax = 80;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.7f;
                this.value = 200f;
                this.buffImmune[31] = false;
                this.rarity = 1;
            }
            else if (this.type == 74 || this.type == 297 || this.type == 298)
            {
                this.name = "Bird";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 24;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                if (this.type == 74)
                    this.catchItem = (short)2015;
                if (this.type == 297)
                    this.catchItem = (short)2016;
                if (this.type == 298)
                    this.catchItem = (short)2017;
                this.npcSlots = 0.4f;
            }
            else if (this.type == 75)
            {
                this.noGravity = true;
                this.name = "Pixie";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 22;
                this.damage = 55;
                this.defense = 20;
                this.lifeMax = 150;
                this.soundHit = 5;
                this.knockBackResist = 0.6f;
                this.soundKilled = 7;
                this.value = 350f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 77)
            {
                this.name = "Armored Skeleton";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 40;
                this.defense = 28;
                this.lifeMax = 260;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.4f;
                this.value = 400f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 78)
            {
                this.name = "Mummy";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 50;
                this.defense = 16;
                this.lifeMax = 130;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.6f;
                this.value = 600f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 79)
            {
                this.name = "Dark Mummy";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 60;
                this.defense = 18;
                this.lifeMax = 180;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.5f;
                this.value = 700f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 80)
            {
                this.name = "Light Mummy";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 55;
                this.defense = 18;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.55f;
                this.value = 700f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 81)
            {
                this.name = "Corrupt Slime";
                this.width = 40;
                this.height = 30;
                this.aiStyle = 1;
                this.damage = 55;
                this.defense = 20;
                this.lifeMax = 170;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 55;
                this.value = 400f;
                this.scale = 1.1f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 82)
            {
                this.noGravity = true;
                this.noTileCollide = true;
                this.name = "Wraith";
                this.width = 24;
                this.height = 44;
                this.aiStyle = 22;
                this.damage = 65;
                this.defense = 16;
                this.lifeMax = 160;
                this.soundHit = 54;
                this.soundKilled = 52;
                this.alpha = 100;
                this.value = 500f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.knockBackResist = 0.7f;
            }
            else if (this.type == 83)
            {
                this.name = "Cursed Hammer";
                this.width = 40;
                this.height = 40;
                this.aiStyle = 23;
                this.damage = 80;
                this.defense = 18;
                this.lifeMax = 200;
                this.soundHit = 4;
                this.soundKilled = 6;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.knockBackResist = 0.4f;
            }
            else if (this.type == 84)
            {
                this.name = "Enchanted Sword";
                this.width = 40;
                this.height = 40;
                this.aiStyle = 23;
                this.damage = 80;
                this.defense = 18;
                this.lifeMax = 200;
                this.soundHit = 4;
                this.soundKilled = 6;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.knockBackResist = 0.4f;
            }
            else if (this.type == 85)
            {
                this.name = "Mimic";
                this.width = 24;
                this.height = 24;
                this.aiStyle = 25;
                this.damage = 80;
                this.defense = 30;
                this.lifeMax = 500;
                this.soundHit = 4;
                this.soundKilled = 6;
                this.value = 100000f;
                this.knockBackResist = 0.3f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.rarity = 4;
            }
            else if (this.type == 86)
            {
                this.name = "Unicorn";
                this.width = 46;
                this.height = 42;
                this.aiStyle = 26;
                this.damage = 65;
                this.defense = 30;
                this.lifeMax = 400;
                this.soundHit = 12;
                this.soundKilled = 18;
                this.knockBackResist = 0.3f;
                this.value = 1000f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 87)
            {
                this.displayName = "Wyvern";
                this.noTileCollide = true;
                this.npcSlots = 5f;
                this.name = "Wyvern Head";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 80;
                this.defense = 10;
                this.lifeMax = 4000;
                this.soundHit = 7;
                this.soundKilled = 8;
                this.noGravity = true;
                this.knockBackResist = 0.0f;
                this.value = 10000f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
            }
            else if (this.type == 88)
            {
                this.displayName = "Wyvern";
                this.noTileCollide = true;
                this.name = "Wyvern Legs";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 4000;
                this.soundHit = 7;
                this.soundKilled = 8;
                this.noGravity = true;
                this.knockBackResist = 0.0f;
                this.value = 10000f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.dontCountMe = true;
            }
            else if (this.type == 89)
            {
                this.displayName = "Wyvern";
                this.noTileCollide = true;
                this.name = "Wyvern Body";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 4000;
                this.soundHit = 7;
                this.soundKilled = 8;
                this.noGravity = true;
                this.knockBackResist = 0.0f;
                this.value = 2000f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.dontCountMe = true;
            }
            else if (this.type == 90)
            {
                this.displayName = "Wyvern";
                this.noTileCollide = true;
                this.name = "Wyvern Body 2";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 4000;
                this.soundHit = 7;
                this.soundKilled = 8;
                this.noGravity = true;
                this.knockBackResist = 0.0f;
                this.value = 10000f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.dontCountMe = true;
            }
            else if (this.type == 91)
            {
                this.displayName = "Wyvern";
                this.noTileCollide = true;
                this.name = "Wyvern Body 3";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 4000;
                this.soundHit = 7;
                this.soundKilled = 8;
                this.noGravity = true;
                this.knockBackResist = 0.0f;
                this.value = 10000f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.dontCountMe = true;
            }
            else if (this.type == 92)
            {
                this.displayName = "Wyvern";
                this.noTileCollide = true;
                this.name = "Wyvern Tail";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 4000;
                this.soundHit = 7;
                this.soundKilled = 8;
                this.noGravity = true;
                this.knockBackResist = 0.0f;
                this.value = 10000f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.dontCountMe = true;
            }
            else if (this.type == 93)
            {
                this.npcSlots = 0.5f;
                this.name = "Giant Bat";
                this.width = 26;
                this.height = 20;
                this.aiStyle = 14;
                this.damage = 45;
                this.defense = 16;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.knockBackResist = 0.75f;
                this.soundKilled = 4;
                this.value = 400f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 94)
            {
                this.npcSlots = 1f;
                this.name = "Corruptor";
                this.width = 44;
                this.height = 44;
                this.aiStyle = 5;
                this.damage = 60;
                this.defense = 32;
                this.lifeMax = 230;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.knockBackResist = 0.55f;
                this.value = 500f;
            }
            else if (this.type == 95)
            {
                this.displayName = "Digger";
                this.name = "Digger Head";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 45;
                this.defense = 10;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.scale = 0.9f;
                this.value = 300f;
            }
            else if (this.type == 96)
            {
                this.displayName = "Digger";
                this.name = "Digger Body";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 28;
                this.defense = 20;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.scale = 0.9f;
                this.value = 300f;
                this.dontCountMe = true;
            }
            else if (this.type == 97)
            {
                this.displayName = "Digger";
                this.name = "Digger Tail";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 26;
                this.defense = 30;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.scale = 0.9f;
                this.value = 300f;
                this.dontCountMe = true;
            }
            else if (this.type == 98)
            {
                this.displayName = "World Feeder";
                this.npcSlots = 3.5f;
                this.name = "Seeker Head";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 70;
                this.defense = 36;
                this.lifeMax = 500;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 700f;
            }
            else if (this.type == 99)
            {
                this.displayName = "World Feeder";
                this.name = "Seeker Body";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 55;
                this.defense = 40;
                this.lifeMax = 500;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 700f;
                this.dontCountMe = true;
            }
            else if (this.type == 100)
            {
                this.displayName = "World Feeder";
                this.name = "Seeker Tail";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 40;
                this.defense = 44;
                this.lifeMax = 500;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 700f;
                this.dontCountMe = true;
            }
            else if (this.type == 101)
            {
                this.noGravity = true;
                this.noTileCollide = true;
                this.behindTiles = true;
                this.name = "Clinger";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 13;
                this.damage = 70;
                this.defense = 30;
                this.lifeMax = 320;
                this.soundHit = 1;
                this.knockBackResist = 0.2f;
                this.soundKilled = 1;
                this.value = 600f;
            }
            else if (this.type == 102)
            {
                this.npcSlots = 0.5f;
                this.noGravity = true;
                this.name = "Angler Fish";
                this.width = 18;
                this.height = 20;
                this.aiStyle = 16;
                this.damage = 80;
                this.defense = 22;
                this.lifeMax = 90;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 500f;
            }
            else if (this.type == 103)
            {
                this.noGravity = true;
                this.name = "Green Jellyfish";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 18;
                this.damage = 80;
                this.defense = 30;
                this.lifeMax = 120;
                this.soundHit = 25;
                this.soundKilled = 28;
                this.value = 800f;
                this.alpha = 20;
            }
            else if (this.type == 104)
            {
                this.name = "Werewolf";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 70;
                this.defense = 38;
                this.lifeMax = 350;
                this.soundHit = 6;
                this.soundKilled = 1;
                this.knockBackResist = 0.4f;
                this.value = 1000f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 105)
            {
                this.friendly = true;
                this.name = "Bound Goblin";
                this.width = 18;
                this.height = 34;
                this.aiStyle = 0;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.scale = 0.9f;
                this.rarity = 1;
            }
            else if (this.type == 106)
            {
                this.friendly = true;
                this.name = "Bound Wizard";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 0;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.rarity = 1;
            }
            else if (this.type == 107)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Goblin Tinkerer";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.scale = 0.9f;
            }
            else if (this.type == 108)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Wizard";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 109)
            {
                this.name = "Clown";
                this.width = 34;
                this.height = 78;
                this.aiStyle = 3;
                this.damage = 50;
                this.defense = 20;
                this.lifeMax = 400;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.4f;
                this.value = 8000f;
            }
            else if (this.type == 110)
            {
                this.name = "Skeleton Archer";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 45;
                this.defense = 14;
                this.lifeMax = 210;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.55f;
                this.value = 400f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 112)
            {
                this.name = "Vile Spit";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 9;
                this.damage = 65;
                this.defense = 0;
                this.lifeMax = 1;
                this.soundHit = 0;
                this.soundKilled = 9;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.scale = 0.9f;
                this.alpha = 80;
            }
            else if (this.type == 113)
            {
                this.npcSlots = 10f;
                this.name = "Wall of Flesh";
                this.width = 100;
                this.height = 100;
                this.aiStyle = 27;
                this.damage = 50;
                this.defense = 12;
                this.lifeMax = 8000;
                this.soundHit = 8;
                this.soundKilled = 10;
                this.noGravity = true;
                this.noTileCollide = true;
                this.behindTiles = true;
                this.knockBackResist = 0.0f;
                this.scale = 1.2f;
                this.boss = true;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.value = 80000f;
            }
            else if (this.type == 114)
            {
                this.name = "Wall of Flesh Eye";
                this.displayName = "Wall of Flesh";
                this.width = 100;
                this.height = 100;
                this.aiStyle = 28;
                this.damage = 50;
                this.defense = 0;
                this.lifeMax = 8000;
                this.soundHit = 8;
                this.soundKilled = 10;
                this.noGravity = true;
                this.noTileCollide = true;
                this.behindTiles = true;
                this.knockBackResist = 0.0f;
                this.scale = 1.2f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.value = 80000f;
            }
            else if (this.type == 115)
            {
                this.name = "The Hungry";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 29;
                this.damage = 30;
                this.defense = 10;
                this.lifeMax = 240;
                this.soundHit = 9;
                this.soundKilled = 11;
                this.noGravity = true;
                this.behindTiles = true;
                this.noTileCollide = true;
                this.knockBackResist = 1.1f;
            }
            else if (this.type == 116)
            {
                this.name = "The Hungry II";
                this.displayName = "The Hungry";
                this.width = 30;
                this.height = 32;
                this.aiStyle = 2;
                this.damage = 30;
                this.defense = 6;
                this.lifeMax = 80;
                this.soundHit = 9;
                this.knockBackResist = 0.8f;
                this.soundKilled = 12;
            }
            else if (this.type == 117)
            {
                this.displayName = "Leech";
                this.name = "Leech Head";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 26;
                this.defense = 2;
                this.lifeMax = 60;
                this.soundHit = 9;
                this.soundKilled = 12;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
            }
            else if (this.type == 118)
            {
                this.displayName = "Leech";
                this.name = "Leech Body";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 22;
                this.defense = 6;
                this.lifeMax = 60;
                this.soundHit = 9;
                this.soundKilled = 12;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
            }
            else if (this.type == 119)
            {
                this.displayName = "Leech";
                this.name = "Leech Tail";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 18;
                this.defense = 10;
                this.lifeMax = 60;
                this.soundHit = 9;
                this.soundKilled = 12;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
            }
            else if (this.type == 120)
            {
                this.name = "Chaos Elemental";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 40;
                this.defense = 30;
                this.lifeMax = 370;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.4f;
                this.value = 600f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 121)
            {
                this.name = "Slimer";
                this.width = 40;
                this.height = 30;
                this.aiStyle = 14;
                this.damage = 45;
                this.defense = 20;
                this.lifeMax = 60;
                this.soundHit = 1;
                this.alpha = 55;
                this.knockBackResist = 0.8f;
                this.scale = 1.1f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 122)
            {
                this.noGravity = true;
                this.name = "Gastropod";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 22;
                this.damage = 60;
                this.defense = 22;
                this.lifeMax = 220;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                this.value = 600f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 123)
            {
                this.friendly = true;
                this.name = "Bound Mechanic";
                this.width = 18;
                this.height = 34;
                this.aiStyle = 0;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.scale = 0.9f;
                this.rarity = 1;
            }
            else if (this.type == 124)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Mechanic";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 125)
            {
                this.name = "Retinazer";
                this.width = 100;
                this.height = 110;
                this.aiStyle = 30;
                this.defense = 10;
                this.damage = 45;
                this.lifeMax = 20000;
                this.soundHit = 1;
                this.soundKilled = 14;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.timeLeft = NPC.activeTime * 30;
                this.boss = true;
                this.value = 120000f;
                this.npcSlots = 5f;
            }
            else if (this.type == 126)
            {
                this.name = "Spazmatism";
                this.width = 100;
                this.height = 110;
                this.aiStyle = 31;
                this.defense = 10;
                this.damage = 50;
                this.lifeMax = 23000;
                this.soundHit = 1;
                this.soundKilled = 14;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.timeLeft = NPC.activeTime * 30;
                this.boss = true;
                this.value = 120000f;
                this.npcSlots = 5f;
            }
            else if (this.type == (int)sbyte.MaxValue)
            {
                this.name = "Skeletron Prime";
                this.width = 80;
                this.height = 102;
                this.aiStyle = 32;
                this.damage = 47;
                this.defense = 24;
                this.lifeMax = 28000;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.value = 120000f;
                this.knockBackResist = 0.0f;
                this.boss = true;
                this.npcSlots = 6f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.buffImmune[189] = this.buffImmune[169] = this.buffImmune[183] = true;
                this.boss = true;
            }
            else if (this.type == 128)
            {
                this.name = "Prime Cannon";
                this.width = 52;
                this.height = 52;
                this.aiStyle = 35;
                this.damage = 30;
                this.defense = 23;
                this.lifeMax = 7000;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.netAlways = true;
            }
            else if (this.type == 129)
            {
                this.name = "Prime Saw";
                this.width = 52;
                this.height = 52;
                this.aiStyle = 33;
                this.damage = 56;
                this.defense = 38;
                this.lifeMax = 9000;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.netAlways = true;
            }
            else if (this.type == 130)
            {
                this.name = "Prime Vice";
                this.width = 52;
                this.height = 52;
                this.aiStyle = 34;
                this.damage = 52;
                this.defense = 34;
                this.lifeMax = 9000;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.netAlways = true;
            }
            else if (this.type == 131)
            {
                this.name = "Prime Laser";
                this.width = 52;
                this.height = 52;
                this.aiStyle = 36;
                this.damage = 29;
                this.defense = 20;
                this.lifeMax = 6000;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.netAlways = true;
            }
            else if (this.type == 132)
            {
                this.displayName = "Zombie";
                this.name = "Bald Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 15;
                this.defense = 5;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 65f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 133)
            {
                this.name = "Wandering Eye";
                this.width = 30;
                this.height = 32;
                this.aiStyle = 2;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 300;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                this.value = 500f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 134)
            {
                this.displayName = "The Destroyer";
                this.npcSlots = 5f;
                this.name = "The Destroyer";
                this.width = 38;
                this.height = 38;
                this.aiStyle = 37;
                this.defense = 0;
                this.damage = 70;
                this.lifeMax = 80000;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 120000f;
                this.scale = 1.25f;
                this.boss = true;
                this.netAlways = true;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                flag = true;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 135)
            {
                this.displayName = "The Destroyer";
                this.npcSlots = 5f;
                this.name = "The Destroyer Body";
                this.width = 38;
                this.height = 38;
                this.aiStyle = 37;
                this.damage = 55;
                this.defense = 30;
                this.lifeMax = 80000;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.netAlways = true;
                this.scale = 1.25f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                flag = true;
                this.dontCountMe = true;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 136)
            {
                this.displayName = "The Destroyer";
                this.npcSlots = 5f;
                this.name = "The Destroyer Tail";
                this.width = 38;
                this.height = 38;
                this.aiStyle = 37;
                this.damage = 40;
                this.defense = 35;
                this.lifeMax = 80000;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.scale = 1.25f;
                this.netAlways = true;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                flag = true;
                this.dontCountMe = true;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 139)
            {
                this.npcSlots = 1f;
                this.name = "Probe";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 5;
                this.damage = 50;
                this.defense = 20;
                this.lifeMax = 200;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.knockBackResist = 0.8f;
                this.noTileCollide = true;
                flag = true;
            }
            else if (this.type == 137)
            {
                this.name = "Illuminant Bat";
                this.width = 26;
                this.height = 20;
                this.aiStyle = 14;
                this.damage = 75;
                this.defense = 30;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.knockBackResist = 0.75f;
                this.soundKilled = 6;
                this.value = 500f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 138)
            {
                this.name = "Illuminant Slime";
                this.width = 24;
                this.height = 18;
                this.aiStyle = 1;
                this.damage = 70;
                this.defense = 30;
                this.lifeMax = 180;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.alpha = 100;
                this.value = 400f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.knockBackResist = 0.85f;
                this.scale = 1.05f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 140)
            {
                this.name = "Possessed Armor";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 55;
                this.defense = 28;
                this.lifeMax = 260;
                this.soundHit = 4;
                this.soundKilled = 6;
                this.knockBackResist = 0.4f;
                this.value = 400f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.buffImmune[24] = true;
            }
            else if (this.type == 141)
            {
                this.name = "Toxic Sludge";
                this.width = 34;
                this.height = 28;
                this.aiStyle = 1;
                this.damage = 50;
                this.defense = 18;
                this.lifeMax = 150;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 55;
                this.value = 400f;
                this.scale = 1.1f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.knockBackResist = 0.8f;
            }
            else if (this.type == 142)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Santa Claus";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 143)
            {
                this.name = "Snowman Gangsta";
                this.width = 26;
                this.height = 40;
                this.aiStyle = 38;
                this.damage = 50;
                this.defense = 20;
                this.lifeMax = 200;
                this.soundHit = 11;
                this.soundKilled = 15;
                this.knockBackResist = 0.6f;
                this.value = 400f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
            }
            else if (this.type == 144)
            {
                this.name = "Mister Stabby";
                this.width = 26;
                this.height = 40;
                this.aiStyle = 38;
                this.damage = 65;
                this.defense = 26;
                this.lifeMax = 240;
                this.soundHit = 11;
                this.soundKilled = 15;
                this.knockBackResist = 0.6f;
                this.value = 400f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.coldDamage = true;
            }
            else if (this.type == 145)
            {
                this.name = "Snow Balla";
                this.width = 26;
                this.height = 40;
                this.aiStyle = 38;
                this.damage = 55;
                this.defense = 22;
                this.lifeMax = 220;
                this.soundHit = 11;
                this.soundKilled = 15;
                this.knockBackResist = 0.6f;
                this.value = 400f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.coldDamage = true;
            }
            else if (this.type == 147)
            {
                this.name = "Ice Slime";
                this.width = 24;
                this.height = 18;
                this.aiStyle = 1;
                this.damage = 8;
                this.defense = 4;
                this.lifeMax = 30;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 50;
                this.value = 50f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.coldDamage = true;
            }
            else if (this.type == 148)
            {
                this.name = "Penguin";
                this.width = 16;
                this.height = 34;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.catchItem = (short)2205;
            }
            else if (this.type == 149)
            {
                this.name = "Penguin";
                this.width = 16;
                this.height = 34;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.catchItem = (short)2205;
            }
            else if (this.type == 150)
            {
                this.npcSlots = 0.5f;
                this.name = "Ice Bat";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 14;
                this.damage = 18;
                this.defense = 6;
                this.lifeMax = 30;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 4;
                this.value = 250f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 151)
            {
                this.npcSlots = 0.5f;
                this.name = "Lava bat";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 14;
                this.damage = 50;
                this.defense = 16;
                this.lifeMax = 160;
                this.soundHit = 1;
                this.knockBackResist = 0.6f;
                this.soundKilled = 4;
                this.value = 400f;
                this.scale = 1.15f;
                this.lavaImmune = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 152)
            {
                this.npcSlots = 0.5f;
                this.name = "Giant Flying Fox";
                this.width = 38;
                this.height = 34;
                this.aiStyle = 14;
                this.damage = 80;
                this.defense = 24;
                this.lifeMax = 220;
                this.soundHit = 1;
                this.knockBackResist = 0.65f;
                this.soundKilled = 4;
                this.value = 400f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 153)
            {
                this.npcSlots = 2f;
                this.name = "Giant Tortoise";
                this.width = 46;
                this.height = 32;
                this.aiStyle = 39;
                this.damage = 80;
                this.defense = 30;
                this.lifeMax = 470;
                this.soundHit = 24;
                this.knockBackResist = 0.3f;
                this.soundKilled = 27;
                this.value = 500f;
                this.noGravity = false;
                this.buffImmune[31] = false;
            }
            else if (this.type == 154)
            {
                this.npcSlots = 1.5f;
                this.name = "Ice Tortoise";
                this.width = 46;
                this.height = 32;
                this.aiStyle = 39;
                this.damage = 55;
                this.defense = 28;
                this.lifeMax = 400;
                this.soundHit = 24;
                this.knockBackResist = 0.3f;
                this.soundKilled = 27;
                this.value = 450f;
                this.noGravity = false;
                this.buffImmune[31] = false;
            }
            else if (this.type == 155)
            {
                this.name = "Wolf";
                this.width = 46;
                this.height = 30;
                this.aiStyle = 26;
                this.damage = 65;
                this.defense = 30;
                this.lifeMax = 300;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.3f;
                this.value = 1000f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 156)
            {
                this.npcSlots = 2f;
                this.name = "Red Devil";
                this.width = 28;
                this.height = 48;
                this.aiStyle = 14;
                this.damage = 50;
                this.defense = 40;
                this.lifeMax = 600;
                this.soundHit = 21;
                this.knockBackResist = 0.5f;
                this.soundKilled = 24;
                this.value = 1200f;
                this.lavaImmune = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
            }
            else if (this.type == 157)
            {
                this.npcSlots = 0.5f;
                this.noGravity = true;
                this.name = "Arapaima";
                this.width = 74;
                this.height = 20;
                this.aiStyle = 16;
                this.damage = 75;
                this.defense = 30;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 500f;
            }
            else if (this.type == 160)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Truffle";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 161)
            {
                this.name = "Zombie Eskimo";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 16;
                this.defense = 8;
                this.lifeMax = 50;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.45f;
                this.value = 80f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 163)
            {
                this.name = "Black Recluse";
                this.width = 50;
                this.height = 20;
                this.aiStyle = 3;
                this.damage = 90;
                this.defense = 40;
                this.lifeMax = 350;
                this.soundHit = 29;
                this.soundKilled = 31;
                this.knockBackResist = 0.25f;
                this.value = 500f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.npcSlots = 0.5f;
                this.timeLeft = NPC.activeTime * 2;
            }
            else if (this.type == 238)
            {
                this.noGravity = true;
                this.name = "Black Recluse";
                this.width = 50;
                this.height = 20;
                this.aiStyle = 40;
                this.damage = 100;
                this.defense = 40;
                this.lifeMax = 350;
                this.soundHit = 29;
                this.soundKilled = 31;
                this.knockBackResist = 0.25f;
                this.value = 500f;
                this.timeLeft = NPC.activeTime * 2;
                this.npcSlots = 0.5f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 164)
            {
                this.name = "Wall Creeper";
                this.width = 50;
                this.height = 20;
                this.aiStyle = 3;
                this.damage = 30;
                this.defense = 10;
                this.lifeMax = 80;
                this.soundHit = 29;
                this.soundKilled = 31;
                this.knockBackResist = 0.25f;
                this.value = 100f;
                this.timeLeft = NPC.activeTime * 2;
                this.npcSlots = 0.5f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 165)
            {
                this.noGravity = true;
                this.name = "Wall Creeper";
                this.width = 50;
                this.height = 20;
                this.aiStyle = 40;
                this.damage = 30;
                this.defense = 10;
                this.lifeMax = 80;
                this.soundHit = 29;
                this.soundKilled = 31;
                this.knockBackResist = 0.25f;
                this.value = 100f;
                this.timeLeft = NPC.activeTime * 2;
                this.npcSlots = 0.5f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 167)
            {
                this.name = "Undead Viking";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 24;
                this.defense = 10;
                this.lifeMax = 70;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 200f;
                this.buffImmune[31] = false;
                this.buffImmune[20] = true;
            }
            else if (this.type == 168)
            {
                this.name = "Corrupt Penguin";
                this.width = 16;
                this.height = 34;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 4;
                this.lifeMax = 70;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 500f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 169)
            {
                this.noGravity = true;
                this.name = "Ice Elemental";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 22;
                this.damage = 55;
                this.defense = 20;
                this.lifeMax = 200;
                this.soundHit = 5;
                this.knockBackResist = 0.6f;
                this.soundKilled = 7;
                this.value = 1500f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.buffImmune[31] = false;
                this.buffImmune[44] = true;
                this.coldDamage = true;
            }
            else if (this.type == 170)
            {
                this.name = "Pigron";
                this.width = 44;
                this.height = 36;
                this.aiStyle = 2;
                this.damage = 70;
                this.defense = 16;
                this.lifeMax = 210;
                this.soundHit = 27;
                this.soundKilled = 30;
                this.knockBackResist = 0.5f;
                this.value = 2000f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 171)
            {
                this.name = "Pigron";
                this.width = 44;
                this.height = 36;
                this.aiStyle = 2;
                this.damage = 70;
                this.defense = 16;
                this.lifeMax = 210;
                this.soundHit = 27;
                this.soundKilled = 30;
                this.knockBackResist = 0.5f;
                this.value = 2000f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 172)
            {
                this.name = "Rune Wizard";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 200;
                this.defense = 30;
                this.lifeMax = 600;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.3f;
                this.value = 5000f;
                this.buffImmune[20] = true;
                this.rarity = 2;
            }
            else if (this.type == 173)
            {
                this.npcSlots = 1f;
                this.name = "Crimera";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 5;
                this.damage = 22;
                this.defense = 8;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.knockBackResist = 0.5f;
                this.value = 90f;
            }
            else if (this.type == 174)
            {
                this.npcSlots = 1f;
                this.name = "Herpling";
                this.width = 52;
                this.height = 26;
                this.aiStyle = 41;
                this.damage = 65;
                this.defense = 26;
                this.lifeMax = 220;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.3f;
                this.value = 450f;
            }
            else if (this.type == 175)
            {
                this.noGravity = true;
                this.noTileCollide = true;
                this.name = "Angry Trapper";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 13;
                this.damage = 100;
                this.defense = 30;
                this.lifeMax = 300;
                this.soundHit = 1;
                this.knockBackResist = 0.25f;
                this.soundKilled = 1;
                this.value = 650f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 176)
            {
                this.name = "Moss Hornet";
                this.width = 34;
                this.height = 32;
                this.aiStyle = 5;
                this.damage = 70;
                this.defense = 22;
                this.lifeMax = 220;
                this.soundHit = 1;
                this.knockBackResist = 0.5f;
                this.soundKilled = 1;
                this.value = 600f;
                this.noGravity = true;
                this.buffImmune[20] = true;
                this.npcSlots = 1.5f;
            }
            else if (this.type == 177)
            {
                this.npcSlots = 1f;
                this.name = "Derpling";
                this.width = 58;
                this.height = 44;
                this.aiStyle = 41;
                this.damage = 80;
                this.defense = 26;
                this.lifeMax = 300;
                this.soundHit = 22;
                this.soundKilled = 25;
                this.knockBackResist = 0.5f;
                this.value = 500f;
            }
            else if (this.type == 178)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Steampunker";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 179)
            {
                this.name = "Crimson Axe";
                this.width = 40;
                this.height = 40;
                this.aiStyle = 23;
                this.damage = 80;
                this.defense = 18;
                this.lifeMax = 200;
                this.soundHit = 4;
                this.soundKilled = 6;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.knockBackResist = 0.4f;
            }
            else if (this.type == 180)
            {
                this.name = "Pigron";
                this.width = 44;
                this.height = 36;
                this.aiStyle = 2;
                this.damage = 70;
                this.defense = 16;
                this.lifeMax = 210;
                this.soundHit = 27;
                this.soundKilled = 30;
                this.knockBackResist = 0.5f;
                this.value = 4000f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 181)
            {
                this.name = "Face Monster";
                this.width = 18;
                this.height = 44;
                this.aiStyle = 3;
                this.damage = 25;
                this.defense = 10;
                this.lifeMax = 70;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.4f;
                this.value = 200f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 182)
            {
                this.noGravity = true;
                this.noTileCollide = true;
                this.name = "Floaty Gross";
                this.width = 24;
                this.height = 62;
                this.aiStyle = 22;
                this.damage = 65;
                this.defense = 18;
                this.lifeMax = 240;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.alpha = 100;
                this.value = 500f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.knockBackResist = 0.7f;
            }
            else if (this.type == 183)
            {
                this.name = "Crimslime";
                this.width = 40;
                this.height = 30;
                this.aiStyle = 1;
                this.damage = 60;
                this.defense = 26;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 55;
                this.value = 400f;
                this.scale = 1.1f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 184)
            {
                this.name = "Spiked Ice Slime";
                this.width = 24;
                this.height = 18;
                this.aiStyle = 1;
                this.damage = 12;
                this.defense = 8;
                this.lifeMax = 60;
                this.scale = 1.1f;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 50;
                this.value = 200f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.coldDamage = true;
            }
            else if (this.type == 185)
            {
                this.name = "Snow Flinx";
                this.width = 28;
                this.height = 28;
                this.aiStyle = 3;
                this.damage = 26;
                this.defense = 12;
                this.lifeMax = 70;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 1.1f;
                this.value = 200f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.coldDamage = true;
            }
            else if (this.type == 186)
            {
                this.name = "Pincushion Zombie";
                this.displayName = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 16;
                this.defense = 8;
                this.lifeMax = 50;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.45f;
                this.value = 65f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 187)
            {
                this.name = "Slimed Zombie";
                this.displayName = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 13;
                this.defense = 6;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.55f;
                this.value = 55f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 188)
            {
                this.name = "Swamp Zombie";
                this.displayName = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 13;
                this.defense = 8;
                this.lifeMax = 45;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.45f;
                this.value = 80f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 189)
            {
                this.name = "Twiggy Zombie";
                this.displayName = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 16;
                this.defense = 4;
                this.lifeMax = 45;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.55f;
                this.value = 70f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 190)
            {
                this.name = "Cataract Eye";
                this.displayName = "Demon Eye";
                this.width = 30;
                this.height = 32;
                this.aiStyle = 2;
                this.damage = 18;
                this.defense = 4;
                this.lifeMax = 65;
                this.soundHit = 1;
                this.knockBackResist = 0.7f;
                this.soundKilled = 1;
                this.value = 75f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 191)
            {
                this.name = "Sleepy Eye";
                this.displayName = "Demon Eye";
                this.width = 30;
                this.height = 32;
                this.aiStyle = 2;
                this.damage = 16;
                this.defense = 2;
                this.lifeMax = 60;
                this.soundHit = 1;
                this.knockBackResist = 0.85f;
                this.soundKilled = 1;
                this.value = 75f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 192)
            {
                this.name = "Dialated Eye";
                this.displayName = "Demon Eye";
                this.width = 30;
                this.height = 32;
                this.aiStyle = 2;
                this.damage = 18;
                this.defense = 2;
                this.lifeMax = 50;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                this.value = 75f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 193)
            {
                this.name = "Green Eye";
                this.displayName = "Demon Eye";
                this.width = 30;
                this.height = 32;
                this.aiStyle = 2;
                this.damage = 20;
                this.defense = 0;
                this.lifeMax = 60;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                this.value = 75f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 194)
            {
                this.name = "Purple Eye";
                this.displayName = "Demon Eye";
                this.width = 30;
                this.height = 32;
                this.aiStyle = 2;
                this.damage = 14;
                this.defense = 4;
                this.lifeMax = 60;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                this.value = 75f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 195)
            {
                this.name = "Lost Girl";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 42;
                this.damage = 10;
                this.defense = 30;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.rarity = 1;
            }
            else if (this.type == 196)
            {
                this.name = "Nymph";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 35;
                this.defense = 16;
                this.lifeMax = 300;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.4f;
                this.value = 10000f;
                this.buffImmune[31] = false;
                this.rarity = 1;
            }
            else if (this.type == 197)
            {
                this.name = "Armored Viking";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 50;
                this.defense = 28;
                this.lifeMax = 280;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.45f;
                this.value = 500f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 198)
            {
                this.name = "Lihzahrd";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 38;
                this.defense = 20;
                this.lifeMax = 400;
                this.soundHit = 26;
                this.soundKilled = 29;
                this.knockBackResist = 0.4f;
                this.value = 650f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 199)
            {
                this.name = "Lihzahrd";
                this.width = 42;
                this.height = 30;
                this.aiStyle = 3;
                this.damage = 60;
                this.defense = 30;
                this.lifeMax = 400;
                this.soundHit = 26;
                this.soundKilled = 29;
                this.knockBackResist = 0.0f;
                this.value = 650f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 200)
            {
                this.name = "Female Zombie";
                this.displayName = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 12;
                this.defense = 4;
                this.lifeMax = 38;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.6f;
                this.value = 65f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 201)
            {
                this.name = "Headache Skeleton";
                this.displayName = "Skeleton";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 12;
                this.lifeMax = 55;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 130f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 202)
            {
                this.name = "Misassembled Skeleton";
                this.displayName = "Skeleton";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 18;
                this.defense = 8;
                this.lifeMax = 65;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 120f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 203)
            {
                this.name = "Pantless Skeleton";
                this.displayName = "Skeleton";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 22;
                this.defense = 8;
                this.lifeMax = 60;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 110f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 204)
            {
                this.name = "Spiked Jungle Slime";
                this.width = 24;
                this.height = 18;
                this.aiStyle = 1;
                this.damage = 28;
                this.defense = 8;
                this.lifeMax = 65;
                this.scale = 1.15f;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 50;
                this.value = 300f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 205)
            {
                this.name = "Moth";
                this.width = 40;
                this.height = 40;
                this.aiStyle = 5;
                this.damage = 70;
                this.defense = 28;
                this.lifeMax = 1000;
                this.soundHit = 1;
                this.knockBackResist = 0.4f;
                this.soundKilled = 1;
                this.value = 600f;
                this.noGravity = true;
                this.buffImmune[20] = true;
                this.rarity = 2;
            }
            else if (this.type == 206)
            {
                this.name = "Icy Merman";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 60;
                this.defense = 30;
                this.lifeMax = 280;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.value = 500f;
                this.buffImmune[31] = false;
                this.coldDamage = true;
            }
            else if (this.type == 207)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Dye Trader";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 208)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Party Girl";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 209)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Cyborg";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 210)
            {
                this.name = "Bee";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 5;
                this.damage = 20;
                this.defense = 5;
                this.lifeMax = 20;
                this.soundHit = 1;
                this.knockBackResist = 0.5f;
                this.soundKilled = 1;
                this.noGravity = true;
                this.buffImmune[20] = true;
            }
            else if (this.type == 211)
            {
                this.name = "Bee";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 5;
                this.damage = 15;
                this.defense = 2;
                this.lifeMax = 10;
                this.soundHit = 1;
                this.knockBackResist = 0.5f;
                this.soundKilled = 1;
                this.noGravity = true;
                this.buffImmune[20] = true;
            }
            else if (this.type == 212)
            {
                this.name = "Pirate Deckhand";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 35;
                this.defense = 17;
                this.lifeMax = 300;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.4f;
                this.value = 700f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 213)
            {
                this.name = "Pirate Corsair";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 50;
                this.defense = 22;
                this.lifeMax = 450;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.2f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 214)
            {
                this.name = "Pirate Deadeye";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 30;
                this.defense = 14;
                this.lifeMax = 225;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.3f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 215)
            {
                this.name = "Pirate Crossbower";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 35;
                this.defense = 20;
                this.lifeMax = 350;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.35f;
                this.value = 1500f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 216)
            {
                this.name = "Pirate Captain";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 70;
                this.defense = 30;
                this.lifeMax = 3000;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.0f;
                this.value = 50000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = true;
            }
            else if (this.type == 217)
            {
                this.name = "Cochineal Beetle";
                this.width = 28;
                this.height = 20;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 10;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.soundKilled = 16;
                this.value = 60f;
            }
            else if (this.type == 218)
            {
                this.name = "Cyan Beetle";
                this.width = 28;
                this.height = 20;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 10;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.soundKilled = 16;
                this.value = 60f;
            }
            else if (this.type == 219)
            {
                this.name = "Lac Beetle";
                this.width = 28;
                this.height = 20;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 10;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.soundKilled = 16;
                this.value = 60f;
            }
            else if (this.type == 220)
            {
                this.name = "Sea Snail";
                this.width = 28;
                this.height = 20;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 10;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 60f;
            }
            else if (this.type == 221)
            {
                this.noGravity = true;
                this.name = "Squid";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 18;
                this.damage = 20;
                this.defense = 2;
                this.lifeMax = 30;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 100f;
                this.alpha = 20;
            }
            else if (this.type == 222)
            {
                this.name = "Queen Bee";
                this.width = 66;
                this.height = 66;
                this.aiStyle = 43;
                this.damage = 30;
                this.defense = 8;
                this.lifeMax = 3400;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.timeLeft = NPC.activeTime * 30;
                this.boss = true;
                this.value = 100000f;
                this.npcSlots = 7f;
            }
            else if (this.type == 223)
            {
                this.name = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 16;
                this.defense = 8;
                this.lifeMax = 50;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.45f;
                this.value = 70f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 224)
            {
                this.name = "Flying Fish";
                this.width = 32;
                this.height = 18;
                this.aiStyle = 44;
                this.damage = 9;
                this.defense = 4;
                this.lifeMax = 20;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                this.value = 90f;
                this.buffImmune[31] = false;
            }
            if (this.type == 225)
            {
                this.name = "Umbrella Slime";
                this.width = 38;
                this.height = 26;
                this.aiStyle = 1;
                this.damage = 10;
                this.defense = 5;
                this.lifeMax = 35;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.75f;
                this.value = 25f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 226)
            {
                this.npcSlots = 0.5f;
                this.name = "Flying Snake";
                this.width = 34;
                this.height = 50;
                this.aiStyle = 14;
                this.damage = 85;
                this.defense = 28;
                this.lifeMax = 260;
                this.soundHit = 23;
                this.knockBackResist = 0.65f;
                this.soundKilled = 26;
                this.value = 400f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 227)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Painter";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 228)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Witch Doctor";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 229)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Pirate";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 230)
            {
                this.name = "Goldfish";
                this.width = 18;
                this.height = 20;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.catchItem = (short)261;
            }
            else if (this.type == 231)
            {
                this.name = "Hornet Fatty";
                this.width = 34;
                this.height = 32;
                this.aiStyle = 5;
                this.damage = 22;
                this.defense = 16;
                this.lifeMax = 50;
                this.soundHit = 1;
                this.knockBackResist = 0.3f;
                this.soundKilled = 1;
                this.value = 200f;
                this.noGravity = true;
                this.buffImmune[20] = true;
            }
            else if (this.type == 232)
            {
                this.name = "Hornet Honey";
                this.width = 34;
                this.height = 32;
                this.aiStyle = 5;
                this.damage = 28;
                this.defense = 12;
                this.lifeMax = 42;
                this.soundHit = 1;
                this.knockBackResist = 0.6f;
                this.soundKilled = 1;
                this.value = 200f;
                this.noGravity = true;
                this.buffImmune[20] = true;
            }
            else if (this.type == 233)
            {
                this.name = "Hornet Leafy";
                this.width = 34;
                this.height = 32;
                this.aiStyle = 5;
                this.damage = 30;
                this.defense = 14;
                this.lifeMax = 38;
                this.soundHit = 1;
                this.knockBackResist = 0.45f;
                this.soundKilled = 1;
                this.value = 200f;
                this.noGravity = true;
                this.buffImmune[20] = true;
            }
            else if (this.type == 234)
            {
                this.name = "Hornet Spikey";
                this.width = 34;
                this.height = 32;
                this.aiStyle = 5;
                this.damage = 32;
                this.defense = 6;
                this.lifeMax = 42;
                this.soundHit = 1;
                this.knockBackResist = 0.55f;
                this.soundKilled = 1;
                this.value = 200f;
                this.noGravity = true;
                this.buffImmune[20] = true;
            }
            else if (this.type == 235)
            {
                this.name = "Hornet Stingy";
                this.width = 34;
                this.height = 32;
                this.aiStyle = 5;
                this.damage = 34;
                this.defense = 4;
                this.lifeMax = 38;
                this.soundHit = 1;
                this.knockBackResist = 0.6f;
                this.soundKilled = 1;
                this.value = 200f;
                this.noGravity = true;
                this.buffImmune[20] = true;
            }
            else if (this.type == 236)
            {
                this.name = "Jungle Creeper";
                this.width = 50;
                this.height = 20;
                this.aiStyle = 3;
                this.damage = 50;
                this.defense = 14;
                this.lifeMax = 120;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.25f;
                this.value = 1000f;
                this.timeLeft = NPC.activeTime * 2;
                this.npcSlots = 0.75f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 237)
            {
                this.noGravity = true;
                this.name = "Jungle Creeper";
                this.width = 50;
                this.height = 20;
                this.aiStyle = 40;
                this.damage = 50;
                this.defense = 14;
                this.lifeMax = 120;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.25f;
                this.value = 1000f;
                this.timeLeft = NPC.activeTime * 2;
                this.npcSlots = 0.75f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 239)
            {
                this.name = "Blood Crawler";
                this.width = 50;
                this.height = 20;
                this.aiStyle = 3;
                this.damage = 30;
                this.defense = 8;
                this.lifeMax = 60;
                this.soundHit = 20;
                this.soundKilled = 23;
                this.knockBackResist = 0.5f;
                this.value = 130f;
                this.timeLeft = NPC.activeTime * 2;
                this.buffImmune[20] = true;
            }
            else if (this.type == 240)
            {
                this.noGravity = true;
                this.name = "Blood Crawler";
                this.width = 50;
                this.height = 20;
                this.aiStyle = 40;
                this.damage = 30;
                this.defense = 8;
                this.lifeMax = 60;
                this.soundHit = 20;
                this.soundKilled = 23;
                this.knockBackResist = 0.5f;
                this.value = 130f;
                this.timeLeft = NPC.activeTime * 2;
                this.buffImmune[20] = true;
            }
            else if (this.type == 241)
            {
                this.npcSlots = 0.5f;
                this.noGravity = true;
                this.name = "Blood Feeder";
                this.width = 18;
                this.height = 20;
                this.aiStyle = 16;
                this.damage = 30;
                this.defense = 4;
                this.lifeMax = 20;
                this.soundHit = 13;
                this.soundKilled = 19;
                this.value = 350f;
            }
            else if (this.type == 242)
            {
                this.noGravity = true;
                this.name = "Blood Jelly";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 18;
                this.damage = 75;
                this.defense = 20;
                this.lifeMax = 150;
                this.soundHit = 13;
                this.soundKilled = 19;
                this.value = 800f;
                this.alpha = 20;
            }
            else if (this.type == 243)
            {
                this.name = "Ice Golem";
                this.width = 30;
                this.height = 114;
                this.aiStyle = 3;
                this.damage = 60;
                this.defense = 32;
                this.lifeMax = 4000;
                this.soundHit = 5;
                this.soundKilled = 7;
                this.knockBackResist = 0.05f;
                this.value = (float)Item.buyPrice(0, 1, 50, 0);
                this.buffImmune[20] = true;
                this.buffImmune[44] = true;
                this.coldDamage = true;
                this.rarity = 2;
            }
            else if (this.type == 244)
            {
                this.name = "Rainbow Slime";
                this.width = 60;
                this.height = 42;
                this.aiStyle = 1;
                this.damage = 85;
                this.defense = 26;
                this.lifeMax = 400;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 175;
                this.value = (float)Item.buyPrice(0, 0, 20, 0);
                this.knockBackResist = 0.3f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.rarity = 1;
            }
            else if (this.type == 245)
            {
                this.name = "Golem";
                this.width = 140;
                this.height = 140;
                this.aiStyle = 45;
                this.damage = 72;
                this.defense = 26;
                this.lifeMax = 9000;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.knockBackResist = 0.0f;
                this.value = (float)Item.buyPrice(0, 15, 0, 0);
                this.alpha = (int)byte.MaxValue;
                this.boss = true;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
            }
            else if (this.type == 246)
            {
                this.noGravity = true;
                this.name = "Golem Head";
                this.width = 70;
                this.height = 70;
                this.aiStyle = 46;
                this.damage = 64;
                this.defense = 20;
                this.lifeMax = 16000;
                this.soundHit = 4;
                this.soundKilled = 0;
                this.knockBackResist = 0.0f;
                this.alpha = (int)byte.MaxValue;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
            }
            else if (this.type == 247 || this.type == 248)
            {
                this.noGravity = true;
                this.name = "Golem Fist";
                this.width = 40;
                this.height = 30;
                this.aiStyle = 47;
                this.damage = 59;
                this.defense = 28;
                this.lifeMax = 7000;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.alpha = (int)byte.MaxValue;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
            }
            else if (this.type == 249)
            {
                this.noGravity = true;
                this.name = "Golem Head";
                this.width = 70;
                this.height = 70;
                this.aiStyle = 48;
                this.damage = 80;
                this.defense = 32;
                this.lifeMax = 11000;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.knockBackResist = 0.0f;
                this.dontTakeDamage = true;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
            }
            else if (this.type == 250)
            {
                this.name = "Angry Nimbus";
                this.width = 34;
                this.height = 26;
                this.aiStyle = 49;
                this.damage = 50;
                this.defense = 24;
                this.lifeMax = 300;
                this.soundHit = 30;
                this.soundKilled = 33;
                this.knockBackResist = 0.3f;
                this.value = 300f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 251)
            {
                this.name = "Eyezor";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 50;
                this.defense = 30;
                this.lifeMax = 1000;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.3f;
                this.value = (float)Item.buyPrice(0, 0, 50, 0);
                this.buffImmune[31] = false;
            }
            else if (this.type == 252)
            {
                this.noGravity = true;
                this.npcSlots = 0.5f;
                this.name = "Parrot";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 5;
                this.damage = 80;
                this.defense = 12;
                this.lifeMax = 100;
                this.soundHit = 46;
                this.knockBackResist = 0.7f;
                this.soundKilled = 48;
                this.value = 500f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 254)
            {
                this.name = "Spore Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 40;
                this.defense = 10;
                this.lifeMax = 180;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.4f;
                this.value = 1000f;
                this.buffImmune[31] = false;
            }
            else if (this.type == (int)byte.MaxValue)
            {
                this.name = "Spore Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 38;
                this.defense = 16;
                this.lifeMax = 220;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.3f;
                this.value = 1200f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 256)
            {
                this.noGravity = true;
                this.name = "Fungo Fish";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 18;
                this.damage = 90;
                this.defense = 20;
                this.lifeMax = 140;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.value = 1200f;
                this.alpha = 20;
                this.npcSlots = 0.3f;
            }
            else if (this.type == 257)
            {
                this.name = "Anomura Fungus";
                this.width = 44;
                this.height = 34;
                this.aiStyle = 3;
                this.damage = 38;
                this.defense = 24;
                this.lifeMax = 230;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.3f;
                this.value = 1300f;
                this.buffImmune[31] = false;
                this.npcSlots = 0.3f;
            }
            else if (this.type == 258)
            {
                this.name = "Mushi Ladybug";
                this.width = 30;
                this.height = 24;
                this.aiStyle = 3;
                this.damage = 60;
                this.defense = 16;
                this.lifeMax = 220;
                this.soundHit = 45;
                this.soundKilled = 47;
                this.knockBackResist = 0.3f;
                this.value = 1500f;
                this.buffImmune[31] = false;
                this.npcSlots = 0.3f;
            }
            else if (this.type == 259)
            {
                this.noGravity = true;
                this.noTileCollide = true;
                this.name = "Fungi Bulb";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 13;
                this.damage = 24;
                this.defense = 4;
                this.lifeMax = 90;
                this.soundHit = 1;
                this.knockBackResist = 0.0f;
                this.soundKilled = 1;
                this.value = 350f;
                this.buffImmune[20] = true;
                this.npcSlots = 0.3f;
            }
            else if (this.type == 260)
            {
                this.noGravity = true;
                this.noTileCollide = true;
                this.name = "Giant Fungi Bulb";
                this.width = 36;
                this.height = 36;
                this.aiStyle = 13;
                this.damage = 70;
                this.defense = 20;
                this.lifeMax = 300;
                this.soundHit = 1;
                this.knockBackResist = 0.0f;
                this.soundKilled = 1;
                this.value = 1250f;
                this.buffImmune[20] = true;
                this.npcSlots = 0.3f;
            }
            else if (this.type == 261)
            {
                this.name = "Fungi Spore";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 50;
                this.damage = 80;
                this.defense = 0;
                this.lifeMax = 1;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.npcSlots = 0.0f;
            }
            else if (this.type == 262)
            {
                this.noTileCollide = true;
                this.name = "Plantera";
                this.width = 86;
                this.height = 86;
                this.aiStyle = 51;
                this.damage = 50;
                this.defense = 14;
                this.lifeMax = 30000;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.0f;
                this.value = (float)Item.buyPrice(0, 15, 0, 0);
                this.noGravity = true;
                this.boss = true;
                this.npcSlots = 16f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 263)
            {
                this.noTileCollide = true;
                this.noGravity = true;
                this.name = "Plantera's Hook";
                this.width = 40;
                this.height = 40;
                this.aiStyle = 52;
                this.damage = 60;
                this.defense = 24;
                this.lifeMax = 4000;
                this.dontTakeDamage = true;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.buffImmune[20] = true;
            }
            else if (this.type == 264)
            {
                this.name = "Plantera's Tentacle";
                this.width = 24;
                this.height = 24;
                this.aiStyle = 53;
                this.damage = 60;
                this.defense = 20;
                this.lifeMax = 1000;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.buffImmune[20] = true;
            }
            else if (this.type == 265)
            {
                this.name = "Spore";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 50;
                this.damage = 70;
                this.defense = 0;
                this.lifeMax = 1;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.npcSlots = 0.0f;
            }
            else if (this.type == 266)
            {
                this.name = "Brain of Cthulhu";
                this.dontTakeDamage = true;
                this.width = 160;
                this.height = 110;
                this.aiStyle = 54;
                this.damage = 30;
                this.defense = 14;
                this.lifeMax = 1000;
                this.soundHit = 9;
                this.soundKilled = 11;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.timeLeft = NPC.activeTime * 30;
                this.boss = true;
                this.value = 50000f;
                this.npcSlots = 6f;
            }
            else if (this.type == 267)
            {
                this.name = "Creeper";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 55;
                this.damage = 20;
                this.defense = 10;
                this.lifeMax = 100;
                this.soundHit = 9;
                this.soundKilled = 11;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.8f;
            }
            else if (this.type == 268)
            {
                this.noGravity = true;
                this.name = "Ichor Sticker";
                this.width = 28;
                this.height = 56;
                this.aiStyle = 22;
                this.damage = 55;
                this.defense = 20;
                this.lifeMax = 340;
                this.soundHit = 13;
                this.soundKilled = 19;
                this.knockBackResist = 0.6f;
                this.value = 450f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 269)
            {
                this.name = "Rusty Armored Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 70;
                this.defense = 34;
                this.lifeMax = 550;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.3f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 270)
            {
                this.name = "Rusty Armored Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 55;
                this.defense = 50;
                this.lifeMax = 400;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.2f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 271)
            {
                this.name = "Rusty Armored Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 70;
                this.defense = 40;
                this.lifeMax = 450;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.25f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 272)
            {
                this.name = "Rusty Armored Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 75;
                this.defense = 28;
                this.lifeMax = 400;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.35f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 273)
            {
                this.name = "Blue Armored Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 45;
                this.defense = 50;
                this.lifeMax = 500;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.15f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 274)
            {
                this.name = "Blue Armored Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 65;
                this.defense = 34;
                this.lifeMax = 350;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.4f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 275)
            {
                this.name = "Blue Armored Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 45;
                this.defense = 50;
                this.lifeMax = 550;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.15f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 276)
            {
                this.name = "Blue Armored Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 85;
                this.defense = 54;
                this.lifeMax = 500;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.2f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 277)
            {
                this.name = "Hell Armored Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 70;
                this.defense = 32;
                this.lifeMax = 400;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.4f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 278)
            {
                this.name = "Hell Armored Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 65;
                this.defense = 48;
                this.lifeMax = 450;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.3f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 279)
            {
                this.name = "Hell Armored Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 40;
                this.defense = 54;
                this.lifeMax = 500;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.2f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 280)
            {
                this.name = "Hell Armored Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 75;
                this.defense = 34;
                this.lifeMax = 500;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.4f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 281)
            {
                this.name = "Ragged Caster";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 400;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.6f;
                this.value = 1500f;
                this.npcSlots = 2f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 282)
            {
                this.name = "Ragged Caster";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 35;
                this.defense = 28;
                this.lifeMax = 450;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 1500f;
                this.npcSlots = 2f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 283)
            {
                this.name = "Necromancer";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 50;
                this.defense = 18;
                this.lifeMax = 300;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.55f;
                this.value = 1500f;
                this.npcSlots = 2f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 284)
            {
                this.name = "Necromancer";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 35;
                this.defense = 24;
                this.lifeMax = 450;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 1500f;
                this.npcSlots = 2f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 285)
            {
                this.name = "Diabolist";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 50;
                this.defense = 12;
                this.lifeMax = 200;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.7f;
                this.value = 1500f;
                this.npcSlots = 2f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 286)
            {
                this.name = "Diabolist";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 60;
                this.defense = 10;
                this.lifeMax = 250;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.65f;
                this.value = 1500f;
                this.npcSlots = 2f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 287)
            {
                this.name = "Bone Lee";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 90;
                this.defense = 42;
                this.lifeMax = 1000;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.3f;
                this.value = 2000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.rarity = 1;
            }
            else if (this.type == 288)
            {
                this.name = "Dungeon Spirit";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 56;
                this.damage = 70;
                this.defense = 30;
                this.lifeMax = 200;
                this.knockBackResist = 0.2f;
                this.soundHit = 36;
                this.soundKilled = 39;
                this.value = 500f;
                this.noTileCollide = true;
                this.noGravity = true;
                flag = true;
            }
            else if (this.type == 289)
            {
                this.name = "Giant Cursed Skull";
                this.width = 44;
                this.height = 44;
                this.aiStyle = 10;
                this.damage = 60;
                this.defense = 20;
                this.lifeMax = 400;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.noGravity = true;
                this.noTileCollide = true;
                this.value = 150f;
                this.knockBackResist = 0.2f;
                this.npcSlots = 0.75f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
            }
            else if (this.type == 290)
            {
                this.name = "Paladin";
                this.width = 34;
                this.height = 62;
                this.aiStyle = 3;
                this.damage = 100;
                this.defense = 50;
                this.lifeMax = 5000;
                this.soundHit = 4;
                this.soundKilled = 6;
                this.knockBackResist = 0.0f;
                this.value = 50000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = true;
                this.rarity = 1;
            }
            else if (this.type == 291)
            {
                this.name = "Skeleton Sniper";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 60;
                this.defense = 28;
                this.lifeMax = 400;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.4f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.rarity = 2;
            }
            else if (this.type == 292)
            {
                this.name = "Tactical Skeleton";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 60;
                this.defense = 28;
                this.lifeMax = 400;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.4f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.rarity = 2;
            }
            else if (this.type == 293)
            {
                this.name = "Skeleton Commando";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 60;
                this.defense = 28;
                this.lifeMax = 400;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.4f;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.rarity = 2;
            }
            else if (this.type == 294)
            {
                this.name = "Angry Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 34;
                this.defense = 6;
                this.lifeMax = 70;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.9f;
                this.value = 130f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 295)
            {
                this.name = "Angry Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 28;
                this.defense = 12;
                this.lifeMax = 70;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.7f;
                this.value = 130f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 296)
            {
                this.name = "Angry Bones";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 24;
                this.defense = 14;
                this.lifeMax = 120;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.6f;
                this.value = 130f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 299)
            {
                this.name = "Squirrel";
                this.width = 18;
                this.height = 20;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.catchItem = (short)2018;
            }
            else if (this.type == 300)
            {
                this.name = "Mouse";
                this.width = 14;
                this.height = 12;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 4;
                this.npcSlots = 0.25f;
                this.catchItem = (short)2003;
            }
            else if (this.type == 301)
            {
                this.name = "Raven";
                this.width = 36;
                this.height = 26;
                this.aiStyle = 17;
                this.damage = 12;
                this.defense = 2;
                this.lifeMax = 35;
                this.soundHit = 1;
                this.knockBackResist = 0.85f;
                this.soundKilled = 1;
                this.value = 50f;
            }
            if (this.type == 302)
            {
                this.name = "Slime";
                this.width = 24;
                this.height = 18;
                this.aiStyle = 1;
                this.damage = 7;
                this.defense = 2;
                this.lifeMax = 25;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 25f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 304)
            {
                this.name = "Hoppin' Jack";
                this.width = 34;
                this.height = 28;
                this.aiStyle = 1;
                this.damage = 80;
                this.defense = 20;
                this.lifeMax = 175;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 500f;
                this.scale = 1.1f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.knockBackResist = 0.5f;
                this.npcSlots = 0.3f;
            }
            else if (this.type >= 305 && this.type <= 314)
            {
                this.name = "Scarecrow";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.value = 1200f;
                this.buffImmune[31] = false;
                this.npcSlots = 0.5f;
                if (this.type == 305 || this.type == 310)
                {
                    this.damage = 60;
                    this.defense = 18;
                    this.lifeMax = 500;
                    this.knockBackResist = 0.4f;
                }
                else if (this.type == 306 || this.type == 311)
                {
                    this.damage = 52;
                    this.defense = 14;
                    this.lifeMax = 400;
                    this.knockBackResist = 0.2f;
                    this.scale = 1.05f;
                }
                else if (this.type == 307 || this.type == 312)
                {
                    this.damage = 78;
                    this.defense = 16;
                    this.lifeMax = 600;
                    this.knockBackResist = 0.25f;
                    this.scale = 0.9f;
                }
                else if (this.type == 308 || this.type == 313)
                {
                    this.damage = 66;
                    this.defense = 14;
                    this.lifeMax = 650;
                    this.knockBackResist = 0.35f;
                    this.scale = 0.95f;
                }
                else if (this.type == 309 || this.type == 314)
                {
                    this.damage = 52;
                    this.defense = 26;
                    this.lifeMax = 450;
                    this.knockBackResist = 0.5f;
                    this.scale = 1.1f;
                }
            }
            else if (this.type == 315)
            {
                this.name = "Headless Horseman";
                this.width = 74;
                this.height = 70;
                this.aiStyle = 26;
                this.damage = 130;
                this.defense = 40;
                this.lifeMax = 10000;
                this.soundHit = 12;
                this.soundKilled = 18;
                this.knockBackResist = 0.0f;
                this.value = 10000f;
                flag = true;
            }
            else if (this.type == 316)
            {
                this.noGravity = true;
                this.noTileCollide = true;
                this.name = "Ghost";
                this.width = 24;
                this.height = 44;
                this.aiStyle = 22;
                this.damage = 40;
                this.defense = 14;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.alpha = 100;
                this.value = 700f;
                flag = true;
                this.knockBackResist = 0.7f;
            }
            else if (this.type == 317)
            {
                this.name = "Demon Eye";
                this.width = 30;
                this.height = 32;
                this.aiStyle = 2;
                this.damage = 16;
                this.defense = 6;
                this.lifeMax = 75;
                this.soundHit = 1;
                this.knockBackResist = 0.7f;
                this.soundKilled = 1;
                this.value = 100f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 318)
            {
                this.name = "Demon Eye";
                this.width = 30;
                this.height = 32;
                this.aiStyle = 2;
                this.damage = 20;
                this.defense = 4;
                this.lifeMax = 60;
                this.soundHit = 1;
                this.knockBackResist = 0.65f;
                this.soundKilled = 1;
                this.value = 100f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 319)
            {
                this.name = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 6;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.6f;
                this.value = 85f;
                this.buffImmune[31] = false;
                this.scale = 0.9f;
            }
            else if (this.type == 320)
            {
                this.name = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 15;
                this.defense = 8;
                this.lifeMax = 60;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 105f;
                this.buffImmune[31] = false;
                this.scale = 1.05f;
            }
            else if (this.type == 321)
            {
                this.name = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 14;
                this.lifeMax = 34;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.3f;
                this.value = 120f;
                this.buffImmune[31] = false;
                this.scale = 1.1f;
            }
            else if (this.type == 322)
            {
                this.name = "Skeleton";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 23;
                this.defense = 0;
                this.lifeMax = 115;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.65f;
                this.value = 130f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 323)
            {
                this.name = "Skeleton";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 18;
                this.defense = 10;
                this.lifeMax = 65;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 120f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 324)
            {
                this.name = "Skeleton";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 22;
                this.defense = 10;
                this.lifeMax = 70;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.4f;
                this.value = 130f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.scale = 1.05f;
            }
            else if (this.type == 325)
            {
                this.name = "Mourning Wood";
                this.width = 164;
                this.height = 154;
                this.aiStyle = 57;
                this.damage = 120;
                this.defense = 28;
                this.lifeMax = 12000;
                this.soundHit = 7;
                this.soundKilled = 5;
                this.knockBackResist = 0.0f;
                this.value = 10000f;
                flag = true;
            }
            else if (this.type == 326)
            {
                this.name = "Splinterling";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 100;
                this.defense = 32;
                this.lifeMax = 900;
                this.soundHit = 7;
                this.soundKilled = 6;
                this.knockBackResist = 0.2f;
                this.value = 2000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 327)
            {
                this.name = "Pumpking";
                this.width = 100;
                this.height = 100;
                this.aiStyle = 58;
                this.damage = 50;
                this.defense = 36;
                this.lifeMax = 22000;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.value = 50000f;
                this.knockBackResist = 0.0f;
                flag = true;
            }
            else if (this.type == 328)
            {
                this.name = "Pumpking";
                this.width = 80;
                this.height = 80;
                this.aiStyle = 59;
                this.damage = 65;
                this.defense = 14;
                this.lifeMax = 5000;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                flag = true;
                this.dontTakeDamage = true;
                this.npcSlots = 0.0f;
            }
            else if (this.type == 329)
            {
                this.name = "Hellhound";
                this.width = 46;
                this.height = 30;
                this.aiStyle = 26;
                this.damage = 80;
                this.defense = 38;
                this.lifeMax = 1200;
                this.soundHit = 1;
                this.soundKilled = 5;
                this.knockBackResist = 0.3f;
                this.value = 3000f;
                flag = true;
            }
            else if (this.type == 330)
            {
                this.noGravity = true;
                this.noTileCollide = true;
                this.name = "Poltergeist";
                this.width = 24;
                this.height = 44;
                this.aiStyle = 22;
                this.damage = 90;
                this.defense = 44;
                this.lifeMax = 2000;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.alpha = 100;
                this.value = 4500f;
                flag = true;
                this.knockBackResist = 0.4f;
            }
            else if (this.type == 331)
            {
                this.name = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 14;
                this.defense = 6;
                this.lifeMax = 45;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 60f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 332)
            {
                this.name = "Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 14;
                this.defense = 6;
                this.lifeMax = 45;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 60f;
                this.buffImmune[31] = false;
            }
            if (this.type == 333)
            {
                this.name = "Slime";
                this.width = 24;
                this.height = 18;
                this.aiStyle = 1;
                this.damage = 7;
                this.defense = 2;
                this.lifeMax = 25;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 25f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            if (this.type == 334)
            {
                this.name = "Slime";
                this.width = 24;
                this.height = 18;
                this.aiStyle = 1;
                this.damage = 6;
                this.defense = 2;
                this.lifeMax = 23;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.scale = 0.9f;
                this.value = 25f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            if (this.type == 335)
            {
                this.name = "Slime";
                this.width = 24;
                this.height = 18;
                this.aiStyle = 1;
                this.damage = 8;
                this.defense = 3;
                this.lifeMax = 29;
                this.scale = 1.05f;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 25f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            if (this.type == 336)
            {
                this.name = "Slime";
                this.width = 24;
                this.height = 18;
                this.aiStyle = 1;
                this.damage = 5;
                this.defense = 1;
                this.lifeMax = 22;
                this.scale = 0.85f;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 25f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type >= 338 && this.type <= 340)
            {
                this.name = "Zombie Elf";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 1200f;
                this.buffImmune[31] = false;
                this.npcSlots = 0.5f;
                if (this.type == 338)
                {
                    this.damage = 65;
                    this.defense = 18;
                    this.lifeMax = 600;
                    this.knockBackResist = 0.4f;
                }
                else if (this.type == 339)
                {
                    this.damage = 52;
                    this.defense = 24;
                    this.lifeMax = 700;
                    this.knockBackResist = 0.2f;
                    this.scale = 1.05f;
                }
                else if (this.type == 340)
                {
                    this.damage = 78;
                    this.defense = 14;
                    this.lifeMax = 500;
                    this.knockBackResist = 0.25f;
                    this.scale = 0.9f;
                }
            }
            else if (this.type == 341)
            {
                this.name = "Present Mimic";
                this.width = 24;
                this.height = 24;
                this.aiStyle = 25;
                this.damage = 100;
                this.defense = 32;
                this.lifeMax = 900;
                this.soundHit = 4;
                this.soundKilled = 6;
                this.value = (float)Item.buyPrice(0, 0, 20, 0);
                this.knockBackResist = 0.25f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
            }
            else if (this.type == 342)
            {
                this.name = "Gingerbread Man";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 90;
                this.defense = 26;
                this.lifeMax = 750;
                this.soundHit = 7;
                this.soundKilled = 6;
                this.knockBackResist = 0.2f;
                this.value = 1800f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 343)
            {
                this.name = "Yeti";
                this.width = 38;
                this.height = 78;
                this.aiStyle = 3;
                this.damage = 140;
                this.defense = 50;
                this.lifeMax = 3500;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.0f;
                this.value = 3000f;
                this.buffImmune[31] = false;
                this.npcSlots = 2f;
            }
            else if (this.type == 344)
            {
                this.name = "Everscream";
                this.width = 172;
                this.height = 130;
                this.aiStyle = 57;
                this.damage = 110;
                this.defense = 38;
                this.lifeMax = 13000;
                this.soundHit = 7;
                this.soundKilled = 5;
                this.knockBackResist = 0.0f;
                this.value = 10000f;
                this.buffImmune[20] = true;
                this.npcSlots = 3f;
            }
            else if (this.type == 345)
            {
                this.name = "Ice Queen";
                this.width = 130;
                this.height = 140;
                this.aiStyle = 60;
                this.damage = 120;
                this.defense = 38;
                this.lifeMax = 34000;
                this.soundHit = 7;
                this.soundKilled = 5;
                this.knockBackResist = 0.0f;
                this.value = 10000f;
                this.buffImmune[20] = true;
                this.noTileCollide = true;
                this.noGravity = true;
                this.npcSlots = 5f;
                this.coldDamage = true;
            }
            else if (this.type == 346)
            {
                this.name = "Santa-NK1";
                this.width = 112;
                this.height = 140;
                this.aiStyle = 61;
                this.damage = 120;
                this.defense = 56;
                this.lifeMax = 18000;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.knockBackResist = 0.0f;
                this.value = 10000f;
                this.buffImmune[20] = true;
                this.npcSlots = 4f;
            }
            else if (this.type == 347)
            {
                this.name = "Elf Copter";
                this.width = 50;
                this.height = 50;
                this.aiStyle = 62;
                this.damage = 60;
                this.defense = 28;
                this.lifeMax = 1200;
                this.soundHit = 4;
                this.knockBackResist = 0.4f;
                this.soundKilled = 14;
                this.value = 1000f;
                this.noTileCollide = true;
                this.noGravity = true;
                this.npcSlots = 1.5f;
            }
            else if (this.type == 348)
            {
                this.name = "Nutcracker";
                this.width = 28;
                this.height = 76;
                this.aiStyle = 3;
                this.damage = 80;
                this.defense = 26;
                this.lifeMax = 1800;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.4f;
                this.value = 1500f;
                this.buffImmune[31] = false;
                this.npcSlots = 1.5f;
            }
            else if (this.type == 349)
            {
                this.name = "Nutcracker";
                this.width = 28;
                this.height = 76;
                this.aiStyle = 3;
                this.damage = 100;
                this.defense = 42;
                this.lifeMax = 1800;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.1f;
                this.value = 1500f;
                this.buffImmune[31] = false;
                this.npcSlots = 1.5f;
            }
            else if (this.type == 350)
            {
                this.name = "Elf Archer";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 70;
                this.defense = 30;
                this.lifeMax = 900;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.45f;
                this.value = 900f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 351)
            {
                this.name = "Krampus";
                this.width = 18;
                this.height = 90;
                this.aiStyle = 3;
                this.damage = 100;
                this.defense = 40;
                this.lifeMax = 2500;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.1f;
                this.value = 3000f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
                this.npcSlots = 1.75f;
            }
            else if (this.type == 352)
            {
                this.name = "Flocko";
                this.width = 54;
                this.height = 54;
                this.aiStyle = 63;
                this.damage = 75;
                this.defense = 8;
                this.lifeMax = 450;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.value = 500f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.knockBackResist = 0.4f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.npcSlots = 2f;
                this.coldDamage = true;
            }
            else if (this.type == 353)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Stylist";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 354)
            {
                this.friendly = true;
                this.name = "Webbed Stylist";
                this.width = 18;
                this.height = 34;
                this.aiStyle = 0;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.scale = 0.9f;
                this.rarity = 1;
            }
            else if (this.type == 355)
            {
                this.name = "Firefly";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 64;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.npcSlots = 0.2f;
                this.noGravity = true;
                this.catchItem = (short)1992;
            }
            else if (this.type == 356)
            {
                this.name = "Butterfly";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 65;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.npcSlots = 0.25f;
                this.noGravity = true;
                this.catchItem = (short)1994;
            }
            else if (this.type == 357)
            {
                this.name = "Worm";
                this.width = 10;
                this.height = 4;
                this.aiStyle = 66;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.npcSlots = 0.1f;
                this.catchItem = (short)2002;
                this.friendly = true;
            }
            else if (this.type == 358)
            {
                this.name = "Lightning Bug";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 64;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.npcSlots = 0.2f;
                this.noGravity = true;
                this.catchItem = (short)2004;
            }
            else if (this.type == 359)
            {
                this.name = "Snail";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 67;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.npcSlots = 0.5f;
                this.noGravity = true;
                this.catchItem = (short)2006;
            }
            else if (this.type == 360)
            {
                this.name = "Glowing Snail";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 67;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.npcSlots = 0.5f;
                this.noGravity = true;
                this.catchItem = (short)2007;
            }
            else if (this.type == 361)
            {
                this.name = "Frog";
                this.width = 18;
                this.height = 20;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.catchItem = (short)2121;
            }
            else if (this.type == 362)
            {
                this.name = "Duck";
                this.width = 22;
                this.height = 26;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.catchItem = (short)2122;
            }
            else if (this.type == 363)
            {
                this.name = "Duck";
                this.width = 28;
                this.height = 22;
                this.aiStyle = 68;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.catchItem = (short)2122;
            }
            else if (this.type == 364)
            {
                this.name = "Duck";
                this.width = 22;
                this.height = 26;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.catchItem = (short)2123;
            }
            else if (this.type == 365)
            {
                this.name = "Duck";
                this.width = 28;
                this.height = 22;
                this.aiStyle = 68;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.catchItem = (short)2123;
            }
            else if (this.type == 366 || this.type == 367)
            {
                this.name = "Scorpion";
                this.width = 26;
                this.height = 18;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.catchItem = (short)(2156 + this.type - 366);
            }
            else if (this.type == 368)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Travelling Merchant";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 369)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Angler";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 370)
            {
                this.name = "Duke Fishron";
                this.width = 150;
                this.height = 100;
                this.aiStyle = 69;
                this.damage = 100;
                this.defense = 50;
                this.lifeMax = 50000;
                this.knockBackResist = 0.0f;
                this.noTileCollide = true;
                this.noGravity = true;
                this.npcSlots = 10f;
                this.soundHit = 14;
                this.soundKilled = 20;
                this.value = 10000f;
                this.boss = true;
                this.netAlways = true;
                this.timeLeft = NPC.activeTime * 30;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[31] = true;
                this.buffImmune[44] = true;
            }
            else if (this.type == 371)
            {
                this.name = "Detonating Bubble";
                this.width = 36;
                this.height = 36;
                this.aiStyle = 70;
                this.damage = 100;
                this.defense = 0;
                this.lifeMax = 1;
                this.soundHit = 3;
                this.soundKilled = 3;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 372)
            {
                this.noGravity = true;
                this.name = "Sharkron";
                this.width = 120;
                this.height = 24;
                this.aiStyle = 71;
                this.damage = 100;
                this.defense = 100;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.0f;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 373)
            {
                this.noGravity = true;
                this.name = "Sharkron2";
                this.displayName = "Sharkron";
                this.width = 100;
                this.height = 24;
                this.aiStyle = 71;
                this.damage = 120;
                this.defense = 100;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.0f;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 374)
            {
                this.name = "Truffle Worm";
                this.width = 20;
                this.height = 10;
                this.aiStyle = 66;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.npcSlots = 0.15f;
                this.catchItem = (short)2673;
                this.rarity = 4;
            }
            else if (this.type == 375)
            {
                this.displayName = "Truffle Worm";
                this.name = "Truffle Worm Digger";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 6;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.npcSlots = 0.15f;
                this.catchItem = (short)2673;
            }
            else if (this.type == 376)
            {
                this.friendly = true;
                this.name = "Sleeping Angler";
                this.width = 34;
                this.height = 8;
                this.aiStyle = 0;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.5f;
                this.scale = 0.9f;
            }
            else if (this.type == 377)
            {
                this.name = "Grasshopper";
                this.width = 14;
                this.height = 12;
                this.aiStyle = 1;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.friendly = true;
                this.catchItem = (short)2740;
                this.npcSlots = 0.1f;
            }
            else if (this.type == 378)
            {
                this.npcSlots = 1f;
                this.name = "Chattering Teeth Bomb";
                this.width = 20;
                this.height = 26;
                this.aiStyle = 41;
                this.damage = 80;
                this.defense = 30;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.value = 450f;
            }
            else if (this.type >= 379 && this.type <= 380)
            {
                this.name = "Lunatic Cultist Archer";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 45;
                this.defense = 14;
                this.lifeMax = 210;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.55f;
                this.value = 1000f;
                this.npcSlots = 0.0f;
                this.lavaImmune = true;
                this.netAlways = true;
                this.chaseable = false;
            }
            else if (this.type >= 381 && this.type <= 382)
            {
                this.name = "Martian Ranger";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 50;
                this.defense = 25;
                this.lifeMax = 350;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.35f;
                this.value = 1000f;
            }
            else if (this.type == 383)
            {
                this.name = "Martian Officer";
                this.lifeMax = 300;
                this.defense = 50;
                this.damage = 75;
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.soundHit = 43;
                this.soundKilled = 45;
                this.value = 1200f;
                this.knockBackResist = 0.25f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 384)
            {
                this.name = "Bubble Shield";
                this.lifeMax = 1000;
                this.width = 18;
                this.defense = 20;
                this.height = 40;
                this.aiStyle = 72;
                this.soundHit = 1;
                this.soundKilled = 1;
                flag = true;
                this.npcSlots = 0.0f;
                this.noTileCollide = true;
                this.canGhostHeal = false;
            }
            else if (this.type == 385)
            {
                this.name = "Martian Grunty";
                this.lifeMax = 750;
                this.defense = 30;
                this.damage = 80;
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.soundHit = 43;
                this.soundKilled = 45;
                this.value = 600f;
                this.knockBackResist = 0.0f;
                this.npcSlots = 0.75f;
            }
            else if (this.type == 386)
            {
                this.name = "Martian Engineer";
                this.lifeMax = 400;
                this.defense = 34;
                this.damage = 40;
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.soundHit = 43;
                this.soundKilled = 45;
                this.value = 1200f;
                this.knockBackResist = 0.4f;
            }
            else if (this.type == 387)
            {
                this.name = "Tesla Turret";
                this.width = 20;
                this.height = 50;
                this.aiStyle = 73;
                this.damage = 10;
                this.defense = 40;
                this.lifeMax = 200;
                this.soundHit = 53;
                this.soundKilled = 56;
                this.knockBackResist = 0.0f;
                this.buffImmune[31] = true;
                this.canGhostHeal = false;
            }
            else if (this.type == 388)
            {
                this.name = "Martian Drone";
                this.width = 40;
                this.height = 30;
                this.aiStyle = 74;
                this.damage = 60;
                this.defense = 16;
                this.lifeMax = 300;
                this.soundHit = 42;
                this.knockBackResist = 0.4f;
                this.soundKilled = 44;
                this.value = 1000f;
                this.noTileCollide = true;
                this.noGravity = true;
                this.npcSlots = 1.5f;
                this.canGhostHeal = false;
            }
            else if (this.type == 389)
            {
                this.name = "Gigazapper";
                this.lifeMax = 600;
                this.defense = 38;
                this.damage = 75;
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.soundHit = 39;
                this.soundKilled = 57;
                this.value = 1200f;
                this.npcSlots = 0.5f;
                this.knockBackResist = 0.3f;
            }
            else if (this.type == 390)
            {
                this.name = "Scutlix Gunner";
                this.damage = 65;
                this.defense = 30;
                this.lifeMax = 350;
                this.width = 18;
                this.height = 40;
                this.aiStyle = 75;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 1200f;
                this.npcSlots = 0.5f;
            }
            else if (this.type == 391)
            {
                this.name = "Scutlix";
                this.lifeMax = 600;
                this.defense = 30;
                this.damage = 85;
                this.width = 60;
                this.height = 40;
                this.aiStyle = 3;
                this.soundHit = 51;
                this.soundKilled = 54;
                this.value = 1200f;
                this.npcSlots = 0.5f;
                this.knockBackResist = 0.1f;
            }
            else if (this.type == 392)
            {
                this.name = "Martian Saucer";
                this.lifeMax = 100;
                this.defense = 100;
                this.damage = 50;
                this.width = 150;
                this.height = 80;
                this.aiStyle = 75;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.value = 0.0f;
                this.npcSlots = 0.0f;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.dontTakeDamage = true;
                flag = true;
            }
            else if (this.type == 393)
            {
                this.name = "Saucer Turret";
                this.lifeMax = 5000;
                this.defense = 20;
                this.damage = 60;
                this.width = 40;
                this.height = 16;
                this.aiStyle = 75;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.value = 0.0f;
                this.npcSlots = 1f;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                flag = true;
            }
            else if (this.type == 394)
            {
                this.name = "Saucer Cannon";
                this.lifeMax = 3500;
                this.defense = 20;
                this.damage = 60;
                this.width = 46;
                this.height = 36;
                this.aiStyle = 75;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.value = 0.0f;
                this.npcSlots = 1f;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                flag = true;
            }
            else if (this.type == 395)
            {
                this.name = "Saucer Core";
                this.lifeMax = 10000;
                this.defense = 0;
                this.damage = 80;
                this.width = 46;
                this.height = 36;
                this.aiStyle = 76;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.value = 0.0f;
                this.npcSlots = 6f;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.dontTakeDamage = true;
                this.boss = true;
                flag = true;
            }
            else if (this.type == 399)
            {
                this.name = "Martian Probe";
                this.defense = 5;
                this.damage = 5;
                this.lifeMax = 500;
                this.aiStyle = 80;
                this.width = 42;
                this.height = 72;
                this.value = 0.0f;
                this.knockBackResist = 0.0f;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.npcSlots = 0.0f;
                this.noGravity = true;
                this.timeLeft = NPC.activeTime * 30;
                this.chaseable = false;
            }
            else if (this.type == 396)
            {
                this.name = "Moon Lord Head";
                this.lifeMax = 45000;
                this.defense = 50;
                this.damage = 0;
                this.width = 38;
                this.height = 56;
                this.aiStyle = 79;
                this.soundHit = 57;
                this.soundKilled = 62;
                this.value = 0.0f;
                this.npcSlots = 6f;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.boss = true;
                this.hide = true;
            }
            else if (this.type == 397)
            {
                this.name = "Moon Lord Hand";
                this.lifeMax = 25000;
                this.defense = 40;
                this.damage = 0;
                this.width = 46;
                this.height = 66;
                this.aiStyle = 78;
                this.soundHit = 57;
                this.soundKilled = 62;
                this.value = 0.0f;
                this.npcSlots = 6f;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.boss = true;
                this.hide = true;
            }
            else if (this.type == 398)
            {
                this.name = "Moon Lord Core";
                this.lifeMax = 50000;
                this.defense = 70;
                this.damage = 0;
                this.width = 46;
                this.height = 66;
                this.aiStyle = 77;
                this.soundHit = 57;
                this.soundKilled = 0;
                this.value = 0.0f;
                this.npcSlots = 6f;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.dontTakeDamage = true;
                this.boss = true;
                this.behindTiles = true;
                this.hide = true;
            }
            else if (this.type == 400)
            {
                this.name = "True Eye of Cthulhu";
                this.defense = 0;
                this.damage = 60;
                this.lifeMax = 100;
                this.aiStyle = 81;
                this.width = 60;
                this.height = 60;
                this.value = 0.0f;
                this.knockBackResist = 0.0f;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.npcSlots = 0.0f;
                this.noGravity = true;
                this.dontTakeDamage = true;
                this.noTileCollide = true;
            }
            else if (this.type == 401)
            {
                this.name = "Moon Leech Clot";
                this.lifeMax = 400;
                this.defense = 0;
                this.damage = 0;
                this.width = 30;
                this.height = 30;
                this.aiStyle = 82;
                this.soundHit = 57;
                this.soundKilled = 62;
                this.value = 0.0f;
                this.npcSlots = 0.0f;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.hide = true;
            }
            else if (this.type == 437)
            {
                this.name = "Lunar Tablet";
                this.lifeMax = 400;
                this.defense = 0;
                this.damage = 0;
                this.width = 54;
                this.height = 54;
                this.aiStyle = 83;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.value = 0.0f;
                this.npcSlots = 0.0f;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.dontTakeDamage = true;
                this.netAlways = true;
            }
            else if (this.type == 438)
            {
                this.name = "Lunar Devote";
                this.lifeMax = 400;
                this.defense = 0;
                this.damage = 0;
                this.width = 22;
                this.height = 40;
                this.aiStyle = 83;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 0.0f;
                this.npcSlots = 0.0f;
                this.knockBackResist = 0.0f;
                this.lavaImmune = true;
                this.netAlways = true;
                this.chaseable = false;
            }
            else if (this.type == 439)
            {
                this.name = "Ancient Cultist";
                this.width = 24;
                this.height = 50;
                this.aiStyle = 84;
                this.damage = 50;
                this.defense = 42;
                this.lifeMax = 32000;
                this.knockBackResist = 0.0f;
                this.noTileCollide = true;
                this.noGravity = true;
                this.npcSlots = 10f;
                this.soundHit = 55;
                this.soundKilled = 59;
                this.value = 10000f;
                this.boss = true;
                this.netAlways = true;
                this.timeLeft = NPC.activeTime * 30;
                flag = true;
            }
            else if (this.type == 440)
            {
                this.name = "Ancient Cultist";
                this.width = 24;
                this.height = 50;
                this.aiStyle = 84;
                this.damage = 0;
                this.defense = 35;
                this.lifeMax = 10000;
                this.knockBackResist = 0.0f;
                this.noTileCollide = true;
                this.noGravity = true;
                this.npcSlots = 0.0f;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.netAlways = true;
                this.timeLeft = NPC.activeTime * 30;
                flag = true;
                this.chaseable = false;
            }
            else if (this.type == 442)
            {
                this.name = "Gold Bird";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 24;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                this.catchItem = (short)2889;
                this.npcSlots = 0.4f;
                this.rarity = 3;
            }
            else if (this.type == 443)
            {
                this.name = "Gold Bunny";
                this.width = 18;
                this.height = 20;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.catchItem = (short)2890;
                this.rarity = 3;
            }
            else if (this.type == 444)
            {
                this.name = "Gold Butterfly";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 65;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.npcSlots = 0.25f;
                this.noGravity = true;
                this.catchItem = (short)2891;
                this.rarity = 3;
            }
            else if (this.type == 445)
            {
                this.name = "Gold Frog";
                this.width = 18;
                this.height = 20;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.catchItem = (short)2892;
                this.rarity = 3;
            }
            else if (this.type == 446)
            {
                this.name = "Gold Grasshopper";
                this.width = 14;
                this.height = 12;
                this.aiStyle = 1;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.friendly = true;
                this.catchItem = (short)2893;
                this.npcSlots = 0.1f;
                this.rarity = 3;
            }
            else if (this.type == 447)
            {
                this.name = "Gold Mouse";
                this.width = 14;
                this.height = 12;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 4;
                this.npcSlots = 0.25f;
                this.catchItem = (short)2894;
                this.rarity = 3;
            }
            else if (this.type == 448)
            {
                this.name = "Gold Worm";
                this.width = 10;
                this.height = 4;
                this.aiStyle = 66;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.npcSlots = 0.1f;
                this.catchItem = (short)2895;
                this.friendly = true;
                this.rarity = 3;
            }
            else if (this.type == 449)
            {
                this.name = "Skeleton";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 8;
                this.lifeMax = 60;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 100f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 450)
            {
                this.name = "Headache Skeleton";
                this.displayName = "Skeleton";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 12;
                this.lifeMax = 55;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 130f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 451)
            {
                this.name = "Misassembled Skeleton";
                this.displayName = "Skeleton";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 18;
                this.defense = 8;
                this.lifeMax = 65;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 120f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 452)
            {
                this.name = "Pantless Skeleton";
                this.displayName = "Skeleton";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 22;
                this.defense = 8;
                this.lifeMax = 60;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 110f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 453)
            {
                this.friendly = true;
                this.name = "Skeleton Merchant";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 30;
                this.lifeMax = 250;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.npcSlots = 7f;
            }
            else if (this.type == 454)
            {
                this.displayName = "Phantasm Dragon";
                this.noTileCollide = true;
                this.npcSlots = 5f;
                this.name = "Phantasm Dragon Head";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 80;
                this.defense = 10;
                this.lifeMax = 4000;
                this.soundHit = 56;
                this.soundKilled = 60;
                this.noGravity = true;
                this.knockBackResist = 0.0f;
                this.value = 0.0f;
                this.scale = 1f;
                flag = true;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 459)
            {
                this.displayName = "Phantasm Dragon";
                this.noTileCollide = true;
                this.name = "Phantasm Dragon Tail";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 4000;
                this.soundHit = 56;
                this.soundKilled = 60;
                this.noGravity = true;
                this.knockBackResist = 0.0f;
                this.value = 0.0f;
                this.scale = 1f;
                flag = true;
                this.alpha = (int)byte.MaxValue;
                this.dontCountMe = true;
            }
            else if (this.type == 455 || this.type == 456 || (this.type == 457 || this.type == 458))
            {
                this.displayName = "Phantasm Dragon";
                this.noTileCollide = true;
                this.name = "Phantasm Dragon Body";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 4000;
                this.soundHit = 56;
                this.soundKilled = 60;
                this.noGravity = true;
                this.knockBackResist = 0.0f;
                this.value = 0.0f;
                this.scale = 1f;
                flag = true;
                this.alpha = (int)byte.MaxValue;
                this.dontCountMe = true;
            }
            else if (this.type == 464)
            {
                this.name = "Crimson Bunny";
                this.width = 18;
                this.height = 20;
                this.aiStyle = 3;
                this.damage = 21;
                this.defense = 5;
                this.lifeMax = 75;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 500f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 465)
            {
                this.noGravity = true;
                this.name = "Crimson Goldfish";
                this.width = 18;
                this.height = 20;
                this.aiStyle = 16;
                this.damage = 31;
                this.defense = 7;
                this.lifeMax = 110;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 500f;
            }
            else if (this.type == 470)
            {
                this.name = "Crimtane Penguin";
                this.width = 16;
                this.height = 34;
                this.aiStyle = 3;
                this.damage = 21;
                this.defense = 5;
                this.lifeMax = 75;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 500f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 473 || this.type == 474 || (this.type == 475 || this.type == 476))
            {
                this.name = "Big Mimic";
                this.width = 28;
                this.height = 44;
                this.aiStyle = 87;
                this.damage = 90;
                this.defense = 34;
                this.lifeMax = 3500;
                this.soundHit = 4;
                this.soundKilled = 6;
                this.value = 30000f;
                this.knockBackResist = 0.1f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.rarity = 2;
            }
            else if (this.type == 480)
            {
                this.name = "Medusa";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 30;
                this.defense = 10;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.15f;
                this.value = 1000f;
            }
            else if (this.type == 481)
            {
                this.name = "Hoplite";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 24;
                this.defense = 12;
                this.lifeMax = 80;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.4f;
                this.value = 300f;
                this.buffImmune[31] = false;
                this.buffImmune[20] = true;
            }
            else if (this.type == 482)
            {
                this.name = "Grolem";
                this.width = 28;
                this.height = 48;
                this.aiStyle = 3;
                this.damage = 30;
                this.defense = 18;
                this.lifeMax = 110;
                this.soundHit = 41;
                this.soundKilled = 44;
                this.knockBackResist = 0.35f;
                this.value = 500f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
            }
            else if (this.type == 483)
            {
                this.npcSlots = 0.5f;
                this.name = "Grelimental";
                this.width = 20;
                this.height = 30;
                this.aiStyle = 91;
                this.damage = 28;
                this.defense = 16;
                this.lifeMax = 50;
                this.soundHit = 7;
                this.knockBackResist = 0.6f;
                this.soundKilled = 6;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
            }
            else if (this.type >= 484 && this.type <= 487)
            {
                this.name = "Grub";
                this.width = 10;
                this.height = 4;
                this.aiStyle = 66;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.npcSlots = 0.1f;
                this.catchItem = (short)(3191 + this.type - 484);
                this.friendly = true;
            }
            else if (this.type == 488)
            {
                this.name = "Target Dummy";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 92;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 1000;
                this.soundHit = 15;
                this.soundKilled = 2;
                this.knockBackResist = 0.0f;
                this.value = 0.0f;
                this.immortal = true;
            }
            else if (this.type == 489)
            {
                this.name = "Blood Zombie";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 8;
                this.lifeMax = 75;
                this.soundHit = 18;
                this.soundKilled = 21;
                this.knockBackResist = 0.4f;
                this.value = 150f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 490)
            {
                this.noGravity = true;
                this.name = "Drippler";
                this.width = 28;
                this.height = 30;
                this.aiStyle = 22;
                this.damage = 28;
                this.defense = 14;
                this.lifeMax = 50;
                this.soundHit = 19;
                this.knockBackResist = 0.6f;
                this.soundKilled = 22;
                this.value = 150f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 491)
            {
                this.noGravity = true;
                this.name = "Flying Dutchman";
                this.width = 350;
                this.height = 120;
                this.aiStyle = 93;
                this.damage = 0;
                this.defense = 100;
                this.lifeMax = 50;
                this.soundHit = 19;
                this.knockBackResist = 0.0f;
                this.soundKilled = 22;
                this.value = 0.0f;
                flag = true;
                this.dontTakeDamage = true;
            }
            else if (this.type == 492)
            {
                this.name = "Dutchman Cannon";
                this.lifeMax = 2000;
                this.defense = 20;
                this.damage = 30;
                this.width = 30;
                this.height = 30;
                this.aiStyle = 75;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.value = 0.0f;
                this.npcSlots = 1f;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                flag = true;
                this.hide = true;
            }
            else if (this.type >= 494 && this.type <= 495)
            {
                this.name = "Crawdad";
                this.width = 28;
                this.height = 22;
                this.aiStyle = 3;
                this.damage = 28;
                this.defense = 6;
                this.lifeMax = 50;
                this.soundHit = 33;
                this.soundKilled = 36;
                this.value = 120f;
            }
            else if (this.type >= 496 && this.type <= 497)
            {
                this.name = "Giant Shelly";
                this.width = 28;
                this.height = 22;
                this.aiStyle = 39;
                this.damage = 16;
                this.defense = 12;
                this.lifeMax = 50;
                this.soundHit = 38;
                this.soundKilled = 41;
                this.knockBackResist = 0.75f;
                this.value = 120f;
            }
            else if (this.type >= 498 && this.type <= 506)
            {
                this.name = "Salamander";
                this.width = 24;
                this.height = 44;
                this.aiStyle = 3;
                this.damage = 18;
                this.defense = 10;
                this.lifeMax = 65;
                this.soundHit = 50;
                this.soundKilled = 53;
                this.knockBackResist = 0.45f;
                this.value = 120f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 441)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Tax Collector";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 513)
            {
                this.displayName = "Tomb Crawler";
                this.npcSlots = 4f;
                this.name = "Tomb Crawler Head";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 6;
                this.damage = 34;
                this.defense = 0;
                this.lifeMax = 80;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 140f;
            }
            else if (this.type == 514)
            {
                this.displayName = "Tomb Crawler";
                this.name = "Tomb Crawler Body";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 18;
                this.defense = 12;
                this.lifeMax = 80;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 140f;
                this.dontCountMe = true;
                this.npcSlots = 0.0f;
            }
            else if (this.type == 515)
            {
                this.displayName = "Tomb Crawler";
                this.name = "Tomb Crawler Tail";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 16;
                this.defense = 20;
                this.lifeMax = 80;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 140f;
                this.dontCountMe = true;
                this.npcSlots = 0.0f;
            }
            else if (this.type == 510)
            {
                this.displayName = "Dune Splicer";
                this.npcSlots = 5f;
                this.name = "Dune Splicer Head";
                this.width = 34;
                this.height = 34;
                this.aiStyle = 6;
                this.damage = 58;
                this.defense = 0;
                this.lifeMax = 400;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 700f;
            }
            else if (this.type == 511)
            {
                this.displayName = "Dune Splicer";
                this.name = "Dune Splicer Body";
                this.width = 34;
                this.height = 34;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 54;
                this.defense = 20;
                this.lifeMax = 400;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 700f;
                this.dontCountMe = true;
                this.npcSlots = 0.0f;
            }
            else if (this.type == 512)
            {
                this.displayName = "Dune Splicer";
                this.name = "Dune Splicer Tail";
                this.width = 34;
                this.height = 34;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 50;
                this.defense = 30;
                this.lifeMax = 400;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.behindTiles = true;
                this.value = 700f;
                this.dontCountMe = true;
                this.npcSlots = 0.0f;
            }
            else if (this.type == 508)
            {
                this.name = "Antlion Charger";
                this.width = 33;
                this.height = 31;
                this.aiStyle = 3;
                this.damage = 24;
                this.defense = 16;
                this.lifeMax = 70;
                this.soundHit = 31;
                this.soundKilled = 34;
                this.knockBackResist = 0.2f;
                this.value = 80f;
                this.buffImmune[31] = false;
                this.npcSlots = 0.8f;
            }
            else if (this.type == 509)
            {
                this.name = "Antlion Swarmer";
                this.width = 40;
                this.height = 31;
                this.aiStyle = 44;
                this.damage = 30;
                this.defense = 12;
                this.lifeMax = 50;
                this.knockBackResist = 0.6f;
                this.soundHit = 32;
                this.soundKilled = 35;
                this.value = 90f;
                this.buffImmune[31] = false;
                this.npcSlots = 0.8f;
            }
            else if (this.type >= 524 && this.type <= 527)
            {
                this.name = "Ghoul";
                this.width = 24;
                this.height = 44;
                this.aiStyle = 3;
                this.damage = 50;
                this.defense = 26;
                this.lifeMax = 180;
                this.soundHit = 37;
                this.soundKilled = 40;
                this.knockBackResist = 0.6f;
                this.value = 500f;
                this.buffImmune[31] = false;
                this.npcSlots = 0.5f;
                switch (this.type)
                {
                    case 525:
                        this.lifeMax += 70;
                        this.defense += 4;
                        this.damage += 10;
                        this.knockBackResist -= 0.1f;
                        this.value += 150f;
                        break;
                    case 526:
                        this.lifeMax += 40;
                        this.defense += 6;
                        this.damage += 14;
                        this.knockBackResist -= 0.1f;
                        this.value += 150f;
                        break;
                    case 527:
                        this.lifeMax += 120;
                        this.defense += 6;
                        this.damage += 4;
                        this.knockBackResist -= 0.2f;
                        this.value += 250f;
                        break;
                }
            }
            else if (this.type >= 528 && this.type <= 529)
            {
                this.name = "Lamia";
                this.width = 24;
                this.height = 44;
                this.aiStyle = 3;
                this.damage = 52;
                this.defense = 28;
                this.lifeMax = 350;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.35f;
                this.value = 600f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 530)
            {
                this.name = "Ravager Scorpion";
                this.width = 50;
                this.height = 20;
                this.aiStyle = 3;
                this.damage = 66;
                this.defense = 24;
                this.lifeMax = 320;
                this.soundHit = 13;
                this.soundKilled = 19;
                this.knockBackResist = 0.5f;
                this.value = 600f;
                this.timeLeft = NPC.activeTime * 2;
                this.buffImmune[20] = true;
                this.buffImmune[70] = true;
            }
            else if (this.type == 531)
            {
                this.noGravity = true;
                this.name = "Ravager Scorpion";
                this.width = 50;
                this.height = 20;
                this.aiStyle = 40;
                this.damage = 66;
                this.defense = 24;
                this.lifeMax = 320;
                this.soundHit = 13;
                this.soundKilled = 19;
                this.knockBackResist = 0.5f;
                this.value = 600f;
                this.timeLeft = NPC.activeTime * 2;
                this.buffImmune[20] = true;
                this.buffImmune[70] = true;
            }
            else if (this.type == 532)
            {
                this.name = "Basilisk";
                this.width = 32;
                this.height = 31;
                this.aiStyle = 3;
                this.damage = 65;
                this.defense = 34;
                this.lifeMax = 270;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.3f;
                this.value = 800f;
                this.buffImmune[31] = false;
                this.npcSlots = 0.75f;
            }
            else if (this.type == 533)
            {
                this.name = "Desert Spirit";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 220;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.0f;
                this.value = 1200f;
                this.npcSlots = 2f;
                flag = true;
            }
            else if (this.type == 493)
            {
                this.name = "Stardust Tower";
                this.lifeMax = 20000;
                this.defense = 20;
                this.damage = 0;
                this.width = 130;
                this.height = 270;
                this.aiStyle = 94;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 0.0f;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                flag = true;
                this.npcSlots = 0.0f;
            }
            else if (this.type == 402)
            {
                this.displayName = "Milkyway Weaver";
                this.noTileCollide = true;
                this.npcSlots = 1f;
                this.name = "Milkyway Weaver";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 80;
                this.defense = 10;
                this.lifeMax = 1200;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.knockBackResist = 0.0f;
                this.value = 0.0f;
                this.scale = 1f;
                flag = true;
            }
            else if (this.type == 405)
            {
                this.name = "Star Cell";
                this.width = 44;
                this.height = 44;
                this.aiStyle = 85;
                this.damage = 120;
                this.defense = 50;
                this.lifeMax = 300;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.noGravity = true;
                this.buffImmune[31] = true;
                this.npcSlots = 2f;
            }
            else if (this.type == 406)
            {
                this.name = "Star Cell";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 95;
                this.damage = 70;
                this.defense = 0;
                this.lifeMax = 300;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.4f;
                this.noGravity = true;
                this.buffImmune[31] = true;
            }
            else if (this.type == 411)
            {
                this.name = "Stardust Soldier";
                this.width = 22;
                this.height = 56;
                this.aiStyle = 3;
                this.damage = 80;
                this.defense = 34;
                this.lifeMax = 700;
                this.soundHit = 6;
                this.soundKilled = 1;
                this.knockBackResist = 0.4f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 409)
            {
                this.name = "Twinkle Popper";
                this.width = 34;
                this.height = 42;
                this.aiStyle = 3;
                this.damage = 70;
                this.defense = 40;
                this.lifeMax = 800;
                this.soundHit = 6;
                this.soundKilled = 1;
                this.knockBackResist = 0.4f;
                this.buffImmune[31] = false;
                this.npcSlots = 3f;
            }
            else if (this.type == 410)
            {
                this.name = "Twinkle";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 26;
                this.damage = 80;
                this.defense = 10;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 5;
                this.knockBackResist = 0.3f;
                this.buffImmune[31] = false;
                this.npcSlots = 0.5f;
            }
            else if (this.type == 407)
            {
                this.name = "Flow Invader";
                this.width = 40;
                this.height = 60;
                this.aiStyle = 96;
                this.damage = 70;
                this.defense = 38;
                this.lifeMax = 1500;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.knockBackResist = 0.03f;
                this.buffImmune[31] = true;
                this.npcSlots = 3f;
            }
            else if (this.type == 507)
            {
                this.name = "Nebula Tower";
                this.lifeMax = 20000;
                this.defense = 20;
                this.damage = 0;
                this.width = 130;
                this.height = 270;
                this.aiStyle = 94;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 0.0f;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                flag = true;
                this.npcSlots = 0.0f;
            }
            else if (this.type == 423)
            {
                this.name = "Nebula Beast";
                this.width = 50;
                this.height = 44;
                this.aiStyle = 26;
                this.damage = 90;
                this.defense = 46;
                this.lifeMax = 850;
                this.soundHit = 6;
                this.soundKilled = 1;
                this.knockBackResist = 0.2f;
                flag = true;
                this.npcSlots = 1f;
            }
            else if (this.type == 421)
            {
                this.name = "Nebula Headcrab";
                this.width = 44;
                this.height = 44;
                this.aiStyle = 85;
                this.damage = 70;
                this.defense = 34;
                this.lifeMax = 330;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.noGravity = true;
                this.buffImmune[31] = true;
                this.npcSlots = 1f;
            }
            else if (this.type == 424)
            {
                this.name = "Nebula Soldier";
                this.width = 22;
                this.height = 56;
                this.aiStyle = 3;
                this.damage = 80;
                this.defense = 30;
                this.lifeMax = 700;
                this.soundHit = 1;
                this.soundKilled = 5;
                this.knockBackResist = 0.6f;
                this.buffImmune[31] = false;
                this.npcSlots = 2f;
            }
            else if (this.type == 420)
            {
                this.name = "Nebula Floater";
                this.width = 40;
                this.height = 40;
                this.aiStyle = 97;
                this.damage = 75;
                this.defense = 20;
                this.lifeMax = 1300;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.noTileCollide = true;
                this.noGravity = true;
                this.npcSlots = 3f;
            }
            else if (this.type == 422)
            {
                this.name = "Vortex Tower";
                this.lifeMax = 20000;
                this.defense = 20;
                this.damage = 0;
                this.width = 130;
                this.height = 270;
                this.aiStyle = 94;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 0.0f;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                flag = true;
                this.npcSlots = 0.0f;
            }
            else if (this.type == 425)
            {
                this.name = "Vortex Rifleman";
                this.width = 30;
                this.height = 56;
                this.aiStyle = 3;
                this.damage = 100;
                this.defense = 40;
                this.lifeMax = 800;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.4f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 429)
            {
                this.name = "Vortex Soldier";
                this.width = 22;
                this.height = 56;
                this.aiStyle = 3;
                this.damage = 90;
                this.defense = 34;
                this.lifeMax = 700;
                this.soundHit = 1;
                this.soundKilled = 5;
                this.knockBackResist = 0.6f;
                this.buffImmune[31] = false;
                this.npcSlots = 2f;
            }
            else if (this.type == 428)
            {
                this.name = "Alien Larva";
                this.width = 24;
                this.height = 26;
                this.aiStyle = 3;
                this.damage = 50;
                this.defense = 6;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 1;
            }
            else if (this.type == 427)
            {
                this.name = "Alien Hornet";
                this.width = 40;
                this.height = 28;
                this.aiStyle = 3;
                this.damage = 75;
                this.defense = 20;
                this.lifeMax = 500;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.5f;
                this.buffImmune[31] = false;
                this.npcSlots = 0.5f;
            }
            else if (this.type == 426)
            {
                this.name = "Alien Queen";
                this.width = 50;
                this.height = 62;
                this.aiStyle = 3;
                this.damage = 100;
                this.defense = 44;
                this.lifeMax = 1000;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.3f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 517)
            {
                this.name = "Solar Tower";
                this.lifeMax = 20000;
                this.defense = 20;
                this.damage = 0;
                this.width = 130;
                this.height = 270;
                this.aiStyle = 94;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 0.0f;
                this.knockBackResist = 0.0f;
                this.noGravity = true;
                this.noTileCollide = true;
                flag = true;
                this.npcSlots = 0.0f;
            }
            else if (this.type == 412)
            {
                this.name = "Crawltipede";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 150;
                this.defense = 1000;
                this.lifeMax = 10000;
                this.soundHit = 11;
                this.soundKilled = 22;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.dontTakeDamage = true;
                this.npcSlots = 2f;
            }
            else if (this.type == 413)
            {
                this.name = "Crawltipede";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 100;
                this.defense = 1000;
                this.lifeMax = 10000;
                this.soundHit = 11;
                this.soundKilled = 22;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.dontCountMe = true;
                this.dontTakeDamage = true;
                this.npcSlots = 0.0f;
            }
            else if (this.type == 414)
            {
                this.name = "Crawltipede";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 50;
                this.defense = 0;
                this.lifeMax = 10000;
                this.soundHit = 8;
                this.soundKilled = 22;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                this.dontCountMe = true;
                this.takenDamageMultiplier = 10f;
                this.npcSlots = 0.0f;
            }
            else if (this.type == 415)
            {
                this.name = "Drakomire";
                this.lifeMax = 800;
                this.defense = 32;
                this.damage = 55;
                this.width = 60;
                this.height = 40;
                this.aiStyle = 3;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.2f;
            }
            else if (this.type == 416)
            {
                this.name = "Drakomire Rider";
                this.damage = 80;
                this.defense = 28;
                this.lifeMax = 800;
                this.width = 18;
                this.height = 40;
                this.aiStyle = 75;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.2f;
            }
            else if (this.type == 518)
            {
                this.name = "Solar Spearman";
                this.lifeMax = 1000;
                this.defense = 28;
                this.damage = 80;
                this.width = 22;
                this.height = 56;
                this.aiStyle = 3;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.4f;
            }
            else if (this.type == 417)
            {
                this.npcSlots = 2f;
                this.name = "Sroller";
                this.width = 46;
                this.height = 32;
                this.aiStyle = 39;
                this.damage = 80;
                this.defense = 34;
                this.lifeMax = 700;
                this.soundHit = 7;
                this.knockBackResist = 0.0f;
                this.soundKilled = 5;
            }
            else if (this.type == 418)
            {
                this.name = "Corite";
                this.width = 38;
                this.height = 38;
                this.aiStyle = 74;
                this.damage = 70;
                this.defense = 26;
                this.lifeMax = 600;
                this.soundHit = 3;
                this.soundKilled = 3;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.2f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
            }
            else if (this.type == 419)
            {
                this.name = "Solar Solenian";
                this.lifeMax = 800;
                this.defense = 30;
                this.damage = 90;
                this.width = 22;
                this.height = 56;
                this.aiStyle = 3;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.4f;
            }
            else if (this.type == 516)
            {
                this.name = "Solar Flare";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 9;
                this.damage = 100;
                this.defense = 0;
                this.lifeMax = 1;
                this.soundHit = 0;
                this.soundKilled = 0;
                this.noGravity = true;
                this.noTileCollide = false;
                this.alpha = 0;
                this.knockBackResist = 0.0f;
            }
            else if (this.type == 519)
            {
                this.name = "Solar Goop";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 99;
                this.damage = 120;
                this.defense = 0;
                this.lifeMax = 1;
                this.soundHit = 0;
                this.soundKilled = 0;
                this.noGravity = true;
                this.noTileCollide = false;
                this.alpha = 0;
                this.knockBackResist = 0.0f;
            }
            else if (this.type == 162)
            {
                this.name = "Frankenstein";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 65;
                this.defense = 18;
                this.lifeMax = 350;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.3f;
                this.value = 600f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 166)
            {
                this.name = "Swamp Thing";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 70;
                this.defense = 26;
                this.lifeMax = 450;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.2f;
                this.value = 1000f;
                this.buffImmune[31] = false;
                this.buffImmune[20] = true;
            }
            else if (this.type == 253)
            {
                this.noGravity = true;
                this.noTileCollide = true;
                this.name = "Reaper";
                this.width = 24;
                this.height = 44;
                this.aiStyle = 22;
                this.damage = 80;
                this.defense = 22;
                this.lifeMax = 700;
                this.soundHit = 49;
                this.soundKilled = 51;
                this.alpha = 100;
                this.value = 1500f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.knockBackResist = 0.6f;
            }
            else if (this.type == 158)
            {
                this.npcSlots = 2f;
                this.name = "Vampire";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 14;
                this.damage = 60;
                this.defense = 32;
                this.lifeMax = 750;
                this.soundHit = 1;
                this.knockBackResist = 0.75f;
                this.soundKilled = 6;
                this.value = 5000f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 159)
            {
                this.npcSlots = 2f;
                this.name = "Vampire";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 80;
                this.defense = 24;
                this.lifeMax = 750;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.4f;
                this.value = 5000f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 460)
            {
                this.name = "Butcher";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 70;
                this.defense = 30;
                this.lifeMax = 700;
                this.soundHit = 7;
                this.soundKilled = 17;
                this.knockBackResist = 0.25f;
                this.value = 1000f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 461)
            {
                this.name = "Creature from the Deep";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 60;
                this.defense = 22;
                this.lifeMax = 400;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.3f;
                this.value = 1000f;
            }
            else if (this.type == 462)
            {
                this.name = "Fritz";
                this.width = 20;
                this.height = 24;
                this.aiStyle = 3;
                this.damage = 70;
                this.defense = 14;
                this.lifeMax = 270;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.7f;
                this.value = 600f;
                this.buffImmune[31] = false;
                this.npcSlots = 0.5f;
            }
            else if (this.type == 463)
            {
                this.name = "Nailhead";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 100;
                this.defense = 34;
                this.lifeMax = 4000;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.1f;
                this.value = 3000f;
            }
            else if (this.type == 466)
            {
                this.name = "Psycho";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 70;
                this.defense = 40;
                this.lifeMax = 550;
                this.soundHit = 48;
                this.soundKilled = 50;
                this.knockBackResist = 0.5f;
                this.value = 1500f;
            }
            else if (this.type == 467)
            {
                this.name = "Deadly Sphere";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 85;
                this.damage = 100;
                this.defense = 80;
                this.lifeMax = 350;
                this.soundHit = 34;
                this.soundKilled = 37;
                this.value = 900f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
                this.buffImmune[39] = true;
                this.knockBackResist = 0.7f;
                this.noGravity = true;
            }
            else if (this.type == 469)
            {
                this.name = "The Possessed";
                this.width = 38;
                this.height = 26;
                this.aiStyle = 3;
                this.damage = 68;
                this.defense = 28;
                this.lifeMax = 600;
                this.soundHit = 47;
                this.soundKilled = 49;
                this.knockBackResist = 0.35f;
                this.value = 1300f;
            }
            else if (this.type == 468)
            {
                this.name = "Dr. Man Fly";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 65;
                this.defense = 24;
                this.lifeMax = 500;
                this.soundHit = 35;
                this.soundKilled = 38;
                this.knockBackResist = 0.6f;
                this.value = 1300f;
            }
            else if (this.type == 477)
            {
                this.noGravity = true;
                this.name = "Mothron";
                this.width = 80;
                this.height = 50;
                this.aiStyle = 88;
                this.damage = 80;
                this.defense = 30;
                this.lifeMax = 6000;
                this.soundHit = 44;
                this.soundKilled = 46;
                this.value = 50000f;
                this.knockBackResist = 0.2f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 478)
            {
                this.name = "Mothron Egg";
                this.width = 34;
                this.height = 34;
                this.aiStyle = 89;
                this.damage = 0;
                this.defense = 30;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 0.0f;
                this.knockBackResist = 0.7f;
                flag = true;
                this.npcSlots = 0.0f;
            }
            else if (this.type == 479)
            {
                this.name = "Mothron Spawn";
                this.width = 46;
                this.height = 30;
                this.aiStyle = 90;
                this.damage = 50;
                this.defense = 14;
                this.lifeMax = 700;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.3f;
                this.value = 0.0f;
                this.npcSlots = 0.1f;
            }
            else if (this.type == 26)
            {
                this.name = "Goblin Peon";
                this.scale = 0.9f;
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 12;
                this.defense = 4;
                this.lifeMax = 60;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.8f;
                this.value = 100f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 27)
            {
                this.name = "Goblin Thief";
                this.scale = 0.95f;
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 6;
                this.lifeMax = 80;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.7f;
                this.value = 200f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 28)
            {
                this.name = "Goblin Warrior";
                this.scale = 1.1f;
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 25;
                this.defense = 8;
                this.lifeMax = 110;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.value = 150f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 29)
            {
                this.name = "Goblin Sorcerer";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 20;
                this.defense = 2;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.6f;
                this.value = 200f;
            }
            else if (this.type == 30)
            {
                this.name = "Chaos Ball";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 9;
                this.damage = 20;
                this.defense = 0;
                this.lifeMax = 1;
                this.soundHit = 3;
                this.soundKilled = 3;
                this.noGravity = true;
                this.noTileCollide = true;
                this.alpha = 100;
                this.knockBackResist = 0.0f;
            }
            else if (this.type == 111)
            {
                this.name = "Goblin Archer";
                this.scale = 0.95f;
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 6;
                this.lifeMax = 80;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.7f;
                this.value = 200f;
                this.buffImmune[31] = false;
            }
            else if (this.type == 471)
            {
                this.name = "Goblin Summoner";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 80;
                this.defense = 26;
                this.lifeMax = 2000;
                this.soundHit = 40;
                this.soundKilled = 42;
                this.knockBackResist = 0.15f;
                this.value = 5000f;
                flag = true;
            }
            else if (this.type == 472)
            {
                this.name = "Shadowflame Apparition";
                this.width = 40;
                this.height = 24;
                this.aiStyle = 86;
                this.damage = 50;
                this.defense = 18;
                this.lifeMax = 180;
                this.soundHit = 52;
                this.soundKilled = 55;
                this.knockBackResist = 0.0f;
                this.value = 0.0f;
                flag = true;
                this.npcSlots = 0.1f;
            }
            else if (this.type == 520)
            {
                this.name = "Martian Walker";
                this.width = 34;
                this.height = 110;
                this.aiStyle = 3;
                this.damage = 60;
                this.defense = 40;
                this.lifeMax = 2000;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.knockBackResist = 0.0f;
                this.buffImmune[20] = true;
                this.buffImmune[24] = true;
            }
            else if (this.type == 521)
            {
                this.name = "Ancient Vision";
                this.width = 60;
                this.height = 60;
                this.aiStyle = 86;
                this.damage = 90;
                this.defense = 30;
                this.lifeMax = 2000;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.0f;
                flag = true;
            }
            else if (this.type == 522)
            {
                this.name = "Ancient Light";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 100;
                this.damage = 120;
                this.defense = 0;
                this.lifeMax = 1;
                this.soundHit = 0;
                this.soundKilled = 0;
                this.noGravity = true;
                this.noTileCollide = true;
                this.alpha = 0;
                this.knockBackResist = 0.0f;
                this.chaseable = false;
            }
            else if (this.type == 523)
            {
                this.name = "Ending's Prophecy";
                this.width = 42;
                this.height = 42;
                this.aiStyle = 101;
                this.damage = 30;
                this.defense = 0;
                this.lifeMax = 500;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.noGravity = true;
                this.noTileCollide = true;
                this.alpha = 0;
                this.knockBackResist = 0.0f;
                this.chaseable = false;
                this.alpha = (int)byte.MaxValue;
                this.canGhostHeal = false;
            }
            else if (this.type == 534)
            {
                this.name = "Tortured Soul";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 14;
                this.defense = 20;
                this.lifeMax = 400;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.3f;
                this.value = 0.0f;
                this.buffImmune[31] = false;
                this.lavaImmune = true;
                this.rarity = 1;
            }
            else if (this.type == 535)
            {
                this.name = "Spiked Slime";
                this.width = 24;
                this.height = 18;
                this.aiStyle = 1;
                this.damage = 14;
                this.defense = 5;
                this.lifeMax = 50;
                this.scale = 1.1f;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 0;
                this.value = 40f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 536)
            {
                this.name = "The Bride";
                this.width = 18;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 14;
                this.defense = 8;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 1000f;
                this.buffImmune[31] = false;
                this.rarity = 2;
            }
            else if (this.type == 537)
            {
                this.npcSlots = 2f;
                this.name = "Sand Slime";
                this.width = 30;
                this.height = 24;
                this.aiStyle = 1;
                this.damage = 18;
                this.defense = 5;
                this.lifeMax = 60;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 50;
                this.color = new Color((int)byte.MaxValue, 250, 0, 0) * 0.2f;
                this.value = 75f;
                this.knockBackResist = 0.6f;
                this.buffImmune[20] = true;
                this.buffImmune[31] = false;
            }
            else if (this.type == 538)
            {
                this.name = "Squirrel";
                this.width = 18;
                this.height = 20;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.catchItem = (short)3563;
            }
            else if (this.type == 539)
            {
                this.name = "Squirrel";
                this.width = 18;
                this.height = 20;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.catchItem = (short)3564;
                this.rarity = 3;
            }
            if (flag)
            {
                for (int index = 0; index < 191; ++index)
                    this.buffImmune[index] = true;
            }
            if (Main.dedServ)
                this.frame = new Rectangle();
            else if (Main.NPCLoaded[this.type])
                this.frame = new Rectangle(0, 0, Main.npcTexture[this.type].Width, Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type]);
            else
                this.setFrameSize = true;
            if ((double)scaleOverride > 0.0)
            {
                int num1 = (int)((double)this.width * (double)this.scale);
                int num2 = (int)((double)this.height * (double)this.scale);
                this.position.X += (float)(num1 / 2);
                this.position.Y += (float)num2;
                this.scale = scaleOverride;
                this.width = (int)((double)this.width * (double)this.scale);
                this.height = (int)((double)this.height * (double)this.scale);
                if (this.height == 16 || this.height == 32)
                    ++this.height;
                this.position.X -= (float)(this.width / 2);
                this.position.Y -= (float)this.height;
            }
            else
            {
                this.width = (int)((double)this.width * (double)this.scale);
                this.height = (int)((double)this.height * (double)this.scale);
            }
            if (this.buffImmune[20])
                this.buffImmune[70] = true;
            if (this.buffImmune[39])
                this.buffImmune[153] = true;
            this.life = this.lifeMax;
            this.defDamage = this.damage;
            this.defDefense = this.defense;
            this.netID = this.type;
            this.displayName = Lang.npcName(this.netID, false);
            if (!Main.expertMode)
                return;
            this.scaleStats();
        }

        public static void setWorldMonsters()
        {
            Random random = new Random(Main.worldID);
            int num1 = random.Next(3);
            int num2 = random.Next(3);
            while (num1 == num2)
                num1 = random.Next(3);
            for (int index1 = 0; index1 < 2; ++index1)
            {
                int num3 = num1;
                if (index1 == 1)
                    num3 = num2;
                for (int index2 = 0; index2 < 3; ++index2)
                    NPC.cavernMonsterType[index1, index2] = num3 != 0 ? (num3 != 1 ? random.Next(498, 507) : random.Next(496, 498)) : random.Next(494, 496);
            }
        }

        public void scaleStats()
        {
            if (!Main.expertMode)
                return;
            if (this.friendly)
            {
                int num1 = this.life;
            }
            if (this.type != 397 && this.type != 396 && this.type != 398 && (this.life <= 5 || this.damage == 0 || (this.friendly || this.townNPC)))
                return;
            if (this.type != 5 && (this.type < 13 || this.type > 15) && (this.type != 267 && (this.type < 113 || this.type > 119)) && (Main.hardMode && !this.boss && this.lifeMax < 1000))
            {
                int num2 = this.damage + this.defense + this.lifeMax / 4;
                int num3 = 80;
                if (NPC.downedPlantBoss)
                    num3 += 20;
                if (num2 < num3)
                {
                    float num4 = (float)(num3 / num2);
                    this.damage = (int)((double)this.damage * (double)num4 * 0.9);
                    this.defense = (int)((double)this.defense * (double)num4);
                    this.lifeMax = (int)((double)this.lifeMax * (double)num4 * 1.1);
                    this.value = (float)(int)((double)this.value * (double)num4 * 0.8);
                }
            }
            this.value = (float)(int)((double)this.value * 2.5);
            this.lifeMax = (int)((double)this.lifeMax * (double)Main.expertLife);
            this.damage = (int)((double)this.damage * (double)Main.expertDamage);
            this.knockBackResist *= Main.expertKnockBack;
            int num5 = 0;
            float num6 = 1f;
            float num7 = 0.35f;
            if (Main.netMode != 0)
            {
                for (int index = 0; index < (int)byte.MaxValue; ++index)
                {
                    if (Main.player[index].active)
                        ++num5;
                }
                for (int index = 1; index < num5; ++index)
                {
                    num6 += num7;
                    num7 += (float)((1.0 - (double)num7) / 3.0);
                }
            }
            if ((double)num6 > 8.0)
                num6 = (float)(((double)num6 * 2.0 + 8.0) / 3.0);
            if ((double)num6 > 1000.0)
                num6 = 1000f;
            if (this.type == 5)
                this.lifeMax = (int)((double)this.lifeMax * 0.75);
            if (this.type == 4)
                this.lifeMax = (int)((double)this.lifeMax * 0.65 * (double)num6);
            if (this.type >= 13 && this.type <= 15)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num6);
                if (this.type == 13)
                    this.damage = (int)((double)this.damage * 1.1);
                if (this.type == 14)
                    this.damage = (int)((double)this.damage * 0.8);
                if (this.type == 15)
                    this.damage = (int)((double)this.damage * 0.8);
                this.scale *= 1.2f;
                this.defense += 2;
            }
            if (this.type == 266)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.85 * (double)num6);
                this.damage = (int)((double)this.damage * 0.9);
                this.scale *= 1.05f;
            }
            if (this.type == 50)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num6);
                this.damage = (int)((double)this.damage * 0.8);
            }
            if (this.type == 471)
                this.lifeMax = (int)((double)this.lifeMax * 0.85 * ((double)num6 * 2.0 + 1.0) / 3.0);
            if (this.type == 472)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.85 * ((double)num6 + 1.0) / 2.0);
                this.damage = (int)((double)this.damage * 0.8);
            }
            if (this.type == 222)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num6);
                this.damage = (int)((double)this.damage * 0.9);
            }
            if (this.type == 210 || this.type == 211)
                this.lifeMax = (int)((double)this.lifeMax * 0.75);
            if (this.type == 35)
            {
                this.lifeMax = (int)((double)this.lifeMax * (double)num6);
                this.damage = (int)((double)this.damage * 1.1);
            }
            else if (this.type == 36)
            {
                this.lifeMax = (int)((double)this.lifeMax * 1.3 * (double)num6);
                this.damage = (int)((double)this.damage * 1.1);
            }
            if (this.type == 113 || this.type == 114)
            {
                this.defense += 6;
                this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num6);
                this.damage = (int)((double)this.damage * 1.5);
            }
            else if (this.type == 115)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num6);
                if (num5 > 1)
                    this.knockBackResist *= 1f - num7;
                this.defense += 6;
            }
            else if (this.type == 116)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num6);
                if (num5 > 1)
                    this.knockBackResist *= 1f - num7;
            }
            else if (this.type == 117 || this.type == 118 || this.type == 119)
                this.lifeMax = (int)((double)this.lifeMax * 0.8);
            if (this.type >= 134 && this.type <= 136)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num6);
                if (this.type == 134)
                    this.damage = this.damage * 2;
                if (this.type == 135)
                    this.damage = (int)((double)this.damage * 0.85);
                if (this.type == 136)
                    this.damage = (int)((double)this.damage * 0.85);
                this.scale *= 1.05f;
            }
            else if (this.type == 139)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.75 * ((double)num6 * 2.0 + 1.0) / 3.0);
                this.damage = (int)((double)this.damage * 0.8);
                this.scale *= 1.05f;
            }
            if (this.type >= (int)sbyte.MaxValue && this.type <= 131)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num6);
                this.damage = (int)((double)this.damage * 0.85);
            }
            if (this.type >= 125 && this.type <= 126)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num6);
                this.damage = (int)((double)this.damage * 0.85);
            }
            if (this.type >= 262 && this.type <= 262)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)num6);
                this.damage = (int)((double)this.damage * 1.15);
            }
            if (this.type >= 245 && this.type <= 249)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num6);
                this.damage = (int)((double)this.damage * 0.8);
            }
            if (this.type == 370)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.6 * (double)num6);
                this.damage = (int)((double)this.damage * 0.7);
            }
            else if (this.type == 371 || this.type == 372 || this.type == 373)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.75);
                this.damage = (int)((double)this.damage * 0.75);
            }
            if (this.type == 439 || this.type == 440 || this.type >= 454 && this.type <= 459 || (this.type == 522 || this.type == 523))
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.625 * (double)num6);
                this.damage = (int)((double)this.damage * 0.75);
            }
            if (this.type == 397 || this.type == 396 || this.type == 398)
            {
                this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)num6);
                this.damage = (int)((double)this.damage * 0.75);
            }
            switch (this.type)
            {
                case 305:
                case 306:
                case 307:
                case 308:
                case 309:
                case 310:
                case 311:
                case 312:
                case 313:
                case 314:
                case 315:
                case 326:
                case 329:
                case 330:
                    this.lifeMax = (int)((double)this.lifeMax * 0.75);
                    this.damage = (int)((double)this.damage * 0.75);
                    break;
                case 325:
                case 327:
                    this.lifeMax = (int)((double)this.lifeMax * 0.65);
                    this.damage = (int)((double)this.damage * 0.75);
                    break;
            }
            switch (this.type)
            {
                case 338:
                case 339:
                case 340:
                case 341:
                case 342:
                case 343:
                case 347:
                case 348:
                case 349:
                case 350:
                    this.lifeMax = (int)((double)this.lifeMax * 0.75);
                    this.damage = (int)((double)this.damage * 0.75);
                    break;
                case 344:
                case 345:
                case 346:
                    this.lifeMax = (int)((double)this.lifeMax * 0.65);
                    this.damage = (int)((double)this.damage * 0.75);
                    break;
            }
            this.defDefense = this.defense;
            this.defDamage = this.damage;
            this.life = this.lifeMax;
        }

        public void AI()
        {
            if (this.aiStyle == 0)
            {
                for (int index = 0; index < (int)byte.MaxValue; ++index)
                {
                    if (Main.player[index].active && Main.player[index].talkNPC == this.whoAmI)
                    {
                        if (this.type == 105)
                        {
                            this.Transform(107);
                            return;
                        }
                        if (this.type == 106)
                        {
                            this.Transform(108);
                            return;
                        }
                        if (this.type == 123)
                        {
                            this.Transform(124);
                            return;
                        }
                        if (this.type == 354)
                        {
                            this.Transform(353);
                            return;
                        }
                        if (this.type == 376)
                        {
                            this.Transform(369);
                            return;
                        }
                    }
                }
                if (this.type != 376)
                {
                    this.TargetClosest(true);
                    this.spriteDirection = this.direction;
                }
                if (this.type == 376)
                {
                    if (this.wet || (int)Main.tile[(int)((double)this.Center.X / 16.0), (int)((double)this.position.Y - 4.0) / 16].liquid > 0)
                    {
                        this.velocity.Y = -0.4f;
                        int num1 = 1;
                        if ((double)this.Center.X / 16.0 > (double)(Main.maxTilesX / 2))
                            num1 = -1;
                        int num2 = 12;
                        int num3 = (int)this.Center.X / 16;
                        int j = (int)this.Center.Y / 16;
                        bool flag = false;
                        if (num1 > 0)
                        {
                            for (int i = num3; i < num3 + num2; ++i)
                            {
                                if (WorldGen.SolidTile(i, j))
                                    flag = true;
                            }
                        }
                        else
                        {
                            for (int i = num3; i > num3 - num2; --i)
                            {
                                if (WorldGen.SolidTile(i, j))
                                    flag = true;
                            }
                        }
                        if (flag)
                        {
                            this.velocity.X *= 0.99f;
                            if ((double)this.velocity.X <= -0.01 || (double)this.velocity.X >= 0.01)
                                return;
                            this.velocity.X = 0.0f;
                        }
                        else
                        {
                            this.velocity.X += (float)num1 * 0.01f;
                            if ((double)this.velocity.X > 0.200000002980232)
                                this.velocity.X *= 0.95f;
                            if ((double)this.velocity.X >= -0.200000002980232)
                                return;
                            this.velocity.X *= 0.95f;
                        }
                    }
                    else
                    {
                        this.velocity.X *= 0.93f;
                        if ((double)this.velocity.X <= -0.1 || (double)this.velocity.X >= 0.1)
                            return;
                        this.velocity.X = 0.0f;
                    }
                }
                else
                {
                    this.velocity.X *= 0.93f;
                    if ((double)this.velocity.X <= -0.1 || (double)this.velocity.X >= 0.1)
                        return;
                    this.velocity.X = 0.0f;
                }
            }
            else if (this.aiStyle == 1)
            {
                if (this.type == 1 && ((double)this.ai[1] == 1.0 || (double)this.ai[1] == 2.0 || (double)this.ai[1] == 3.0))
                    this.ai[1] = -1f;
                if (this.type == 1 && (double)this.ai[1] == 0.0 && (Main.netMode != 1 && (double)this.value > 0.0))
                {
                    this.ai[1] = -1f;
                    if (Main.rand.Next(20) == 0)
                    {
                        int num;
                        switch (Main.rand.Next(4))
                        {
                            case 0:
                                switch (Main.rand.Next(7))
                                {
                                    case 0:
                                        num = 290;
                                        break;
                                    case 1:
                                        num = 292;
                                        break;
                                    case 2:
                                        num = 296;
                                        break;
                                    case 3:
                                        num = 2322;
                                        break;
                                    default:
                                        num = Main.netMode == 0 || Main.rand.Next(2) != 0 ? 2350 : 2997;
                                        break;
                                }
                                break;
                            case 1:
                                switch (Main.rand.Next(4))
                                {
                                    case 0:
                                        num = 8;
                                        break;
                                    case 1:
                                        num = 166;
                                        break;
                                    case 2:
                                        num = 965;
                                        break;
                                    default:
                                        num = 58;
                                        break;
                                }
                                break;
                            case 2:
                                num = Main.rand.Next(2) != 0 ? Main.rand.Next(699, 703) : Main.rand.Next(11, 15);
                                break;
                            default:
                                switch (Main.rand.Next(3))
                                {
                                    case 0:
                                        num = 71;
                                        break;
                                    case 1:
                                        num = 72;
                                        break;
                                    default:
                                        num = 73;
                                        break;
                                }
                                break;
                        }
                        this.ai[1] = (float)num;
                        this.netUpdate = true;
                    }
                }
                if (this.type == 244)
                {
                    Lighting.AddLight((int)(((double)this.position.X + (double)(this.width / 2)) / 16.0), (int)(((double)this.position.Y + (double)(this.height / 2)) / 16.0), (float)Main.DiscoR / (float)byte.MaxValue * 1f, (float)Main.DiscoG / (float)byte.MaxValue * 1f, (float)Main.DiscoB / (float)byte.MaxValue * 1f);
                    this.color.R = (byte)Main.DiscoR;
                    this.color.G = (byte)Main.DiscoG;
                    this.color.B = (byte)Main.DiscoB;
                    this.color.A = (byte)100;
                    this.alpha = 175;
                }
                bool flag = false;
                if (!Main.dayTime || this.life != this.lifeMax || ((double)this.position.Y > Main.worldSurface * 16.0 || Main.slimeRain))
                    flag = true;
                if (this.type == 81)
                {
                    flag = true;
                    if (Main.rand.Next(30) == 0)
                    {
                        int index = Dust.NewDust(this.position, this.width, this.height, 14, 0.0f, 0.0f, this.alpha, this.color, 1f);
                        Main.dust[index].velocity *= 0.3f;
                    }
                }
                if ((this.type == 377 || this.type == 446) && (this.target != (int)byte.MaxValue && !Main.player[this.target].dead) && (double)Vector2.Distance(this.Center, Main.player[this.target].Center) <= 200.0)
                    flag = true;
                if (this.type == 183)
                    flag = true;
                if (this.type == 304)
                    flag = true;
                if (this.type == 147 && Main.rand.Next(10) == 0)
                {
                    int index = Dust.NewDust(this.position, this.width, this.height, 76, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity *= 0.1f;
                }
                if (this.type == 244)
                {
                    flag = true;
                    this.ai[0] += 2f;
                }
                if (this.type == 184)
                {
                    if (Main.rand.Next(8) == 0)
                    {
                        int index = Dust.NewDust(this.position - this.velocity, this.width, this.height, 76, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index].noGravity = true;
                        Main.dust[index].velocity *= 0.15f;
                    }
                    flag = true;
                    if ((double)this.localAI[0] > 0.0)
                        --this.localAI[0];
                    if (!this.wet && !Main.player[this.target].npcTypeNoAggro[this.type])
                    {
                        Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num1 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_1.X;
                        float num2 = Main.player[this.target].position.Y - vector2_1.Y;
                        float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                        if (Main.expertMode && (double)num3 < 120.0 && (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && (double)this.velocity.Y == 0.0))
                        {
                            this.ai[0] = -40f;
                            if ((double)this.velocity.Y == 0.0)
                                this.velocity.X *= 0.9f;
                            if (Main.netMode != 1 && (double)this.localAI[0] == 0.0)
                            {
                                for (int index = 0; index < 5; ++index)
                                {
                                    Vector2 vector2_2 = new Vector2((float)(index - 2), -4f);
                                    vector2_2.X *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00499999988824129);
                                    vector2_2.Y *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00499999988824129);
                                    vector2_2.Normalize();
                                    vector2_2 *= (float)(4.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                                    Projectile.NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 174, 9, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                    this.localAI[0] = 30f;
                                }
                            }
                        }
                        else if ((double)num3 < 200.0 && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && (double)this.velocity.Y == 0.0)
                        {
                            this.ai[0] = -40f;
                            if ((double)this.velocity.Y == 0.0)
                                this.velocity.X *= 0.9f;
                            if (Main.netMode != 1 && (double)this.localAI[0] == 0.0)
                            {
                                float num4 = Main.player[this.target].position.Y - vector2_1.Y - (float)Main.rand.Next(0, 200);
                                float num5 = 4.5f / (float)Math.Sqrt((double)num1 * (double)num1 + (double)num4 * (double)num4);
                                float SpeedX = num1 * num5;
                                float SpeedY = num4 * num5;
                                this.localAI[0] = 50f;
                                Projectile.NewProjectile(vector2_1.X, vector2_1.Y, SpeedX, SpeedY, 174, 9, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            }
                        }
                    }
                }
                if (this.type == 535)
                {
                    flag = true;
                    if ((double)this.localAI[0] > 0.0)
                        --this.localAI[0];
                    if (!this.wet && !Main.player[this.target].npcTypeNoAggro[this.type])
                    {
                        Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num1 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_1.X;
                        float num2 = Main.player[this.target].position.Y - vector2_1.Y;
                        float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                        if (Main.expertMode && (double)num3 < 120.0 && (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && (double)this.velocity.Y == 0.0))
                        {
                            this.ai[0] = -40f;
                            if ((double)this.velocity.Y == 0.0)
                                this.velocity.X *= 0.9f;
                            if (Main.netMode != 1 && (double)this.localAI[0] == 0.0)
                            {
                                for (int index = 0; index < 5; ++index)
                                {
                                    Vector2 vector2_2 = new Vector2((float)(index - 2), -4f);
                                    vector2_2.X *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00499999988824129);
                                    vector2_2.Y *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00499999988824129);
                                    vector2_2.Normalize();
                                    vector2_2 *= (float)(4.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                                    Projectile.NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 605, 9, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                    this.localAI[0] = 30f;
                                }
                            }
                        }
                        else if ((double)num3 < 200.0 && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && (double)this.velocity.Y == 0.0)
                        {
                            this.ai[0] = -40f;
                            if ((double)this.velocity.Y == 0.0)
                                this.velocity.X *= 0.9f;
                            if (Main.netMode != 1 && (double)this.localAI[0] == 0.0)
                            {
                                float num4 = Main.player[this.target].position.Y - vector2_1.Y - (float)Main.rand.Next(0, 200);
                                float num5 = 4.5f / (float)Math.Sqrt((double)num1 * (double)num1 + (double)num4 * (double)num4);
                                float SpeedX = num1 * num5;
                                float SpeedY = num4 * num5;
                                this.localAI[0] = 50f;
                                Projectile.NewProjectile(vector2_1.X, vector2_1.Y, SpeedX, SpeedY, 605, 9, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            }
                        }
                    }
                }
                if (this.type == 204)
                {
                    flag = true;
                    if ((double)this.localAI[0] > 0.0)
                        --this.localAI[0];
                    if (!this.wet && !Main.player[this.target].npcTypeNoAggro[this.type])
                    {
                        Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num1 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_1.X;
                        float num2 = Main.player[this.target].position.Y - vector2_1.Y;
                        float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                        if (Main.expertMode && (double)num3 < 200.0 && (Collision.CanHit(new Vector2(this.position.X, this.position.Y - 20f), this.width, this.height + 20, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && (double)this.velocity.Y == 0.0))
                        {
                            this.ai[0] = -40f;
                            if ((double)this.velocity.Y == 0.0)
                                this.velocity.X *= 0.9f;
                            if (Main.netMode != 1 && (double)this.localAI[0] == 0.0)
                            {
                                for (int index = 0; index < 5; ++index)
                                {
                                    Vector2 vector2_2 = new Vector2((float)(index - 2), -2f);
                                    vector2_2.X *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.0199999995529652);
                                    vector2_2.Y *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.0199999995529652);
                                    vector2_2.Normalize();
                                    vector2_2 *= (float)(3.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                                    Projectile.NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 176, 13, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                    this.localAI[0] = 80f;
                                }
                            }
                        }
                        if ((double)num3 < 400.0 && Collision.CanHit(new Vector2(this.position.X, this.position.Y - 20f), this.width, this.height + 20, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && (double)this.velocity.Y == 0.0)
                        {
                            this.ai[0] = -80f;
                            if ((double)this.velocity.Y == 0.0)
                                this.velocity.X *= 0.9f;
                            if (Main.netMode != 1 && (double)this.localAI[0] == 0.0)
                            {
                                float num4 = Main.player[this.target].position.Y - vector2_1.Y - (float)Main.rand.Next(-30, 20) - num3 * 0.05f;
                                float num5 = Main.player[this.target].position.X - vector2_1.X - (float)Main.rand.Next(-20, 20);
                                float num6 = 7f / (float)Math.Sqrt((double)num5 * (double)num5 + (double)num4 * (double)num4);
                                float SpeedX = num5 * num6;
                                float SpeedY = num4 * num6;
                                this.localAI[0] = 65f;
                                Projectile.NewProjectile(vector2_1.X, vector2_1.Y, SpeedX, SpeedY, 176, 13, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            }
                        }
                    }
                }
                if (this.type == 377 || this.type == 446)
                {
                    if ((double)this.localAI[2] < 90.0)
                        ++this.localAI[2];
                    else
                        this.friendly = false;
                }
                if (this.type == 59)
                {
                    Lighting.AddLight((int)(((double)this.position.X + (double)(this.width / 2)) / 16.0), (int)(((double)this.position.Y + (double)(this.height / 2)) / 16.0), 1f, 0.3f, 0.1f);
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 1.7f);
                    Main.dust[index].noGravity = true;
                }
                if ((double)this.ai[2] > 1.0)
                    --this.ai[2];
                if (this.wet)
                {
                    if (this.collideY)
                        this.velocity.Y = -2f;
                    if ((double)this.velocity.Y < 0.0 && (double)this.ai[3] == (double)this.position.X)
                    {
                        this.direction *= -1;
                        this.ai[2] = 200f;
                    }
                    if ((double)this.velocity.Y > 0.0)
                        this.ai[3] = this.position.X;
                    if (this.type == 59)
                    {
                        if ((double)this.velocity.Y > 2.0)
                            this.velocity.Y *= 0.9f;
                        else if (this.directionY < 0)
                            this.velocity.Y -= 0.8f;
                        this.velocity.Y -= 0.5f;
                        if ((double)this.velocity.Y < -10.0)
                            this.velocity.Y = -10f;
                    }
                    else
                    {
                        if ((double)this.velocity.Y > 2.0)
                            this.velocity.Y *= 0.9f;
                        this.velocity.Y -= 0.5f;
                        if ((double)this.velocity.Y < -4.0)
                            this.velocity.Y = -4f;
                    }
                    if ((double)this.ai[2] == 1.0 && flag)
                        this.TargetClosest(true);
                }
                this.aiAction = 0;
                if ((double)this.ai[2] == 0.0)
                {
                    this.ai[0] = -100f;
                    this.ai[2] = 1f;
                    this.TargetClosest(true);
                }
                if ((double)this.velocity.Y == 0.0)
                {
                    if ((double)this.ai[3] == (double)this.position.X)
                    {
                        this.direction *= -1;
                        this.ai[2] = 200f;
                    }
                    this.ai[3] = 0.0f;
                    this.velocity.X *= 0.8f;
                    if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                        this.velocity.X = 0.0f;
                    if (flag)
                        ++this.ai[0];
                    ++this.ai[0];
                    if (this.type == 59)
                        this.ai[0] += 2f;
                    if (this.type == 71)
                        this.ai[0] += 3f;
                    if (this.type == 138)
                        this.ai[0] += 2f;
                    if (this.type == 183)
                        ++this.ai[0];
                    if (this.type == 304)
                        this.ai[0] += (float)((1 - this.life / this.lifeMax) * 10);
                    if (this.type == 377 || this.type == 446)
                        this.ai[0] += 3f;
                    if (this.type == 81)
                    {
                        if ((double)this.scale >= 0.0)
                            this.ai[0] += 4f;
                        else
                            ++this.ai[0];
                    }
                    int num = 0;
                    if ((double)this.ai[0] >= 0.0)
                        num = 1;
                    if ((double)this.ai[0] >= -1000.0 && (double)this.ai[0] <= -500.0)
                        num = 2;
                    if ((double)this.ai[0] >= -2000.0 && (double)this.ai[0] <= -1500.0)
                        num = 3;
                    if (num > 0)
                    {
                        this.netUpdate = true;
                        if (flag && (double)this.ai[2] == 1.0)
                            this.TargetClosest(true);
                        if (num == 3)
                        {
                            this.velocity.Y = -8f;
                            if (this.type == 59)
                                this.velocity.Y -= 2f;
                            this.velocity.X += (float)(3 * this.direction);
                            if (this.type == 59)
                                this.velocity.X += 0.5f * (float)this.direction;
                            this.ai[0] = -200f;
                            this.ai[3] = this.position.X;
                        }
                        else
                        {
                            this.velocity.Y = -6f;
                            this.velocity.X += (float)(2 * this.direction);
                            if (this.type == 59)
                                this.velocity.X += (float)(2 * this.direction);
                            this.ai[0] = -120f;
                            if (num == 1)
                                this.ai[0] -= 1000f;
                            else
                                this.ai[0] -= 2000f;
                        }
                        if (this.type == 141)
                        {
                            this.velocity.Y *= 1.3f;
                            this.velocity.X *= 1.2f;
                        }
                        if (this.type != 377 && this.type != 446)
                            return;
                        this.velocity.Y *= 0.9f;
                        this.velocity.X *= 0.6f;
                        if (!flag)
                            return;
                        this.direction = -this.direction;
                        this.velocity.X *= -1f;
                    }
                    else
                    {
                        if ((double)this.ai[0] < -30.0)
                            return;
                        this.aiAction = 1;
                    }
                }
                else
                {
                    if (this.target >= (int)byte.MaxValue || (this.direction != 1 || (double)this.velocity.X >= 3.0) && (this.direction != -1 || (double)this.velocity.X <= -3.0))
                        return;
                    if (this.direction == -1 && (double)this.velocity.X < 0.1 || this.direction == 1 && (double)this.velocity.X > -0.1)
                        this.velocity.X += 0.2f * (float)this.direction;
                    else
                        this.velocity.X *= 0.93f;
                }
            }
            else if (this.aiStyle == 2)
            {
                if ((this.type == 170 || this.type == 171 || this.type == 180) && Main.rand.Next(1000) == 0)
                    Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 9);
                this.noGravity = true;
                if (!this.noTileCollide)
                {
                    if (this.collideX)
                    {
                        this.velocity.X = this.oldVelocity.X * -0.5f;
                        if (this.direction == -1 && (double)this.velocity.X > 0.0 && (double)this.velocity.X < 2.0)
                            this.velocity.X = 2f;
                        if (this.direction == 1 && (double)this.velocity.X < 0.0 && (double)this.velocity.X > -2.0)
                            this.velocity.X = -2f;
                    }
                    if (this.collideY)
                    {
                        this.velocity.Y = this.oldVelocity.Y * -0.5f;
                        if ((double)this.velocity.Y > 0.0 && (double)this.velocity.Y < 1.0)
                            this.velocity.Y = 1f;
                        if ((double)this.velocity.Y < 0.0 && (double)this.velocity.Y > -1.0)
                            this.velocity.Y = -1f;
                    }
                }
                if (Main.dayTime && (double)this.position.Y <= Main.worldSurface * 16.0 && (this.type == 2 || this.type == 133 || (this.type == 190 || this.type == 191) || (this.type == 192 || this.type == 193 || (this.type == 194 || this.type == 317)) || this.type == 318))
                {
                    if (this.timeLeft > 10)
                        this.timeLeft = 10;
                    this.directionY = -1;
                    if ((double)this.velocity.Y > 0.0)
                        this.direction = 1;
                    this.direction = -1;
                    if ((double)this.velocity.X > 0.0)
                        this.direction = 1;
                }
                else
                    this.TargetClosest(true);
                if (this.type == 170 || this.type == 171 || this.type == 180)
                {
                    if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                    {
                        if ((double)this.ai[1] > 0.0 && !Collision.SolidCollision(this.position, this.width, this.height))
                        {
                            this.ai[1] = 0.0f;
                            this.ai[0] = 0.0f;
                            this.netUpdate = true;
                        }
                    }
                    else if ((double)this.ai[1] == 0.0)
                        ++this.ai[0];
                    if ((double)this.ai[0] >= 300.0)
                    {
                        this.ai[1] = 1f;
                        this.ai[0] = 0.0f;
                        this.netUpdate = true;
                    }
                    if ((double)this.ai[1] == 0.0)
                    {
                        this.alpha = 0;
                        this.noTileCollide = false;
                    }
                    else
                    {
                        this.wet = false;
                        this.alpha = 200;
                        this.noTileCollide = true;
                    }
                    this.rotation = this.velocity.Y * 0.1f * (float)this.direction;
                    this.TargetClosest(true);
                    if (this.direction == -1 && (double)this.velocity.X > -4.0 && (double)this.position.X > (double)Main.player[this.target].position.X + (double)Main.player[this.target].width)
                    {
                        this.velocity.X -= 0.08f;
                        if ((double)this.velocity.X > 4.0)
                            this.velocity.X -= 0.04f;
                        else if ((double)this.velocity.X > 0.0)
                            this.velocity.X -= 0.2f;
                        if ((double)this.velocity.X < -4.0)
                            this.velocity.X = -4f;
                    }
                    else if (this.direction == 1 && (double)this.velocity.X < 4.0 && (double)this.position.X + (double)this.width < (double)Main.player[this.target].position.X)
                    {
                        this.velocity.X += 0.08f;
                        if ((double)this.velocity.X < -4.0)
                            this.velocity.X += 0.04f;
                        else if ((double)this.velocity.X < 0.0)
                            this.velocity.X += 0.2f;
                        if ((double)this.velocity.X > 4.0)
                            this.velocity.X = 4f;
                    }
                    if (this.directionY == -1 && (double)this.velocity.Y > -2.5 && (double)this.position.Y > (double)Main.player[this.target].position.Y + (double)Main.player[this.target].height)
                    {
                        this.velocity.Y -= 0.1f;
                        if ((double)this.velocity.Y > 2.5)
                            this.velocity.Y -= 0.05f;
                        else if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y -= 0.15f;
                        if ((double)this.velocity.Y < -2.5)
                            this.velocity.Y = -2.5f;
                    }
                    else if (this.directionY == 1 && (double)this.velocity.Y < 2.5 && (double)this.position.Y + (double)this.height < (double)Main.player[this.target].position.Y)
                    {
                        this.velocity.Y += 0.1f;
                        if ((double)this.velocity.Y < -2.5)
                            this.velocity.Y += 0.05f;
                        else if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y += 0.15f;
                        if ((double)this.velocity.Y > 2.5)
                            this.velocity.Y = 2.5f;
                    }
                }
                else if (this.type == 116)
                {
                    this.TargetClosest(true);
                    Lighting.AddLight((int)((double)this.position.X + (double)(this.width / 2)) / 16, (int)((double)this.position.Y + (double)(this.height / 2)) / 16, 0.3f, 0.2f, 0.1f);
                    if (this.direction == -1 && (double)this.velocity.X > -6.0)
                    {
                        this.velocity.X -= 0.1f;
                        if ((double)this.velocity.X > 6.0)
                            this.velocity.X -= 0.1f;
                        else if ((double)this.velocity.X > 0.0)
                            this.velocity.X -= 0.2f;
                        if ((double)this.velocity.X < -6.0)
                            this.velocity.X = -6f;
                    }
                    else if (this.direction == 1 && (double)this.velocity.X < 6.0)
                    {
                        this.velocity.X += 0.1f;
                        if ((double)this.velocity.X < -6.0)
                            this.velocity.X += 0.1f;
                        else if ((double)this.velocity.X < 0.0)
                            this.velocity.X += 0.2f;
                        if ((double)this.velocity.X > 6.0)
                            this.velocity.X = 6f;
                    }
                    if (this.directionY == -1 && (double)this.velocity.Y > -2.5)
                    {
                        this.velocity.Y -= 0.04f;
                        if ((double)this.velocity.Y > 2.5)
                            this.velocity.Y -= 0.05f;
                        else if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y -= 0.15f;
                        if ((double)this.velocity.Y < -2.5)
                            this.velocity.Y = -2.5f;
                    }
                    else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
                    {
                        this.velocity.Y += 0.04f;
                        if ((double)this.velocity.Y < -2.5)
                            this.velocity.Y += 0.05f;
                        else if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y += 0.15f;
                        if ((double)this.velocity.Y > 2.5)
                            this.velocity.Y = 2.5f;
                    }
                    if (Main.rand.Next(40) == 0)
                    {
                        int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((double)this.height * 0.5), 5, this.velocity.X, 2f, 0, new Color(), 1f);
                        Main.dust[index].velocity.X *= 0.5f;
                        Main.dust[index].velocity.Y *= 0.1f;
                    }
                }
                else if (this.type == 133)
                {
                    if ((double)this.life < (double)this.lifeMax * 0.5)
                    {
                        if (this.direction == -1 && (double)this.velocity.X > -6.0)
                        {
                            this.velocity.X -= 0.1f;
                            if ((double)this.velocity.X > 6.0)
                                this.velocity.X -= 0.1f;
                            else if ((double)this.velocity.X > 0.0)
                                this.velocity.X += 0.05f;
                            if ((double)this.velocity.X < -6.0)
                                this.velocity.X = -6f;
                        }
                        else if (this.direction == 1 && (double)this.velocity.X < 6.0)
                        {
                            this.velocity.X += 0.1f;
                            if ((double)this.velocity.X < -6.0)
                                this.velocity.X += 0.1f;
                            else if ((double)this.velocity.X < 0.0)
                                this.velocity.X -= 0.05f;
                            if ((double)this.velocity.X > 6.0)
                                this.velocity.X = 6f;
                        }
                        if (this.directionY == -1 && (double)this.velocity.Y > -4.0)
                        {
                            this.velocity.Y -= 0.1f;
                            if ((double)this.velocity.Y > 4.0)
                                this.velocity.Y -= 0.1f;
                            else if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y += 0.05f;
                            if ((double)this.velocity.Y < -4.0)
                                this.velocity.Y = -4f;
                        }
                        else if (this.directionY == 1 && (double)this.velocity.Y < 4.0)
                        {
                            this.velocity.Y += 0.1f;
                            if ((double)this.velocity.Y < -4.0)
                                this.velocity.Y += 0.1f;
                            else if ((double)this.velocity.Y < 0.0)
                                this.velocity.Y -= 0.05f;
                            if ((double)this.velocity.Y > 4.0)
                                this.velocity.Y = 4f;
                        }
                    }
                    else
                    {
                        if (this.direction == -1 && (double)this.velocity.X > -4.0)
                        {
                            this.velocity.X -= 0.1f;
                            if ((double)this.velocity.X > 4.0)
                                this.velocity.X -= 0.1f;
                            else if ((double)this.velocity.X > 0.0)
                                this.velocity.X += 0.05f;
                            if ((double)this.velocity.X < -4.0)
                                this.velocity.X = -4f;
                        }
                        else if (this.direction == 1 && (double)this.velocity.X < 4.0)
                        {
                            this.velocity.X += 0.1f;
                            if ((double)this.velocity.X < -4.0)
                                this.velocity.X += 0.1f;
                            else if ((double)this.velocity.X < 0.0)
                                this.velocity.X -= 0.05f;
                            if ((double)this.velocity.X > 4.0)
                                this.velocity.X = 4f;
                        }
                        if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
                        {
                            this.velocity.Y -= 0.04f;
                            if ((double)this.velocity.Y > 1.5)
                                this.velocity.Y -= 0.05f;
                            else if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y += 0.03f;
                            if ((double)this.velocity.Y < -1.5)
                                this.velocity.Y = -1.5f;
                        }
                        else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
                        {
                            this.velocity.Y += 0.04f;
                            if ((double)this.velocity.Y < -1.5)
                                this.velocity.Y += 0.05f;
                            else if ((double)this.velocity.Y < 0.0)
                                this.velocity.Y -= 0.03f;
                            if ((double)this.velocity.Y > 1.5)
                                this.velocity.Y = 1.5f;
                        }
                    }
                }
                else
                {
                    float num1 = 4f;
                    float num2 = 1.5f;
                    float num3 = num1 * (float)(1.0 + (1.0 - (double)this.scale));
                    float num4 = num2 * (float)(1.0 + (1.0 - (double)this.scale));
                    if (this.direction == -1 && (double)this.velocity.X > -(double)num3)
                    {
                        this.velocity.X -= 0.1f;
                        if ((double)this.velocity.X > (double)num3)
                            this.velocity.X -= 0.1f;
                        else if ((double)this.velocity.X > 0.0)
                            this.velocity.X += 0.05f;
                        if ((double)this.velocity.X < -(double)num3)
                            this.velocity.X = -num3;
                    }
                    else if (this.direction == 1 && (double)this.velocity.X < (double)num3)
                    {
                        this.velocity.X += 0.1f;
                        if ((double)this.velocity.X < -(double)num3)
                            this.velocity.X += 0.1f;
                        else if ((double)this.velocity.X < 0.0)
                            this.velocity.X -= 0.05f;
                        if ((double)this.velocity.X > (double)num3)
                            this.velocity.X = num3;
                    }
                    if (this.directionY == -1 && (double)this.velocity.Y > -(double)num4)
                    {
                        this.velocity.Y -= 0.04f;
                        if ((double)this.velocity.Y > (double)num4)
                            this.velocity.Y -= 0.05f;
                        else if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y += 0.03f;
                        if ((double)this.velocity.Y < -(double)num4)
                            this.velocity.Y = -num4;
                    }
                    else if (this.directionY == 1 && (double)this.velocity.Y < (double)num4)
                    {
                        this.velocity.Y += 0.04f;
                        if ((double)this.velocity.Y < -(double)num4)
                            this.velocity.Y += 0.05f;
                        else if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y -= 0.03f;
                        if ((double)this.velocity.Y > (double)num4)
                            this.velocity.Y = num4;
                    }
                }
                if ((this.type == 2 || this.type == 133 || (this.type == 190 || this.type == 191) || (this.type == 192 || this.type == 193 || this.type == 194)) && Main.rand.Next(40) == 0)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((double)this.height * 0.5), 5, this.velocity.X, 2f, 0, new Color(), 1f);
                    Main.dust[index].velocity.X *= 0.5f;
                    Main.dust[index].velocity.Y *= 0.1f;
                }
                if (!this.wet || this.type == 170 || (this.type == 171 || this.type == 172))
                    return;
                if ((double)this.velocity.Y > 0.0)
                    this.velocity.Y *= 0.95f;
                this.velocity.Y -= 0.5f;
                if ((double)this.velocity.Y < -4.0)
                    this.velocity.Y = -4f;
                this.TargetClosest(true);
            }
            else if (this.aiStyle == 3)
            {
                if (this.type == 466)
                {
                    int num = 200;
                    if ((double)this.ai[2] == 0.0)
                    {
                        this.alpha = num;
                        this.TargetClosest(true);
                        if (!Main.player[this.target].dead && (double)(Main.player[this.target].Center - this.Center).Length() < 170.0)
                            this.ai[2] = -16f;
                        if ((double)this.velocity.X == 0.0 && (double)this.velocity.Y >= 0.0 && ((double)this.velocity.Y <= 2.0 && !this.justHit))
                            return;
                        this.ai[2] = -16f;
                        return;
                    }
                    if ((double)this.ai[2] < 0.0)
                    {
                        if (this.alpha > 0)
                        {
                            this.alpha -= num / 16;
                            if (this.alpha < 0)
                                this.alpha = 0;
                        }
                        ++this.ai[2];
                        if ((double)this.ai[2] != 0.0)
                            return;
                        this.ai[2] = 1f;
                        this.velocity.X = (float)(this.direction * 2);
                        return;
                    }
                    this.alpha = 0;
                }
                if (this.type == 166)
                {
                    if (Main.netMode != 1 && Main.rand.Next(240) == 0)
                    {
                        this.ai[2] = (float)Main.rand.Next(-480, -60);
                        this.netUpdate = true;
                    }
                    if ((double)this.ai[2] < 0.0)
                    {
                        this.TargetClosest(true);
                        if (this.justHit)
                            this.ai[2] = 0.0f;
                        if (Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                            this.ai[2] = 0.0f;
                    }
                    if ((double)this.ai[2] < 0.0)
                    {
                        this.velocity.X *= 0.9f;
                        if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                            this.velocity.X = 0.0f;
                        ++this.ai[2];
                        if ((double)this.ai[2] != 0.0)
                            return;
                        this.velocity.X = (float)this.direction * 0.1f;
                        return;
                    }
                }
                if (this.type == 461)
                {
                    if (this.wet)
                    {
                        this.knockBackResist = 0.0f;
                        this.ai[3] = -0.10101f;
                        this.noGravity = true;
                        Vector2 center = this.Center;
                        this.width = 34;
                        this.height = 24;
                        this.position.X = center.X - (float)(this.width / 2);
                        this.position.Y = center.Y - (float)(this.height / 2);
                        this.TargetClosest(true);
                        if (this.collideX)
                            this.velocity.X = -this.oldVelocity.X;
                        if ((double)this.velocity.X < 0.0)
                            this.direction = -1;
                        if ((double)this.velocity.X > 0.0)
                            this.direction = 1;
                        if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].Center, 1, 1))
                        {
                            Vector2 vector2 = Main.player[this.target].Center - this.Center;
                            vector2.Normalize();
                            this.velocity = (this.velocity * 19f + vector2 * 5f) / 20f;
                            return;
                        }
                        float num = 5f;
                        if ((double)this.velocity.Y > 0.0)
                            num = 3f;
                        if ((double)this.velocity.Y < 0.0)
                            num = 8f;
                        Vector2 vector2_1 = new Vector2((float)this.direction, -1f);
                        vector2_1.Normalize();
                        Vector2 vector2_2 = vector2_1 * num;
                        if ((double)num < 5.0)
                        {
                            this.velocity = (this.velocity * 24f + vector2_2) / 25f;
                            return;
                        }
                        this.velocity = (this.velocity * 9f + vector2_2) / 10f;
                        return;
                    }
                    this.knockBackResist = 0.4f * Main.knockBackMultiplier;
                    this.noGravity = false;
                    Vector2 center1 = this.Center;
                    this.width = 18;
                    this.height = 40;
                    this.position.X = center1.X - (float)(this.width / 2);
                    this.position.Y = center1.Y - (float)(this.height / 2);
                    if ((double)this.ai[3] == -0.101010002195835)
                    {
                        this.ai[3] = 0.0f;
                        float num = this.velocity.Length() * 2f;
                        if ((double)num > 10.0)
                            num = 10f;
                        this.velocity.Normalize();
                        NPC npc = this;
                        Vector2 vector2 = npc.velocity * num;
                        npc.velocity = vector2;
                        if ((double)this.velocity.X < 0.0)
                            this.direction = -1;
                        if ((double)this.velocity.X > 0.0)
                            this.direction = 1;
                        this.spriteDirection = this.direction;
                    }
                }
                if (this.type == 379 || this.type == 380)
                {
                    if ((double)this.ai[3] < 0.0)
                    {
                        this.damage = 0;
                        this.velocity.X *= 0.93f;
                        if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                            this.velocity.X = 0.0f;
                        int index = (int)(-(double)this.ai[3] - 1.0);
                        int num = Math.Sign(Main.npc[index].Center.X - this.Center.X);
                        if (num != this.direction)
                        {
                            this.velocity.X = 0.0f;
                            this.direction = num;
                            this.netUpdate = true;
                        }
                        if (!this.justHit || Main.netMode == 1 || (double)Main.npc[index].localAI[0] != 0.0)
                            return;
                        Main.npc[index].localAI[0] = 1f;
                        return;
                    }
                    this.damage = this.defDamage;
                }
                if (this.type == 383 && (double)this.ai[2] == 0.0 && ((double)this.localAI[0] == 0.0 && Main.netMode != 1))
                {
                    int index = NPC.NewNPC((int)this.Center.X, (int)this.Center.Y, 384, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    this.ai[2] = (float)(index + 1);
                    this.localAI[0] = -1f;
                    this.netUpdate = true;
                    Main.npc[index].ai[0] = (float)this.whoAmI;
                    Main.npc[index].netUpdate = true;
                }
                if (this.type == 383)
                {
                    int index = (int)this.ai[2] - 1;
                    if (index != -1 && Main.npc[index].active && Main.npc[index].type == 384)
                    {
                        this.dontTakeDamage = true;
                    }
                    else
                    {
                        this.dontTakeDamage = false;
                        this.ai[2] = 0.0f;
                        if ((double)this.localAI[0] == -1.0)
                            this.localAI[0] = 180f;
                        if ((double)this.localAI[0] > 0.0)
                            --this.localAI[0];
                    }
                }
                if (this.type == 482)
                {
                    int num1 = 300;
                    int num2 = 120;
                    this.dontTakeDamage = false;
                    if ((double)this.ai[2] < 0.0)
                    {
                        this.dontTakeDamage = true;
                        ++this.ai[2];
                        this.velocity.X *= 0.9f;
                        if ((double)Math.Abs(this.velocity.X) < 0.001)
                            this.velocity.X = 1.0f / 1000.0f * (float)this.direction;
                        if ((double)Math.Abs(this.velocity.Y) > 1.0)
                            this.ai[2] += 10f;
                        if ((double)this.ai[2] < 0.0)
                            return;
                        this.netUpdate = true;
                        this.velocity.X += (float)this.direction * 0.3f;
                        return;
                    }
                    if ((double)this.ai[2] < (double)num1)
                    {
                        if (this.justHit)
                            this.ai[2] += 15f;
                        ++this.ai[2];
                    }
                    else if ((double)this.velocity.Y == 0.0)
                    {
                        this.ai[2] = (float)-num2;
                        this.netUpdate = true;
                    }
                }
                if (this.type == 480)
                {
                    int num1 = 180;
                    int num2 = 300;
                    int num3 = 180;
                    int num4 = 60;
                    int num5 = 15;
                    if (this.life < this.lifeMax / 3)
                    {
                        num1 = 120;
                        num2 = 240;
                        num3 = 240;
                        num4 = 90;
                    }
                    if ((double)this.ai[2] > 0.0)
                        --this.ai[2];
                    else if ((double)this.ai[2] == 0.0)
                    {
                        if (((double)Main.player[this.target].Center.X < (double)this.Center.X && this.direction < 0 || (double)Main.player[this.target].Center.X > (double)this.Center.X && this.direction > 0) && ((double)this.velocity.Y == 0.0 && Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1)))
                        {
                            this.ai[2] = (float)(-num3 - num5);
                            this.netUpdate = true;
                        }
                    }
                    else
                    {
                        if ((double)this.ai[2] < 0.0 && (double)this.ai[2] < (double)-num3)
                        {
                            this.velocity.X *= 0.9f;
                            if ((double)this.velocity.Y < -2.0 || (double)this.velocity.Y > 4.0 || this.justHit)
                            {
                                this.ai[2] = (float)num1;
                                return;
                            }
                            ++this.ai[2];
                            if ((double)this.ai[2] != 0.0)
                                return;
                            this.ai[2] = (float)num2;
                            return;
                        }
                        if ((double)this.ai[2] < 0.0 && (double)this.ai[2] >= (double)-num3)
                        {
                            this.velocity.X *= 0.9f;
                            if ((double)this.velocity.Y < -2.0 || (double)this.velocity.Y > 4.0 || this.justHit)
                            {
                                this.ai[2] = (float)num1;
                            }
                            else
                            {
                                ++this.ai[2];
                                if ((double)this.ai[2] == 0.0)
                                    this.ai[2] = (float)num2;
                            }
                            if (Main.netMode == 2)
                                return;
                            Player player = Main.player[Main.myPlayer];
                            int num6 = Main.myPlayer;
                            if (player.dead || !player.active || player.HasBuff(156) != -1 || ((double)(player.Center - this.Center).Length() >= 1000.0 || ((double)player.Center.X >= (double)this.Center.X || this.direction >= 0 || player.direction <= 0) && ((double)player.Center.X <= (double)this.Center.X || this.direction <= 0 || player.direction >= 0) || !Collision.CanHit(this.Center, 1, 1, player.Center, 1, 1)))
                                return;
                            player.AddBuff(156, num4 + (int)this.ai[2] * -1, true);
                            return;
                        }
                    }
                }
                if (this.type == 471)
                {
                    if ((double)this.ai[3] < 0.0)
                    {
                        this.knockBackResist = 0.0f;
                        this.defense = (int)((double)this.defDefense * 1.1);
                        this.noGravity = true;
                        this.noTileCollide = true;
                        if ((double)this.velocity.X < 0.0)
                            this.direction = -1;
                        else if ((double)this.velocity.X > 0.0)
                            this.direction = 1;
                        this.rotation = this.velocity.X * 0.1f;
                        if (Main.netMode != 1)
                        {
                            ++this.localAI[3];
                            if ((double)this.localAI[3] > (double)Main.rand.Next(20, 180))
                            {
                                this.localAI[3] = 0.0f;
                                Vector2 vector2 = this.Center + this.velocity;
                                NPC.NewNPC((int)vector2.X, (int)vector2.Y, 30, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                        }
                    }
                    else
                    {
                        this.localAI[3] = 0.0f;
                        this.knockBackResist = 0.35f * Main.knockBackMultiplier;
                        this.rotation *= 0.9f;
                        this.defense = this.defDefense;
                        this.noGravity = false;
                        this.noTileCollide = false;
                    }
                    if ((double)this.ai[3] == 1.0)
                    {
                        this.knockBackResist = 0.0f;
                        this.defense += 10;
                    }
                    if ((double)this.ai[3] == -1.0)
                    {
                        this.TargetClosest(true);
                        float num1 = 8f;
                        float num2 = 40f;
                        Vector2 vector2 = Main.player[this.target].Center - this.Center;
                        float num3 = vector2.Length();
                        float num4 = num1 + num3 / 200f;
                        vector2.Normalize();
                        vector2 *= num4;
                        this.velocity = (this.velocity * (num2 - 1f) + vector2) / num2;
                        if ((double)num3 >= 500.0 || Collision.SolidCollision(this.position, this.width, this.height))
                            return;
                        this.ai[3] = 0.0f;
                        this.ai[2] = 0.0f;
                        return;
                    }
                    if ((double)this.ai[3] == -2.0)
                    {
                        this.velocity.Y -= 0.2f;
                        if ((double)this.velocity.Y < -10.0)
                            this.velocity.Y = -10f;
                        if ((double)Main.player[this.target].Center.Y - (double)this.Center.Y > 200.0)
                        {
                            this.TargetClosest(true);
                            this.ai[3] = -3f;
                            this.ai[2] = (double)Main.player[this.target].Center.X <= (double)this.Center.X ? -1f : 1f;
                        }
                        this.velocity.X *= 0.99f;
                        return;
                    }
                    if ((double)this.ai[3] == -3.0)
                    {
                        if (this.direction == 0)
                            this.TargetClosest(true);
                        if ((double)this.ai[2] == 0.0)
                            this.ai[2] = (float)this.direction;
                        this.velocity.Y *= 0.9f;
                        this.velocity.X += this.ai[2] * 0.3f;
                        if ((double)this.velocity.X > 10.0)
                            this.velocity.X = 10f;
                        if ((double)this.velocity.X < -10.0)
                            this.velocity.X = -10f;
                        float num = Main.player[this.target].Center.X - this.Center.X;
                        if ((double)this.ai[2] < 0.0 && (double)num > 300.0 || (double)this.ai[2] > 0.0 && (double)num < -300.0)
                        {
                            this.ai[3] = -4f;
                            this.ai[2] = 0.0f;
                            return;
                        }
                        if ((double)Math.Abs(num) <= 800.0)
                            return;
                        this.ai[3] = -1f;
                        this.ai[2] = 0.0f;
                        return;
                    }
                    if ((double)this.ai[3] == -4.0)
                    {
                        ++this.ai[2];
                        this.velocity.Y += 0.1f;
                        if ((double)this.velocity.Length() > 4.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.9f;
                            npc.velocity = vector2;
                        }
                        int index1 = (int)this.Center.X / 16;
                        int index2 = (int)((double)this.position.Y + (double)this.height + 12.0) / 16;
                        bool flag = false;
                        for (int index3 = index1 - 1; index3 <= index1 + 1; ++index3)
                        {
                            if (Main.tile[index3, index2] == null)
                                Main.tile[index1, index2] = new Tile();
                            if (Main.tile[index3, index2].active() && Main.tileSolid[(int)Main.tile[index3, index2].type])
                                flag = true;
                        }
                        if (flag && !Collision.SolidCollision(this.position, this.width, this.height))
                        {
                            this.ai[3] = 0.0f;
                            this.ai[2] = 0.0f;
                        }
                        else if ((double)this.ai[2] > 300.0 || (double)this.Center.Y > (double)Main.player[this.target].Center.Y + 200.0)
                        {
                            this.ai[3] = -1f;
                            this.ai[2] = 0.0f;
                        }
                    }
                    else
                    {
                        if ((double)this.ai[3] == 1.0)
                        {
                            Vector2 center = this.Center;
                            center.Y -= 70f;
                            this.velocity.X *= 0.8f;
                            ++this.ai[2];
                            if ((double)this.ai[2] == 60.0)
                            {
                                if (Main.netMode != 1)
                                    NPC.NewNPC((int)center.X, (int)center.Y + 18, 472, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if ((double)this.ai[2] >= 90.0)
                            {
                                this.ai[3] = -2f;
                                this.ai[2] = 0.0f;
                            }
                            for (int index1 = 0; index1 < 2; ++index1)
                            {
                                Vector2 vector2_1 = center;
                                Vector2 vector2_2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                                vector2_2.Normalize();
                                vector2_2 *= (float)Main.rand.Next(0, 100) * 0.1f;
                                Vector2 Position = vector2_1 + vector2_2;
                                vector2_2.Normalize();
                                vector2_2 *= (float)Main.rand.Next(50, 90) * 0.1f;
                                int index2 = Dust.NewDust(Position, 1, 1, 27, 0.0f, 0.0f, 0, new Color(), 1f);
                                Main.dust[index2].velocity = -vector2_2 * 0.3f;
                                Main.dust[index2].alpha = 100;
                                if (Main.rand.Next(2) == 0)
                                {
                                    Main.dust[index2].noGravity = true;
                                    Main.dust[index2].scale += 0.3f;
                                }
                            }
                            return;
                        }
                        ++this.ai[2];
                        int num = 10;
                        if ((double)this.velocity.Y == 0.0 && NPC.CountNPCS(472) < num)
                        {
                            if ((double)this.ai[2] >= 180.0)
                            {
                                this.ai[2] = 0.0f;
                                this.ai[3] = 1f;
                            }
                        }
                        else
                        {
                            if (NPC.CountNPCS(472) >= num)
                                ++this.ai[2];
                            if ((double)this.ai[2] >= 360.0)
                            {
                                this.ai[2] = 0.0f;
                                this.ai[3] = -2f;
                                this.velocity.Y -= 3f;
                            }
                        }
                        if (this.target >= 0 && !Main.player[this.target].dead && (double)(Main.player[this.target].Center - this.Center).Length() > 800.0)
                        {
                            this.ai[3] = -1f;
                            this.ai[2] = 0.0f;
                        }
                    }
                    if (Main.player[this.target].dead)
                    {
                        this.TargetClosest(true);
                        if (Main.player[this.target].dead && this.timeLeft > 1)
                            this.timeLeft = 1;
                    }
                }
                if (this.type == 419)
                {
                    this.reflectingProjectiles = false;
                    this.takenDamageMultiplier = 1f;
                    int num1 = 6;
                    int num2 = 10;
                    float num3 = 16f;
                    if ((double)this.ai[2] > 0.0)
                        --this.ai[2];
                    if ((double)this.ai[2] == 0.0)
                    {
                        if (((double)Main.player[this.target].Center.X < (double)this.Center.X && this.direction < 0 || (double)Main.player[this.target].Center.X > (double)this.Center.X && this.direction > 0) && Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                        {
                            this.ai[2] = -1f;
                            this.netUpdate = true;
                            this.TargetClosest(true);
                        }
                    }
                    else
                    {
                        if ((double)this.ai[2] < 0.0 && (double)this.ai[2] > (double)-num1)
                        {
                            --this.ai[2];
                            this.velocity.X *= 0.9f;
                            return;
                        }
                        if ((double)this.ai[2] == (double)-num1)
                        {
                            --this.ai[2];
                            this.TargetClosest(true);
                            Vector2 vec = this.DirectionTo(Main.player[this.target].Top + new Vector2(0.0f, -30f));
                            if (Utils.HasNaNs(vec))
                                vec = Vector2.Normalize(new Vector2((float)this.spriteDirection, -1f));
                            this.velocity = vec * num3;
                            this.netUpdate = true;
                            return;
                        }
                        if ((double)this.ai[2] < (double)-num1)
                        {
                            --this.ai[2];
                            if ((double)this.velocity.Y == 0.0)
                                this.ai[2] = 60f;
                            else if ((double)this.ai[2] < (double)(-num1 - num2))
                            {
                                this.velocity.Y += 0.15f;
                                if ((double)this.velocity.Y > 24.0)
                                    this.velocity.Y = 24f;
                            }
                            this.reflectingProjectiles = true;
                            this.takenDamageMultiplier = 3f;
                            if (!this.justHit)
                                return;
                            this.ai[2] = 60f;
                            this.netUpdate = true;
                            return;
                        }
                    }
                }
                if (this.type == 415)
                {
                    int num1 = 42;
                    int num2 = 18;
                    if (this.justHit)
                    {
                        this.ai[2] = 120f;
                        this.netUpdate = true;
                    }
                    if ((double)this.ai[2] > 0.0)
                        --this.ai[2];
                    if ((double)this.ai[2] == 0.0)
                    {
                        int num3 = 0;
                        for (int index = 0; index < 200; ++index)
                        {
                            if (Main.npc[index].active && Main.npc[index].type == 516)
                                ++num3;
                        }
                        if (num3 > 6)
                            this.ai[2] = 90f;
                        else if (((double)Main.player[this.target].Center.X < (double)this.Center.X && this.direction < 0 || (double)Main.player[this.target].Center.X > (double)this.Center.X && this.direction > 0) && Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                        {
                            this.ai[2] = -1f;
                            this.netUpdate = true;
                            this.TargetClosest(true);
                        }
                    }
                    else if ((double)this.ai[2] < 0.0 && (double)this.ai[2] > (double)-num1)
                    {
                        --this.ai[2];
                        if ((double)this.ai[2] == (double)-num1)
                            this.ai[2] = (float)(180 + 30 * Main.rand.Next(10));
                        this.velocity.X *= 0.8f;
                        if ((double)this.ai[2] != (double)-num2 && (double)this.ai[2] != (double)(-num2 - 8) && (double)this.ai[2] != (double)(-num2 - 16))
                            return;
                        for (int index = 0; index < 20; ++index)
                        {
                            Vector2 Position = this.Center + Vector2.UnitX * (float)this.spriteDirection * 40f;
                            Dust dust = Main.dust[Dust.NewDust(Position, 0, 0, 259, 0.0f, 0.0f, 0, new Color(), 1f)];
                            Vector2 vector2 = Utils.RotatedByRandom(Vector2.UnitY, 6.28318548202515);
                            dust.position = Position + vector2 * 4f;
                            dust.velocity = vector2 * 2f + Vector2.UnitX * Utils.NextFloat(Main.rand) * (float)this.spriteDirection * 3f;
                            dust.scale = (float)(0.300000011920929 + (double)vector2.X * (double)-this.spriteDirection);
                            dust.fadeIn = 0.7f;
                            dust.noGravity = true;
                        }
                        if ((double)this.velocity.X > -0.5 && (double)this.velocity.X < 0.5)
                            this.velocity.X = 0.0f;
                        if (Main.netMode == 1)
                            return;
                        NPC.NewNPC((int)this.Center.X + this.spriteDirection * 45, (int)this.Center.Y + 8, 516, 0, 0.0f, 0.0f, 0.0f, 0.0f, this.target);
                        return;
                    }
                }
                if (this.type == 428)
                {
                    ++this.localAI[0];
                    if ((double)this.localAI[0] >= 300.0)
                    {
                        int startX = (int)this.Center.X / 16 - 1;
                        int startY = (int)this.Center.Y / 16 - 1;
                        if (!Collision.SolidTiles(startX, startX + 2, startY, startY + 1) && Main.netMode != 1)
                        {
                            this.Transform(427);
                            this.life = this.lifeMax;
                            this.localAI[0] = 0.0f;
                            return;
                        }
                    }
                    int maxValue = (double)this.localAI[0] >= 60.0 ? ((double)this.localAI[0] >= 120.0 ? ((double)this.localAI[0] >= 180.0 ? ((double)this.localAI[0] >= 240.0 ? ((double)this.localAI[0] >= 300.0 ? 1 : 1) : 2) : 4) : 8) : 16;
                    if (Main.rand.Next(maxValue) == 0)
                    {
                        Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                        dust.noGravity = true;
                        dust.scale = 1f;
                        dust.noLight = true;
                        dust.velocity = this.DirectionFrom(dust.position) * dust.velocity.Length();
                        dust.position -= dust.velocity * 5f;
                        dust.position.X += (float)(this.direction * 6);
                        dust.position.Y += 4f;
                    }
                }
                if (this.type == 427)
                {
                    ++this.localAI[0];
                    this.localAI[0] += Math.Abs(this.velocity.X) / 2f;
                    if ((double)this.localAI[0] >= 1200.0 && Main.netMode != 1)
                    {
                        int startX = (int)this.Center.X / 16 - 2;
                        int startY = (int)this.Center.Y / 16 - 3;
                        if (!Collision.SolidTiles(startX, startX + 4, startY, startY + 4))
                        {
                            this.Transform(426);
                            this.life = this.lifeMax;
                            this.localAI[0] = 0.0f;
                            return;
                        }
                    }
                    int maxValue = (double)this.localAI[0] >= 360.0 ? ((double)this.localAI[0] >= 720.0 ? ((double)this.localAI[0] >= 1080.0 ? ((double)this.localAI[0] >= 1440.0 ? ((double)this.localAI[0] >= 1800.0 ? 1 : 1) : 2) : 6) : 16) : 32;
                    if (Main.rand.Next(maxValue) == 0)
                    {
                        Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                        dust.noGravity = true;
                        dust.scale = 1f;
                        dust.noLight = true;
                    }
                }
                bool flag1 = false;
                if ((double)this.velocity.X == 0.0)
                    flag1 = true;
                if (this.justHit)
                    flag1 = false;
                if (Main.netMode != 1 && this.type == 198 && (double)this.life <= (double)this.lifeMax * 0.55)
                    this.Transform(199);
                if (Main.netMode != 1 && this.type == 348 && (double)this.life <= (double)this.lifeMax * 0.55)
                    this.Transform(349);
                int num7 = 60;
                if (this.type == 120)
                {
                    num7 = 180;
                    if ((double)this.ai[3] == -120.0)
                    {
                        NPC npc = this;
                        Vector2 vector2_1 = npc.velocity * 0.0f;
                        npc.velocity = vector2_1;
                        this.ai[3] = 0.0f;
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                        Vector2 vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num1 = this.oldPos[2].X + (float)this.width * 0.5f - vector2_2.X;
                        float num2 = this.oldPos[2].Y + (float)this.height * 0.5f - vector2_2.Y;
                        float num3 = 2f / (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                        float SpeedX = num1 * num3;
                        float SpeedY = num2 * num3;
                        for (int index1 = 0; index1 < 20; ++index1)
                        {
                            int index2 = Dust.NewDust(this.position, this.width, this.height, 71, SpeedX, SpeedY, 200, new Color(), 2f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity.X *= 2f;
                        }
                        for (int index1 = 0; index1 < 20; ++index1)
                        {
                            int index2 = Dust.NewDust(this.oldPos[2], this.width, this.height, 71, -SpeedX, -SpeedY, 200, new Color(), 2f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity.X *= 2f;
                        }
                    }
                }
                bool flag2 = false;
                bool flag3 = true;
                if (this.type == 343 || this.type == 47 || (this.type == 67 || this.type == 109) || (this.type == 110 || this.type == 111 || (this.type == 120 || this.type == 163)) || (this.type == 164 || this.type == 239 || (this.type == 168 || this.type == 199) || (this.type == 206 || this.type == 214 || (this.type == 215 || this.type == 216))) || (this.type == 217 || this.type == 218 || (this.type == 219 || this.type == 220) || (this.type == 226 || this.type == 243 || (this.type == 251 || this.type == 257)) || (this.type == 258 || this.type == 290 || (this.type == 291 || this.type == 292) || (this.type == 293 || this.type == 305 || (this.type == 306 || this.type == 307)))) || (this.type == 308 || this.type == 309 || (this.type == 348 || this.type == 349) || (this.type == 350 || this.type == 351 || this.type == 379) || (this.type >= 430 && this.type <= 436 || (this.type == 380 || this.type == 381) || (this.type == 382 || this.type == 383 || (this.type == 386 || this.type == 391))) || (this.type >= 449 && this.type <= 452 || (this.type == 466 || this.type == 464) || (this.type == 166 || this.type == 469 || (this.type == 468 || this.type == 471)) || (this.type == 470 || this.type == 480 || (this.type == 481 || this.type == 482) || (this.type == 411 || this.type == 424 || this.type == 409)))) || (this.type >= 494 && this.type <= 506 || (this.type == 425 || this.type == 427) || (this.type == 426 || this.type == 428 || (this.type == 508 || this.type == 415)) || (this.type == 419 || this.type == 520 || this.type >= 524 && this.type <= 527 || (this.type == 528 || this.type == 529 || (this.type == 530 || this.type == 532)))))
                    flag3 = false;
                bool flag4 = false;
                switch (this.type)
                {
                    case 425:
                    case 471:
                        flag4 = true;
                        break;
                }
                bool flag5 = true;
                switch (this.type)
                {
                    case 466:
                    case 498:
                    case 499:
                    case 500:
                    case 501:
                    case 502:
                    case 503:
                    case 504:
                    case 505:
                    case 506:
                    case 520:
                    case 379:
                    case 380:
                    case 381:
                    case 382:
                    case 409:
                    case 411:
                    case 424:
                    case 426:
                    case 214:
                    case 215:
                    case 216:
                    case 291:
                    case 292:
                    case 293:
                    case 350:
                    case 110:
                    case 111:
                    case 206:
                        if ((double)this.ai[2] > 0.0)
                        {
                            flag5 = false;
                            break;
                        }
                        break;
                }
                if (!flag4 && flag5)
                {
                    if ((double)this.velocity.Y == 0.0 && ((double)this.velocity.X > 0.0 && this.direction < 0 || (double)this.velocity.X < 0.0 && this.direction > 0))
                        flag2 = true;
                    if ((double)this.position.X == (double)this.oldPosition.X || (double)this.ai[3] >= (double)num7 || flag2)
                        ++this.ai[3];
                    else if ((double)Math.Abs(this.velocity.X) > 0.9 && (double)this.ai[3] > 0.0)
                        --this.ai[3];
                    if ((double)this.ai[3] > (double)(num7 * 10))
                        this.ai[3] = 0.0f;
                    if (this.justHit)
                        this.ai[3] = 0.0f;
                    if ((double)this.ai[3] == (double)num7)
                        this.netUpdate = true;
                }
                if (this.type == 463 && Main.netMode != 1)
                {
                    if ((double)this.localAI[3] > 0.0)
                        --this.localAI[3];
                    if (this.justHit && (double)this.localAI[3] <= 0.0 && Main.rand.Next(3) == 0)
                    {
                        this.localAI[3] = 30f;
                        int length = Main.rand.Next(3, 6);
                        int[] numArray = new int[length];
                        int maxValue = 0;
                        for (int index = 0; index < (int)byte.MaxValue; ++index)
                        {
                            if (Main.player[index].active && !Main.player[index].dead && Collision.CanHitLine(this.position, this.width, this.height, Main.player[index].position, Main.player[index].width, Main.player[index].height))
                            {
                                numArray[maxValue] = index;
                                ++maxValue;
                                if (maxValue == length)
                                    break;
                            }
                        }
                        if (maxValue > 1)
                        {
                            for (int index1 = 0; index1 < 100; ++index1)
                            {
                                int index2 = Main.rand.Next(maxValue);
                                int index3 = index2;
                                while (index3 == index2)
                                    index3 = Main.rand.Next(maxValue);
                                int num1 = numArray[index2];
                                numArray[index2] = numArray[index3];
                                numArray[index3] = num1;
                            }
                        }
                        Vector2 vector2_1 = new Vector2(-1f, -1f);
                        for (int index = 0; index < maxValue; ++index)
                        {
                            Vector2 vector2_2 = Main.npc[numArray[index]].Center - this.Center;
                            vector2_2.Normalize();
                            vector2_1 += vector2_2;
                        }
                        vector2_1.Normalize();
                        for (int index = 0; index < length; ++index)
                        {
                            float num1 = (float)Main.rand.Next(8, 13);
                            Vector2 vector2_2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                            vector2_2.Normalize();
                            if (maxValue > 0)
                            {
                                vector2_2 += vector2_1;
                                vector2_2.Normalize();
                            }
                            vector2_2 *= num1;
                            if (maxValue > 0)
                            {
                                --maxValue;
                                vector2_2 = Main.player[numArray[maxValue]].Center - this.Center;
                                vector2_2.Normalize();
                                vector2_2 *= num1;
                            }
                            Projectile.NewProjectile(this.Center.X, this.position.Y + (float)(this.width / 4), vector2_2.X, vector2_2.Y, 498, (int)((double)this.damage * 0.15), 1f, (int)byte.MaxValue, 0.0f, 0.0f);
                        }
                    }
                }
                if (this.type == 460)
                    this.knockBackResist = (double)this.velocity.Y < -(double)NPC.gravity || (double)this.velocity.Y > (double)NPC.gravity ? 0.0f : 0.25f * Main.knockBackMultiplier;
                if (this.type == 469)
                {
                    this.knockBackResist = 0.45f * Main.knockBackMultiplier;
                    if ((double)this.ai[2] == 1.0)
                        this.knockBackResist = 0.0f;
                    bool flag6 = false;
                    int num1 = (int)this.Center.X / 16;
                    int num2 = (int)this.Center.Y / 16;
                    for (int index1 = num1 - 1; index1 <= num1 + 1; ++index1)
                    {
                        for (int index2 = num2 - 1; index2 <= num2 + 1; ++index2)
                        {
                            if (Main.tile[index1, index2] != null && (int)Main.tile[index1, index2].wall > 0)
                            {
                                flag6 = true;
                                break;
                            }
                        }
                        if (flag6)
                            break;
                    }
                    if ((double)this.ai[2] == 0.0 && flag6)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            this.velocity.Y = -4.6f;
                            this.velocity.X *= 1.3f;
                        }
                        else if ((double)this.velocity.Y > 0.0)
                            this.ai[2] = 1f;
                    }
                    if (flag6 && (double)this.ai[2] == 1.0 && Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                    {
                        Vector2 vector2 = Main.player[this.target].Center - this.Center;
                        float num3 = vector2.Length();
                        vector2.Normalize();
                        this.velocity = (this.velocity * 29f + vector2 * (float)(4.5 + (double)num3 / 300.0)) / 30f;
                        this.noGravity = true;
                        this.ai[2] = 1f;
                        return;
                    }
                    this.noGravity = false;
                    this.ai[2] = 0.0f;
                }
                if (this.type == 462 && (double)this.velocity.Y == 0.0 && ((double)(Main.player[this.target].Center - this.Center).Length() < 150.0 && (double)Math.Abs(this.velocity.X) > 3.0 && ((double)this.velocity.X < 0.0 && (double)this.Center.X > (double)Main.player[this.target].Center.X || (double)this.velocity.X > 0.0 && (double)this.Center.X < (double)Main.player[this.target].Center.X)))
                {
                    this.velocity.X *= 1.75f;
                    this.velocity.Y -= 4.5f;
                    if ((double)this.Center.Y - (double)Main.player[this.target].Center.Y > 20.0)
                        this.velocity.Y -= 0.5f;
                    if ((double)this.Center.Y - (double)Main.player[this.target].Center.Y > 40.0)
                        --this.velocity.Y;
                    if ((double)this.Center.Y - (double)Main.player[this.target].Center.Y > 80.0)
                        this.velocity.Y -= 1.5f;
                    if ((double)this.Center.Y - (double)Main.player[this.target].Center.Y > 100.0)
                        this.velocity.Y -= 1.5f;
                    if ((double)Math.Abs(this.velocity.X) > 7.0)
                    {
                        if ((double)this.velocity.X < 0.0)
                            this.velocity.X = -7f;
                        else
                            this.velocity.X = 7f;
                    }
                }
                if ((double)this.ai[3] < (double)num7 && (Main.eclipse || !Main.dayTime || (double)this.position.Y > Main.worldSurface * 16.0 || Main.invasionType == 1 && (this.type == 343 || this.type == 350) || Main.invasionType == 1 && (this.type == 26 || this.type == 27 || (this.type == 28 || this.type == 73) || (this.type == 111 || this.type == 471)) || (Main.invasionType == 3 && this.type >= 212 && this.type <= 216 || Main.invasionType == 4 && (this.type == 381 || this.type == 382 || (this.type == 383 || this.type == 385) || (this.type == 386 || this.type == 389 || (this.type == 391 || this.type == 520)))) || (this.type == 31 || this.type == 294 || (this.type == 295 || this.type == 296) || (this.type == 47 || this.type == 67 || (this.type == 77 || this.type == 78)) || (this.type == 79 || this.type == 80 || (this.type == 110 || this.type == 120) || (this.type == 168 || this.type == 181 || (this.type == 185 || this.type == 198))) || (this.type == 199 || this.type == 206 || (this.type == 217 || this.type == 218) || (this.type == 219 || this.type == 220 || (this.type == 239 || this.type == 243)) || (this.type == 254 || this.type == (int)byte.MaxValue || (this.type == 257 || this.type == 258) || (this.type == 291 || this.type == 292 || (this.type == 293 || this.type == 379)))) || (this.type == 380 || this.type == 464 || (this.type == 470 || this.type == 424) || this.type == 411 && ((double)this.ai[1] >= 180.0 || (double)this.ai[1] < 90.0) || (this.type == 409 || this.type == 425 || (this.type == 429 || this.type == 427) || (this.type == 428 || this.type == 508 || (this.type == 415 || this.type == 419))) || (this.type >= 524 && this.type <= 527 || (this.type == 528 || this.type == 529) || (this.type == 530 || this.type == 532))))))
                {
                    if ((this.type == 3 || this.type == 331 || (this.type == 332 || this.type == 21) || (this.type >= 449 && this.type <= 452 || (this.type == 31 || this.type == 294)) || (this.type == 295 || this.type == 296 || (this.type == 77 || this.type == 110) || (this.type == 132 || this.type == 167 || (this.type == 161 || this.type == 162))) || (this.type == 186 || this.type == 187 || (this.type == 188 || this.type == 189) || (this.type == 197 || this.type == 200 || (this.type == 201 || this.type == 202)) || (this.type == 203 || this.type == 223 || (this.type == 291 || this.type == 292) || (this.type == 293 || this.type == 320 || (this.type == 321 || this.type == 319)))) || this.type == 481) && Main.rand.Next(1000) == 0)
                        Main.PlaySound(14, (int)this.position.X, (int)this.position.Y, 1);
                    if (this.type == 489 && Main.rand.Next(800) == 0)
                        Main.PlaySound(14, (int)this.position.X, (int)this.position.Y, this.type);
                    if ((this.type == 78 || this.type == 79 || this.type == 80) && Main.rand.Next(500) == 0)
                        Main.PlaySound(26, (int)this.position.X, (int)this.position.Y, 1);
                    if (this.type == 159 && Main.rand.Next(500) == 0)
                        Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 7);
                    if (this.type == 162 && Main.rand.Next(500) == 0)
                        Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 6);
                    if (this.type == 181 && Main.rand.Next(500) == 0)
                        Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 8);
                    if (this.type >= 269 && this.type <= 280 && Main.rand.Next(1000) == 0)
                        Main.PlaySound(14, (int)this.position.X, (int)this.position.Y, 1);
                    this.TargetClosest(true);
                }
                else if ((double)this.ai[2] <= 0.0 || this.type != 110 && this.type != 111 && (this.type != 206 && this.type != 216) && (this.type != 214 && this.type != 215 && (this.type != 291 && this.type != 292)) && (this.type != 293 && this.type != 350 && (this.type != 381 && this.type != 382) && (this.type != 383 && this.type != 385 && (this.type != 386 && this.type != 389))) && (this.type != 391 && this.type != 469 && (this.type != 166 && this.type != 466) && (this.type != 471 && this.type != 411 && (this.type != 409 && this.type != 424)) && (this.type != 425 && this.type != 426 && (this.type != 415 && this.type != 419) && this.type != 520)))
                {
                    if (Main.dayTime && (double)this.position.Y / 16.0 < Main.worldSurface && this.timeLeft > 10)
                        this.timeLeft = 10;
                    if ((double)this.velocity.X == 0.0)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            ++this.ai[0];
                            if ((double)this.ai[0] >= 2.0)
                            {
                                this.direction *= -1;
                                this.spriteDirection = this.direction;
                                this.ai[0] = 0.0f;
                            }
                        }
                    }
                    else
                        this.ai[0] = 0.0f;
                    if (this.direction == 0)
                        this.direction = 1;
                }
                if (this.type == 159 || this.type == 349)
                {
                    if (this.type == 159 && ((double)this.velocity.X > 0.0 && this.direction < 0 || (double)this.velocity.X < 0.0 && this.direction > 0))
                        this.velocity.X *= 0.95f;
                    if ((double)this.velocity.X < -6.0 || (double)this.velocity.X > 6.0)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.8f;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < 6.0 && this.direction == 1)
                    {
                        if ((double)this.velocity.Y == 0.0 && (double)this.velocity.X < 0.0)
                            this.velocity.X *= 0.99f;
                        this.velocity.X += 0.07f;
                        if ((double)this.velocity.X > 6.0)
                            this.velocity.X = 6f;
                    }
                    else if ((double)this.velocity.X > -6.0 && this.direction == -1)
                    {
                        if ((double)this.velocity.Y == 0.0 && (double)this.velocity.X > 0.0)
                            this.velocity.X *= 0.99f;
                        this.velocity.X -= 0.07f;
                        if ((double)this.velocity.X < -6.0)
                            this.velocity.X = -6f;
                    }
                }
                else if (this.type == 199)
                {
                    if ((double)this.velocity.X < -4.0 || (double)this.velocity.X > 4.0)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.8f;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < 4.0 && this.direction == 1)
                    {
                        if ((double)this.velocity.Y == 0.0 && (double)this.velocity.X < 0.0)
                            this.velocity.X *= 0.8f;
                        this.velocity.X += 0.1f;
                        if ((double)this.velocity.X > 4.0)
                            this.velocity.X = 4f;
                    }
                    else if ((double)this.velocity.X > -4.0 && this.direction == -1)
                    {
                        if ((double)this.velocity.Y == 0.0 && (double)this.velocity.X > 0.0)
                            this.velocity.X *= 0.8f;
                        this.velocity.X -= 0.1f;
                        if ((double)this.velocity.X < -4.0)
                            this.velocity.X = -4f;
                    }
                }
                else if (this.type == 120 || this.type == 166 || (this.type == 213 || this.type == 258) || (this.type == 528 || this.type == 529))
                {
                    if ((double)this.velocity.X < -3.0 || (double)this.velocity.X > 3.0)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.8f;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < 3.0 && this.direction == 1)
                    {
                        if ((double)this.velocity.Y == 0.0 && (double)this.velocity.X < 0.0)
                            this.velocity.X *= 0.99f;
                        this.velocity.X += 0.07f;
                        if ((double)this.velocity.X > 3.0)
                            this.velocity.X = 3f;
                    }
                    else if ((double)this.velocity.X > -3.0 && this.direction == -1)
                    {
                        if ((double)this.velocity.Y == 0.0 && (double)this.velocity.X > 0.0)
                            this.velocity.X *= 0.99f;
                        this.velocity.X -= 0.07f;
                        if ((double)this.velocity.X < -3.0)
                            this.velocity.X = -3f;
                    }
                }
                else if (this.type == 461 || this.type == 27 || (this.type == 77 || this.type == 104) || (this.type == 163 || this.type == 162 || (this.type == 196 || this.type == 197)) || (this.type == 212 || this.type == 257 || (this.type == 326 || this.type == 343) || (this.type == 348 || this.type == 351 || this.type >= 524 && this.type <= 527)) || this.type == 530)
                {
                    if ((double)this.velocity.X < -2.0 || (double)this.velocity.X > 2.0)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.8f;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < 2.0 && this.direction == 1)
                    {
                        this.velocity.X += 0.07f;
                        if ((double)this.velocity.X > 2.0)
                            this.velocity.X = 2f;
                    }
                    else if ((double)this.velocity.X > -2.0 && this.direction == -1)
                    {
                        this.velocity.X -= 0.07f;
                        if ((double)this.velocity.X < -2.0)
                            this.velocity.X = -2f;
                    }
                }
                else if (this.type == 109)
                {
                    if ((double)this.velocity.X < -2.0 || (double)this.velocity.X > 2.0)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.8f;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < 2.0 && this.direction == 1)
                    {
                        this.velocity.X += 0.04f;
                        if ((double)this.velocity.X > 2.0)
                            this.velocity.X = 2f;
                    }
                    else if ((double)this.velocity.X > -2.0 && this.direction == -1)
                    {
                        this.velocity.X -= 0.04f;
                        if ((double)this.velocity.X < -2.0)
                            this.velocity.X = -2f;
                    }
                }
                else if (this.type == 21 || this.type == 26 || (this.type == 31 || this.type == 294) || (this.type == 295 || this.type == 296 || (this.type == 47 || this.type == 73)) || (this.type == 140 || this.type == 164 || (this.type == 239 || this.type == 167) || (this.type == 168 || this.type == 185 || (this.type == 198 || this.type == 201))) || (this.type == 202 || this.type == 203 || (this.type == 217 || this.type == 218) || (this.type == 219 || this.type == 226 || (this.type == 181 || this.type == 254)) || (this.type == 338 || this.type == 339 || (this.type == 340 || this.type == 342) || (this.type == 385 || this.type == 389 || (this.type == 462 || this.type == 463)))) || (this.type == 466 || this.type == 464 || (this.type == 469 || this.type == 470) || (this.type == 480 || this.type == 482 || (this.type == 425 || this.type == 429))))
                {
                    float num1 = 1.5f;
                    if (this.type == 294)
                        num1 = 2f;
                    else if (this.type == 295)
                        num1 = 1.75f;
                    else if (this.type == 296)
                        num1 = 1.25f;
                    else if (this.type == 201)
                        num1 = 1.1f;
                    else if (this.type == 202)
                        num1 = 0.9f;
                    else if (this.type == 203)
                        num1 = 1.2f;
                    else if (this.type == 338)
                        num1 = 1.75f;
                    else if (this.type == 339)
                        num1 = 1.25f;
                    else if (this.type == 340)
                        num1 = 2f;
                    else if (this.type == 385)
                        num1 = 1.8f;
                    else if (this.type == 389)
                        num1 = 2.25f;
                    else if (this.type == 462)
                        num1 = 4f;
                    else if (this.type == 463)
                        num1 = 0.75f;
                    else if (this.type == 466)
                        num1 = 3.75f;
                    else if (this.type == 469)
                        num1 = 3.25f;
                    else if (this.type == 480)
                        num1 = (float)(1.5 + (1.0 - (double)this.life / (double)this.lifeMax) * 2.0);
                    else if (this.type == 425)
                        num1 = 6f;
                    else if (this.type == 429)
                        num1 = 4f;
                    if (this.type == 21 || this.type == 201 || (this.type == 202 || this.type == 203) || this.type == 342)
                        num1 *= (float)(1.0 + (1.0 - (double)this.scale));
                    if ((double)this.velocity.X < -(double)num1 || (double)this.velocity.X > (double)num1)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.8f;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < (double)num1 && this.direction == 1)
                    {
                        if (this.type == 466 && (double)this.velocity.X < -2.0)
                            this.velocity.X *= 0.9f;
                        this.velocity.X += 0.07f;
                        if ((double)this.velocity.X > (double)num1)
                            this.velocity.X = num1;
                    }
                    else if ((double)this.velocity.X > -(double)num1 && this.direction == -1)
                    {
                        if (this.type == 466 && (double)this.velocity.X > 2.0)
                            this.velocity.X *= 0.9f;
                        this.velocity.X -= 0.07f;
                        if ((double)this.velocity.X < -(double)num1)
                            this.velocity.X = -num1;
                    }
                    if ((double)this.velocity.Y == 0.0 && this.type == 462 && (this.direction > 0 && (double)this.velocity.X < 0.0 || this.direction < 0 && (double)this.velocity.X > 0.0))
                        this.velocity.X *= 0.9f;
                }
                else if (this.type >= 269 && this.type <= 280)
                {
                    float num1 = 1.5f;
                    if (this.type == 269)
                        num1 = 2f;
                    if (this.type == 270)
                        num1 = 1f;
                    if (this.type == 271)
                        num1 = 1.5f;
                    if (this.type == 272)
                        num1 = 3f;
                    if (this.type == 273)
                        num1 = 1.25f;
                    if (this.type == 274)
                        num1 = 3f;
                    if (this.type == 275)
                        num1 = 3.25f;
                    if (this.type == 276)
                        num1 = 2f;
                    if (this.type == 277)
                        num1 = 2.75f;
                    if (this.type == 278)
                        num1 = 1.8f;
                    if (this.type == 279)
                        num1 = 1.3f;
                    if (this.type == 280)
                        num1 = 2.5f;
                    float num2 = num1 * (float)(1.0 + (1.0 - (double)this.scale));
                    if ((double)this.velocity.X < -(double)num2 || (double)this.velocity.X > (double)num2)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.8f;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < (double)num2 && this.direction == 1)
                    {
                        this.velocity.X += 0.07f;
                        if ((double)this.velocity.X > (double)num2)
                            this.velocity.X = num2;
                    }
                    else if ((double)this.velocity.X > -(double)num2 && this.direction == -1)
                    {
                        this.velocity.X -= 0.07f;
                        if ((double)this.velocity.X < -(double)num2)
                            this.velocity.X = -num2;
                    }
                }
                else if (this.type >= 305 && this.type <= 314)
                {
                    float num1 = 1.5f;
                    if (this.type == 305 || this.type == 310)
                        num1 = 2f;
                    if (this.type == 306 || this.type == 311)
                        num1 = 1.25f;
                    if (this.type == 307 || this.type == 312)
                        num1 = 2.25f;
                    if (this.type == 308 || this.type == 313)
                        num1 = 1.5f;
                    if (this.type == 309 || this.type == 314)
                        num1 = 1f;
                    if (this.type < 310)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            this.velocity.X *= 0.85f;
                            if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
                            {
                                this.velocity.Y = -7f;
                                this.velocity.X = num1 * (float)this.direction;
                            }
                        }
                        else if (this.spriteDirection == this.direction)
                            this.velocity.X = (float)(((double)this.velocity.X * 10.0 + (double)num1 * (double)this.direction) / 11.0);
                    }
                    else if ((double)this.velocity.X < -(double)num1 || (double)this.velocity.X > (double)num1)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.8f;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < (double)num1 && this.direction == 1)
                    {
                        this.velocity.X += 0.07f;
                        if ((double)this.velocity.X > (double)num1)
                            this.velocity.X = num1;
                    }
                    else if ((double)this.velocity.X > -(double)num1 && this.direction == -1)
                    {
                        this.velocity.X -= 0.07f;
                        if ((double)this.velocity.X < -(double)num1)
                            this.velocity.X = -num1;
                    }
                }
                else if (this.type == 67 || this.type == 220 || this.type == 428)
                {
                    if ((double)this.velocity.X < -0.5 || (double)this.velocity.X > 0.5)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.7f;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < 0.5 && this.direction == 1)
                    {
                        this.velocity.X += 0.03f;
                        if ((double)this.velocity.X > 0.5)
                            this.velocity.X = 0.5f;
                    }
                    else if ((double)this.velocity.X > -0.5 && this.direction == -1)
                    {
                        this.velocity.X -= 0.03f;
                        if ((double)this.velocity.X < -0.5)
                            this.velocity.X = -0.5f;
                    }
                }
                else if (this.type == 78 || this.type == 79 || this.type == 80)
                {
                    float num1 = 1f;
                    float num2 = 0.05f;
                    if (this.life < this.lifeMax / 2)
                    {
                        num1 = 2f;
                        num2 = 0.1f;
                    }
                    if (this.type == 79)
                        num1 *= 1.5f;
                    if ((double)this.velocity.X < -(double)num1 || (double)this.velocity.X > (double)num1)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.7f;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < (double)num1 && this.direction == 1)
                    {
                        this.velocity.X += num2;
                        if ((double)this.velocity.X > (double)num1)
                            this.velocity.X = num1;
                    }
                    else if ((double)this.velocity.X > -(double)num1 && this.direction == -1)
                    {
                        this.velocity.X -= num2;
                        if ((double)this.velocity.X < -(double)num1)
                            this.velocity.X = -num1;
                    }
                }
                else if (this.type == 287)
                {
                    float num1 = 5f;
                    float num2 = 0.2f;
                    if ((double)this.velocity.X < -(double)num1 || (double)this.velocity.X > (double)num1)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.7f;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < (double)num1 && this.direction == 1)
                    {
                        this.velocity.X += num2;
                        if ((double)this.velocity.X > (double)num1)
                            this.velocity.X = num1;
                    }
                    else if ((double)this.velocity.X > -(double)num1 && this.direction == -1)
                    {
                        this.velocity.X -= num2;
                        if ((double)this.velocity.X < -(double)num1)
                            this.velocity.X = -num1;
                    }
                }
                else if (this.type == 243)
                {
                    float num1 = 1f;
                    float num2 = 0.07f;
                    float num3 = num1 + (float)((1.0 - (double)this.life / (double)this.lifeMax) * 1.5);
                    float num4 = num2 + (float)((1.0 - (double)this.life / (double)this.lifeMax) * 0.150000005960464);
                    if ((double)this.velocity.X < -(double)num3 || (double)this.velocity.X > (double)num3)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.7f;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < (double)num3 && this.direction == 1)
                    {
                        this.velocity.X += num4;
                        if ((double)this.velocity.X > (double)num3)
                            this.velocity.X = num3;
                    }
                    else if ((double)this.velocity.X > -(double)num3 && this.direction == -1)
                    {
                        this.velocity.X -= num4;
                        if ((double)this.velocity.X < -(double)num3)
                            this.velocity.X = -num3;
                    }
                }
                else if (this.type == 251)
                {
                    float num1 = 1f;
                    float num2 = 0.08f;
                    float num3 = num1 + (float)((1.0 - (double)this.life / (double)this.lifeMax) * 2.0);
                    float num4 = num2 + (float)((1.0 - (double)this.life / (double)this.lifeMax) * 0.200000002980232);
                    if ((double)this.velocity.X < -(double)num3 || (double)this.velocity.X > (double)num3)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.7f;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < (double)num3 && this.direction == 1)
                    {
                        this.velocity.X += num4;
                        if ((double)this.velocity.X > (double)num3)
                            this.velocity.X = num3;
                    }
                    else if ((double)this.velocity.X > -(double)num3 && this.direction == -1)
                    {
                        this.velocity.X -= num4;
                        if ((double)this.velocity.X < -(double)num3)
                            this.velocity.X = -num3;
                    }
                }
                else if (this.type == 386)
                {
                    if ((double)this.ai[2] > 0.0)
                    {
                        if ((double)this.velocity.Y == 0.0)
                            this.velocity.X *= 0.8f;
                    }
                    else
                    {
                        float num1 = 0.15f;
                        float num2 = 1.5f;
                        if ((double)this.velocity.X < -(double)num2 || (double)this.velocity.X > (double)num2)
                        {
                            if ((double)this.velocity.Y == 0.0)
                            {
                                NPC npc = this;
                                Vector2 vector2 = npc.velocity * 0.7f;
                                npc.velocity = vector2;
                            }
                        }
                        else if ((double)this.velocity.X < (double)num2 && this.direction == 1)
                        {
                            this.velocity.X += num1;
                            if ((double)this.velocity.X > (double)num2)
                                this.velocity.X = num2;
                        }
                        else if ((double)this.velocity.X > -(double)num2 && this.direction == -1)
                        {
                            this.velocity.X -= num1;
                            if ((double)this.velocity.X < -(double)num2)
                                this.velocity.X = -num2;
                        }
                    }
                }
                else if (this.type == 460)
                {
                    float num1 = 3f;
                    float num2 = 0.1f;
                    if ((double)Math.Abs(this.velocity.X) > 2.0)
                        num2 *= 0.8f;
                    if ((double)Math.Abs(this.velocity.X) > 2.5)
                        num2 *= 0.8f;
                    if ((double)Math.Abs(this.velocity.X) > 3.0)
                        num2 *= 0.8f;
                    if ((double)Math.Abs(this.velocity.X) > 3.5)
                        num2 *= 0.8f;
                    if ((double)Math.Abs(this.velocity.X) > 4.0)
                        num2 *= 0.8f;
                    if ((double)Math.Abs(this.velocity.X) > 4.5)
                        num2 *= 0.8f;
                    if ((double)Math.Abs(this.velocity.X) > 5.0)
                        num2 *= 0.8f;
                    if ((double)Math.Abs(this.velocity.X) > 5.5)
                        num2 *= 0.8f;
                    float num3 = num1 + (float)((1.0 - (double)this.life / (double)this.lifeMax) * 3.0);
                    if ((double)this.velocity.X < -(double)num3 || (double)this.velocity.X > (double)num3)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.7f;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < (double)num3 && this.direction == 1)
                    {
                        if ((double)this.velocity.X < 0.0)
                            this.velocity.X *= 0.93f;
                        this.velocity.X += num2;
                        if ((double)this.velocity.X > (double)num3)
                            this.velocity.X = num3;
                    }
                    else if ((double)this.velocity.X > -(double)num3 && this.direction == -1)
                    {
                        if ((double)this.velocity.X > 0.0)
                            this.velocity.X *= 0.93f;
                        this.velocity.X -= num2;
                        if ((double)this.velocity.X < -(double)num3)
                            this.velocity.X = -num3;
                    }
                }
                else if (this.type == 508)
                {
                    float num1 = 2.5f;
                    float num2 = 40f;
                    float num3 = Math.Abs(this.velocity.X);
                    if ((double)num3 > 2.75)
                    {
                        num1 = 3.5f;
                        num2 += 80f;
                    }
                    else if ((double)num3 > 2.25)
                    {
                        num1 = 3f;
                        num2 += 60f;
                    }
                    if ((double)Math.Abs(this.velocity.Y) < 0.5)
                    {
                        if ((double)this.velocity.X > 0.0 && this.direction < 0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.9f;
                            npc.velocity = vector2;
                        }
                        if ((double)this.velocity.X < 0.0 && this.direction > 0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.9f;
                            npc.velocity = vector2;
                        }
                    }
                    if ((double)Math.Abs(this.velocity.Y) > (double)NPC.gravity)
                        num2 *= 3f;
                    if ((double)this.velocity.X <= 0.0 && this.direction < 0)
                        this.velocity.X = (float)(((double)this.velocity.X * (double)num2 - (double)num1) / ((double)num2 + 1.0));
                    else if ((double)this.velocity.X >= 0.0 && this.direction > 0)
                        this.velocity.X = (float)(((double)this.velocity.X * (double)num2 + (double)num1) / ((double)num2 + 1.0));
                    else if ((double)Math.Abs(this.Center.X - Main.player[this.target].Center.X) > 20.0 && (double)Math.Abs(this.velocity.Y) <= (double)NPC.gravity)
                    {
                        this.velocity.X *= 0.99f;
                        this.velocity.X += (float)this.direction * 0.025f;
                    }
                }
                else if (this.type == 391 || this.type == 427 || (this.type == 415 || this.type == 419) || (this.type == 518 || this.type == 532))
                {
                    float num1 = 5f;
                    float num2 = 0.25f;
                    float num3 = 0.7f;
                    if (this.type == 427)
                    {
                        num1 = 6f;
                        num2 = 0.2f;
                        num3 = 0.8f;
                    }
                    else if (this.type == 415)
                    {
                        num1 = 4f;
                        num2 = 0.1f;
                        num3 = 0.95f;
                    }
                    else if (this.type == 419)
                    {
                        num1 = 6f;
                        num2 = 0.15f;
                        num3 = 0.85f;
                    }
                    else if (this.type == 518)
                    {
                        num1 = 5f;
                        num2 = 0.1f;
                        num3 = 0.95f;
                    }
                    else if (this.type == 532)
                    {
                        num1 = 5f;
                        num2 = 0.15f;
                        num3 = 0.98f;
                    }
                    if ((double)this.velocity.X < -(double)num1 || (double)this.velocity.X > (double)num1)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * num3;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < (double)num1 && this.direction == 1)
                    {
                        this.velocity.X += num2;
                        if ((double)this.velocity.X > (double)num1)
                            this.velocity.X = num1;
                    }
                    else if ((double)this.velocity.X > -(double)num1 && this.direction == -1)
                    {
                        this.velocity.X -= num2;
                        if ((double)this.velocity.X < -(double)num1)
                            this.velocity.X = -num1;
                    }
                }
                else if (this.type >= 430 && this.type <= 436 || (this.type == 494 || this.type == 495))
                {
                    if ((double)this.ai[2] == 0.0)
                    {
                        this.damage = this.defDamage;
                        float num1 = 1f * (float)(1.0 + (1.0 - (double)this.scale));
                        if ((double)this.velocity.X < -(double)num1 || (double)this.velocity.X > (double)num1)
                        {
                            if ((double)this.velocity.Y == 0.0)
                            {
                                NPC npc = this;
                                Vector2 vector2 = npc.velocity * 0.8f;
                                npc.velocity = vector2;
                            }
                        }
                        else if ((double)this.velocity.X < (double)num1 && this.direction == 1)
                        {
                            this.velocity.X += 0.07f;
                            if ((double)this.velocity.X > (double)num1)
                                this.velocity.X = num1;
                        }
                        else if ((double)this.velocity.X > -(double)num1 && this.direction == -1)
                        {
                            this.velocity.X -= 0.07f;
                            if ((double)this.velocity.X < -(double)num1)
                                this.velocity.X = -num1;
                        }
                        if ((double)this.velocity.Y == 0.0 && (!Main.dayTime || (double)this.position.Y > Main.worldSurface * 16.0) && !Main.player[this.target].dead)
                        {
                            Vector2 vector2 = this.Center - Main.player[this.target].Center;
                            int num2 = 50;
                            if (this.type >= 494 && this.type <= 495)
                                num2 = 42;
                            if ((double)vector2.Length() < (double)num2 && Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                            {
                                this.velocity.X *= 0.7f;
                                this.ai[2] = 1f;
                            }
                        }
                    }
                    else
                    {
                        this.damage = (int)((double)this.defDamage * 1.5);
                        this.ai[3] = 1f;
                        this.velocity.X *= 0.9f;
                        if ((double)Math.Abs(this.velocity.X) < 0.1)
                            this.velocity.X = 0.0f;
                        ++this.ai[2];
                        if ((double)this.ai[2] >= 20.0 || (double)this.velocity.Y != 0.0 || Main.dayTime && (double)this.position.Y < Main.worldSurface * 16.0)
                            this.ai[2] = 0.0f;
                    }
                }
                else if (this.type != 110 && this.type != 111 && (this.type != 206 && this.type != 214) && (this.type != 215 && this.type != 216 && (this.type != 290 && this.type != 291)) && (this.type != 292 && this.type != 293 && (this.type != 350 && this.type != 379) && (this.type != 380 && this.type != 381 && this.type != 382)) && ((this.type < 449 || this.type > 452) && (this.type != 468 && this.type != 481) && (this.type != 411 && this.type != 409 && (this.type < 498 || this.type > 506)) && (this.type != 424 && this.type != 426 && this.type != 520)))
                {
                    float num1 = 1f;
                    if (this.type == 186)
                        num1 = 1.1f;
                    if (this.type == 187)
                        num1 = 0.9f;
                    if (this.type == 188)
                        num1 = 1.2f;
                    if (this.type == 189)
                        num1 = 0.8f;
                    if (this.type == 132)
                        num1 = 0.95f;
                    if (this.type == 200)
                        num1 = 0.87f;
                    if (this.type == 223)
                        num1 = 1.05f;
                    if (this.type == 489)
                    {
                        float num2 = (Main.player[this.target].Center - this.Center).Length() * (1.0f / 400.0f);
                        if ((double)num2 > 1.5)
                            num2 = 1.5f;
                        num1 = (!Main.expertMode ? 2.5f - num2 : 3f - num2) * 0.8f;
                    }
                    if (this.type == 489 || this.type == 3 || (this.type == 132 || this.type == 186) || (this.type == 187 || this.type == 188 || (this.type == 189 || this.type == 200)) || (this.type == 223 || this.type == 331 || this.type == 332))
                        num1 *= (float)(1.0 + (1.0 - (double)this.scale));
                    if ((double)this.velocity.X < -(double)num1 || (double)this.velocity.X > (double)num1)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.8f;
                            npc.velocity = vector2;
                        }
                    }
                    else if ((double)this.velocity.X < (double)num1 && this.direction == 1)
                    {
                        this.velocity.X += 0.07f;
                        if ((double)this.velocity.X > (double)num1)
                            this.velocity.X = num1;
                    }
                    else if ((double)this.velocity.X > -(double)num1 && this.direction == -1)
                    {
                        this.velocity.X -= 0.07f;
                        if ((double)this.velocity.X < -(double)num1)
                            this.velocity.X = -num1;
                    }
                }
                if (this.type >= 277 && this.type <= 280)
                    Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.2f, 0.1f, 0.0f);
                else if (this.type == 520)
                    Lighting.AddLight(this.Top + new Vector2(0.0f, 20f), 0.3f, 0.3f, 0.7f);
                else if (this.type == 525)
                    Lighting.AddLight(this.Top + new Vector2(0.0f, 15f), new Vector3(0.7f, 1f, 0.2f) * 0.5f);
                else if (this.type == 526)
                    Lighting.AddLight(this.Top + new Vector2(0.0f, 15f), new Vector3(1f, 1f, 0.5f) * 0.4f);
                else if (this.type == 527)
                    Lighting.AddLight(this.Top + new Vector2(0.0f, 15f), new Vector3(0.6f, 0.3f, 1f) * 0.4f);
                else if (this.type == 415)
                {
                    this.hide = false;
                    for (int index = 0; index < 200; ++index)
                    {
                        if (Main.npc[index].active && Main.npc[index].type == 416 && (double)Main.npc[index].ai[0] == (double)this.whoAmI)
                        {
                            this.hide = true;
                            break;
                        }
                    }
                }
                else if (this.type == 258)
                {
                    if ((double)this.velocity.Y != 0.0)
                    {
                        this.TargetClosest(true);
                        this.spriteDirection = this.direction;
                        if ((double)Main.player[this.target].Center.X < (double)this.position.X && (double)this.velocity.X > 0.0)
                            this.velocity.X *= 0.95f;
                        else if ((double)Main.player[this.target].Center.X > (double)this.position.X + (double)this.width && (double)this.velocity.X < 0.0)
                            this.velocity.X *= 0.95f;
                        if ((double)Main.player[this.target].Center.X < (double)this.position.X && (double)this.velocity.X > -5.0)
                            this.velocity.X -= 0.1f;
                        else if ((double)Main.player[this.target].Center.X > (double)this.position.X + (double)this.width && (double)this.velocity.X < 5.0)
                            this.velocity.X += 0.1f;
                    }
                    else if ((double)Main.player[this.target].Center.Y + 50.0 < (double)this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                        this.velocity.Y = -7f;
                }
                else if (this.type == 425)
                {
                    if ((double)this.velocity.Y == 0.0)
                        this.ai[2] = 0.0f;
                    if ((double)this.velocity.Y != 0.0 && (double)this.ai[2] == 1.0)
                    {
                        this.TargetClosest(true);
                        this.spriteDirection = -this.direction;
                        if (Collision.CanHit(this.Center, 0, 0, Main.player[this.target].Center, 0, 0))
                        {
                            float num1 = Main.player[this.target].Center.X - (float)(this.direction * 400) - this.Center.X;
                            float num2 = Main.player[this.target].Bottom.Y - this.Bottom.Y;
                            if ((double)num1 < 0.0 && (double)this.velocity.X > 0.0)
                                this.velocity.X *= 0.9f;
                            else if ((double)num1 > 0.0 && (double)this.velocity.X < 0.0)
                                this.velocity.X *= 0.9f;
                            if ((double)num1 < 0.0 && (double)this.velocity.X > -5.0)
                                this.velocity.X -= 0.1f;
                            else if ((double)num1 > 0.0 && (double)this.velocity.X < 5.0)
                                this.velocity.X += 0.1f;
                            if ((double)this.velocity.X > 6.0)
                                this.velocity.X = 6f;
                            if ((double)this.velocity.X < -6.0)
                                this.velocity.X = -6f;
                            if ((double)num2 < -20.0 && (double)this.velocity.Y > 0.0)
                                this.velocity.Y *= 0.8f;
                            else if ((double)num2 > 20.0 && (double)this.velocity.Y < 0.0)
                                this.velocity.Y *= 0.8f;
                            if ((double)num2 < -20.0 && (double)this.velocity.Y > -5.0)
                                this.velocity.Y -= 0.3f;
                            else if ((double)num2 > 20.0 && (double)this.velocity.Y < 5.0)
                                this.velocity.Y += 0.3f;
                        }
                        if (Main.rand.Next(3) == 0)
                        {
                            Vector2 Position = this.Center + new Vector2((float)(this.direction * -14), -8f) - Vector2.One * 4f;
                            Vector2 vector2 = new Vector2((float)(this.direction * -6), 12f) * 0.2f + Utils.RandomVector2(Main.rand, -1f, 1f) * 0.1f;
                            Dust dust = Main.dust[Dust.NewDust(Position, 8, 8, 229, vector2.X, vector2.Y, 100, Color.Transparent, (float)(1.0 + (double)Utils.NextFloat(Main.rand) * 0.5))];
                            dust.noGravity = true;
                            dust.velocity = vector2;
                            dust.customData = (object)this;
                        }
                        for (int index = 0; index < 200; ++index)
                        {
                            if (index != this.whoAmI && Main.npc[index].active && (Main.npc[index].type == this.type && (double)Math.Abs(this.position.X - Main.npc[index].position.X) + (double)Math.Abs(this.position.Y - Main.npc[index].position.Y) < (double)this.width))
                            {
                                if ((double)this.position.X < (double)Main.npc[index].position.X)
                                    this.velocity.X -= 0.05f;
                                else
                                    this.velocity.X += 0.05f;
                                if ((double)this.position.Y < (double)Main.npc[index].position.Y)
                                    this.velocity.Y -= 0.05f;
                                else
                                    this.velocity.Y += 0.05f;
                            }
                        }
                    }
                    else if ((double)Main.player[this.target].Center.Y + 100.0 < (double)this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                    {
                        this.velocity.Y = -5f;
                        this.ai[2] = 1f;
                    }
                    if (Main.netMode != 1)
                    {
                        ++this.localAI[2];
                        if ((double)this.localAI[2] >= (double)(360 + Main.rand.Next(360)) && (double)this.Distance(Main.player[this.target].Center) < 400.0 && ((double)Math.Abs(this.DirectionTo(Main.player[this.target].Center).Y) < 0.5 && Collision.CanHitLine(this.Center, 0, 0, Main.player[this.target].Center, 0, 0)))
                        {
                            this.localAI[2] = 0.0f;
                            Vector2 vector2_1 = this.Center + new Vector2((float)(this.direction * 30), 2f);
                            Vector2 vec = this.DirectionTo(Main.player[this.target].Center) * 7f;
                            if (Utils.HasNaNs(vec))
                                vec = new Vector2((float)(this.direction * 8), 0.0f);
                            int Damage = Main.expertMode ? 50 : 75;
                            for (int index = 0; index < 4; ++index)
                            {
                                Vector2 vector2_2 = vec + Utils.RandomVector2(Main.rand, -0.8f, 0.8f);
                                Projectile.NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 577, Damage, 1f, Main.myPlayer, 0.0f, 0.0f);
                            }
                        }
                    }
                }
                else if (this.type == 427)
                {
                    if ((double)this.velocity.Y == 0.0)
                    {
                        this.ai[2] = 0.0f;
                        this.rotation = 0.0f;
                    }
                    else
                        this.rotation = this.velocity.X * 0.1f;
                    if ((double)this.velocity.Y != 0.0 && (double)this.ai[2] == 1.0)
                    {
                        this.TargetClosest(true);
                        this.spriteDirection = -this.direction;
                        if (Collision.CanHit(this.Center, 0, 0, Main.player[this.target].Center, 0, 0))
                        {
                            float num1 = Main.player[this.target].Center.X - this.Center.X;
                            float num2 = Main.player[this.target].Center.Y - this.Center.Y;
                            if ((double)num1 < 0.0 && (double)this.velocity.X > 0.0)
                                this.velocity.X *= 0.98f;
                            else if ((double)num1 > 0.0 && (double)this.velocity.X < 0.0)
                                this.velocity.X *= 0.98f;
                            if ((double)num1 < -20.0 && (double)this.velocity.X > -6.0)
                                this.velocity.X -= 0.015f;
                            else if ((double)num1 > 20.0 && (double)this.velocity.X < 6.0)
                                this.velocity.X += 0.015f;
                            if ((double)this.velocity.X > 6.0)
                                this.velocity.X = 6f;
                            if ((double)this.velocity.X < -6.0)
                                this.velocity.X = -6f;
                            if ((double)num2 < -20.0 && (double)this.velocity.Y > 0.0)
                                this.velocity.Y *= 0.98f;
                            else if ((double)num2 > 20.0 && (double)this.velocity.Y < 0.0)
                                this.velocity.Y *= 0.98f;
                            if ((double)num2 < -20.0 && (double)this.velocity.Y > -6.0)
                                this.velocity.Y -= 0.15f;
                            else if ((double)num2 > 20.0 && (double)this.velocity.Y < 6.0)
                                this.velocity.Y += 0.15f;
                        }
                        for (int index = 0; index < 200; ++index)
                        {
                            if (index != this.whoAmI && Main.npc[index].active && (Main.npc[index].type == this.type && (double)Math.Abs(this.position.X - Main.npc[index].position.X) + (double)Math.Abs(this.position.Y - Main.npc[index].position.Y) < (double)this.width))
                            {
                                if ((double)this.position.X < (double)Main.npc[index].position.X)
                                    this.velocity.X -= 0.05f;
                                else
                                    this.velocity.X += 0.05f;
                                if ((double)this.position.Y < (double)Main.npc[index].position.Y)
                                    this.velocity.Y -= 0.05f;
                                else
                                    this.velocity.Y += 0.05f;
                            }
                        }
                    }
                    else if ((double)Main.player[this.target].Center.Y + 100.0 < (double)this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                    {
                        this.velocity.Y = -5f;
                        this.ai[2] = 1f;
                    }
                }
                else if (this.type == 426)
                {
                    if ((double)this.ai[1] > 0.0 && (double)this.velocity.Y > 0.0)
                    {
                        this.velocity.Y *= 0.85f;
                        if ((double)this.velocity.Y == 0.0)
                            this.velocity.Y = -0.4f;
                    }
                    if ((double)this.velocity.Y != 0.0)
                    {
                        this.TargetClosest(true);
                        this.spriteDirection = this.direction;
                        if (Collision.CanHit(this.Center, 0, 0, Main.player[this.target].Center, 0, 0))
                        {
                            float num1 = Main.player[this.target].Center.X - (float)(this.direction * 300) - this.Center.X;
                            if ((double)num1 < 40.0 && (double)this.velocity.X > 0.0)
                                this.velocity.X *= 0.98f;
                            else if ((double)num1 > 40.0 && (double)this.velocity.X < 0.0)
                                this.velocity.X *= 0.98f;
                            if ((double)num1 < 40.0 && (double)this.velocity.X > -5.0)
                                this.velocity.X -= 0.2f;
                            else if ((double)num1 > 40.0 && (double)this.velocity.X < 5.0)
                                this.velocity.X += 0.2f;
                            if ((double)this.velocity.X > 6.0)
                                this.velocity.X = 6f;
                            if ((double)this.velocity.X < -6.0)
                                this.velocity.X = -6f;
                        }
                    }
                    else if ((double)Main.player[this.target].Center.Y + 100.0 < (double)this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                        this.velocity.Y = -6f;
                    for (int index = 0; index < 200; ++index)
                    {
                        if (index != this.whoAmI && Main.npc[index].active && (Main.npc[index].type == this.type && (double)Math.Abs(this.position.X - Main.npc[index].position.X) + (double)Math.Abs(this.position.Y - Main.npc[index].position.Y) < (double)this.width))
                        {
                            if ((double)this.position.X < (double)Main.npc[index].position.X)
                                this.velocity.X -= 0.1f;
                            else
                                this.velocity.X += 0.1f;
                            if ((double)this.position.Y < (double)Main.npc[index].position.Y)
                                this.velocity.Y -= 0.1f;
                            else
                                this.velocity.Y += 0.1f;
                        }
                    }
                    if (Main.rand.Next(6) == 0 && (double)this.ai[1] <= 20.0)
                    {
                        Dust dust = Main.dust[Dust.NewDust(this.Center + new Vector2(this.spriteDirection == 1 ? 8f : -20f, -20f), 8, 8, 229, this.velocity.X, this.velocity.Y, 100, new Color(), 1f)];
                        dust.velocity = dust.velocity / 4f + this.velocity / 2f;
                        dust.scale = 0.6f;
                        dust.noLight = true;
                    }
                    if ((double)this.ai[1] >= 57.0)
                    {
                        int Type = Utils.SelectRandom<int>(Main.rand, 161, 229);
                        Dust dust = Main.dust[Dust.NewDust(this.Center + new Vector2(this.spriteDirection == 1 ? 8f : -20f, -20f), 8, 8, Type, this.velocity.X, this.velocity.Y, 100, new Color(), 1f)];
                        dust.velocity = dust.velocity / 4f + this.DirectionTo(Main.player[this.target].Top);
                        dust.scale = 1.2f;
                        dust.noLight = true;
                    }
                    if (Main.rand.Next(6) == 0)
                    {
                        Dust dust = Main.dust[Dust.NewDust(this.Center, 2, 2, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                        dust.position = this.Center + new Vector2(this.spriteDirection == 1 ? 26f : -26f, 24f);
                        dust.velocity.X = 0.0f;
                        if ((double)dust.velocity.Y < 0.0)
                            dust.velocity.Y = 0.0f;
                        dust.noGravity = true;
                        dust.scale = 1f;
                        dust.noLight = true;
                    }
                }
                else if (this.type == 185)
                {
                    if ((double)this.velocity.Y == 0.0)
                    {
                        this.rotation = 0.0f;
                        this.localAI[0] = 0.0f;
                    }
                    else if ((double)this.localAI[0] == 1.0)
                        this.rotation += this.velocity.X * 0.05f;
                }
                else if (this.type == 428)
                {
                    if ((double)this.velocity.Y == 0.0)
                        this.rotation = 0.0f;
                    else
                        this.rotation += this.velocity.X * 0.08f;
                }
                if (this.type == 159 && Main.netMode != 1)
                {
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                    float num2 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y;
                    if (Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2) > 300.0)
                        this.Transform(158);
                }
                if (this.type == 164 && Main.netMode != 1 && (double)this.velocity.Y == 0.0)
                {
                    int num1 = (int)this.Center.X / 16;
                    int num2 = (int)this.Center.Y / 16;
                    bool flag6 = false;
                    for (int index1 = num1 - 1; index1 <= num1 + 1; ++index1)
                    {
                        for (int index2 = num2 - 1; index2 <= num2 + 1; ++index2)
                        {
                            if ((int)Main.tile[index1, index2].wall > 0)
                                flag6 = true;
                        }
                    }
                    if (flag6)
                        this.Transform(165);
                }
                if (this.type == 239 && Main.netMode != 1 && (double)this.velocity.Y == 0.0)
                {
                    int num1 = (int)this.Center.X / 16;
                    int num2 = (int)this.Center.Y / 16;
                    bool flag6 = false;
                    for (int index1 = num1 - 1; index1 <= num1 + 1; ++index1)
                    {
                        for (int index2 = num2 - 1; index2 <= num2 + 1; ++index2)
                        {
                            if ((int)Main.tile[index1, index2].wall > 0)
                                flag6 = true;
                        }
                    }
                    if (flag6)
                        this.Transform(240);
                }
                if (this.type == 530 && Main.netMode != 1 && (double)this.velocity.Y == 0.0)
                {
                    int num1 = (int)this.Center.X / 16;
                    int num2 = (int)this.Center.Y / 16;
                    bool flag6 = false;
                    for (int index1 = num1 - 1; index1 <= num1 + 1; ++index1)
                    {
                        for (int index2 = num2 - 1; index2 <= num2 + 1; ++index2)
                        {
                            if ((int)Main.tile[index1, index2].wall > 0)
                                flag6 = true;
                        }
                    }
                    if (flag6)
                        this.Transform(531);
                }
                if (Main.netMode != 1 && Main.expertMode && this.target >= 0 && ((this.type == 163 || this.type == 238) && Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1)))
                {
                    ++this.localAI[0];
                    if (this.justHit)
                    {
                        this.localAI[0] -= (float)Main.rand.Next(20, 60);
                        if ((double)this.localAI[0] < 0.0)
                            this.localAI[0] = 0.0f;
                    }
                    if ((double)this.localAI[0] > (double)Main.rand.Next(180, 900))
                    {
                        this.localAI[0] = 0.0f;
                        Vector2 vector2_1 = Main.player[this.target].Center - this.Center;
                        vector2_1.Normalize();
                        Vector2 vector2_2 = vector2_1 * 8f;
                        Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2_2.X, vector2_2.Y, 472, 18, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                }
                if (this.type == 163 && Main.netMode != 1 && (double)this.velocity.Y == 0.0)
                {
                    int num1 = (int)this.Center.X / 16;
                    int num2 = (int)this.Center.Y / 16;
                    bool flag6 = false;
                    for (int index1 = num1 - 1; index1 <= num1 + 1; ++index1)
                    {
                        for (int index2 = num2 - 1; index2 <= num2 + 1; ++index2)
                        {
                            if ((int)Main.tile[index1, index2].wall > 0)
                                flag6 = true;
                        }
                    }
                    if (flag6)
                        this.Transform(238);
                }
                if (this.type == 236 && Main.netMode != 1 && (double)this.velocity.Y == 0.0)
                {
                    int num1 = (int)this.Center.X / 16;
                    int num2 = (int)this.Center.Y / 16;
                    bool flag6 = false;
                    for (int index1 = num1 - 1; index1 <= num1 + 1; ++index1)
                    {
                        for (int index2 = num2 - 1; index2 <= num2 + 1; ++index2)
                        {
                            if ((int)Main.tile[index1, index2].wall > 0)
                                flag6 = true;
                        }
                    }
                    if (flag6)
                        this.Transform(237);
                }
                if (this.type == 243)
                {
                    if (this.justHit && Main.rand.Next(3) == 0)
                        this.ai[2] -= (float)Main.rand.Next(30);
                    if ((double)this.ai[2] < 0.0)
                        this.ai[2] = 0.0f;
                    if (this.confused)
                        this.ai[2] = 0.0f;
                    ++this.ai[2];
                    float num1 = (float)Main.rand.Next(30, 900) * ((float)this.life / (float)this.lifeMax) + 30f;
                    if (Main.netMode != 1 && (double)this.ai[2] >= (double)num1 && ((double)this.velocity.Y == 0.0 && !Main.player[this.target].dead) && !Main.player[this.target].frozen && ((this.direction > 0 && (double)this.Center.X < (double)Main.player[this.target].Center.X || this.direction < 0 && (double)this.Center.X > (double)Main.player[this.target].Center.X) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height)))
                    {
                        float num2 = 15f;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + 20f);
                        vector2.X += (float)(10 * this.direction);
                        float num3 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                        float num4 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y;
                        float num5 = num3 + (float)Main.rand.Next(-40, 41);
                        float num6 = num4 + (float)Main.rand.Next(-40, 41);
                        float num8 = (float)Math.Sqrt((double)num5 * (double)num5 + (double)num6 * (double)num6);
                        this.netUpdate = true;
                        float num9 = num2 / num8;
                        float SpeedX = num5 * num9;
                        float SpeedY = num6 * num9;
                        int Damage = 32;
                        int Type = 257;
                        vector2.X += SpeedX * 3f;
                        vector2.Y += SpeedY * 3f;
                        Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        this.ai[2] = 0.0f;
                    }
                }
                if (this.type == 251)
                {
                    if (this.justHit)
                        this.ai[2] -= (float)Main.rand.Next(30);
                    if ((double)this.ai[2] < 0.0)
                        this.ai[2] = 0.0f;
                    if (this.confused)
                        this.ai[2] = 0.0f;
                    ++this.ai[2];
                    float num1 = (float)Main.rand.Next(60, 1800) * ((float)this.life / (float)this.lifeMax) + 15f;
                    if (Main.netMode != 1 && (double)this.ai[2] >= (double)num1 && ((double)this.velocity.Y == 0.0 && !Main.player[this.target].dead) && !Main.player[this.target].frozen && ((this.direction > 0 && (double)this.Center.X < (double)Main.player[this.target].Center.X || this.direction < 0 && (double)this.Center.X > (double)Main.player[this.target].Center.X) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height)))
                    {
                        float num2 = 15f;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + 12f);
                        vector2.X += (float)(6 * this.direction);
                        float num3 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                        float num4 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y;
                        float num5 = num3 + (float)Main.rand.Next(-40, 41);
                        float num6 = num4 + (float)Main.rand.Next(-30, 0);
                        float num8 = (float)Math.Sqrt((double)num5 * (double)num5 + (double)num6 * (double)num6);
                        this.netUpdate = true;
                        float num9 = num2 / num8;
                        float SpeedX = num5 * num9;
                        float SpeedY = num6 * num9;
                        int Damage = 30;
                        int Type = 83;
                        vector2.X += SpeedX * 3f;
                        vector2.Y += SpeedY * 3f;
                        Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        this.ai[2] = 0.0f;
                    }
                }
                if (this.type == 386)
                {
                    if (this.confused)
                    {
                        this.ai[2] = -60f;
                    }
                    else
                    {
                        if ((double)this.ai[2] < 60.0)
                            ++this.ai[2];
                        if ((double)this.ai[2] > 0.0 && NPC.CountNPCS(387) >= 4 * NPC.CountNPCS(386))
                            this.ai[2] = 0.0f;
                        if (this.justHit)
                            this.ai[2] = -30f;
                        if ((double)this.ai[2] == 30.0)
                        {
                            int num1 = (int)this.position.X / 16;
                            int num2 = (int)this.position.Y / 16;
                            int num3 = (int)this.position.X / 16;
                            int num4 = (int)this.position.Y / 16;
                            int num5 = 5;
                            int num6 = 0;
                            bool flag6 = false;
                            int num8 = 2;
                            int num9 = 0;
                            while (!flag6 && num6 < 100)
                            {
                                ++num6;
                                int index1 = Main.rand.Next(num1 - num5, num1 + num5);
                                for (int index2 = Main.rand.Next(num2 - num5, num2 + num5); index2 < num2 + num5; ++index2)
                                {
                                    if ((index2 < num2 - num8 || index2 > num2 + num8 || (index1 < num1 - num8 || index1 > num1 + num8)) && (index2 < num4 - num9 || index2 > num4 + num9 || (index1 < num3 - num9 || index1 > num3 + num9)) && Main.tile[index1, index2].nactive())
                                    {
                                        bool flag7 = true;
                                        if (Main.tile[index1, index2 - 1].lava())
                                            flag7 = false;
                                        if (flag7 && Main.tileSolid[(int)Main.tile[index1, index2].type] && !Collision.SolidTiles(index1 - 1, index1 + 1, index2 - 4, index2 - 1))
                                        {
                                            int index3 = NPC.NewNPC(index1 * 16 - this.width / 2, index2 * 16, 387, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            Main.npc[index3].position.Y = (float)(index2 * 16 - Main.npc[index3].height);
                                            flag6 = true;
                                            this.netUpdate = true;
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        if ((double)this.ai[2] == 60.0)
                            this.ai[2] = -120f;
                    }
                }
                if (this.type == 389)
                {
                    if (this.confused)
                    {
                        this.ai[2] = -60f;
                    }
                    else
                    {
                        if ((double)this.ai[2] < 20.0)
                            ++this.ai[2];
                        if (this.justHit)
                            this.ai[2] = -30f;
                        if ((double)this.ai[2] == 20.0 && Main.netMode != 1)
                        {
                            this.ai[2] = (float)(Main.rand.Next(3) * -10 - 10);
                            Projectile.NewProjectile(this.Center.X, this.Center.Y + 8f, (float)(this.direction * 6), 0.0f, 437, 25, 1f, Main.myPlayer, 0.0f, 0.0f);
                        }
                    }
                }
                if (this.type == 110 || this.type == 111 || (this.type == 206 || this.type == 214) || (this.type == 215 || this.type == 216 || (this.type == 290 || this.type == 291)) || (this.type == 292 || this.type == 293 || (this.type == 350 || this.type == 379) || (this.type == 380 || this.type == 381 || this.type == 382)) || (this.type >= 449 && this.type <= 452 || (this.type == 468 || this.type == 481) || (this.type == 411 || this.type == 409 || this.type >= 498 && this.type <= 506) || (this.type == 424 || this.type == 426 || this.type == 520)))
                {
                    bool flag6 = this.type == 381 || this.type == 382 || this.type == 520;
                    bool flag7 = this.type == 426;
                    bool flag8 = true;
                    int num1 = -1;
                    int num2 = -1;
                    if (this.type == 411)
                    {
                        flag6 = true;
                        num1 = 90;
                        num2 = 90;
                        if ((double)this.ai[1] <= 150.0)
                            flag8 = false;
                    }
                    if (this.confused)
                    {
                        this.ai[2] = 0.0f;
                    }
                    else
                    {
                        if ((double)this.ai[1] > 0.0)
                            --this.ai[1];
                        if (this.justHit)
                        {
                            this.ai[1] = 30f;
                            this.ai[2] = 0.0f;
                        }
                        int num3 = 70;
                        if (this.type == 379 || this.type == 380)
                            num3 = 80;
                        if (this.type == 381 || this.type == 382)
                            num3 = 80;
                        if (this.type == 520)
                            num3 = 15;
                        if (this.type == 350)
                            num3 = 110;
                        if (this.type == 291)
                            num3 = 200;
                        if (this.type == 292)
                            num3 = 120;
                        if (this.type == 293)
                            num3 = 90;
                        if (this.type == 111)
                            num3 = 180;
                        if (this.type == 206)
                            num3 = 50;
                        if (this.type == 214)
                            num3 = 40;
                        if (this.type == 215)
                            num3 = 80;
                        if (this.type == 290)
                            num3 = 30;
                        if (this.type == 411)
                            num3 = 300;
                        if (this.type == 409)
                            num3 = 60;
                        if (this.type == 424)
                            num3 = 180;
                        if (this.type == 426)
                            num3 = 60;
                        bool flag9 = false;
                        if (this.type == 216)
                        {
                            if ((double)this.localAI[2] >= 20.0)
                                flag9 = true;
                            num3 = !flag9 ? 8 : 60;
                        }
                        int num4 = num3 / 2;
                        if (this.type == 424)
                            num4 = num3 - 1;
                        if (this.type == 426)
                            num4 = num3 - 1;
                        if ((double)this.ai[2] > 0.0)
                        {
                            if (flag8)
                                this.TargetClosest(true);
                            if ((double)this.ai[1] == (double)num4)
                            {
                                if (this.type == 216)
                                    ++this.localAI[2];
                                float num5 = 11f;
                                if (this.type == 111)
                                    num5 = 9f;
                                if (this.type == 206)
                                    num5 = 7f;
                                if (this.type == 290)
                                    num5 = 9f;
                                if (this.type == 293)
                                    num5 = 4f;
                                if (this.type == 214)
                                    num5 = 14f;
                                if (this.type == 215)
                                    num5 = 16f;
                                if (this.type == 382)
                                    num5 = 7f;
                                if (this.type == 520)
                                    num5 = 8f;
                                if (this.type == 409)
                                    num5 = 4f;
                                if (this.type >= 449 && this.type <= 452)
                                    num5 = 7f;
                                if (this.type == 481)
                                    num5 = 9f;
                                if (this.type == 468)
                                    num5 = 7.5f;
                                if (this.type == 411)
                                    num5 = 1f;
                                if (this.type >= 498 && this.type <= 506)
                                    num5 = 7f;
                                Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                                if (this.type == 481)
                                    vector2.Y -= 14f;
                                if (this.type == 206)
                                    vector2.Y -= 10f;
                                if (this.type == 290)
                                    vector2.Y -= 10f;
                                if (this.type == 381 || this.type == 382)
                                    vector2.Y += 6f;
                                if (this.type == 520)
                                    vector2.Y = this.position.Y + 20f;
                                if (this.type >= 498 && this.type <= 506)
                                    vector2.Y -= 8f;
                                if (this.type == 426)
                                    vector2 += new Vector2((float)(this.spriteDirection * 2), -12f);
                                float num6 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                                float num8 = Math.Abs(num6) * 0.1f;
                                if (this.type == 291 || this.type == 292)
                                    num8 = 0.0f;
                                if (this.type == 215)
                                    num8 = Math.Abs(num6) * 0.08f;
                                if (this.type == 214 || this.type == 216 && !flag9)
                                    num8 = 0.0f;
                                if (this.type == 381 || this.type == 382 || this.type == 520)
                                    num8 = 0.0f;
                                if (this.type >= 449 && this.type <= 452)
                                    num8 = (float)((double)Math.Abs(num6) * (double)Main.rand.Next(10, 50) * 0.00999999977648258);
                                if (this.type == 468)
                                    num8 = (float)((double)Math.Abs(num6) * (double)Main.rand.Next(10, 50) * 0.00999999977648258);
                                if (this.type == 481)
                                    num8 = (float)((double)Math.Abs(num6) * (double)Main.rand.Next(-10, 11) * (1.0 / 400.0));
                                if (this.type >= 498 && this.type <= 506)
                                    num8 = (float)((double)Math.Abs(num6) * (double)Main.rand.Next(1, 11) * (1.0 / 400.0));
                                float num9 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y - num8;
                                if (this.type == 291)
                                {
                                    num6 += (float)Main.rand.Next(-40, 41) * 0.2f;
                                    num9 += (float)Main.rand.Next(-40, 41) * 0.2f;
                                }
                                else if (this.type == 381 || this.type == 382 || this.type == 520)
                                {
                                    float num10 = num6 + (float)Main.rand.Next(-100, 101) * 0.4f;
                                    float num11 = num9 + (float)Main.rand.Next(-100, 101) * 0.4f;
                                    num6 = num10 * ((float)Main.rand.Next(85, 116) * 0.01f);
                                    num9 = num11 * ((float)Main.rand.Next(85, 116) * 0.01f);
                                    if (this.type == 520)
                                    {
                                        float num12 = num6 + (float)Main.rand.Next(-100, 101) * 0.6f;
                                        float num13 = num9 + (float)Main.rand.Next(-100, 101) * 0.6f;
                                        num6 = num12 * ((float)Main.rand.Next(85, 116) * 0.015f);
                                        num9 = num13 * ((float)Main.rand.Next(85, 116) * 0.015f);
                                    }
                                }
                                else if (this.type == 481)
                                {
                                    num6 += (float)Main.rand.Next(-40, 41) * 0.4f;
                                    num9 += (float)Main.rand.Next(-40, 41) * 0.4f;
                                }
                                else if (this.type >= 498 && this.type <= 506)
                                {
                                    num6 += (float)Main.rand.Next(-40, 41) * 0.3f;
                                    num9 += (float)Main.rand.Next(-40, 41) * 0.3f;
                                }
                                else if (this.type != 292)
                                {
                                    num6 += (float)Main.rand.Next(-40, 41);
                                    num9 += (float)Main.rand.Next(-40, 41);
                                }
                                float num14 = (float)Math.Sqrt((double)num6 * (double)num6 + (double)num9 * (double)num9);
                                this.netUpdate = true;
                                float num15 = num5 / num14;
                                float num16 = num6 * num15;
                                float SpeedY = num9 * num15;
                                int Damage = 35;
                                int Type = 82;
                                if (this.type == 111)
                                    Damage = 11;
                                if (this.type == 206)
                                    Damage = 37;
                                if (this.type == 379 || this.type == 380)
                                    Damage = 40;
                                if (this.type == 350)
                                    Damage = 45;
                                if (this.type == 468)
                                    Damage = 50;
                                if (this.type == 111)
                                    Type = 81;
                                if (this.type == 379 || this.type == 380)
                                    Type = 81;
                                if (this.type == 381)
                                {
                                    Type = 436;
                                    Damage = 24;
                                }
                                if (this.type == 382)
                                {
                                    Type = 438;
                                    Damage = 30;
                                }
                                if (this.type == 520)
                                {
                                    Type = 592;
                                    Damage = 35;
                                }
                                if (this.type >= 449 && this.type <= 452)
                                {
                                    Type = 471;
                                    Damage = 20;
                                }
                                if (this.type >= 498 && this.type <= 506)
                                {
                                    Type = 572;
                                    Damage = 14;
                                }
                                if (this.type == 481)
                                {
                                    Type = 508;
                                    Damage = 24;
                                }
                                if (this.type == 206)
                                    Type = 177;
                                if (this.type == 468)
                                    Type = 501;
                                if (this.type == 411)
                                {
                                    Type = 537;
                                    Damage = Main.expertMode ? 45 : 60;
                                }
                                if (this.type == 424)
                                {
                                    Type = 573;
                                    Damage = Main.expertMode ? 45 : 60;
                                }
                                if (this.type == 426)
                                {
                                    Type = 581;
                                    Damage = Main.expertMode ? 45 : 60;
                                }
                                if (this.type == 291)
                                {
                                    Type = 302;
                                    Damage = 100;
                                }
                                if (this.type == 290)
                                {
                                    Type = 300;
                                    Damage = 60;
                                }
                                if (this.type == 293)
                                {
                                    Type = 303;
                                    Damage = 60;
                                }
                                if (this.type == 214)
                                {
                                    Type = 180;
                                    Damage = 25;
                                }
                                if (this.type == 215)
                                {
                                    Type = 82;
                                    Damage = 40;
                                }
                                if (this.type == 292)
                                {
                                    Damage = 50;
                                    Type = 180;
                                }
                                if (this.type == 216)
                                {
                                    Type = 180;
                                    Damage = 30;
                                    if (flag9)
                                    {
                                        Damage = 100;
                                        Type = 240;
                                        this.localAI[2] = 0.0f;
                                    }
                                }
                                vector2.X += num16;
                                vector2.Y += SpeedY;
                                if (Main.expertMode && this.type == 290)
                                    Damage = (int)((double)Damage * 0.75);
                                if (Main.expertMode && this.type >= 381 && this.type <= 392)
                                    Damage = (int)((double)Damage * 0.8);
                                if (Main.netMode != 1)
                                {
                                    if (this.type == 292)
                                    {
                                        for (int index = 0; index < 4; ++index)
                                        {
                                            float num10 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                                            float num11 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y;
                                            float num12 = 12f / (float)Math.Sqrt((double)num10 * (double)num10 + (double)num11 * (double)num11);
                                            float num13;
                                            float num17 = num13 = num10 + (float)Main.rand.Next(-40, 41);
                                            float num18;
                                            float num19 = num18 = num11 + (float)Main.rand.Next(-40, 41);
                                            num16 = num17 * num12;
                                            SpeedY = num19 * num12;
                                            Projectile.NewProjectile(vector2.X, vector2.Y, num16, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                        }
                                    }
                                    else if (this.type == 411)
                                        Projectile.NewProjectile(vector2.X, vector2.Y, num16, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, (float)this.whoAmI);
                                    else if (this.type == 424)
                                    {
                                        for (int index = 0; index < 4; ++index)
                                            Projectile.NewProjectile(this.Center.X - (float)(this.spriteDirection * 4), this.Center.Y + 6f, (float)(2 * index - 3) * 0.15f, (float)((double)-Main.rand.Next(0, 3) * 0.200000002980232 - 0.100000001490116), Type, Damage, 0.0f, Main.myPlayer, 0.0f, (float)this.whoAmI);
                                    }
                                    else if (this.type == 409)
                                    {
                                        int index = NPC.NewNPC((int)this.Center.X, (int)this.Center.Y, 410, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        Main.npc[index].velocity = new Vector2(num16, SpeedY - 6f);
                                    }
                                    else
                                        Projectile.NewProjectile(vector2.X, vector2.Y, num16, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                }
                                this.ai[2] = (double)Math.Abs(SpeedY) <= (double)Math.Abs(num16) * 2.0 ? ((double)Math.Abs(num16) <= (double)Math.Abs(SpeedY) * 2.0 ? ((double)SpeedY <= 0.0 ? 4f : 2f) : 3f) : ((double)SpeedY <= 0.0 ? 5f : 1f);
                            }
                            if ((double)this.velocity.Y != 0.0 && !flag7 || (double)this.ai[1] <= 0.0)
                            {
                                this.ai[2] = 0.0f;
                                this.ai[1] = 0.0f;
                            }
                            else if (!flag6 || num1 != -1 && (double)this.ai[1] >= (double)num1 && (double)this.ai[1] < (double)(num1 + num2) && (!flag7 || (double)this.velocity.Y == 0.0))
                            {
                                this.velocity.X *= 0.9f;
                                this.spriteDirection = this.direction;
                            }
                        }
                        if (this.type == 468 && !Main.eclipse)
                            flag6 = true;
                        else if (((double)this.ai[2] <= 0.0 || flag6) && ((double)this.velocity.Y == 0.0 || flag7) && ((double)this.ai[1] <= 0.0 && !Main.player[this.target].dead))
                        {
                            bool flag10 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
                            if (this.type == 520)
                                flag10 = Collision.CanHitLine(this.Top + new Vector2(0.0f, 20f), 0, 0, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
                            if ((double)Main.player[this.target].stealth == 0.0 && Main.player[this.target].itemAnimation == 0)
                                flag10 = false;
                            if (flag10)
                            {
                                float num5 = 10f;
                                Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                                float num6 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                                float num8 = Math.Abs(num6) * 0.1f;
                                float num9 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y - num8;
                                float num10 = num6 + (float)Main.rand.Next(-40, 41);
                                float num11 = num9 + (float)Main.rand.Next(-40, 41);
                                float num12 = (float)Math.Sqrt((double)num10 * (double)num10 + (double)num11 * (double)num11);
                                float num13 = 700f;
                                if (this.type == 214)
                                    num13 = 550f;
                                if (this.type == 215)
                                    num13 = 800f;
                                if (this.type >= 498 && this.type <= 506)
                                    num13 = 190f;
                                if (this.type >= 449 && this.type <= 452)
                                    num13 = 200f;
                                if (this.type == 481)
                                    num13 = 400f;
                                if (this.type == 468)
                                    num13 = 400f;
                                if ((double)num12 < (double)num13)
                                {
                                    this.netUpdate = true;
                                    this.velocity.X *= 0.5f;
                                    float num14 = num5 / num12;
                                    float num15 = num10 * num14;
                                    float num16 = num11 * num14;
                                    this.ai[2] = 3f;
                                    this.ai[1] = (float)num3;
                                    this.ai[2] = (double)Math.Abs(num16) <= (double)Math.Abs(num15) * 2.0 ? ((double)Math.Abs(num15) <= (double)Math.Abs(num16) * 2.0 ? ((double)num16 <= 0.0 ? 4f : 2f) : 3f) : ((double)num16 <= 0.0 ? 5f : 1f);
                                }
                            }
                        }
                        if ((double)this.ai[2] <= 0.0 || flag6 && (num1 == -1 || (double)this.ai[1] < (double)num1 || (double)this.ai[1] >= (double)(num1 + num2)))
                        {
                            float num5 = 1f;
                            float num6 = 0.07f;
                            float num8 = 0.8f;
                            if (this.type == 214)
                            {
                                num5 = 2f;
                                num6 = 0.09f;
                            }
                            else if (this.type == 215)
                            {
                                num5 = 1.5f;
                                num6 = 0.08f;
                            }
                            else if (this.type == 381 || this.type == 382)
                            {
                                num5 = 2f;
                                num6 = 0.5f;
                            }
                            else if (this.type == 520)
                            {
                                num5 = 4f;
                                num6 = 1f;
                                num8 = 0.7f;
                            }
                            else if (this.type == 411)
                            {
                                num5 = 2f;
                                num6 = 0.5f;
                            }
                            else if (this.type == 409)
                            {
                                num5 = 2f;
                                num6 = 0.5f;
                            }
                            bool flag10 = false;
                            if ((this.type == 381 || this.type == 382) && ((double)Vector2.Distance(this.Center, Main.player[this.target].Center) < 300.0 && Collision.CanHitLine(this.Center, 0, 0, Main.player[this.target].Center, 0, 0)))
                            {
                                flag10 = true;
                                this.ai[3] = 0.0f;
                            }
                            if (this.type == 520 && (double)Vector2.Distance(this.Center, Main.player[this.target].Center) < 400.0 && Collision.CanHitLine(this.Center, 0, 0, Main.player[this.target].Center, 0, 0))
                            {
                                flag10 = true;
                                this.ai[3] = 0.0f;
                            }
                            if ((double)this.velocity.X < -(double)num5 || (double)this.velocity.X > (double)num5 || flag10)
                            {
                                if ((double)this.velocity.Y == 0.0)
                                {
                                    NPC npc = this;
                                    Vector2 vector2 = npc.velocity * num8;
                                    npc.velocity = vector2;
                                }
                            }
                            else if ((double)this.velocity.X < (double)num5 && this.direction == 1)
                            {
                                this.velocity.X += num6;
                                if ((double)this.velocity.X > (double)num5)
                                    this.velocity.X = num5;
                            }
                            else if ((double)this.velocity.X > -(double)num5 && this.direction == -1)
                            {
                                this.velocity.X -= num6;
                                if ((double)this.velocity.X < -(double)num5)
                                    this.velocity.X = -num5;
                            }
                        }
                        if (this.type == 520)
                        {
                            ++this.localAI[2];
                            if ((double)this.localAI[2] >= 6.0)
                            {
                                this.localAI[2] = 0.0f;
                                this.localAI[3] = Utils.ToRotation(Main.player[this.target].DirectionFrom(this.Top + new Vector2(0.0f, 20f)));
                            }
                        }
                    }
                }
                if (this.type == 109 && Main.netMode != 1 && !Main.player[this.target].dead)
                {
                    if (this.justHit)
                        this.ai[2] = 0.0f;
                    ++this.ai[2];
                    if ((double)this.ai[2] > 450.0)
                    {
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 24), this.position.Y + 4f);
                        int num1 = 3 * this.direction;
                        int num2 = -5;
                        int index = Projectile.NewProjectile(vector2.X, vector2.Y, (float)num1, (float)num2, 75, 0, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        Main.projectile[index].timeLeft = 300;
                        this.ai[2] = 0.0f;
                    }
                }
                bool flag11 = false;
                if ((double)this.velocity.Y == 0.0)
                {
                    int index1 = (int)((double)this.position.Y + (double)this.height + 7.0) / 16;
                    int num1 = (int)this.position.X / 16;
                    int num2 = (int)((double)this.position.X + (double)this.width) / 16;
                    for (int index2 = num1; index2 <= num2; ++index2)
                    {
                        if (Main.tile[index2, index1] == null)
                            return;
                        if (Main.tile[index2, index1].nactive() && Main.tileSolid[(int)Main.tile[index2, index1].type])
                        {
                            flag11 = true;
                            break;
                        }
                    }
                }
                if (this.type == 428)
                    flag11 = false;
                if ((double)this.velocity.Y >= 0.0)
                {
                    int num1 = 0;
                    if ((double)this.velocity.X < 0.0)
                        num1 = -1;
                    if ((double)this.velocity.X > 0.0)
                        num1 = 1;
                    Vector2 vector2 = this.position;
                    vector2.X += this.velocity.X;
                    int index1 = (int)(((double)vector2.X + (double)(this.width / 2) + (double)((this.width / 2 + 1) * num1)) / 16.0);
                    int index2 = (int)(((double)vector2.Y + (double)this.height - 1.0) / 16.0);
                    if (Main.tile[index1, index2] == null)
                        Main.tile[index1, index2] = new Tile();
                    if (Main.tile[index1, index2 - 1] == null)
                        Main.tile[index1, index2 - 1] = new Tile();
                    if (Main.tile[index1, index2 - 2] == null)
                        Main.tile[index1, index2 - 2] = new Tile();
                    if (Main.tile[index1, index2 - 3] == null)
                        Main.tile[index1, index2 - 3] = new Tile();
                    if (Main.tile[index1, index2 + 1] == null)
                        Main.tile[index1, index2 + 1] = new Tile();
                    if (Main.tile[index1 - num1, index2 - 3] == null)
                        Main.tile[index1 - num1, index2 - 3] = new Tile();
                    if ((double)(index1 * 16) < (double)vector2.X + (double)this.width && (double)(index1 * 16 + 16) > (double)vector2.X && (Main.tile[index1, index2].nactive() && !Main.tile[index1, index2].topSlope() && (!Main.tile[index1, index2 - 1].topSlope() && Main.tileSolid[(int)Main.tile[index1, index2].type]) && !Main.tileSolidTop[(int)Main.tile[index1, index2].type] || Main.tile[index1, index2 - 1].halfBrick() && Main.tile[index1, index2 - 1].nactive()) && ((!Main.tile[index1, index2 - 1].nactive() || !Main.tileSolid[(int)Main.tile[index1, index2 - 1].type] || Main.tileSolidTop[(int)Main.tile[index1, index2 - 1].type] || Main.tile[index1, index2 - 1].halfBrick() && (!Main.tile[index1, index2 - 4].nactive() || !Main.tileSolid[(int)Main.tile[index1, index2 - 4].type] || Main.tileSolidTop[(int)Main.tile[index1, index2 - 4].type])) && ((!Main.tile[index1, index2 - 2].nactive() || !Main.tileSolid[(int)Main.tile[index1, index2 - 2].type] || Main.tileSolidTop[(int)Main.tile[index1, index2 - 2].type]) && (!Main.tile[index1, index2 - 3].nactive() || !Main.tileSolid[(int)Main.tile[index1, index2 - 3].type] || Main.tileSolidTop[(int)Main.tile[index1, index2 - 3].type]) && (!Main.tile[index1 - num1, index2 - 3].nactive() || !Main.tileSolid[(int)Main.tile[index1 - num1, index2 - 3].type]))))
                    {
                        float num2 = (float)(index2 * 16);
                        if (Main.tile[index1, index2].halfBrick())
                            num2 += 8f;
                        if (Main.tile[index1, index2 - 1].halfBrick())
                            num2 -= 8f;
                        if ((double)num2 < (double)vector2.Y + (double)this.height)
                        {
                            float num3 = vector2.Y + (float)this.height - num2;
                            float num4 = 16.1f;
                            if (this.type == 163 || this.type == 164 || (this.type == 236 || this.type == 239) || this.type == 530)
                                num4 += 8f;
                            if ((double)num3 <= (double)num4)
                            {
                                this.gfxOffY += this.position.Y + (float)this.height - num2;
                                this.position.Y = num2 - (float)this.height;
                                this.stepSpeed = (double)num3 >= 9.0 ? 2f : 1f;
                            }
                        }
                    }
                }
                if (flag11)
                {
                    int index1 = (int)(((double)this.position.X + (double)(this.width / 2) + (double)(15 * this.direction)) / 16.0);
                    int index2 = (int)(((double)this.position.Y + (double)this.height - 15.0) / 16.0);
                    if (this.type == 109 || this.type == 163 || (this.type == 164 || this.type == 199) || (this.type == 236 || this.type == 239 || (this.type == 257 || this.type == 258)) || (this.type == 290 || this.type == 391 || (this.type == 425 || this.type == 427) || (this.type == 426 || this.type == 508 || (this.type == 415 || this.type == 530))) || this.type == 532)
                        index1 = (int)(((double)this.position.X + (double)(this.width / 2) + (double)((this.width / 2 + 16) * this.direction)) / 16.0);
                    if (Main.tile[index1, index2] == null)
                        Main.tile[index1, index2] = new Tile();
                    if (Main.tile[index1, index2 - 1] == null)
                        Main.tile[index1, index2 - 1] = new Tile();
                    if (Main.tile[index1, index2 - 2] == null)
                        Main.tile[index1, index2 - 2] = new Tile();
                    if (Main.tile[index1, index2 - 3] == null)
                        Main.tile[index1, index2 - 3] = new Tile();
                    if (Main.tile[index1, index2 + 1] == null)
                        Main.tile[index1, index2 + 1] = new Tile();
                    if (Main.tile[index1 + this.direction, index2 - 1] == null)
                        Main.tile[index1 + this.direction, index2 - 1] = new Tile();
                    if (Main.tile[index1 + this.direction, index2 + 1] == null)
                        Main.tile[index1 + this.direction, index2 + 1] = new Tile();
                    if (Main.tile[index1 - this.direction, index2 + 1] == null)
                        Main.tile[index1 - this.direction, index2 + 1] = new Tile();
                    Main.tile[index1, index2 + 1].halfBrick();
                    if (Main.tile[index1, index2 - 1].nactive() && ((int)Main.tile[index1, index2 - 1].type == 10 || (int)Main.tile[index1, index2 - 1].type == 388) && flag3)
                    {
                        ++this.ai[2];
                        this.ai[3] = 0.0f;
                        if ((double)this.ai[2] >= 60.0)
                        {
                            if (!Main.bloodMoon && (this.type == 3 || this.type == 331 || (this.type == 332 || this.type == 132) || (this.type == 161 || this.type == 186 || (this.type == 187 || this.type == 188)) || (this.type == 189 || this.type == 200 || (this.type == 223 || this.type == 320) || (this.type == 321 || this.type == 319))))
                                this.ai[1] = 0.0f;
                            this.velocity.X = 0.5f * (float)-this.direction;
                            int num1 = 5;
                            if ((int)Main.tile[index1, index2 - 1].type == 388)
                                num1 = 2;
                            this.ai[1] += (float)num1;
                            if (this.type == 27)
                                ++this.ai[1];
                            if (this.type == 31 || this.type == 294 || (this.type == 295 || this.type == 296))
                                this.ai[1] += 6f;
                            this.ai[2] = 0.0f;
                            bool flag6 = false;
                            if ((double)this.ai[1] >= 10.0)
                            {
                                flag6 = true;
                                this.ai[1] = 10f;
                            }
                            if (this.type == 460)
                                flag6 = true;
                            WorldGen.KillTile(index1, index2 - 1, true, false, false);
                            if ((Main.netMode != 1 || !flag6) && (flag6 && Main.netMode != 1))
                            {
                                if (this.type == 26)
                                {
                                    WorldGen.KillTile(index1, index2 - 1, false, false, false);
                                    if (Main.netMode == 2)
                                        NetMessage.SendData(17, -1, -1, "", 0, (float)index1, (float)(index2 - 1), 0.0f, 0, 0, 0);
                                }
                                else
                                {
                                    if ((int)Main.tile[index1, index2 - 1].type == 10)
                                    {
                                        bool flag7 = WorldGen.OpenDoor(index1, index2 - 1, this.direction);
                                        if (!flag7)
                                        {
                                            this.ai[3] = (float)num7;
                                            this.netUpdate = true;
                                        }
                                        if (Main.netMode == 2 && flag7)
                                            NetMessage.SendData(19, -1, -1, "", 0, (float)index1, (float)(index2 - 1), (float)this.direction, 0, 0, 0);
                                    }
                                    if ((int)Main.tile[index1, index2 - 1].type == 388)
                                    {
                                        bool flag7 = WorldGen.ShiftTallGate(index1, index2 - 1, false);
                                        if (!flag7)
                                        {
                                            this.ai[3] = (float)num7;
                                            this.netUpdate = true;
                                        }
                                        if (Main.netMode == 2 && flag7)
                                            NetMessage.SendData(19, -1, -1, "", 4, (float)index1, (float)(index2 - 1), 0.0f, 0, 0, 0);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        int num1 = this.spriteDirection;
                        if (this.type == 425)
                            num1 *= -1;
                        if ((double)this.velocity.X < 0.0 && num1 == -1 || (double)this.velocity.X > 0.0 && num1 == 1)
                        {
                            if (this.height >= 32 && Main.tile[index1, index2 - 2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2 - 2].type])
                            {
                                if (Main.tile[index1, index2 - 3].nactive() && Main.tileSolid[(int)Main.tile[index1, index2 - 3].type])
                                {
                                    this.velocity.Y = -8f;
                                    this.netUpdate = true;
                                }
                                else
                                {
                                    this.velocity.Y = -7f;
                                    this.netUpdate = true;
                                }
                            }
                            else if (Main.tile[index1, index2 - 1].nactive() && Main.tileSolid[(int)Main.tile[index1, index2 - 1].type])
                            {
                                this.velocity.Y = -6f;
                                this.netUpdate = true;
                            }
                            else if ((double)this.position.Y + (double)this.height - (double)(index2 * 16) > 20.0 && Main.tile[index1, index2].nactive() && (!Main.tile[index1, index2].topSlope() && Main.tileSolid[(int)Main.tile[index1, index2].type]))
                            {
                                this.velocity.Y = -5f;
                                this.netUpdate = true;
                            }
                            else if (this.directionY < 0 && this.type != 67 && (!Main.tile[index1, index2 + 1].nactive() || !Main.tileSolid[(int)Main.tile[index1, index2 + 1].type]) && (!Main.tile[index1 + this.direction, index2 + 1].nactive() || !Main.tileSolid[(int)Main.tile[index1 + this.direction, index2 + 1].type]))
                            {
                                this.velocity.Y = -8f;
                                this.velocity.X *= 1.5f;
                                this.netUpdate = true;
                            }
                            else if (flag3)
                            {
                                this.ai[1] = 0.0f;
                                this.ai[2] = 0.0f;
                            }
                            if ((double)this.velocity.Y == 0.0 && flag1 && (double)this.ai[3] == 1.0)
                                this.velocity.Y = -5f;
                        }
                        if ((this.type == 31 || this.type == 294 || (this.type == 295 || this.type == 296) || (this.type == 47 || this.type == 77 || (this.type == 104 || this.type == 168)) || (this.type == 196 || this.type == 385 || (this.type == 389 || this.type == 464) || (this.type == 470 || this.type >= 524 && this.type <= 527))) && ((double)this.velocity.Y == 0.0 && (double)Math.Abs((float)((double)this.position.X + (double)(this.width / 2) - ((double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2)))) < 100.0 && (double)Math.Abs((float)((double)this.position.Y + (double)(this.height / 2) - ((double)Main.player[this.target].position.Y + (double)(Main.player[this.target].height / 2)))) < 50.0 && (this.direction > 0 && (double)this.velocity.X >= 1.0 || this.direction < 0 && (double)this.velocity.X <= -1.0)))
                        {
                            this.velocity.X *= 2f;
                            if ((double)this.velocity.X > 3.0)
                                this.velocity.X = 3f;
                            if ((double)this.velocity.X < -3.0)
                                this.velocity.X = -3f;
                            this.velocity.Y = -4f;
                            this.netUpdate = true;
                        }
                        if (this.type == 120 && (double)this.velocity.Y < 0.0)
                            this.velocity.Y *= 1.1f;
                        if (this.type == 287 && (double)this.velocity.Y == 0.0 && ((double)Math.Abs((float)((double)this.position.X + (double)(this.width / 2) - ((double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2)))) < 150.0 && (double)Math.Abs((float)((double)this.position.Y + (double)(this.height / 2) - ((double)Main.player[this.target].position.Y + (double)(Main.player[this.target].height / 2)))) < 50.0) && (this.direction > 0 && (double)this.velocity.X >= 1.0 || this.direction < 0 && (double)this.velocity.X <= -1.0))
                        {
                            this.velocity.X = (float)(8 * this.direction);
                            this.velocity.Y = -4f;
                            this.netUpdate = true;
                        }
                        if (this.type == 287 && (double)this.velocity.Y < 0.0)
                        {
                            this.velocity.X *= 1.2f;
                            this.velocity.Y *= 1.1f;
                        }
                        if (this.type == 460 && (double)this.velocity.Y < 0.0)
                        {
                            this.velocity.X *= 1.3f;
                            this.velocity.Y *= 1.1f;
                        }
                    }
                }
                else if (flag3)
                {
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                }
                if (Main.netMode == 1 || this.type != 120 || (double)this.ai[3] < (double)num7)
                    return;
                int num20 = (int)Main.player[this.target].position.X / 16;
                int num21 = (int)Main.player[this.target].position.Y / 16;
                int num22 = (int)this.position.X / 16;
                int num23 = (int)this.position.Y / 16;
                int num24 = 20;
                int num25 = 0;
                bool flag12 = false;
                if ((double)Math.Abs(this.position.X - Main.player[this.target].position.X) + (double)Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000.0)
                {
                    num25 = 100;
                    flag12 = true;
                }
                while (!flag12 && num25 < 100)
                {
                    ++num25;
                    int index1 = Main.rand.Next(num20 - num24, num20 + num24);
                    for (int index2 = Main.rand.Next(num21 - num24, num21 + num24); index2 < num21 + num24; ++index2)
                    {
                        if ((index2 < num21 - 4 || index2 > num21 + 4 || (index1 < num20 - 4 || index1 > num20 + 4)) && (index2 < num23 - 1 || index2 > num23 + 1 || (index1 < num22 - 1 || index1 > num22 + 1)) && Main.tile[index1, index2].nactive())
                        {
                            bool flag6 = true;
                            if (this.type == 32 && (int)Main.tile[index1, index2 - 1].wall == 0)
                                flag6 = false;
                            else if (Main.tile[index1, index2 - 1].lava())
                                flag6 = false;
                            if (flag6 && Main.tileSolid[(int)Main.tile[index1, index2].type] && !Collision.SolidTiles(index1 - 1, index1 + 1, index2 - 4, index2 - 1))
                            {
                                this.position.X = (float)(index1 * 16 - this.width / 2);
                                this.position.Y = (float)(index2 * 16 - this.height);
                                this.netUpdate = true;
                                this.ai[3] = -120f;
                            }
                        }
                    }
                }
            }
            else if (this.aiStyle == 4)
            {
                bool flag1 = false;
                if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.12)
                    flag1 = true;
                bool flag2 = false;
                if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.04)
                    flag2 = true;
                float num1 = 20f;
                if (flag2)
                    num1 = 10f;
                if (this.target < 0 || this.target == (int)byte.MaxValue || (Main.player[this.target].dead || !Main.player[this.target].active))
                    this.TargetClosest(true);
                bool flag3 = Main.player[this.target].dead;
                float num2 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
                float num3 = (float)Math.Atan2((double)((float)((double)this.position.Y + (double)this.height - 59.0) - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2)), (double)num2) + 1.57f;
                if ((double)num3 < 0.0)
                    num3 += 6.283f;
                else if ((double)num3 > 6.283)
                    num3 -= 6.283f;
                float num4 = 0.0f;
                if ((double)this.ai[0] == 0.0 && (double)this.ai[1] == 0.0)
                    num4 = 0.02f;
                if ((double)this.ai[0] == 0.0 && (double)this.ai[1] == 2.0 && (double)this.ai[2] > 40.0)
                    num4 = 0.05f;
                if ((double)this.ai[0] == 3.0 && (double)this.ai[1] == 0.0)
                    num4 = 0.05f;
                if ((double)this.ai[0] == 3.0 && (double)this.ai[1] == 2.0 && (double)this.ai[2] > 40.0)
                    num4 = 0.08f;
                if ((double)this.ai[0] == 3.0 && (double)this.ai[1] == 4.0 && (double)this.ai[2] > (double)num1)
                    num4 = 0.15f;
                if ((double)this.ai[0] == 3.0 && (double)this.ai[1] == 5.0)
                    num4 = 0.05f;
                if (Main.expertMode)
                    num4 *= 1.5f;
                if (flag2 && Main.expertMode)
                    num4 = 0.0f;
                if ((double)this.rotation < (double)num3)
                {
                    if ((double)num3 - (double)this.rotation > 3.1415)
                        this.rotation -= num4;
                    else
                        this.rotation += num4;
                }
                else if ((double)this.rotation > (double)num3)
                {
                    if ((double)this.rotation - (double)num3 > 3.1415)
                        this.rotation += num4;
                    else
                        this.rotation -= num4;
                }
                if ((double)this.rotation > (double)num3 - (double)num4 && (double)this.rotation < (double)num3 + (double)num4)
                    this.rotation = num3;
                if ((double)this.rotation < 0.0)
                    this.rotation += 6.283f;
                else if ((double)this.rotation > 6.283)
                    this.rotation -= 6.283f;
                if ((double)this.rotation > (double)num3 - (double)num4 && (double)this.rotation < (double)num3 + (double)num4)
                    this.rotation = num3;
                if (Main.rand.Next(5) == 0)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((double)this.height * 0.5), 5, this.velocity.X, 2f, 0, new Color(), 1f);
                    Main.dust[index].velocity.X *= 0.5f;
                    Main.dust[index].velocity.Y *= 0.1f;
                }
                if (Main.dayTime || flag3)
                {
                    this.velocity.Y -= 0.04f;
                    if (this.timeLeft <= 10)
                        return;
                    this.timeLeft = 10;
                }
                else if ((double)this.ai[0] == 0.0)
                {
                    if ((double)this.ai[1] == 0.0)
                    {
                        float num5 = 5f;
                        float num6 = 0.04f;
                        if (Main.expertMode)
                        {
                            num6 = 0.15f;
                            num5 = 7f;
                        }
                        Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num7 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2_1.X;
                        float num8 = (float)((double)Main.player[this.target].position.Y + (double)(Main.player[this.target].height / 2) - 200.0) - vector2_1.Y;
                        float num9 = (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                        float num10 = num9;
                        float num11 = num5 / num9;
                        float num12 = num7 * num11;
                        float num13 = num8 * num11;
                        if ((double)this.velocity.X < (double)num12)
                        {
                            this.velocity.X += num6;
                            if ((double)this.velocity.X < 0.0 && (double)num12 > 0.0)
                                this.velocity.X += num6;
                        }
                        else if ((double)this.velocity.X > (double)num12)
                        {
                            this.velocity.X -= num6;
                            if ((double)this.velocity.X > 0.0 && (double)num12 < 0.0)
                                this.velocity.X -= num6;
                        }
                        if ((double)this.velocity.Y < (double)num13)
                        {
                            this.velocity.Y += num6;
                            if ((double)this.velocity.Y < 0.0 && (double)num13 > 0.0)
                                this.velocity.Y += num6;
                        }
                        else if ((double)this.velocity.Y > (double)num13)
                        {
                            this.velocity.Y -= num6;
                            if ((double)this.velocity.Y > 0.0 && (double)num13 < 0.0)
                                this.velocity.Y -= num6;
                        }
                        ++this.ai[2];
                        float num14 = 600f;
                        if (Main.expertMode)
                            num14 *= 0.35f;
                        if ((double)this.ai[2] >= (double)num14)
                        {
                            this.ai[1] = 1f;
                            this.ai[2] = 0.0f;
                            this.ai[3] = 0.0f;
                            this.target = (int)byte.MaxValue;
                            this.netUpdate = true;
                        }
                        else if ((double)this.position.Y + (double)this.height < (double)Main.player[this.target].position.Y && (double)num10 < 500.0 || Main.expertMode && (double)num10 < 500.0)
                        {
                            if (!Main.player[this.target].dead)
                                ++this.ai[3];
                            float num15 = 110f;
                            if (Main.expertMode)
                                num15 *= 0.4f;
                            if ((double)this.ai[3] >= (double)num15)
                            {
                                this.ai[3] = 0.0f;
                                this.rotation = num3;
                                float num16 = 5f;
                                if (Main.expertMode)
                                    num16 = 6f;
                                float num17 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2_1.X;
                                float num18 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2_1.Y;
                                float num19 = (float)Math.Sqrt((double)num17 * (double)num17 + (double)num18 * (double)num18);
                                float num20 = num16 / num19;
                                Vector2 Position = vector2_1;
                                Vector2 vector2_2;
                                vector2_2.X = num17 * num20;
                                vector2_2.Y = num18 * num20;
                                Position.X += vector2_2.X * 10f;
                                Position.Y += vector2_2.Y * 10f;
                                if (Main.netMode != 1)
                                {
                                    int number = NPC.NewNPC((int)Position.X, (int)Position.Y, 5, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    Main.npc[number].velocity.X = vector2_2.X;
                                    Main.npc[number].velocity.Y = vector2_2.Y;
                                    if (Main.netMode == 2 && number < 200)
                                        NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                                }
                                Main.PlaySound(3, (int)Position.X, (int)Position.Y, 1);
                                for (int index = 0; index < 10; ++index)
                                    Dust.NewDust(Position, 20, 20, 5, vector2_2.X * 0.4f, vector2_2.Y * 0.4f, 0, new Color(), 1f);
                            }
                        }
                    }
                    else if ((double)this.ai[1] == 1.0)
                    {
                        this.rotation = num3;
                        float num5 = 6f;
                        if (Main.expertMode)
                            num5 = 7f;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num6 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                        float num7 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                        float num8 = (float)Math.Sqrt((double)num6 * (double)num6 + (double)num7 * (double)num7);
                        float num9 = num5 / num8;
                        this.velocity.X = num6 * num9;
                        this.velocity.Y = num7 * num9;
                        this.ai[1] = 2f;
                        this.netUpdate = true;
                        if (this.netSpam > 10)
                            this.netSpam = 10;
                    }
                    else if ((double)this.ai[1] == 2.0)
                    {
                        ++this.ai[2];
                        if ((double)this.ai[2] >= 40.0)
                        {
                            NPC npc1 = this;
                            Vector2 vector2_1 = npc1.velocity * 0.98f;
                            npc1.velocity = vector2_1;
                            if (Main.expertMode)
                            {
                                NPC npc2 = this;
                                Vector2 vector2_2 = npc2.velocity * 0.985f;
                                npc2.velocity = vector2_2;
                            }
                            if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                                this.velocity.X = 0.0f;
                            if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
                                this.velocity.Y = 0.0f;
                        }
                        else
                            this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
                        int num5 = 150;
                        if (Main.expertMode)
                            num5 = 100;
                        if ((double)this.ai[2] >= (double)num5)
                        {
                            ++this.ai[3];
                            this.ai[2] = 0.0f;
                            this.target = (int)byte.MaxValue;
                            this.rotation = num3;
                            if ((double)this.ai[3] >= 3.0)
                            {
                                this.ai[1] = 0.0f;
                                this.ai[3] = 0.0f;
                            }
                            else
                                this.ai[1] = 1f;
                        }
                    }
                    float num21 = 0.5f;
                    if (Main.expertMode)
                        num21 = 0.65f;
                    if ((double)this.life >= (double)this.lifeMax * (double)num21)
                        return;
                    this.ai[0] = 1f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                    this.netUpdate = true;
                    if (this.netSpam <= 10)
                        return;
                    this.netSpam = 10;
                }
                else if ((double)this.ai[0] == 1.0 || (double)this.ai[0] == 2.0)
                {
                    if ((double)this.ai[0] == 1.0)
                    {
                        this.ai[2] += 0.005f;
                        if ((double)this.ai[2] > 0.5)
                            this.ai[2] = 0.5f;
                    }
                    else
                    {
                        this.ai[2] -= 0.005f;
                        if ((double)this.ai[2] < 0.0)
                            this.ai[2] = 0.0f;
                    }
                    this.rotation += this.ai[2];
                    ++this.ai[1];
                    if (Main.expertMode && (double)this.ai[1] % 20.0 == 0.0)
                    {
                        float num5 = 5f;
                        Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num6 = (float)Main.rand.Next(-200, 200);
                        float num7 = (float)Main.rand.Next(-200, 200);
                        float num8 = (float)Math.Sqrt((double)num6 * (double)num6 + (double)num7 * (double)num7);
                        float num9 = num5 / num8;
                        Vector2 Position = vector2_1;
                        Vector2 vector2_2;
                        vector2_2.X = num6 * num9;
                        vector2_2.Y = num7 * num9;
                        Position.X += vector2_2.X * 10f;
                        Position.Y += vector2_2.Y * 10f;
                        if (Main.netMode != 1)
                        {
                            int number = NPC.NewNPC((int)Position.X, (int)Position.Y, 5, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            Main.npc[number].velocity.X = vector2_2.X;
                            Main.npc[number].velocity.Y = vector2_2.Y;
                            if (Main.netMode == 2 && number < 200)
                                NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                        }
                        for (int index = 0; index < 10; ++index)
                            Dust.NewDust(Position, 20, 20, 5, vector2_2.X * 0.4f, vector2_2.Y * 0.4f, 0, new Color(), 1f);
                    }
                    if ((double)this.ai[1] == 100.0)
                    {
                        ++this.ai[0];
                        this.ai[1] = 0.0f;
                        if ((double)this.ai[0] == 3.0)
                        {
                            this.ai[2] = 0.0f;
                        }
                        else
                        {
                            Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
                            for (int index = 0; index < 2; ++index)
                            {
                                Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 8, 1f);
                                Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
                                Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 6, 1f);
                            }
                            for (int index = 0; index < 20; ++index)
                                Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, new Color(), 1f);
                            Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
                        }
                    }
                    Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, new Color(), 1f);
                    this.velocity.X *= 0.98f;
                    this.velocity.Y *= 0.98f;
                    if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                        this.velocity.X = 0.0f;
                    if ((double)this.velocity.Y <= -0.1 || (double)this.velocity.Y >= 0.1)
                        return;
                    this.velocity.Y = 0.0f;
                }
                else
                {
                    this.defense = 0;
                    this.damage = (int)(23.0 * (double)Main.expertDamage);
                    if (Main.expertMode)
                    {
                        if (flag1)
                            this.defense = -15;
                        if (flag2)
                        {
                            this.damage = (int)(20.0 * (double)Main.expertDamage);
                            this.defense = -30;
                        }
                        else
                            this.damage = (int)(18.0 * (double)Main.expertDamage);
                    }
                    if ((double)this.ai[1] == 0.0 && flag1)
                        this.ai[1] = 5f;
                    if ((double)this.ai[1] == 0.0)
                    {
                        float num5 = 6f;
                        float num6 = 0.07f;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num7 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                        float num8 = (float)((double)Main.player[this.target].position.Y + (double)(Main.player[this.target].height / 2) - 120.0) - vector2.Y;
                        float num9 = (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                        if ((double)num9 > 400.0 && Main.expertMode)
                        {
                            ++num5;
                            num6 += 0.05f;
                            if ((double)num9 > 600.0)
                            {
                                ++num5;
                                num6 += 0.05f;
                                if ((double)num9 > 800.0)
                                {
                                    ++num5;
                                    num6 += 0.05f;
                                }
                            }
                        }
                        float num10 = num5 / num9;
                        float num11 = num7 * num10;
                        float num12 = num8 * num10;
                        if ((double)this.velocity.X < (double)num11)
                        {
                            this.velocity.X += num6;
                            if ((double)this.velocity.X < 0.0 && (double)num11 > 0.0)
                                this.velocity.X += num6;
                        }
                        else if ((double)this.velocity.X > (double)num11)
                        {
                            this.velocity.X -= num6;
                            if ((double)this.velocity.X > 0.0 && (double)num11 < 0.0)
                                this.velocity.X -= num6;
                        }
                        if ((double)this.velocity.Y < (double)num12)
                        {
                            this.velocity.Y += num6;
                            if ((double)this.velocity.Y < 0.0 && (double)num12 > 0.0)
                                this.velocity.Y += num6;
                        }
                        else if ((double)this.velocity.Y > (double)num12)
                        {
                            this.velocity.Y -= num6;
                            if ((double)this.velocity.Y > 0.0 && (double)num12 < 0.0)
                                this.velocity.Y -= num6;
                        }
                        ++this.ai[2];
                        if ((double)this.ai[2] >= 200.0)
                        {
                            this.ai[1] = 1f;
                            this.ai[2] = 0.0f;
                            this.ai[3] = 0.0f;
                            if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.35)
                                this.ai[1] = 3f;
                            this.target = (int)byte.MaxValue;
                            this.netUpdate = true;
                        }
                        if (Main.expertMode && flag2)
                        {
                            this.TargetClosest(true);
                            this.netUpdate = true;
                            this.ai[1] = 3f;
                            this.ai[2] = 0.0f;
                            this.ai[3] -= 1000f;
                        }
                    }
                    else if ((double)this.ai[1] == 1.0)
                    {
                        Main.PlaySound(36, (int)this.position.X, (int)this.position.Y, 0);
                        this.rotation = num3;
                        float num5 = 6.8f;
                        if (Main.expertMode && (double)this.ai[3] == 1.0)
                            num5 *= 1.15f;
                        if (Main.expertMode && (double)this.ai[3] == 2.0)
                            num5 *= 1.3f;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num6 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                        float num7 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                        float num8 = (float)Math.Sqrt((double)num6 * (double)num6 + (double)num7 * (double)num7);
                        float num9 = num5 / num8;
                        this.velocity.X = num6 * num9;
                        this.velocity.Y = num7 * num9;
                        this.ai[1] = 2f;
                        this.netUpdate = true;
                        if (this.netSpam > 10)
                            this.netSpam = 10;
                    }
                    else if ((double)this.ai[1] == 2.0)
                    {
                        float num5 = 40f;
                        ++this.ai[2];
                        if (Main.expertMode)
                            num5 = 50f;
                        if ((double)this.ai[2] >= (double)num5)
                        {
                            NPC npc1 = this;
                            Vector2 vector2_1 = npc1.velocity * 0.97f;
                            npc1.velocity = vector2_1;
                            if (Main.expertMode)
                            {
                                NPC npc2 = this;
                                Vector2 vector2_2 = npc2.velocity * 0.98f;
                                npc2.velocity = vector2_2;
                            }
                            if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                                this.velocity.X = 0.0f;
                            if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
                                this.velocity.Y = 0.0f;
                        }
                        else
                            this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
                        int num6 = 130;
                        if (Main.expertMode)
                            num6 = 90;
                        if ((double)this.ai[2] >= (double)num6)
                        {
                            ++this.ai[3];
                            this.ai[2] = 0.0f;
                            this.target = (int)byte.MaxValue;
                            this.rotation = num3;
                            if ((double)this.ai[3] >= 3.0)
                            {
                                this.ai[1] = 0.0f;
                                this.ai[3] = 0.0f;
                                if (Main.expertMode && Main.netMode != 1 && (double)this.life < (double)this.lifeMax * 0.5)
                                {
                                    this.ai[1] = 3f;
                                    this.ai[3] += (float)Main.rand.Next(1, 4);
                                }
                                this.netUpdate = true;
                                if (this.netSpam > 10)
                                    this.netSpam = 10;
                            }
                            else
                                this.ai[1] = 1f;
                        }
                    }
                    else if ((double)this.ai[1] == 3.0)
                    {
                        if ((double)this.ai[3] == 4.0 && flag1 && (double)this.Center.Y > (double)Main.player[this.target].Center.Y)
                        {
                            this.TargetClosest(true);
                            this.ai[1] = 0.0f;
                            this.ai[2] = 0.0f;
                            this.ai[3] = 0.0f;
                            this.netUpdate = true;
                            if (this.netSpam > 10)
                                this.netSpam = 10;
                        }
                        else if (Main.netMode != 1)
                        {
                            this.TargetClosest(true);
                            float num5 = 20f;
                            Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                            float num6 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2_1.X;
                            float num7 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2_1.Y;
                            float num8 = Math.Abs(Main.player[this.target].velocity.X) + Math.Abs(Main.player[this.target].velocity.Y) / 4f;
                            float num9 = num8 + (10f - num8);
                            if ((double)num9 < 5.0)
                                num9 = 5f;
                            if ((double)num9 > 15.0)
                                num9 = 15f;
                            if ((double)this.ai[2] == -1.0 && !flag2)
                            {
                                num9 *= 4f;
                                num5 *= 1.3f;
                            }
                            if (flag2)
                                num9 *= 2f;
                            float num10 = num6 - Main.player[this.target].velocity.X * num9;
                            float num11 = num7 - (float)((double)Main.player[this.target].velocity.Y * (double)num9 / 4.0);
                            float num12 = num10 * (float)(1.0 + (double)Main.rand.Next(-10, 11) * 0.00999999977648258);
                            float num13 = num11 * (float)(1.0 + (double)Main.rand.Next(-10, 11) * 0.00999999977648258);
                            if (flag2)
                            {
                                num12 *= (float)(1.0 + (double)Main.rand.Next(-10, 11) * 0.00999999977648258);
                                num13 *= (float)(1.0 + (double)Main.rand.Next(-10, 11) * 0.00999999977648258);
                            }
                            float num14 = (float)Math.Sqrt((double)num12 * (double)num12 + (double)num13 * (double)num13);
                            float num15 = num14;
                            float num16 = num5 / num14;
                            this.velocity.X = num12 * num16;
                            this.velocity.Y = num13 * num16;
                            this.velocity.X += (float)Main.rand.Next(-20, 21) * 0.1f;
                            this.velocity.Y += (float)Main.rand.Next(-20, 21) * 0.1f;
                            if (flag2)
                            {
                                this.velocity.X += (float)Main.rand.Next(-50, 51) * 0.1f;
                                this.velocity.Y += (float)Main.rand.Next(-50, 51) * 0.1f;
                                float num17 = Math.Abs(this.velocity.X);
                                float num18 = Math.Abs(this.velocity.Y);
                                if ((double)this.Center.X > (double)Main.player[this.target].Center.X)
                                    num18 *= -1f;
                                if ((double)this.Center.Y > (double)Main.player[this.target].Center.Y)
                                    num17 *= -1f;
                                this.velocity.X = num18 + this.velocity.X;
                                this.velocity.Y = num17 + this.velocity.Y;
                                this.velocity.Normalize();
                                NPC npc = this;
                                Vector2 vector2_2 = npc.velocity * num5;
                                npc.velocity = vector2_2;
                                this.velocity.X += (float)Main.rand.Next(-20, 21) * 0.1f;
                                this.velocity.Y += (float)Main.rand.Next(-20, 21) * 0.1f;
                            }
                            else if ((double)num15 < 100.0)
                            {
                                if ((double)Math.Abs(this.velocity.X) > (double)Math.Abs(this.velocity.Y))
                                {
                                    float num17 = Math.Abs(this.velocity.X);
                                    float num18 = Math.Abs(this.velocity.Y);
                                    if ((double)this.Center.X > (double)Main.player[this.target].Center.X)
                                        num18 *= -1f;
                                    if ((double)this.Center.Y > (double)Main.player[this.target].Center.Y)
                                        num17 *= -1f;
                                    this.velocity.X = num18;
                                    this.velocity.Y = num17;
                                }
                            }
                            else if ((double)Math.Abs(this.velocity.X) > (double)Math.Abs(this.velocity.Y))
                            {
                                float num17 = (float)(((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y)) / 2.0);
                                float num18 = num17;
                                if ((double)this.Center.X > (double)Main.player[this.target].Center.X)
                                    num18 *= -1f;
                                if ((double)this.Center.Y > (double)Main.player[this.target].Center.Y)
                                    num17 *= -1f;
                                this.velocity.X = num18;
                                this.velocity.Y = num17;
                            }
                            this.ai[1] = 4f;
                            this.netUpdate = true;
                            if (this.netSpam > 10)
                                this.netSpam = 10;
                        }
                    }
                    else if ((double)this.ai[1] == 4.0)
                    {
                        if ((double)this.ai[2] == 0.0)
                            Main.PlaySound(36, (int)this.position.X, (int)this.position.Y, -1);
                        float num5 = num1;
                        ++this.ai[2];
                        if ((double)this.ai[2] == (double)num5 && (double)Vector2.Distance(this.position, Main.player[this.target].position) < 200.0)
                            --this.ai[2];
                        if ((double)this.ai[2] >= (double)num5)
                        {
                            NPC npc = this;
                            Vector2 vector2 = npc.velocity * 0.95f;
                            npc.velocity = vector2;
                            if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                                this.velocity.X = 0.0f;
                            if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
                                this.velocity.Y = 0.0f;
                        }
                        else
                            this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
                        if ((double)this.ai[2] >= (double)(num5 + 13f))
                        {
                            this.netUpdate = true;
                            if (this.netSpam > 10)
                                this.netSpam = 10;
                            ++this.ai[3];
                            this.ai[2] = 0.0f;
                            if ((double)this.ai[3] >= 5.0)
                            {
                                this.ai[1] = 0.0f;
                                this.ai[3] = 0.0f;
                            }
                            else
                                this.ai[1] = 3f;
                        }
                    }
                    else if ((double)this.ai[1] == 5.0)
                    {
                        float num5 = 600f;
                        float num6 = 9f;
                        float num7 = 0.3f;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num8 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                        float num9 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) + num5 - vector2.Y;
                        float num10 = (float)Math.Sqrt((double)num8 * (double)num8 + (double)num9 * (double)num9);
                        float num11 = num6 / num10;
                        float num12 = num8 * num11;
                        float num13 = num9 * num11;
                        if ((double)this.velocity.X < (double)num12)
                        {
                            this.velocity.X += num7;
                            if ((double)this.velocity.X < 0.0 && (double)num12 > 0.0)
                                this.velocity.X += num7;
                        }
                        else if ((double)this.velocity.X > (double)num12)
                        {
                            this.velocity.X -= num7;
                            if ((double)this.velocity.X > 0.0 && (double)num12 < 0.0)
                                this.velocity.X -= num7;
                        }
                        if ((double)this.velocity.Y < (double)num13)
                        {
                            this.velocity.Y += num7;
                            if ((double)this.velocity.Y < 0.0 && (double)num13 > 0.0)
                                this.velocity.Y += num7;
                        }
                        else if ((double)this.velocity.Y > (double)num13)
                        {
                            this.velocity.Y -= num7;
                            if ((double)this.velocity.Y > 0.0 && (double)num13 < 0.0)
                                this.velocity.Y -= num7;
                        }
                        ++this.ai[2];
                        if ((double)this.ai[2] >= 70.0)
                        {
                            this.TargetClosest(true);
                            this.ai[1] = 3f;
                            this.ai[2] = -1f;
                            this.ai[3] = (float)Main.rand.Next(-3, 1);
                            this.netUpdate = true;
                        }
                    }
                    if (!flag2 || (double)this.ai[1] != 5.0)
                        return;
                    this.ai[1] = 3f;
                }
            }
            else if (this.aiStyle == 5)
            {
                if (this.target < 0 || this.target == (int)byte.MaxValue || Main.player[this.target].dead)
                    this.TargetClosest(true);
                float num1 = 6f;
                float num2 = 0.05f;
                if (this.type == 6 || this.type == 173)
                {
                    num1 = 4f;
                    num2 = 0.02f;
                    if (this.type == 6 && Main.expertMode)
                        num2 = 0.035f;
                }
                else if (this.type == 94)
                {
                    num1 = 4.2f;
                    num2 = 0.022f;
                }
                else if (this.type == 252)
                {
                    if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                    {
                        num1 = 6f;
                        num2 = 0.1f;
                    }
                    else
                    {
                        num2 = 0.01f;
                        num1 = 2f;
                    }
                }
                else if (this.type == 42 || this.type >= 231 && this.type <= 235)
                {
                    float num3 = 3.5f;
                    float num4 = 0.021f;
                    if (this.type == 231)
                    {
                        num3 = 3f;
                        num4 = 0.017f;
                    }
                    num1 = num3 * (1f - this.scale);
                    num2 = num4 * (1f - this.scale);
                }
                else if (this.type == 205)
                {
                    num1 = 3.25f;
                    num2 = 0.018f;
                }
                else if (this.type == 176)
                {
                    num1 = 4f;
                    num2 = 0.017f;
                }
                else if (this.type == 23)
                {
                    num1 = 1f;
                    num2 = 0.03f;
                }
                else if (this.type == 5)
                {
                    num1 = 5f;
                    num2 = 0.03f;
                }
                else if (this.type == 210 || this.type == 211)
                {
                    ++this.localAI[0];
                    float num3 = (float)(((double)this.localAI[0] - 60.0) / 60.0);
                    if ((double)num3 > 1.0)
                    {
                        num3 = 1f;
                    }
                    else
                    {
                        if ((double)this.velocity.X > 6.0)
                            this.velocity.X = 6f;
                        if ((double)this.velocity.X < -6.0)
                            this.velocity.X = -6f;
                        if ((double)this.velocity.Y > 6.0)
                            this.velocity.Y = 6f;
                        if ((double)this.velocity.Y < -6.0)
                            this.velocity.Y = -6f;
                    }
                    num1 = 5f;
                    num2 = 0.1f * num3;
                }
                Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                float num5 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
                float num6 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
                float num7 = (float)((int)((double)num5 / 8.0) * 8);
                float num8 = (float)((int)((double)num6 / 8.0) * 8);
                vector2_1.X = (float)((int)((double)vector2_1.X / 8.0) * 8);
                vector2_1.Y = (float)((int)((double)vector2_1.Y / 8.0) * 8);
                float num9 = num7 - vector2_1.X;
                float num10 = num8 - vector2_1.Y;
                float num11 = (float)Math.Sqrt((double)num9 * (double)num9 + (double)num10 * (double)num10);
                float num12 = num11;
                bool flag = false;
                if ((double)num11 > 600.0)
                    flag = true;
                float SpeedX1;
                float SpeedY1;
                if ((double)num11 == 0.0)
                {
                    SpeedX1 = this.velocity.X;
                    SpeedY1 = this.velocity.Y;
                }
                else
                {
                    float num3 = num1 / num11;
                    SpeedX1 = num9 * num3;
                    SpeedY1 = num10 * num3;
                }
                if (this.type == 6 || this.type == 42 || (this.type == 94 || this.type == 139) || (this.type == 173 || this.type == 176 || (this.type == 205 || this.type == 210)) || (this.type == 211 || this.type >= 231 && this.type <= 235))
                {
                    if ((double)num12 > 100.0 || this.type == 42 || (this.type == 94 || this.type == 176) || (this.type == 210 || this.type == 211 || this.type >= 231 && this.type <= 235))
                    {
                        ++this.ai[0];
                        if ((double)this.ai[0] > 0.0)
                            this.velocity.Y += 23.0f / 1000.0f;
                        else
                            this.velocity.Y -= 23.0f / 1000.0f;
                        if ((double)this.ai[0] < -100.0 || (double)this.ai[0] > 100.0)
                            this.velocity.X += 23.0f / 1000.0f;
                        else
                            this.velocity.X -= 23.0f / 1000.0f;
                        if ((double)this.ai[0] > 200.0)
                            this.ai[0] = -200f;
                    }
                    if ((double)num12 < 150.0 && (this.type == 6 || this.type == 94 || this.type == 173))
                    {
                        this.velocity.X += SpeedX1 * 0.007f;
                        this.velocity.Y += SpeedY1 * 0.007f;
                    }
                }
                if (Main.player[this.target].dead)
                {
                    SpeedX1 = (float)((double)this.direction * (double)num1 / 2.0);
                    SpeedY1 = (float)(-(double)num1 / 2.0);
                }
                if ((double)this.velocity.X < (double)SpeedX1)
                {
                    this.velocity.X += num2;
                    if (this.type != 173 && this.type != 6 && this.type != 42 && ((this.type < 231 || this.type > 235) && (this.type != 94 && this.type != 139)) && ((double)this.velocity.X < 0.0 && (double)SpeedX1 > 0.0))
                        this.velocity.X += num2;
                }
                else if ((double)this.velocity.X > (double)SpeedX1)
                {
                    this.velocity.X -= num2;
                    if (this.type != 173 && this.type != 6 && this.type != 42 && ((this.type < 231 || this.type > 235) && (this.type != 94 && this.type != 139)) && ((double)this.velocity.X > 0.0 && (double)SpeedX1 < 0.0))
                        this.velocity.X -= num2;
                }
                if ((double)this.velocity.Y < (double)SpeedY1)
                {
                    this.velocity.Y += num2;
                    if (this.type != 173 && this.type != 6 && this.type != 42 && ((this.type < 231 || this.type > 235) && (this.type != 94 && this.type != 139)) && ((double)this.velocity.Y < 0.0 && (double)SpeedY1 > 0.0))
                        this.velocity.Y += num2;
                }
                else if ((double)this.velocity.Y > (double)SpeedY1)
                {
                    this.velocity.Y -= num2;
                    if (this.type != 173 && this.type != 6 && this.type != 42 && ((this.type < 231 || this.type > 235) && (this.type != 94 && this.type != 139)) && ((double)this.velocity.Y > 0.0 && (double)SpeedY1 < 0.0))
                        this.velocity.Y -= num2;
                }
                if (this.type == 23)
                {
                    if ((double)SpeedX1 > 0.0)
                    {
                        this.spriteDirection = 1;
                        this.rotation = (float)Math.Atan2((double)SpeedY1, (double)SpeedX1);
                    }
                    else if ((double)SpeedX1 < 0.0)
                    {
                        this.spriteDirection = -1;
                        this.rotation = (float)Math.Atan2((double)SpeedY1, (double)SpeedX1) + 3.14f;
                    }
                }
                else if (this.type == 139)
                {
                    ++this.localAI[0];
                    if (this.justHit)
                        this.localAI[0] = 0.0f;
                    if (Main.netMode != 1 && (double)this.localAI[0] >= 120.0)
                    {
                        this.localAI[0] = 0.0f;
                        if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                        {
                            int Damage = 25;
                            if (Main.expertMode)
                                Damage = 22;
                            int Type = 84;
                            Projectile.NewProjectile(vector2_1.X, vector2_1.Y, SpeedX1, SpeedY1, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        }
                    }
                    if (!WorldGen.SolidTile(((int)this.position.X + this.width / 2) / 16, ((int)this.position.Y + this.height / 2) / 16))
                        Lighting.AddLight((int)(((double)this.position.X + (double)(this.width / 2)) / 16.0), (int)(((double)this.position.Y + (double)(this.height / 2)) / 16.0), 0.3f, 0.1f, 0.05f);
                    if ((double)SpeedX1 > 0.0)
                    {
                        this.spriteDirection = 1;
                        this.rotation = (float)Math.Atan2((double)SpeedY1, (double)SpeedX1);
                    }
                    if ((double)SpeedX1 < 0.0)
                    {
                        this.spriteDirection = -1;
                        this.rotation = (float)Math.Atan2((double)SpeedY1, (double)SpeedX1) + 3.14f;
                    }
                }
                else if (this.type == 6 || this.type == 94 || this.type == 173)
                    this.rotation = (float)Math.Atan2((double)SpeedY1, (double)SpeedX1) - 1.57f;
                else if (this.type == 42 || this.type == 176 || this.type == 205 || this.type >= 231 && this.type <= 235)
                {
                    if ((double)this.velocity.X > 0.0)
                        this.spriteDirection = 1;
                    if ((double)this.velocity.X < 0.0)
                        this.spriteDirection = -1;
                    this.rotation = this.velocity.X * 0.1f;
                }
                else
                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
                if (this.type == 6 || this.type == 23 || (this.type == 42 || this.type == 94) || (this.type == 139 || this.type == 173 || (this.type == 176 || this.type == 205)) || (this.type == 210 || this.type == 211 || this.type >= 231 && this.type <= 235))
                {
                    float num3 = 0.7f;
                    if (this.type == 6 || this.type == 173)
                        num3 = 0.4f;
                    if (this.collideX)
                    {
                        this.netUpdate = true;
                        this.velocity.X = this.oldVelocity.X * -num3;
                        if (this.direction == -1 && (double)this.velocity.X > 0.0 && (double)this.velocity.X < 2.0)
                            this.velocity.X = 2f;
                        if (this.direction == 1 && (double)this.velocity.X < 0.0 && (double)this.velocity.X > -2.0)
                            this.velocity.X = -2f;
                    }
                    if (this.collideY)
                    {
                        this.netUpdate = true;
                        this.velocity.Y = this.oldVelocity.Y * -num3;
                        if ((double)this.velocity.Y > 0.0 && (double)this.velocity.Y < 1.5)
                            this.velocity.Y = 2f;
                        if ((double)this.velocity.Y < 0.0 && (double)this.velocity.Y > -1.5)
                            this.velocity.Y = -2f;
                    }
                    if (this.type == 23)
                    {
                        int index = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 2f);
                        Main.dust[index].noGravity = true;
                        Main.dust[index].velocity.X *= 0.3f;
                        Main.dust[index].velocity.Y *= 0.3f;
                    }
                    else if (this.type != 42 && this.type != 139 && (this.type != 176 && this.type != 205) && (this.type != 210 && this.type != 211 && this.type != 252) && ((this.type < 231 || this.type > 235) && Main.rand.Next(20) == 0))
                    {
                        int Type = 18;
                        if (this.type == 173)
                            Type = 5;
                        int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((double)this.height * 0.5), Type, this.velocity.X, 2f, 75, this.color, this.scale);
                        Main.dust[index].velocity.X *= 0.5f;
                        Main.dust[index].velocity.Y *= 0.1f;
                    }
                }
                else if (this.type != 252 && Main.rand.Next(40) == 0)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((double)this.height * 0.5), 5, this.velocity.X, 2f, 0, new Color(), 1f);
                    Main.dust[index].velocity.X *= 0.5f;
                    Main.dust[index].velocity.Y *= 0.1f;
                }
                if ((this.type == 6 || this.type == 94 || this.type == 173) && this.wet)
                {
                    if ((double)this.velocity.Y > 0.0)
                        this.velocity.Y *= 0.95f;
                    this.velocity.Y -= 0.3f;
                    if ((double)this.velocity.Y < -2.0)
                        this.velocity.Y = -2f;
                }
                if (this.type == 205 && this.wet)
                {
                    if ((double)this.velocity.Y > 0.0)
                        this.velocity.Y *= 0.95f;
                    this.velocity.Y -= 0.5f;
                    if ((double)this.velocity.Y < -4.0)
                        this.velocity.Y = -4f;
                    this.TargetClosest(true);
                }
                if (this.type == 42 || this.type == 176 || this.type >= 231 && this.type <= 235)
                {
                    if (this.wet)
                    {
                        if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y *= 0.95f;
                        this.velocity.Y -= 0.5f;
                        if ((double)this.velocity.Y < -4.0)
                            this.velocity.Y = -4f;
                        this.TargetClosest(true);
                    }
                    if ((double)this.ai[1] == 101.0)
                    {
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
                        this.ai[1] = 0.0f;
                    }
                    if (Main.netMode != 1)
                    {
                        this.ai[1] += (float)Main.rand.Next(5, 20) * 0.1f * this.scale;
                        if (this.type == 176)
                            this.ai[1] += (float)Main.rand.Next(5, 20) * 0.1f * this.scale;
                        if ((double)Main.player[this.target].stealth == 0.0 && Main.player[this.target].itemAnimation == 0)
                            this.ai[1] = 0.0f;
                        if ((double)this.ai[1] >= 130.0)
                        {
                            if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                            {
                                float num3 = 8f;
                                Vector2 vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)(this.height / 2));
                                float num4 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_2.X + (float)Main.rand.Next(-20, 21);
                                float num13 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2_2.Y + (float)Main.rand.Next(-20, 21);
                                if ((double)num4 < 0.0 && (double)this.velocity.X < 0.0 || (double)num4 > 0.0 && (double)this.velocity.X > 0.0)
                                {
                                    float num14 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num13 * (double)num13);
                                    float num15 = num3 / num14;
                                    float SpeedX2 = num4 * num15;
                                    float SpeedY2 = num13 * num15;
                                    int Damage = (int)(10.0 * (double)this.scale);
                                    if (this.type == 176)
                                        Damage = (int)(30.0 * (double)this.scale);
                                    int Type = 55;
                                    int index = Projectile.NewProjectile(vector2_2.X, vector2_2.Y, SpeedX2, SpeedY2, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                    Main.projectile[index].timeLeft = 300;
                                    this.ai[1] = 101f;
                                    this.netUpdate = true;
                                }
                                else
                                    this.ai[1] = 0.0f;
                            }
                            else
                                this.ai[1] = 0.0f;
                        }
                    }
                }
                if (this.type == 139 && flag)
                {
                    if ((double)this.velocity.X > 0.0 && (double)SpeedX1 > 0.0 || (double)this.velocity.X < 0.0 && (double)SpeedX1 < 0.0)
                    {
                        if ((double)Math.Abs(this.velocity.X) < 12.0)
                            this.velocity.X *= 1.05f;
                    }
                    else
                        this.velocity.X *= 0.9f;
                }
                if (Main.netMode != 1 && this.type == 94 && !Main.player[this.target].dead)
                {
                    if (this.justHit)
                        this.localAI[0] = 0.0f;
                    ++this.localAI[0];
                    if ((double)this.localAI[0] == 180.0)
                    {
                        if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                            NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2) + (double)this.velocity.X), (int)((double)this.position.Y + (double)(this.height / 2) + (double)this.velocity.Y), 112, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        this.localAI[0] = 0.0f;
                    }
                }
                if (Main.dayTime && this.type != 173 && (this.type != 6 && this.type != 23) && (this.type != 42 && this.type != 94 && (this.type != 176 && this.type != 205)) && (this.type != 210 && this.type != 211 && this.type != 252 && (this.type < 231 || this.type > 235)) || Main.player[this.target].dead)
                {
                    this.velocity.Y -= num2 * 2f;
                    if (this.timeLeft > 10)
                        this.timeLeft = 10;
                }
                if (((double)this.velocity.X <= 0.0 || (double)this.oldVelocity.X >= 0.0) && ((double)this.velocity.X >= 0.0 || (double)this.oldVelocity.X <= 0.0) && (((double)this.velocity.Y <= 0.0 || (double)this.oldVelocity.Y >= 0.0) && ((double)this.velocity.Y >= 0.0 || (double)this.oldVelocity.Y <= 0.0)) || this.justHit)
                    return;
                this.netUpdate = true;
            }
            else if (this.aiStyle == 6)
            {
                if (this.type == 117 && (double)this.localAI[1] == 0.0)
                {
                    this.localAI[1] = 1f;
                    Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 13);
                    int num = 1;
                    if ((double)this.velocity.X < 0.0)
                        num = -1;
                    for (int index = 0; index < 20; ++index)
                        Dust.NewDust(new Vector2(this.position.X - 20f, this.position.Y - 20f), this.width + 40, this.height + 40, 5, (float)(num * 8), -1f, 0, new Color(), 1f);
                }
                if (this.type == 454 && (double)this.localAI[3] == 0.0)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 119);
                    this.localAI[3] = 1f;
                }
                if (this.type >= 454 && this.type <= 459)
                {
                    this.dontTakeDamage = this.alpha > 0;
                    if (this.type == 454 || this.type != 454 && Main.npc[(int)this.ai[1]].alpha < 85)
                    {
                        if (this.dontTakeDamage)
                        {
                            for (int index1 = 0; index1 < 2; ++index1)
                            {
                                int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 228, 0.0f, 0.0f, 100, new Color(), 2f);
                                Main.dust[index2].noGravity = true;
                                Main.dust[index2].noLight = true;
                            }
                        }
                        this.alpha -= 42;
                        if (this.alpha < 0)
                            this.alpha = 0;
                    }
                }
                else if (this.type == 402 && (double)this.ai[1] == 0.0)
                {
                    this.ai[1] = (float)Main.rand.Next(-2, 0);
                    this.netUpdate = true;
                }
                if (Main.netMode != 1 && Main.expertMode)
                {
                    if (this.type == 14 && (double)this.position.Y / 16.0 < Main.worldSurface)
                    {
                        if (Main.rand.Next(900) == 0)
                        {
                            this.TargetClosest(true);
                            if (Collision.CanHitLine(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                                NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2) + (double)this.velocity.X), (int)((double)this.position.Y + (double)(this.height / 2) + (double)this.velocity.Y), 112, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        }
                    }
                    else if (this.type == 13)
                    {
                        int maxValue = 90 + (int)((double)this.life / (double)this.lifeMax * 60.0 * 5.0);
                        if (Main.rand.Next(maxValue) == 0)
                        {
                            this.TargetClosest(true);
                            if (Collision.CanHitLine(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                                NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2) + (double)this.velocity.X), (int)((double)this.position.Y + (double)(this.height / 2) + (double)this.velocity.Y), 112, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        }
                    }
                }
                if (this.type >= 13 && this.type <= 15)
                    this.realLife = -1;
                else if ((double)this.ai[3] > 0.0)
                    this.realLife = (int)this.ai[3];
                if (this.target < 0 || this.target == (int)byte.MaxValue || Main.player[this.target].dead)
                    this.TargetClosest(true);
                if (Main.player[this.target].dead && this.timeLeft > 300)
                    this.timeLeft = 300;
                if (Main.netMode != 1)
                {
                    if (this.type == 87 && (double)this.ai[0] == 0.0)
                    {
                        this.ai[3] = (float)this.whoAmI;
                        this.realLife = this.whoAmI;
                        int index1 = this.whoAmI;
                        for (int index2 = 0; index2 < 14; ++index2)
                        {
                            int Type = 89;
                            if (index2 == 1 || index2 == 8)
                                Type = 88;
                            else if (index2 == 11)
                                Type = 90;
                            else if (index2 == 12)
                                Type = 91;
                            else if (index2 == 13)
                                Type = 92;
                            int number = NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)((double)this.position.Y + (double)this.height), Type, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            Main.npc[number].ai[3] = (float)this.whoAmI;
                            Main.npc[number].realLife = this.whoAmI;
                            Main.npc[number].ai[1] = (float)index1;
                            Main.npc[index1].ai[0] = (float)number;
                            NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                            index1 = number;
                        }
                    }
                    if (this.type == 454 && (double)this.ai[0] == 0.0)
                    {
                        this.ai[3] = (float)this.whoAmI;
                        this.realLife = this.whoAmI;
                        int index1 = this.whoAmI;
                        for (int index2 = 0; index2 < 30; ++index2)
                        {
                            int Type = 456;
                            if ((index2 - 2) % 4 == 0 && index2 < 26)
                                Type = 455;
                            else if (index2 == 27)
                                Type = 457;
                            else if (index2 == 28)
                                Type = 458;
                            else if (index2 == 29)
                                Type = 459;
                            int number = NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)((double)this.position.Y + (double)this.height), Type, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            Main.npc[number].ai[3] = (float)this.whoAmI;
                            Main.npc[number].realLife = this.whoAmI;
                            Main.npc[number].ai[1] = (float)index1;
                            Main.npc[index1].ai[0] = (float)number;
                            NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                            index1 = number;
                        }
                    }
                    if (this.type == 513 && (double)this.ai[0] == 0.0)
                    {
                        this.ai[3] = (float)this.whoAmI;
                        this.realLife = this.whoAmI;
                        int index1 = this.whoAmI;
                        int num = Main.rand.Next(6, 10);
                        for (int index2 = 0; index2 < num; ++index2)
                        {
                            int Type = 514;
                            if (index2 == num - 1)
                                Type = 515;
                            int number = NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)((double)this.position.Y + (double)this.height), Type, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            Main.npc[number].ai[3] = (float)this.whoAmI;
                            Main.npc[number].realLife = this.whoAmI;
                            Main.npc[number].ai[1] = (float)index1;
                            Main.npc[index1].ai[0] = (float)number;
                            NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                            index1 = number;
                        }
                    }
                    if (this.type == 510 && (double)this.ai[0] == 0.0)
                    {
                        this.ai[3] = (float)this.whoAmI;
                        this.realLife = this.whoAmI;
                        int index1 = this.whoAmI;
                        int num = Main.rand.Next(12, 21);
                        for (int index2 = 0; index2 < num; ++index2)
                        {
                            int Type = 511;
                            if (index2 == num - 1)
                                Type = 512;
                            int number = NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)((double)this.position.Y + (double)this.height), Type, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            Main.npc[number].ai[3] = (float)this.whoAmI;
                            Main.npc[number].realLife = this.whoAmI;
                            Main.npc[number].ai[1] = (float)index1;
                            Main.npc[index1].ai[0] = (float)number;
                            NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                            index1 = number;
                        }
                    }
                    else if ((this.type == 7 || this.type == 8 || (this.type == 10 || this.type == 11) || (this.type == 13 || this.type == 14 || (this.type == 39 || this.type == 40)) || (this.type == 95 || this.type == 96 || (this.type == 98 || this.type == 99) || (this.type == 117 || this.type == 118))) && (double)this.ai[0] == 0.0)
                    {
                        if (this.type == 7 || this.type == 10 || (this.type == 13 || this.type == 39) || (this.type == 95 || this.type == 98 || this.type == 117))
                        {
                            if (this.type < 13 || this.type > 15)
                            {
                                this.ai[3] = (float)this.whoAmI;
                                this.realLife = this.whoAmI;
                            }
                            this.ai[2] = (float)Main.rand.Next(8, 13);
                            if (this.type == 10)
                                this.ai[2] = (float)Main.rand.Next(4, 7);
                            if (this.type == 13)
                            {
                                this.ai[2] = (float)Main.rand.Next(45, 56);
                                if (Main.expertMode)
                                    this.ai[2] = (float)(int)((double)this.ai[2] * 1.10000002384186);
                            }
                            if (this.type == 39)
                                this.ai[2] = (float)Main.rand.Next(12, 19);
                            if (this.type == 95)
                                this.ai[2] = (float)Main.rand.Next(6, 12);
                            if (this.type == 98)
                                this.ai[2] = (float)Main.rand.Next(20, 26);
                            if (this.type == 117)
                                this.ai[2] = (float)Main.rand.Next(3, 6);
                            this.ai[0] = (float)NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)((double)this.position.Y + (double)this.height), this.type + 1, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        }
                        else
                            this.ai[0] = this.type != 8 && this.type != 11 && (this.type != 14 && this.type != 40) && (this.type != 96 && this.type != 99 && this.type != 118) || (double)this.ai[2] <= 0.0 ? (float)NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)((double)this.position.Y + (double)this.height), this.type + 1, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : (float)NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)((double)this.position.Y + (double)this.height), this.type, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        if (this.type < 13 || this.type > 15)
                        {
                            Main.npc[(int)this.ai[0]].ai[3] = this.ai[3];
                            Main.npc[(int)this.ai[0]].realLife = this.realLife;
                        }
                        Main.npc[(int)this.ai[0]].ai[1] = (float)this.whoAmI;
                        Main.npc[(int)this.ai[0]].ai[2] = this.ai[2] - 1f;
                        this.netUpdate = true;
                    }
                    if (this.type == 412 && (double)this.ai[0] == 0.0)
                    {
                        this.ai[3] = (float)this.whoAmI;
                        this.realLife = this.whoAmI;
                        int index1 = this.whoAmI;
                        int num = 30;
                        for (int index2 = 0; index2 < num; ++index2)
                        {
                            int Type = 413;
                            if (index2 == num - 1)
                                Type = 414;
                            int number = NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)((double)this.position.Y + (double)this.height), Type, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            Main.npc[number].ai[3] = (float)this.whoAmI;
                            Main.npc[number].realLife = this.whoAmI;
                            Main.npc[number].ai[1] = (float)index1;
                            Main.npc[index1].ai[0] = (float)number;
                            NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                            index1 = number;
                        }
                    }
                    switch (this.type)
                    {
                        case 455:
                        case 456:
                        case 457:
                        case 458:
                        case 459:
                        case 511:
                        case 512:
                        case 514:
                        case 515:
                        case 118:
                        case 119:
                        case 413:
                        case 414:
                        case 8:
                        case 9:
                        case 11:
                        case 12:
                        case 40:
                        case 41:
                        case 88:
                        case 89:
                        case 90:
                        case 91:
                        case 92:
                        case 96:
                        case 97:
                        case 99:
                        case 100:
                            if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != this.aiStyle)
                            {
                                this.life = 0;
                                this.HitEffect(0, 10.0);
                                this.active = false;
                                NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0.0f, 0.0f, 0, 0, 0);
                                break;
                            }
                            break;
                    }
                    switch (this.type)
                    {
                        case 454:
                        case 455:
                        case 456:
                        case 457:
                        case 458:
                        case 510:
                        case 511:
                        case 513:
                        case 514:
                        case 117:
                        case 118:
                        case 412:
                        case 413:
                        case 7:
                        case 8:
                        case 10:
                        case 11:
                        case 39:
                        case 40:
                        case 87:
                        case 88:
                        case 89:
                        case 90:
                        case 91:
                        case 95:
                        case 96:
                        case 98:
                        case 99:
                            if (!Main.npc[(int)this.ai[0]].active || Main.npc[(int)this.ai[0]].aiStyle != this.aiStyle)
                            {
                                this.life = 0;
                                this.HitEffect(0, 10.0);
                                this.active = false;
                                NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0.0f, 0.0f, 0, 0, 0);
                                break;
                            }
                            break;
                    }
                    if (this.type == 13 || this.type == 14 || this.type == 15)
                    {
                        if (!Main.npc[(int)this.ai[1]].active && !Main.npc[(int)this.ai[0]].active)
                        {
                            this.life = 0;
                            this.HitEffect(0, 10.0);
                            this.checkDead();
                            this.active = false;
                            NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0.0f, 0.0f, 0, 0, 0);
                        }
                        if (this.type == 13 && !Main.npc[(int)this.ai[0]].active)
                        {
                            this.life = 0;
                            this.HitEffect(0, 10.0);
                            this.checkDead();
                            this.active = false;
                            NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0.0f, 0.0f, 0, 0, 0);
                        }
                        if (this.type == 15 && !Main.npc[(int)this.ai[1]].active)
                        {
                            this.life = 0;
                            this.HitEffect(0, 10.0);
                            this.checkDead();
                            this.active = false;
                            NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0.0f, 0.0f, 0, 0, 0);
                        }
                        if (this.type == 14 && (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != this.aiStyle))
                        {
                            this.type = 13;
                            int num1 = this.whoAmI;
                            float num2 = (float)this.life / (float)this.lifeMax;
                            float num3 = this.ai[0];
                            this.SetDefaultsKeepPlayerInteraction(this.type);
                            this.life = (int)((double)this.lifeMax * (double)num2);
                            this.ai[0] = num3;
                            this.TargetClosest(true);
                            this.netUpdate = true;
                            this.whoAmI = num1;
                        }
                        if (this.type == 14 && (!Main.npc[(int)this.ai[0]].active || Main.npc[(int)this.ai[0]].aiStyle != this.aiStyle))
                        {
                            int num1 = this.whoAmI;
                            float num2 = (float)this.life / (float)this.lifeMax;
                            float num3 = this.ai[1];
                            this.SetDefaultsKeepPlayerInteraction(this.type);
                            this.life = (int)((double)this.lifeMax * (double)num2);
                            this.ai[1] = num3;
                            this.TargetClosest(true);
                            this.netUpdate = true;
                            this.whoAmI = num1;
                        }
                    }
                    if (!this.active && Main.netMode == 2)
                        NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0.0f, 0.0f, 0, 0, 0);
                }
                int num4 = (int)((double)this.position.X / 16.0) - 1;
                int num5 = (int)(((double)this.position.X + (double)this.width) / 16.0) + 2;
                int num6 = (int)((double)this.position.Y / 16.0) - 1;
                int num7 = (int)(((double)this.position.Y + (double)this.height) / 16.0) + 2;
                if (num4 < 0)
                    num4 = 0;
                if (num5 > Main.maxTilesX)
                    num5 = Main.maxTilesX;
                if (num6 < 0)
                    num6 = 0;
                if (num7 > Main.maxTilesY)
                    num7 = Main.maxTilesY;
                bool flag1 = false;
                if (this.type >= 87 && this.type <= 92)
                    flag1 = true;
                if (this.type >= 454 && this.type <= 459)
                    flag1 = true;
                if (this.type == 402 && (double)this.ai[1] == -1.0)
                    flag1 = true;
                if (this.type >= 412 && this.type <= 414)
                    flag1 = true;
                if (!flag1)
                {
                    for (int i = num4; i < num5; ++i)
                    {
                        for (int j = num6; j < num7; ++j)
                        {
                            if (Main.tile[i, j] != null && (Main.tile[i, j].nactive() && (Main.tileSolid[(int)Main.tile[i, j].type] || Main.tileSolidTop[(int)Main.tile[i, j].type] && (int)Main.tile[i, j].frameY == 0) || (int)Main.tile[i, j].liquid > 64))
                            {
                                Vector2 vector2;
                                vector2.X = (float)(i * 16);
                                vector2.Y = (float)(j * 16);
                                if ((double)this.position.X + (double)this.width > (double)vector2.X && (double)this.position.X < (double)vector2.X + 16.0 && ((double)this.position.Y + (double)this.height > (double)vector2.Y && (double)this.position.Y < (double)vector2.Y + 16.0))
                                {
                                    flag1 = true;
                                    if (Main.rand.Next(100) == 0 && this.type != 117 && Main.tile[i, j].nactive())
                                        WorldGen.KillTile(i, j, true, true, false);
                                }
                            }
                        }
                    }
                }
                if (!flag1 && (this.type == 7 || this.type == 10 || (this.type == 13 || this.type == 39) || (this.type == 95 || this.type == 98 || (this.type == 117 || this.type == 375)) || (this.type == 454 || this.type == 510 || this.type == 513)))
                {
                    Rectangle rectangle1 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
                    int num1 = 1000;
                    bool flag2 = true;
                    for (int index = 0; index < (int)byte.MaxValue; ++index)
                    {
                        if (Main.player[index].active)
                        {
                            Rectangle rectangle2 = new Rectangle((int)Main.player[index].position.X - num1, (int)Main.player[index].position.Y - num1, num1 * 2, num1 * 2);
                            if (rectangle1.Intersects(rectangle2))
                            {
                                flag2 = false;
                                break;
                            }
                        }
                    }
                    if (flag2)
                        flag1 = true;
                }
                if (this.type >= 87 && this.type <= 92 || this.type >= 454 && this.type <= 459)
                {
                    if ((double)this.velocity.X < 0.0)
                        this.spriteDirection = 1;
                    else if ((double)this.velocity.X > 0.0)
                        this.spriteDirection = -1;
                }
                if (this.type == 414)
                {
                    if (this.justHit)
                        this.localAI[3] = 3f;
                    if ((double)this.localAI[2] > 0.0)
                    {
                        this.localAI[2] -= 16f;
                        if ((double)this.localAI[2] == 0.0)
                            this.localAI[2] = (float)sbyte.MinValue;
                    }
                    else if ((double)this.localAI[2] < 0.0)
                        this.localAI[2] += 16f;
                    else if ((double)this.localAI[3] > 0.0)
                    {
                        this.localAI[2] = 128f;
                        --this.localAI[3];
                    }
                }
                if (this.type == 412)
                {
                    Vector2 vector2_1 = this.Center + Utils.ToRotationVector2(this.rotation - 1.570796f) * 8f;
                    Vector2 vector2_2 = Utils.ToRotationVector2(this.rotation) * 16f;
                    Dust dust1 = Main.dust[Dust.NewDust(vector2_1 + vector2_2, 0, 0, 6, this.velocity.X, this.velocity.Y, 100, Color.Transparent, (float)(1.0 + (double)Utils.NextFloat(Main.rand) * 3.0))];
                    dust1.noGravity = true;
                    dust1.noLight = true;
                    dust1.position -= new Vector2(4f);
                    dust1.fadeIn = 1f;
                    dust1.velocity = Vector2.Zero;
                    Dust dust2 = Main.dust[Dust.NewDust(vector2_1 - vector2_2, 0, 0, 6, this.velocity.X, this.velocity.Y, 100, Color.Transparent, (float)(1.0 + (double)Utils.NextFloat(Main.rand) * 3.0))];
                    dust2.noGravity = true;
                    dust2.noLight = true;
                    dust2.position -= new Vector2(4f);
                    dust2.fadeIn = 1f;
                    dust2.velocity = Vector2.Zero;
                }
                float num8 = 8f;
                float num9 = 0.07f;
                if (this.type == 95)
                {
                    num8 = 5.5f;
                    num9 = 0.045f;
                }
                if (this.type == 10)
                {
                    num8 = 6f;
                    num9 = 0.05f;
                }
                if (this.type == 513)
                {
                    num8 = 7f;
                    num9 = 0.03f;
                }
                if (this.type == 13)
                {
                    num8 = 10f;
                    num9 = 0.07f;
                    if (Main.expertMode)
                    {
                        num8 = 12f;
                        num9 = 0.15f;
                    }
                }
                if (this.type == 510)
                {
                    num8 = 10f;
                    num9 = 0.25f;
                }
                if (this.type == 87)
                {
                    num8 = 11f;
                    num9 = 0.25f;
                }
                if (this.type == 375)
                {
                    num8 = 6f;
                    num9 = 0.15f;
                }
                if (this.type == 454)
                {
                    num8 = 20f;
                    num9 = 0.55f;
                }
                if (this.type == 402)
                {
                    num8 = 6f;
                    num9 = 0.2f;
                }
                if (this.type == 117 && Main.wof >= 0)
                {
                    float num1 = (float)Main.npc[Main.wof].life / (float)Main.npc[Main.wof].lifeMax;
                    if ((double)num1 < 0.5)
                    {
                        ++num8;
                        num9 += 0.1f;
                    }
                    if ((double)num1 < 0.25)
                    {
                        ++num8;
                        num9 += 0.1f;
                    }
                    if ((double)num1 < 0.1)
                    {
                        num8 += 2f;
                        num9 += 0.1f;
                    }
                }
                Vector2 vector2_3 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                float num10 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
                float num11 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
                if (this.type == 412)
                {
                    num8 = 10f;
                    num9 = 0.3f;
                    int num1 = -1;
                    int num2 = (int)((double)Main.player[this.target].Center.X / 16.0);
                    int num3 = (int)((double)Main.player[this.target].Center.Y / 16.0);
                    for (int i = num2 - 2; i <= num2 + 2; ++i)
                    {
                        for (int j = num3; j <= num3 + 15; ++j)
                        {
                            if (WorldGen.SolidTile2(i, j))
                            {
                                num1 = j;
                                break;
                            }
                        }
                        if (num1 > 0)
                            break;
                    }
                    if (num1 > 0)
                    {
                        num1 *= 16;
                        float num12 = (float)(num1 - 800);
                        if ((double)Main.player[this.target].position.Y > (double)num12)
                        {
                            num11 = num12;
                            if ((double)Math.Abs(this.Center.X - Main.player[this.target].Center.X) < 500.0)
                                num10 = (double)this.velocity.X <= 0.0 ? Main.player[this.target].Center.X - 600f : Main.player[this.target].Center.X + 600f;
                        }
                    }
                    else
                    {
                        num8 = 14f;
                        num9 = 0.5f;
                    }
                    float num13 = num8 * 1.3f;
                    float num14 = num8 * 0.7f;
                    float num15 = this.velocity.Length();
                    if ((double)num15 > 0.0)
                    {
                        if ((double)num15 > (double)num13)
                        {
                            this.velocity.Normalize();
                            NPC npc = this;
                            Vector2 vector2_1 = npc.velocity * num13;
                            npc.velocity = vector2_1;
                        }
                        else if ((double)num15 < (double)num14)
                        {
                            this.velocity.Normalize();
                            NPC npc = this;
                            Vector2 vector2_1 = npc.velocity * num14;
                            npc.velocity = vector2_1;
                        }
                    }
                    if (num1 > 0)
                    {
                        for (int index = 0; index < 200; ++index)
                        {
                            if (Main.npc[index].active && Main.npc[index].type == this.type && index != this.whoAmI)
                            {
                                Vector2 vector2_1 = Main.npc[index].Center - this.Center;
                                if ((double)vector2_1.Length() < 400.0)
                                {
                                    vector2_1.Normalize();
                                    Vector2 vector2_2 = vector2_1 * 1000f;
                                    num10 -= vector2_2.X;
                                    num11 -= vector2_2.Y;
                                }
                            }
                        }
                    }
                    else
                    {
                        for (int index = 0; index < 200; ++index)
                        {
                            if (Main.npc[index].active && Main.npc[index].type == this.type && index != this.whoAmI)
                            {
                                Vector2 vector2_1 = Main.npc[index].Center - this.Center;
                                if ((double)vector2_1.Length() < 60.0)
                                {
                                    vector2_1.Normalize();
                                    Vector2 vector2_2 = vector2_1 * 200f;
                                    num10 -= vector2_2.X;
                                    num11 -= vector2_2.Y;
                                }
                            }
                        }
                    }
                }
                float num16 = (float)((int)((double)num10 / 16.0) * 16);
                float num17 = (float)((int)((double)num11 / 16.0) * 16);
                vector2_3.X = (float)((int)((double)vector2_3.X / 16.0) * 16);
                vector2_3.Y = (float)((int)((double)vector2_3.Y / 16.0) * 16);
                float num18 = num16 - vector2_3.X;
                float num19 = num17 - vector2_3.Y;
                if (this.type == 375)
                {
                    num18 *= -1f;
                    num19 *= -1f;
                }
                float num20 = (float)Math.Sqrt((double)num18 * (double)num18 + (double)num19 * (double)num19);
                if ((double)this.ai[1] > 0.0)
                {
                    if ((double)this.ai[1] < (double)Main.npc.Length)
                    {
                        try
                        {
                            vector2_3 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                            num18 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - vector2_3.X;
                            num19 = Main.npc[(int)this.ai[1]].position.Y + (float)(Main.npc[(int)this.ai[1]].height / 2) - vector2_3.Y;
                        }
                        catch
                        {
                        }
                        this.rotation = (float)Math.Atan2((double)num19, (double)num18) + 1.57f;
                        float num1 = (float)Math.Sqrt((double)num18 * (double)num18 + (double)num19 * (double)num19);
                        int num2 = this.width;
                        if (this.type >= 87 && this.type <= 92)
                            num2 = 42;
                        if (this.type >= 454 && this.type <= 459)
                            num2 = 36;
                        if (this.type >= 13 && this.type <= 15)
                            num2 = (int)((double)num2 * (double)this.scale);
                        if (this.type >= 412 && this.type <= 414)
                            num2 += 6;
                        float num3 = (num1 - (float)num2) / num1;
                        float num12 = num18 * num3;
                        float num13 = num19 * num3;
                        this.velocity = Vector2.Zero;
                        this.position.X += num12;
                        this.position.Y += num13;
                        if (this.type >= 87 && this.type <= 92)
                        {
                            if ((double)num12 < 0.0)
                                this.spriteDirection = 1;
                            else if ((double)num12 > 0.0)
                                this.spriteDirection = -1;
                        }
                        if (this.type < 454 || this.type > 459)
                            return;
                        if ((double)num12 < 0.0)
                        {
                            this.spriteDirection = 1;
                            return;
                        }
                        if ((double)num12 <= 0.0)
                            return;
                        this.spriteDirection = -1;
                        return;
                    }
                }
                if (!flag1)
                {
                    this.TargetClosest(true);
                    this.velocity.Y += 0.11f;
                    if ((double)this.velocity.Y > (double)num8)
                        this.velocity.Y = num8;
                    if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < (double)num8 * 0.4)
                    {
                        if ((double)this.velocity.X < 0.0)
                            this.velocity.X -= num9 * 1.1f;
                        else
                            this.velocity.X += num9 * 1.1f;
                    }
                    else if ((double)this.velocity.Y == (double)num8)
                    {
                        if ((double)this.velocity.X < (double)num18)
                            this.velocity.X += num9;
                        else if ((double)this.velocity.X > (double)num18)
                            this.velocity.X -= num9;
                    }
                    else if ((double)this.velocity.Y > 4.0)
                    {
                        if ((double)this.velocity.X < 0.0)
                            this.velocity.X += num9 * 0.9f;
                        else
                            this.velocity.X -= num9 * 0.9f;
                    }
                }
                else
                {
                    if (this.type != 87 && this.type != 117 && (this.type != 454 && this.type != 412) && this.soundDelay == 0)
                    {
                        float num1 = num20 / 40f;
                        if ((double)num1 < 10.0)
                            num1 = 10f;
                        if ((double)num1 > 20.0)
                            num1 = 20f;
                        this.soundDelay = (int)num1;
                        Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 1);
                    }
                    float num2 = (float)Math.Sqrt((double)num18 * (double)num18 + (double)num19 * (double)num19);
                    float num3 = Math.Abs(num18);
                    float num12 = Math.Abs(num19);
                    float num13 = num8 / num2;
                    float num14 = num18 * num13;
                    float num15 = num19 * num13;
                    bool flag2 = false;
                    if ((this.type == 7 || this.type == 13) && (!Main.player[this.target].ZoneCorrupt && !Main.player[this.target].ZoneCrimson))
                        flag2 = true;
                    if (this.type == 513 && (double)Main.player[this.target].position.Y < Main.worldSurface * 16.0)
                        flag2 = true;
                    if (this.type == 510 && (double)Main.player[this.target].position.Y < Main.worldSurface * 16.0)
                        flag2 = true;
                    if (flag2)
                    {
                        bool flag3 = true;
                        for (int index = 0; index < (int)byte.MaxValue; ++index)
                        {
                            if (Main.player[index].active && !Main.player[index].dead && Main.player[index].ZoneCorrupt)
                                flag3 = false;
                        }
                        if (flag3)
                        {
                            if (Main.netMode != 1 && (double)this.position.Y / 16.0 > (Main.rockLayer + (double)Main.maxTilesY) / 2.0)
                            {
                                this.active = false;
                                int num1;
                                for (int number = (int)this.ai[0]; number > 0 && number < 200 && (Main.npc[number].active && Main.npc[number].aiStyle == this.aiStyle); number = num1)
                                {
                                    num1 = (int)Main.npc[number].ai[0];
                                    Main.npc[number].active = false;
                                    this.life = 0;
                                    if (Main.netMode == 2)
                                        NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                                }
                                if (Main.netMode == 2)
                                    NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                            }
                            num14 = 0.0f;
                            num15 = num8;
                        }
                    }
                    bool flag4 = false;
                    if (this.type == 87)
                    {
                        if (((double)this.velocity.X > 0.0 && (double)num14 < 0.0 || (double)this.velocity.X < 0.0 && (double)num14 > 0.0 || ((double)this.velocity.Y > 0.0 && (double)num15 < 0.0 || (double)this.velocity.Y < 0.0 && (double)num15 > 0.0)) && ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) > (double)num9 / 2.0 && (double)num2 < 300.0))
                        {
                            flag4 = true;
                            if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < (double)num8)
                            {
                                NPC npc = this;
                                Vector2 vector2_1 = npc.velocity * 1.1f;
                                npc.velocity = vector2_1;
                            }
                        }
                        if ((double)this.position.Y > (double)Main.player[this.target].position.Y || (double)Main.player[this.target].position.Y / 16.0 > Main.worldSurface || Main.player[this.target].dead)
                        {
                            flag4 = true;
                            if ((double)Math.Abs(this.velocity.X) < (double)num8 / 2.0)
                            {
                                if ((double)this.velocity.X == 0.0)
                                    this.velocity.X -= (float)this.direction;
                                this.velocity.X *= 1.1f;
                            }
                            else if ((double)this.velocity.Y > -(double)num8)
                                this.velocity.Y -= num9;
                        }
                    }
                    if (this.type == 454)
                    {
                        if (((double)this.velocity.X > 0.0 && (double)num14 < 0.0 || (double)this.velocity.X < 0.0 && (double)num14 > 0.0 || ((double)this.velocity.Y > 0.0 && (double)num15 < 0.0 || (double)this.velocity.Y < 0.0 && (double)num15 > 0.0)) && ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) > (double)num9 / 2.0 && (double)num2 < 300.0))
                        {
                            flag4 = true;
                            if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < (double)num8)
                            {
                                NPC npc = this;
                                Vector2 vector2_1 = npc.velocity * 1.1f;
                                npc.velocity = vector2_1;
                            }
                        }
                        if ((double)this.position.Y > (double)Main.player[this.target].position.Y || Main.player[this.target].dead)
                        {
                            flag4 = true;
                            if ((double)Math.Abs(this.velocity.X) < (double)num8 / 2.0)
                            {
                                if ((double)this.velocity.X == 0.0)
                                    this.velocity.X -= (float)this.direction;
                                this.velocity.X *= 1.1f;
                            }
                            else if ((double)this.velocity.Y > -(double)num8)
                                this.velocity.Y -= num9;
                        }
                    }
                    if (!flag4)
                    {
                        if ((double)this.velocity.X > 0.0 && (double)num14 > 0.0 || (double)this.velocity.X < 0.0 && (double)num14 < 0.0 || ((double)this.velocity.Y > 0.0 && (double)num15 > 0.0 || (double)this.velocity.Y < 0.0 && (double)num15 < 0.0))
                        {
                            if ((double)this.velocity.X < (double)num14)
                                this.velocity.X += num9;
                            else if ((double)this.velocity.X > (double)num14)
                                this.velocity.X -= num9;
                            if ((double)this.velocity.Y < (double)num15)
                                this.velocity.Y += num9;
                            else if ((double)this.velocity.Y > (double)num15)
                                this.velocity.Y -= num9;
                            if ((double)Math.Abs(num15) < (double)num8 * 0.2 && ((double)this.velocity.X > 0.0 && (double)num14 < 0.0 || (double)this.velocity.X < 0.0 && (double)num14 > 0.0))
                            {
                                if ((double)this.velocity.Y > 0.0)
                                    this.velocity.Y += num9 * 2f;
                                else
                                    this.velocity.Y -= num9 * 2f;
                            }
                            if ((double)Math.Abs(num14) < (double)num8 * 0.2 && ((double)this.velocity.Y > 0.0 && (double)num15 < 0.0 || (double)this.velocity.Y < 0.0 && (double)num15 > 0.0))
                            {
                                if ((double)this.velocity.X > 0.0)
                                    this.velocity.X += num9 * 2f;
                                else
                                    this.velocity.X -= num9 * 2f;
                            }
                        }
                        else if ((double)num3 > (double)num12)
                        {
                            if ((double)this.velocity.X < (double)num14)
                                this.velocity.X += num9 * 1.1f;
                            else if ((double)this.velocity.X > (double)num14)
                                this.velocity.X -= num9 * 1.1f;
                            if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < (double)num8 * 0.5)
                            {
                                if ((double)this.velocity.Y > 0.0)
                                    this.velocity.Y += num9;
                                else
                                    this.velocity.Y -= num9;
                            }
                        }
                        else
                        {
                            if ((double)this.velocity.Y < (double)num15)
                                this.velocity.Y += num9 * 1.1f;
                            else if ((double)this.velocity.Y > (double)num15)
                                this.velocity.Y -= num9 * 1.1f;
                            if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < (double)num8 * 0.5)
                            {
                                if ((double)this.velocity.X > 0.0)
                                    this.velocity.X += num9;
                                else
                                    this.velocity.X -= num9;
                            }
                        }
                    }
                }
                this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
                if (this.type == 7 || this.type == 10 || (this.type == 13 || this.type == 39) || (this.type == 95 || this.type == 98 || (this.type == 117 || this.type == 510)) || this.type == 513)
                {
                    if (flag1)
                    {
                        if ((double)this.localAI[0] != 1.0)
                            this.netUpdate = true;
                        this.localAI[0] = 1f;
                    }
                    else
                    {
                        if ((double)this.localAI[0] != 0.0)
                            this.netUpdate = true;
                        this.localAI[0] = 0.0f;
                    }
                    if (((double)this.velocity.X > 0.0 && (double)this.oldVelocity.X < 0.0 || (double)this.velocity.X < 0.0 && (double)this.oldVelocity.X > 0.0 || ((double)this.velocity.Y > 0.0 && (double)this.oldVelocity.Y < 0.0 || (double)this.velocity.Y < 0.0 && (double)this.oldVelocity.Y > 0.0)) && !this.justHit)
                        this.netUpdate = true;
                }
                if (this.type != 454)
                    return;
                float num21 = Vector2.Distance(Main.player[this.target].Center, this.Center);
                int num22 = 0;
                if ((double)Utils.AngleTowards(Utils.ToRotation(Vector2.Normalize(Main.player[this.target].Center - this.Center)), Utils.ToRotation(this.velocity), 1.570796f) == (double)Utils.ToRotation(this.velocity) && (double)num21 < 350.0)
                    num22 = 4;
                if ((double)num22 > this.frameCounter)
                    ++this.frameCounter;
                if ((double)num22 < this.frameCounter)
                    --this.frameCounter;
                if (this.frameCounter < 0.0)
                    this.frameCounter = 0.0;
                if (this.frameCounter <= 4.0)
                    return;
                this.frameCounter = 4.0;
            }
            else if (this.aiStyle == 7)
            {
                bool flag1 = Main.raining;
                if (!Main.dayTime)
                    flag1 = true;
                if (Main.eclipse)
                    flag1 = true;
                if (Main.slimeRain)
                    flag1 = true;
                this.defense = !Main.expertMode ? (this.dryadWard ? this.defDefense : this.defDefense + 6) : (this.dryadWard ? this.defDefense : this.defDefense + 10);
                float num1 = 1f;
                if (this.townNPC || this.type == 453)
                {
                    if (NPC.downedBoss1)
                    {
                        num1 += 0.1f;
                        this.defense += 3;
                    }
                    if (NPC.downedBoss2)
                    {
                        num1 += 0.1f;
                        this.defense += 3;
                    }
                    if (NPC.downedBoss3)
                    {
                        num1 += 0.1f;
                        this.defense += 3;
                    }
                    if (NPC.downedQueenBee)
                    {
                        num1 += 0.1f;
                        this.defense += 3;
                    }
                    if (Main.hardMode)
                    {
                        num1 += 0.4f;
                        this.defense += 12;
                    }
                    if (NPC.downedMechBoss1)
                    {
                        num1 += 0.15f;
                        this.defense += 6;
                    }
                    if (NPC.downedMechBoss2)
                    {
                        num1 += 0.15f;
                        this.defense += 6;
                    }
                    if (NPC.downedMechBoss3)
                    {
                        num1 += 0.15f;
                        this.defense += 6;
                    }
                    if (NPC.downedPlantBoss)
                    {
                        num1 += 0.15f;
                        this.defense += 8;
                    }
                    if (NPC.downedGolemBoss)
                    {
                        num1 += 0.15f;
                        this.defense += 8;
                    }
                    if (NPC.downedAncientCultist)
                    {
                        num1 += 0.15f;
                        this.defense += 8;
                    }
                }
                if (this.type == 142 && Main.netMode != 1 && !Main.xMas)
                {
                    this.StrikeNPCNoInteraction(9999, 0.0f, 0, false, false, false);
                    if (Main.netMode == 2)
                        NetMessage.SendData(28, -1, -1, "", this.whoAmI, 9999f, 0.0f, 0.0f, 0, 0, 0);
                }
                if ((this.type == 148 || this.type == 149) && (double)this.localAI[0] == 0.0)
                    this.localAI[0] = (float)Main.rand.Next(1, 5);
                if (this.type == 124)
                {
                    bool flag2 = false;
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (Main.projectile[index].active && Main.projectile[index].type == 582 && (double)Main.projectile[index].ai[1] == (double)this.whoAmI)
                        {
                            flag2 = true;
                            break;
                        }
                    }
                    this.localAI[0] = (float)Utils.ToInt(flag2);
                }
                if ((this.type == 362 || this.type == 364) && Main.netMode != 1 && ((double)this.velocity.Y > 4.0 || (double)this.velocity.Y < -4.0 || this.wet))
                {
                    int num2 = this.direction;
                    this.Transform(this.type + 1);
                    this.TargetClosest(true);
                    this.direction = num2;
                    this.netUpdate = true;
                }
                else
                {
                    switch (this.type)
                    {
                        case 353:
                            NPC.savedStylist = true;
                            break;
                        case 369:
                            NPC.savedAngler = true;
                            break;
                        case 441:
                            NPC.savedTaxCollector = true;
                            break;
                        case 107:
                            NPC.savedGoblin = true;
                            break;
                        case 108:
                            NPC.savedWizard = true;
                            break;
                        case 124:
                            NPC.savedMech = true;
                            break;
                    }
                    if (this.type >= 0 && this.type < 540 && (NPCID.Sets.TownCritter[this.type] && this.target == (int)byte.MaxValue))
                    {
                        this.TargetClosest(true);
                        if ((double)this.position.X < (double)Main.player[this.target].position.X)
                        {
                            this.direction = 1;
                            this.spriteDirection = this.direction;
                        }
                        if ((double)this.position.X > (double)Main.player[this.target].position.X)
                        {
                            this.direction = -1;
                            this.spriteDirection = this.direction;
                        }
                        if (this.homeTileX == -1)
                            this.homeTileX = (int)(((double)this.position.X + (double)(this.width / 2)) / 16.0);
                    }
                    else if (this.homeTileX == -1 && this.homeTileY == -1 && (double)this.velocity.Y == 0.0)
                    {
                        this.homeTileX = (int)this.Center.X / 16;
                        this.homeTileY = (int)((double)this.position.Y + (double)this.height + 4.0) / 16;
                    }
                    bool flag2 = false;
                    int j1 = this.homeTileY;
                    if (this.type == 441)
                        NPC.taxCollector = true;
                    this.directionY = -1;
                    if (this.direction == 0)
                        this.direction = 1;
                    for (int index = 0; index < (int)byte.MaxValue; ++index)
                    {
                        if (Main.player[index].active && Main.player[index].talkNPC == this.whoAmI)
                        {
                            flag2 = true;
                            if ((double)this.ai[0] != 0.0)
                                this.netUpdate = true;
                            this.ai[0] = 0.0f;
                            this.ai[1] = 300f;
                            this.localAI[3] = 100f;
                            if ((double)Main.player[index].position.X + (double)(Main.player[index].width / 2) < (double)this.position.X + (double)(this.width / 2))
                                this.direction = -1;
                            else
                                this.direction = 1;
                        }
                    }
                    if ((double)this.ai[3] == 1.0)
                    {
                        this.life = -1;
                        this.HitEffect(0, 10.0);
                        this.active = false;
                        this.netUpdate = true;
                        if (this.type != 37)
                            return;
                        Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
                    }
                    else
                    {
                        if (this.type == 37 && Main.netMode != 1)
                        {
                            this.homeless = false;
                            this.homeTileX = Main.dungeonX;
                            this.homeTileY = Main.dungeonY;
                            if (NPC.downedBoss3)
                            {
                                this.ai[3] = 1f;
                                this.netUpdate = true;
                            }
                        }
                        if (Main.netMode != 1 && this.homeTileY > 0)
                        {
                            while (!WorldGen.SolidTile(this.homeTileX, j1) && j1 < Main.maxTilesY - 20)
                                ++j1;
                        }
                        if (this.type == 368)
                        {
                            this.homeless = true;
                            if (!Main.dayTime)
                            {
                                this.homeTileX = (int)((double)this.Center.X / 16.0);
                                this.homeTileY = (int)((double)this.position.Y + (double)this.height + 2.0) / 16;
                                if (!flag2)
                                {
                                    this.ai[0] = 1f;
                                    this.ai[1] = 200f;
                                }
                                flag1 = false;
                            }
                        }
                        if (this.type == 369 && this.homeless && this.wet)
                        {
                            if ((double)this.Center.X / 16.0 < 380.0 || (double)this.Center.X / 16.0 > (double)(Main.maxTilesX - 380))
                            {
                                this.homeTileX = Main.spawnTileX;
                                this.homeTileY = Main.spawnTileY;
                                this.ai[0] = 1f;
                                this.ai[1] = 200f;
                            }
                            if ((double)this.position.X / 16.0 < 200.0)
                                this.direction = 1;
                            else if ((double)this.position.X / 16.0 > (double)(Main.maxTilesX - 200))
                                this.direction = -1;
                        }
                        int x = (int)((double)this.position.X + (double)(this.width / 2)) / 16;
                        int y = (int)((double)this.position.Y + (double)this.height + 1.0) / 16;
                        if (!WorldGen.InWorld(x, y, 0) || Main.tile[x, y] == null)
                            return;
                        if (!this.homeless && Main.netMode != 1 && this.townNPC && ((flag1 || Main.tileDungeon[(int)Main.tile[x, y].type]) && (x != this.homeTileX || y != j1)))
                        {
                            bool flag3 = true;
                            for (int index1 = 0; index1 < 2; ++index1)
                            {
                                Rectangle rectangle = new Rectangle((int)((double)this.position.X + (double)(this.width / 2) - (double)(NPC.sWidth / 2) - (double)NPC.safeRangeX), (int)((double)this.position.Y + (double)(this.height / 2) - (double)(NPC.sHeight / 2) - (double)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
                                if (index1 == 1)
                                    rectangle = new Rectangle(this.homeTileX * 16 + 8 - NPC.sWidth / 2 - NPC.safeRangeX, j1 * 16 + 8 - NPC.sHeight / 2 - NPC.safeRangeY, NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
                                for (int index2 = 0; index2 < (int)byte.MaxValue; ++index2)
                                {
                                    if (Main.player[index2].active && new Rectangle((int)Main.player[index2].position.X, (int)Main.player[index2].position.Y, Main.player[index2].width, Main.player[index2].height).Intersects(rectangle))
                                    {
                                        flag3 = false;
                                        break;
                                    }
                                    if (!flag3)
                                        break;
                                }
                            }
                            if (flag3)
                            {
                                if (this.type == 37 || !Collision.SolidTiles(this.homeTileX - 1, this.homeTileX + 1, j1 - 3, j1 - 1))
                                {
                                    this.velocity.X = 0.0f;
                                    this.velocity.Y = 0.0f;
                                    this.position.X = (float)(this.homeTileX * 16 + 8 - this.width / 2);
                                    this.position.Y = (float)(j1 * 16 - this.height) - 0.1f;
                                    this.netUpdate = true;
                                }
                                else
                                {
                                    this.homeless = true;
                                    WorldGen.QuickFindHome(this.whoAmI);
                                }
                            }
                        }
                        bool flag4 = this.type == 300 || this.type == 447;
                        float num2 = 200f;
                        if (NPCID.Sets.DangerDetectRange[this.type] != -1)
                            num2 = (float)NPCID.Sets.DangerDetectRange[this.type];
                        bool flag5 = false;
                        bool flag6 = false;
                        float num3 = -1f;
                        float num4 = -1f;
                        int num5 = 0;
                        int index3 = -1;
                        int index4 = -1;
                        if (Main.netMode != 1 && !flag2)
                        {
                            for (int index1 = 0; index1 < 200; ++index1)
                            {
                                if (Main.npc[index1].active && !Main.npc[index1].friendly && (Main.npc[index1].damage > 0 && (double)Main.npc[index1].Distance(this.Center) < (double)num2) && (this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[index1].netID)))
                                {
                                    flag5 = true;
                                    float num6 = Main.npc[index1].Center.X - this.Center.X;
                                    if ((double)num6 < 0.0 && ((double)num3 == -1.0 || (double)num6 > (double)num3))
                                    {
                                        num3 = num6;
                                        index3 = index1;
                                    }
                                    if ((double)num6 > 0.0 && ((double)num4 == -1.0 || (double)num6 < (double)num4))
                                    {
                                        num4 = num6;
                                        index4 = index1;
                                    }
                                }
                            }
                            if (flag5)
                            {
                                num5 = (double)num3 != -1.0 ? ((double)num4 != -1.0 ? Utils.ToDirectionInt((double)num4 < -(double)num3) : -1) : 1;
                                float num6 = 0.0f;
                                if ((double)num3 != -1.0)
                                    num6 = -num3;
                                if ((double)num6 == 0.0 || (double)num4 < (double)num6 && (double)num4 > 0.0)
                                    num6 = num4;
                                if ((double)this.ai[0] == 8.0)
                                {
                                    if (this.direction == -num5)
                                    {
                                        this.ai[0] = 1f;
                                        this.ai[1] = (float)(300 + Main.rand.Next(300));
                                        this.ai[2] = 0.0f;
                                        this.localAI[3] = 0.0f;
                                        this.netUpdate = true;
                                    }
                                }
                                else if ((double)this.ai[0] != 10.0 && (double)this.ai[0] != 12.0 && ((double)this.ai[0] != 13.0 && (double)this.ai[0] != 14.0) && (double)this.ai[0] != 15.0)
                                {
                                    if (NPCID.Sets.PrettySafe[this.type] != -1 && (double)NPCID.Sets.PrettySafe[this.type] < (double)num6)
                                    {
                                        flag5 = false;
                                        flag6 = true;
                                    }
                                    else if ((double)this.ai[0] != 1.0)
                                    {
                                        if ((double)this.ai[0] == 3.0 || (double)this.ai[0] == 4.0 || (double)this.ai[0] == 16.0 || (double)this.ai[0] == 17.0)
                                        {
                                            NPC npc = Main.npc[(int)this.ai[2]];
                                            if (npc.active)
                                            {
                                                npc.ai[0] = 1f;
                                                npc.ai[1] = (float)(120 + Main.rand.Next(120));
                                                npc.ai[2] = 0.0f;
                                                npc.localAI[3] = 0.0f;
                                                npc.direction = -num5;
                                                npc.netUpdate = true;
                                            }
                                        }
                                        this.ai[0] = 1f;
                                        this.ai[1] = (float)(120 + Main.rand.Next(120));
                                        this.ai[2] = 0.0f;
                                        this.localAI[3] = 0.0f;
                                        this.direction = -num5;
                                        this.netUpdate = true;
                                    }
                                    else if ((double)this.ai[0] == 1.0 && this.direction != -num5)
                                    {
                                        this.direction = -num5;
                                        this.netUpdate = true;
                                    }
                                }
                            }
                        }
                        if ((double)this.ai[0] == 0.0)
                        {
                            if ((double)this.localAI[3] > 0.0)
                                --this.localAI[3];
                            if (flag1 && !flag2 && !NPCID.Sets.TownCritter[this.type])
                            {
                                if (Main.netMode != 1)
                                {
                                    if (x == this.homeTileX && y == j1)
                                    {
                                        if ((double)this.velocity.X != 0.0)
                                            this.netUpdate = true;
                                        if ((double)this.velocity.X > 0.100000001490116)
                                            this.velocity.X -= 0.1f;
                                        else if ((double)this.velocity.X < -0.100000001490116)
                                            this.velocity.X += 0.1f;
                                        else
                                            this.velocity.X = 0.0f;
                                    }
                                    else
                                    {
                                        if (x > this.homeTileX)
                                            this.direction = -1;
                                        else
                                            this.direction = 1;
                                        this.ai[0] = 1f;
                                        this.ai[1] = (float)(200 + Main.rand.Next(200));
                                        this.ai[2] = 0.0f;
                                        this.localAI[3] = 0.0f;
                                        this.netUpdate = true;
                                    }
                                }
                            }
                            else
                            {
                                if (flag4)
                                    this.velocity.X *= 0.5f;
                                if ((double)this.velocity.X > 0.100000001490116)
                                    this.velocity.X -= 0.1f;
                                else if ((double)this.velocity.X < -0.100000001490116)
                                    this.velocity.X += 0.1f;
                                else
                                    this.velocity.X = 0.0f;
                                if (Main.netMode != 1)
                                {
                                    if ((double)this.ai[1] > 0.0)
                                        --this.ai[1];
                                    if ((double)this.ai[1] <= 0.0)
                                    {
                                        this.ai[0] = 1f;
                                        this.ai[1] = (float)(200 + Main.rand.Next(300));
                                        this.ai[2] = 0.0f;
                                        if (NPCID.Sets.TownCritter[this.type])
                                            this.ai[1] += (float)Main.rand.Next(200, 400);
                                        this.localAI[3] = 0.0f;
                                        this.netUpdate = true;
                                    }
                                }
                            }
                            if (Main.netMode != 1 && (!flag1 || x == this.homeTileX && y == j1))
                            {
                                if (x < this.homeTileX - 25 || x > this.homeTileX + 25)
                                {
                                    if ((double)this.localAI[3] == 0.0)
                                    {
                                        if (x < this.homeTileX - 50 && this.direction == -1)
                                        {
                                            this.direction = 1;
                                            this.netUpdate = true;
                                        }
                                        else if (x > this.homeTileX + 50 && this.direction == 1)
                                        {
                                            this.direction = -1;
                                            this.netUpdate = true;
                                        }
                                    }
                                }
                                else if (Main.rand.Next(80) == 0 && (double)this.localAI[3] == 0.0)
                                {
                                    this.localAI[3] = 200f;
                                    this.direction *= -1;
                                    this.netUpdate = true;
                                }
                            }
                        }
                        else if ((double)this.ai[0] == 1.0)
                        {
                            if (Main.netMode != 1 && flag1 && (x == this.homeTileX && y == this.homeTileY) && !NPCID.Sets.TownCritter[this.type])
                            {
                                this.ai[0] = 0.0f;
                                this.ai[1] = (float)(200 + Main.rand.Next(200));
                                this.localAI[3] = 60f;
                                this.netUpdate = true;
                            }
                            else
                            {
                                bool flag3 = Collision.DrownCollision(this.position, this.width, this.height, 1f);
                                if (!flag3)
                                {
                                    if (Main.netMode != 1 && !this.homeless && !Main.tileDungeon[(int)Main.tile[x, y].type] && (x < this.homeTileX - 35 || x > this.homeTileX + 35))
                                    {
                                        if ((double)this.position.X < (double)(this.homeTileX * 16) && this.direction == -1)
                                            this.ai[1] -= 5f;
                                        else if ((double)this.position.X > (double)(this.homeTileX * 16) && this.direction == 1)
                                            this.ai[1] -= 5f;
                                    }
                                    --this.ai[1];
                                }
                                if ((double)this.ai[1] <= 0.0)
                                {
                                    this.ai[0] = 0.0f;
                                    this.ai[1] = (float)(300 + Main.rand.Next(300));
                                    this.ai[2] = 0.0f;
                                    if (NPCID.Sets.TownCritter[this.type])
                                        this.ai[1] -= (float)Main.rand.Next(100);
                                    else
                                        this.ai[1] += (float)Main.rand.Next(900);
                                    this.localAI[3] = 60f;
                                    this.netUpdate = true;
                                }
                                if (this.closeDoor && (((double)this.position.X + (double)(this.width / 2)) / 16.0 > (double)(this.doorX + 2) || ((double)this.position.X + (double)(this.width / 2)) / 16.0 < (double)(this.doorX - 2)))
                                {
                                    Tile tileSafely = Framing.GetTileSafely(this.doorX, this.doorY);
                                    if ((int)tileSafely.type == 11)
                                    {
                                        if (WorldGen.CloseDoor(this.doorX, this.doorY, false))
                                        {
                                            this.closeDoor = false;
                                            NetMessage.SendData(19, -1, -1, "", 1, (float)this.doorX, (float)this.doorY, (float)this.direction, 0, 0, 0);
                                        }
                                        if (((double)this.position.X + (double)(this.width / 2)) / 16.0 > (double)(this.doorX + 4) || ((double)this.position.X + (double)(this.width / 2)) / 16.0 < (double)(this.doorX - 4) || (((double)this.position.Y + (double)(this.height / 2)) / 16.0 > (double)(this.doorY + 4) || ((double)this.position.Y + (double)(this.height / 2)) / 16.0 < (double)(this.doorY - 4)))
                                            this.closeDoor = false;
                                    }
                                    else if ((int)tileSafely.type == 389)
                                    {
                                        if (WorldGen.ShiftTallGate(this.doorX, this.doorY, true))
                                        {
                                            this.closeDoor = false;
                                            NetMessage.SendData(19, -1, -1, "", 5, (float)this.doorX, (float)this.doorY, 0.0f, 0, 0, 0);
                                        }
                                        if (((double)this.position.X + (double)(this.width / 2)) / 16.0 > (double)(this.doorX + 4) || ((double)this.position.X + (double)(this.width / 2)) / 16.0 < (double)(this.doorX - 4) || (((double)this.position.Y + (double)(this.height / 2)) / 16.0 > (double)(this.doorY + 4) || ((double)this.position.Y + (double)(this.height / 2)) / 16.0 < (double)(this.doorY - 4)))
                                            this.closeDoor = false;
                                    }
                                    else
                                        this.closeDoor = false;
                                }
                                float num6 = 1f;
                                float num7 = 0.07f;
                                if (this.type == 299 || this.type == 539 || this.type == 538)
                                    num6 = 1.5f;
                                if (flag4)
                                {
                                    num6 = 2f;
                                    num7 = 1f;
                                }
                                if (this.friendly && (flag5 || flag3))
                                {
                                    num6 = 1.5f + (float)(1.0 - (double)this.life / (double)this.lifeMax) * 0.9f;
                                    num7 = 0.1f;
                                }
                                if ((double)this.velocity.X < -(double)num6 || (double)this.velocity.X > (double)num6)
                                {
                                    if ((double)this.velocity.Y == 0.0)
                                    {
                                        NPC npc = this;
                                        Vector2 vector2 = npc.velocity * 0.8f;
                                        npc.velocity = vector2;
                                    }
                                }
                                else if ((double)this.velocity.X < (double)num6 && this.direction == 1)
                                {
                                    this.velocity.X += num7;
                                    if ((double)this.velocity.X > (double)num6)
                                        this.velocity.X = num6;
                                }
                                else if ((double)this.velocity.X > -(double)num6 && this.direction == -1)
                                {
                                    this.velocity.X -= num7;
                                    if ((double)this.velocity.X > (double)num6)
                                        this.velocity.X = num6;
                                }
                                bool holdsMatching = true;
                                if ((double)(this.homeTileY * 16 - 32) > (double)this.position.Y)
                                    holdsMatching = false;
                                if (this.direction == 1 && (double)this.position.Y + (double)(this.width / 2) > (double)(this.homeTileX * 16) || this.direction == -1 && (double)this.position.Y + (double)(this.width / 2) < (double)(this.homeTileX * 16))
                                    holdsMatching = true;
                                if ((double)this.velocity.Y == 0.0)
                                    Collision.StepDown(ref this.position, ref this.velocity, this.width, this.height, ref this.stepSpeed, ref this.gfxOffY, 1, false);
                                if ((double)this.velocity.Y >= 0.0)
                                    Collision.StepUp(ref this.position, ref this.velocity, this.width, this.height, ref this.stepSpeed, ref this.gfxOffY, 1, holdsMatching, 1);
                                if ((double)this.velocity.Y == 0.0)
                                {
                                    int num8 = (int)(((double)this.position.X + (double)(this.width / 2) + (double)(15 * this.direction)) / 16.0);
                                    int j2 = (int)(((double)this.position.Y + (double)this.height - 16.0) / 16.0);
                                    bool flag7 = false;
                                    bool flag8 = true;
                                    if (this.townNPC && (double)this.ai[1] < 30.0)
                                    {
                                        flag7 = !Utils.PlotTileLine(this.Top, this.Bottom, (float)this.width, new Utils.PerLinePoint(DelegateMethods.SearchAvoidedByNPCs));
                                        if (!flag7)
                                        {
                                            Rectangle hitbox = this.Hitbox;
                                            hitbox.X -= 20;
                                            hitbox.Width += 40;
                                            for (int index1 = 0; index1 < 200; ++index1)
                                            {
                                                if (Main.npc[index1].active && Main.npc[index1].friendly && (index1 != this.whoAmI && (double)Main.npc[index1].velocity.X == 0.0) && hitbox.Intersects(Main.npc[index1].Hitbox))
                                                {
                                                    flag7 = true;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    if (!flag7 && flag3)
                                        flag7 = true;
                                    if (flag8 && (NPCID.Sets.TownCritter[this.type] || x < this.homeTileX - 35 || x > this.homeTileX + 35))
                                        flag8 = false;
                                    if (flag8)
                                    {
                                        int num9 = 0;
                                        for (int index1 = -1; index1 <= 4; ++index1)
                                        {
                                            Tile tileSafely = Framing.GetTileSafely(num8 - this.direction * num9, j2 + index1);
                                            if (tileSafely.lava() && (int)tileSafely.liquid > 0)
                                            {
                                                flag8 = true;
                                                break;
                                            }
                                            if (tileSafely.nactive() && Main.tileSolid[(int)tileSafely.type])
                                                flag8 = false;
                                        }
                                    }
                                    if (!flag8 && this.wet)
                                    {
                                        bool flag9 = flag3;
                                        bool flag10 = false;
                                        if (!flag9)
                                            flag10 = Collision.DrownCollision(this.position + new Vector2((float)(this.width * this.direction), 0.0f), this.width, this.height, 1f);
                                        if ((flag10 || Collision.DrownCollision(this.position + new Vector2((float)(this.width * this.direction), (float)(this.height * 2 - 16 - (flag9 ? 16 : 0))), this.width, 16 + (flag9 ? 16 : 0), 1f)) && (double)this.localAI[3] <= 0.0)
                                        {
                                            flag8 = true;
                                            this.localAI[3] = 600f;
                                        }
                                    }
                                    if ((double)this.position.X == (double)this.localAI[3])
                                    {
                                        this.direction *= -1;
                                        this.netUpdate = true;
                                        this.localAI[3] = 600f;
                                    }
                                    if (flag3)
                                    {
                                        if ((double)this.localAI[3] > 0.0)
                                            --this.localAI[3];
                                    }
                                    else
                                        this.localAI[3] = -1f;
                                    Tile tileSafely1 = Framing.GetTileSafely(num8, j2);
                                    Tile tileSafely2 = Framing.GetTileSafely(num8, j2 - 1);
                                    Tile tileSafely3 = Framing.GetTileSafely(num8, j2 - 2);
                                    if (this.townNPC && tileSafely3.nactive() && ((int)tileSafely3.type == 10 || (int)tileSafely3.type == 388) && (Main.rand.Next(10) == 0 || flag1))
                                    {
                                        if (Main.netMode != 1)
                                        {
                                            if (WorldGen.OpenDoor(num8, j2 - 2, this.direction))
                                            {
                                                this.closeDoor = true;
                                                this.doorX = num8;
                                                this.doorY = j2 - 2;
                                                NetMessage.SendData(19, -1, -1, "", 0, (float)num8, (float)(j2 - 2), (float)this.direction, 0, 0, 0);
                                                this.netUpdate = true;
                                                this.ai[1] += 80f;
                                            }
                                            else if (WorldGen.OpenDoor(num8, j2 - 2, -this.direction))
                                            {
                                                this.closeDoor = true;
                                                this.doorX = num8;
                                                this.doorY = j2 - 2;
                                                NetMessage.SendData(19, -1, -1, "", 0, (float)num8, (float)(j2 - 2), (float)-this.direction, 0, 0, 0);
                                                this.netUpdate = true;
                                                this.ai[1] += 80f;
                                            }
                                            else if (WorldGen.ShiftTallGate(num8, j2 - 2, false))
                                            {
                                                this.closeDoor = true;
                                                this.doorX = num8;
                                                this.doorY = j2 - 2;
                                                NetMessage.SendData(19, -1, -1, "", 4, (float)num8, (float)(j2 - 2), 0.0f, 0, 0, 0);
                                                this.netUpdate = true;
                                                this.ai[1] += 80f;
                                            }
                                            else
                                            {
                                                this.direction *= -1;
                                                this.netUpdate = true;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        if ((double)this.velocity.X < 0.0 && this.spriteDirection == -1 || (double)this.velocity.X > 0.0 && this.spriteDirection == 1)
                                        {
                                            if (tileSafely3.nactive() && Main.tileSolid[(int)tileSafely3.type] && !Main.tileSolidTop[(int)tileSafely3.type])
                                            {
                                                if (!Collision.SolidTilesVersatile(num8 - this.direction * 2, num8 - this.direction, j2 - 5, j2 - 1) && !Collision.SolidTiles(num8, num8, j2 - 5, j2 - 3))
                                                {
                                                    this.velocity.Y = -6f;
                                                    this.netUpdate = true;
                                                }
                                                else if (flag4)
                                                {
                                                    if (WorldGen.SolidTile((int)((double)this.Center.X / 16.0) + this.direction, (int)((double)this.Center.Y / 16.0)))
                                                    {
                                                        this.direction *= -1;
                                                        this.velocity.X *= 0.0f;
                                                        this.netUpdate = true;
                                                    }
                                                }
                                                else if (flag5)
                                                {
                                                    flag7 = false;
                                                    this.velocity.X = 0.0f;
                                                    this.direction *= -1;
                                                    this.netUpdate = true;
                                                    this.ai[0] = 8f;
                                                    this.ai[1] = 240f;
                                                }
                                                else
                                                {
                                                    this.direction *= -1;
                                                    this.netUpdate = true;
                                                }
                                            }
                                            else if (tileSafely2.nactive() && Main.tileSolid[(int)tileSafely2.type] && !Main.tileSolidTop[(int)tileSafely2.type])
                                            {
                                                if (!Collision.SolidTilesVersatile(num8 - this.direction * 2, num8 - this.direction, j2 - 4, j2 - 1) && !Collision.SolidTiles(num8, num8, j2 - 4, j2 - 2))
                                                {
                                                    this.velocity.Y = -5f;
                                                    this.netUpdate = true;
                                                }
                                                else if (flag5)
                                                {
                                                    flag7 = false;
                                                    this.velocity.X = 0.0f;
                                                    this.direction *= -1;
                                                    this.netUpdate = true;
                                                    this.ai[0] = 8f;
                                                    this.ai[1] = 240f;
                                                }
                                                else
                                                {
                                                    this.direction *= -1;
                                                    this.netUpdate = true;
                                                }
                                            }
                                            else if ((double)this.position.Y + (double)this.height - (double)(j2 * 16) > 20.0 && tileSafely1.nactive() && (Main.tileSolid[(int)tileSafely1.type] && !tileSafely1.topSlope()))
                                            {
                                                if (!Collision.SolidTilesVersatile(num8 - this.direction * 2, num8, j2 - 3, j2 - 1))
                                                {
                                                    this.velocity.Y = -4.4f;
                                                    this.netUpdate = true;
                                                }
                                                else if (flag5)
                                                {
                                                    flag7 = false;
                                                    this.velocity.X = 0.0f;
                                                    this.direction *= -1;
                                                    this.netUpdate = true;
                                                    this.ai[0] = 8f;
                                                    this.ai[1] = 240f;
                                                }
                                                else
                                                {
                                                    this.direction *= -1;
                                                    this.netUpdate = true;
                                                }
                                            }
                                            else if (flag8)
                                            {
                                                this.direction *= -1;
                                                this.velocity.X *= -1f;
                                                this.netUpdate = true;
                                                if (flag5)
                                                {
                                                    flag7 = false;
                                                    this.velocity.X = 0.0f;
                                                    this.ai[0] = 8f;
                                                    this.ai[1] = 240f;
                                                }
                                            }
                                            if (flag7)
                                            {
                                                this.ai[1] = 90f;
                                                this.netUpdate = true;
                                            }
                                            if ((double)this.velocity.Y < 0.0)
                                                this.localAI[3] = this.position.X;
                                        }
                                        if ((double)this.velocity.Y < 0.0 && this.wet)
                                            this.velocity.Y *= 1.2f;
                                        if ((double)this.velocity.Y < 0.0 && NPCID.Sets.TownCritter[this.type] && !flag4)
                                            this.velocity.Y *= 1.2f;
                                    }
                                }
                            }
                        }
                        else if ((double)this.ai[0] == 2.0 || (double)this.ai[0] == 11.0)
                        {
                            if (Main.netMode != 1)
                            {
                                --this.localAI[3];
                                if (Main.rand.Next(60) == 0 && (double)this.localAI[3] == 0.0)
                                {
                                    this.localAI[3] = 60f;
                                    this.direction *= -1;
                                    this.netUpdate = true;
                                }
                            }
                            --this.ai[1];
                            this.velocity.X *= 0.8f;
                            if ((double)this.ai[1] <= 0.0)
                            {
                                this.localAI[3] = 40f;
                                this.ai[0] = 0.0f;
                                this.ai[1] = (float)(60 + Main.rand.Next(60));
                                this.netUpdate = true;
                            }
                        }
                        else if ((double)this.ai[0] == 3.0 || (double)this.ai[0] == 4.0 || ((double)this.ai[0] == 5.0 || (double)this.ai[0] == 8.0) || ((double)this.ai[0] == 9.0 || (double)this.ai[0] == 16.0 || (double)this.ai[0] == 17.0))
                        {
                            this.velocity.X *= 0.8f;
                            --this.ai[1];
                            if ((double)this.ai[0] == 8.0 && (double)this.ai[1] < 60.0 && flag5)
                            {
                                this.ai[1] = 180f;
                                this.netUpdate = true;
                            }
                            if ((double)this.ai[0] == 5.0)
                            {
                                Point point = Utils.ToTileCoordinates(this.Center);
                                if ((int)Main.tile[point.X, point.Y].type != 15)
                                    this.ai[1] = 0.0f;
                            }
                            if ((double)this.ai[1] <= 0.0)
                            {
                                this.ai[0] = 0.0f;
                                this.ai[1] = (float)(60 + Main.rand.Next(60));
                                this.ai[2] = 0.0f;
                                this.localAI[3] = (float)(30 + Main.rand.Next(60));
                                this.netUpdate = true;
                            }
                        }
                        else if ((double)this.ai[0] == 6.0 || (double)this.ai[0] == 7.0)
                        {
                            this.velocity.X *= 0.8f;
                            --this.ai[1];
                            int index1 = (int)this.ai[2];
                            if (index1 < 0 || index1 > (int)byte.MaxValue || (!Main.player[index1].active || Main.player[index1].dead) || ((double)Main.player[index1].Distance(this.Center) > 200.0 || !Collision.CanHitLine(this.Top, 0, 0, Main.player[index1].Top, 0, 0)))
                                this.ai[1] = 0.0f;
                            if ((double)this.ai[1] > 0.0)
                            {
                                int num6 = (double)this.Center.X < (double)Main.player[index1].Center.X ? 1 : -1;
                                if (num6 != this.direction)
                                    this.netUpdate = true;
                                this.direction = num6;
                            }
                            else
                            {
                                this.ai[0] = 0.0f;
                                this.ai[1] = (float)(60 + Main.rand.Next(60));
                                this.ai[2] = 0.0f;
                                this.localAI[3] = (float)(30 + Main.rand.Next(60));
                                this.netUpdate = true;
                            }
                        }
                        else if ((double)this.ai[0] == 10.0)
                        {
                            int Type = 0;
                            int num6 = 0;
                            float KnockBack = 0.0f;
                            float num7 = 0.0f;
                            int num8 = 0;
                            int num9 = 0;
                            int maxValue = 0;
                            float num10 = 0.0f;
                            float num11 = (float)NPCID.Sets.DangerDetectRange[this.type];
                            float max = 0.0f;
                            if ((double)NPCID.Sets.AttackTime[this.type] == (double)this.ai[1])
                            {
                                this.frameCounter = 0.0;
                                this.localAI[3] = 0.0f;
                            }
                            if (this.type == 38)
                            {
                                Type = 30;
                                num7 = 6f;
                                num6 = 20;
                                num8 = 10;
                                num9 = 180;
                                maxValue = 120;
                                num10 = 16f;
                                KnockBack = 7f;
                            }
                            else if (this.type == 208)
                            {
                                Type = 588;
                                num7 = 6f;
                                num6 = 30;
                                num8 = 10;
                                num9 = 60;
                                maxValue = 120;
                                num10 = 16f;
                                KnockBack = 6f;
                            }
                            else if (this.type == 17)
                            {
                                Type = 48;
                                num7 = 9f;
                                num6 = 12;
                                num8 = 10;
                                num9 = 60;
                                maxValue = 60;
                                num10 = 16f;
                                KnockBack = 1.5f;
                            }
                            else if (this.type == 369)
                            {
                                Type = 520;
                                num7 = 12f;
                                num6 = 10;
                                num8 = 10;
                                num9 = 0;
                                maxValue = 1;
                                num10 = 16f;
                                KnockBack = 3f;
                            }
                            else if (this.type == 453)
                            {
                                Type = 21;
                                num7 = 14f;
                                num6 = 14;
                                num8 = 10;
                                num9 = 0;
                                maxValue = 1;
                                num10 = 16f;
                                KnockBack = 3f;
                            }
                            else if (this.type == 107)
                            {
                                Type = 24;
                                num7 = 5f;
                                num6 = 15;
                                num8 = 10;
                                num9 = 60;
                                maxValue = 60;
                                num10 = 16f;
                                KnockBack = 1f;
                            }
                            else if (this.type == 124)
                            {
                                Type = 582;
                                num7 = 10f;
                                num6 = 11;
                                num8 = 1;
                                num9 = 30;
                                maxValue = 30;
                                KnockBack = 3.5f;
                            }
                            else if (this.type == 18)
                            {
                                Type = 583;
                                num7 = 8f;
                                num6 = 8;
                                num8 = 1;
                                num9 = 15;
                                maxValue = 10;
                                KnockBack = 2f;
                                num10 = 10f;
                            }
                            else if (this.type == 142)
                            {
                                Type = 589;
                                num7 = 7f;
                                num6 = 22;
                                num8 = 1;
                                num9 = 10;
                                maxValue = 1;
                                KnockBack = 2f;
                                num10 = 10f;
                            }
                            if (Main.expertMode)
                                num6 = (int)((double)num6 * (double)Main.expertNPCDamage);
                            int Damage = (int)((double)num6 * (double)num1);
                            this.velocity.X *= 0.8f;
                            --this.ai[1];
                            ++this.localAI[3];
                            if ((double)this.localAI[3] == (double)num8 && Main.netMode != 1)
                            {
                                Vector2 vec = -Vector2.UnitY;
                                if (num5 == 1 && this.spriteDirection == 1 && index4 != -1)
                                    vec = this.DirectionTo(Main.npc[index4].Center + new Vector2(0.0f, -num10 * MathHelper.Clamp(this.Distance(Main.npc[index4].Center) / num11, 0.0f, 1f)));
                                if (num5 == -1 && this.spriteDirection == -1 && index3 != -1)
                                    vec = this.DirectionTo(Main.npc[index3].Center + new Vector2(0.0f, -num10 * MathHelper.Clamp(this.Distance(Main.npc[index3].Center) / num11, 0.0f, 1f)));
                                if (Utils.HasNaNs(vec) || Math.Sign(vec.X) != this.spriteDirection)
                                    vec = new Vector2((float)this.spriteDirection, -1f);
                                Vector2 vector2 = vec * num7 + Utils.RandomVector2(Main.rand, -max, max);
                                int index1 = this.type != 124 ? (this.type != 142 ? Projectile.NewProjectile(this.Center.X + (float)(this.spriteDirection * 16), this.Center.Y - 2f, vector2.X, vector2.Y, Type, Damage, KnockBack, Main.myPlayer, 0.0f, 0.0f) : Projectile.NewProjectile(this.Center.X + (float)(this.spriteDirection * 16), this.Center.Y - 2f, vector2.X, vector2.Y, Type, Damage, KnockBack, Main.myPlayer, 0.0f, (float)Main.rand.Next(5))) : Projectile.NewProjectile(this.Center.X + (float)(this.spriteDirection * 16), this.Center.Y - 2f, vector2.X, vector2.Y, Type, Damage, KnockBack, Main.myPlayer, 0.0f, (float)this.whoAmI);
                                Main.projectile[index1].npcProj = true;
                                Main.projectile[index1].noDropItem = true;
                            }
                            if ((double)this.ai[1] <= 0.0)
                            {
                                this.ai[0] = (double)this.localAI[2] != 8.0 || !flag5 ? 0.0f : 8f;
                                this.ai[1] = (float)(num9 + Main.rand.Next(maxValue));
                                this.ai[2] = 0.0f;
                                this.localAI[1] = this.localAI[3] = (float)(num9 / 2 + Main.rand.Next(maxValue));
                                this.netUpdate = true;
                            }
                        }
                        else if ((double)this.ai[0] == 12.0)
                        {
                            int Type = 0;
                            int num6 = 0;
                            float num7 = 0.0f;
                            int num8 = 0;
                            int num9 = 0;
                            int maxValue = 0;
                            float KnockBack = 0.0f;
                            int num10 = 0;
                            bool flag3 = false;
                            float max = 0.0f;
                            if ((double)NPCID.Sets.AttackTime[this.type] == (double)this.ai[1])
                            {
                                this.frameCounter = 0.0;
                                this.localAI[3] = 0.0f;
                            }
                            int index1 = -1;
                            if (num5 == 1 && this.spriteDirection == 1)
                                index1 = index4;
                            if (num5 == -1 && this.spriteDirection == -1)
                                index1 = index3;
                            if (this.type == 19)
                            {
                                Type = 14;
                                num7 = 13f;
                                num6 = 24;
                                num9 = 14;
                                maxValue = 4;
                                KnockBack = 3f;
                                num8 = 1;
                                max = 0.5f;
                                if ((double)NPCID.Sets.AttackTime[this.type] == (double)this.ai[1])
                                {
                                    this.frameCounter = 0.0;
                                    this.localAI[3] = 0.0f;
                                }
                                if (Main.hardMode)
                                {
                                    num6 = 15;
                                    if ((double)this.localAI[3] > (double)num8)
                                    {
                                        num8 = 10;
                                        flag3 = true;
                                    }
                                    if ((double)this.localAI[3] > (double)num8)
                                    {
                                        num8 = 20;
                                        flag3 = true;
                                    }
                                    if ((double)this.localAI[3] > (double)num8)
                                    {
                                        num8 = 30;
                                        flag3 = true;
                                    }
                                }
                            }
                            else if (this.type == 227)
                            {
                                Type = 587;
                                num7 = 10f;
                                num6 = 8;
                                num9 = 10;
                                maxValue = 1;
                                KnockBack = 1.75f;
                                num8 = 1;
                                max = 0.5f;
                                if ((double)this.localAI[3] > (double)num8)
                                {
                                    num8 = 12;
                                    flag3 = true;
                                }
                                if ((double)this.localAI[3] > (double)num8)
                                {
                                    num8 = 24;
                                    flag3 = true;
                                }
                                if (Main.hardMode)
                                    num6 += 2;
                            }
                            else if (this.type == 368)
                            {
                                Type = 14;
                                num7 = 13f;
                                num6 = 24;
                                num9 = 12;
                                maxValue = 5;
                                KnockBack = 2f;
                                num8 = 1;
                                max = 0.2f;
                                if (Main.hardMode)
                                {
                                    num6 = 30;
                                    Type = 357;
                                }
                            }
                            else if (this.type == 22)
                            {
                                num7 = 10f;
                                num6 = 8;
                                num8 = 1;
                                if (Main.hardMode)
                                {
                                    Type = 2;
                                    num9 = 15;
                                    maxValue = 10;
                                    num6 += 6;
                                }
                                else
                                {
                                    Type = 1;
                                    num9 = 30;
                                    maxValue = 20;
                                }
                                KnockBack = 2.75f;
                                num10 = 4;
                                max = 0.7f;
                            }
                            else if (this.type == 228)
                            {
                                Type = 267;
                                num7 = 14f;
                                num6 = 20;
                                num8 = 1;
                                num9 = 10;
                                maxValue = 1;
                                KnockBack = 3f;
                                num10 = 6;
                                max = 0.4f;
                            }
                            else if (this.type == 178)
                            {
                                Type = 242;
                                num7 = 13f;
                                num6 = 15;
                                num9 = 10;
                                maxValue = 1;
                                KnockBack = 2f;
                                num8 = 1;
                                if ((double)this.localAI[3] > (double)num8)
                                {
                                    num8 = 8;
                                    flag3 = true;
                                }
                                if ((double)this.localAI[3] > (double)num8)
                                {
                                    num8 = 16;
                                    flag3 = true;
                                }
                                max = 0.3f;
                            }
                            else if (this.type == 229)
                            {
                                Type = 14;
                                num7 = 14f;
                                num6 = 24;
                                num9 = 10;
                                maxValue = 1;
                                KnockBack = 2f;
                                num8 = 1;
                                max = 0.7f;
                                if ((double)this.localAI[3] > (double)num8)
                                {
                                    num8 = 16;
                                    flag3 = true;
                                }
                                if ((double)this.localAI[3] > (double)num8)
                                {
                                    num8 = 24;
                                    flag3 = true;
                                }
                                if ((double)this.localAI[3] > (double)num8)
                                {
                                    num8 = 32;
                                    flag3 = true;
                                }
                                if ((double)this.localAI[3] > (double)num8)
                                {
                                    num8 = 40;
                                    flag3 = true;
                                }
                                if ((double)this.localAI[3] > (double)num8)
                                {
                                    num8 = 48;
                                    flag3 = true;
                                }
                                if ((double)this.localAI[3] == 0.0 && index1 != -1 && (double)this.Distance(Main.npc[index1].Center) < (double)NPCID.Sets.PrettySafe[this.type])
                                {
                                    max = 0.1f;
                                    Type = 162;
                                    num6 = 50;
                                    KnockBack = 10f;
                                    num7 = 24f;
                                }
                            }
                            else if (this.type == 209)
                            {
                                Type = Utils.SelectRandom<int>(Main.rand, 134, 133, 135);
                                num8 = 1;
                                if (Type == 135)
                                {
                                    num7 = 12f;
                                    num6 = 30;
                                    num9 = 30;
                                    maxValue = 10;
                                    KnockBack = 7f;
                                    max = 0.2f;
                                }
                                else if (Type == 133)
                                {
                                    num7 = 10f;
                                    num6 = 25;
                                    num9 = 10;
                                    maxValue = 1;
                                    KnockBack = 6f;
                                    max = 0.2f;
                                }
                                else if (Type == 134)
                                {
                                    num7 = 13f;
                                    num6 = 20;
                                    num9 = 20;
                                    maxValue = 10;
                                    KnockBack = 4f;
                                    max = 0.1f;
                                }
                            }
                            if (Main.expertMode)
                                num6 = (int)((double)num6 * (double)Main.expertNPCDamage);
                            int Damage = (int)((double)num6 * (double)num1);
                            this.velocity.X *= 0.8f;
                            --this.ai[1];
                            ++this.localAI[3];
                            if ((double)this.localAI[3] == (double)num8 && Main.netMode != 1)
                            {
                                Vector2 vec = Vector2.Zero;
                                if (index1 != -1)
                                    vec = this.DirectionTo(Main.npc[index1].Center + new Vector2(0.0f, (float)-num10));
                                if (Utils.HasNaNs(vec) || Math.Sign(vec.X) != this.spriteDirection)
                                    vec = new Vector2((float)this.spriteDirection, 0.0f);
                                Vector2 vector2 = vec * num7 + Utils.RandomVector2(Main.rand, -max, max);
                                int index2 = this.type != 227 ? Projectile.NewProjectile(this.Center.X + (float)(this.spriteDirection * 16), this.Center.Y - 2f, vector2.X, vector2.Y, Type, Damage, KnockBack, Main.myPlayer, 0.0f, 0.0f) : Projectile.NewProjectile(this.Center.X + (float)(this.spriteDirection * 16), this.Center.Y - 2f, vector2.X, vector2.Y, Type, Damage, KnockBack, Main.myPlayer, 0.0f, (float)Main.rand.Next(12) / 6f);
                                Main.projectile[index2].npcProj = true;
                                Main.projectile[index2].noDropItem = true;
                            }
                            if ((double)this.localAI[3] == (double)num8 && flag3 && index1 != -1)
                            {
                                Vector2 vector2 = this.DirectionTo(Main.npc[index1].Center);
                                if ((double)vector2.Y <= 0.5 && (double)vector2.Y >= -0.5)
                                    this.ai[2] = vector2.Y;
                            }
                            if ((double)this.ai[1] <= 0.0)
                            {
                                this.ai[0] = (double)this.localAI[2] != 8.0 || !flag5 ? 0.0f : 8f;
                                this.ai[1] = (float)(num9 + Main.rand.Next(maxValue));
                                this.ai[2] = 0.0f;
                                this.localAI[1] = this.localAI[3] = (float)(num9 / 2 + Main.rand.Next(maxValue));
                                this.netUpdate = true;
                            }
                        }
                        else if ((double)this.ai[0] == 13.0)
                        {
                            this.velocity.X *= 0.8f;
                            if ((double)NPCID.Sets.AttackTime[this.type] == (double)this.ai[1])
                                this.frameCounter = 0.0;
                            --this.ai[1];
                            ++this.localAI[3];
                            if ((double)this.localAI[3] == 1.0 && Main.netMode != 1)
                            {
                                Vector2 vec = this.DirectionTo(Main.npc[(int)this.ai[2]].Center + new Vector2(0.0f, -20f));
                                if (Utils.HasNaNs(vec) || Math.Sign(vec.X) == -this.spriteDirection)
                                    vec = new Vector2((float)this.spriteDirection, -1f);
                                Vector2 vector2 = vec * 8f;
                                int index1 = Projectile.NewProjectile(this.Center.X + (float)(this.spriteDirection * 16), this.Center.Y - 2f, vector2.X, vector2.Y, 584, 0, 0.0f, Main.myPlayer, this.ai[2], 0.0f);
                                Main.projectile[index1].npcProj = true;
                                Main.projectile[index1].noDropItem = true;
                            }
                            if ((double)this.ai[1] <= 0.0)
                            {
                                this.ai[0] = 0.0f;
                                this.ai[1] = (float)(10 + Main.rand.Next(10));
                                this.ai[2] = 0.0f;
                                this.localAI[3] = (float)(5 + Main.rand.Next(10));
                                this.netUpdate = true;
                            }
                        }
                        else if ((double)this.ai[0] == 14.0)
                        {
                            int Type = 0;
                            int num6 = 0;
                            float num7 = 0.0f;
                            int num8 = 0;
                            int num9 = 0;
                            int maxValue = 0;
                            float KnockBack = 0.0f;
                            float num10 = 0.0f;
                            float num11 = (float)NPCID.Sets.DangerDetectRange[this.type];
                            float num12 = 1f;
                            float max = 0.0f;
                            if ((double)NPCID.Sets.AttackTime[this.type] == (double)this.ai[1])
                            {
                                this.frameCounter = 0.0;
                                this.localAI[3] = 0.0f;
                            }
                            int index1 = -1;
                            if (num5 == 1 && this.spriteDirection == 1)
                                index1 = index4;
                            if (num5 == -1 && this.spriteDirection == -1)
                                index1 = index3;
                            if (this.type == 54)
                            {
                                Type = 585;
                                num7 = 10f;
                                num6 = 16;
                                num8 = 30;
                                num9 = 20;
                                maxValue = 15;
                                KnockBack = 2f;
                                max = 1f;
                            }
                            else if (this.type == 108)
                            {
                                Type = 15;
                                num7 = 6f;
                                num6 = 18;
                                num8 = 15;
                                num9 = 15;
                                maxValue = 5;
                                KnockBack = 3f;
                                num10 = 20f;
                            }
                            else if (this.type == 160)
                            {
                                Type = 590;
                                num6 = 40;
                                num8 = 15;
                                num9 = 10;
                                maxValue = 1;
                                KnockBack = 3f;
                                while ((double)this.localAI[3] > (double)num8)
                                    num8 += 15;
                            }
                            else if (this.type == 20)
                            {
                                Type = 586;
                                num8 = 24;
                                num9 = 10;
                                maxValue = 1;
                                KnockBack = 3f;
                            }
                            if (Main.expertMode)
                                num6 = (int)((double)num6 * (double)Main.expertNPCDamage);
                            int Damage = (int)((double)num6 * (double)num1);
                            this.velocity.X *= 0.8f;
                            --this.ai[1];
                            ++this.localAI[3];
                            if ((double)this.localAI[3] == (double)num8 && Main.netMode != 1)
                            {
                                Vector2 vec = Vector2.Zero;
                                if (index1 != -1)
                                    vec = this.DirectionTo(Main.npc[index1].Center + new Vector2(0.0f, -num10 * MathHelper.Clamp(this.Distance(Main.npc[index1].Center) / num11, 0.0f, 1f)));
                                if (Utils.HasNaNs(vec) || Math.Sign(vec.X) != this.spriteDirection)
                                    vec = new Vector2((float)this.spriteDirection, 0.0f);
                                Vector2 vector2_1 = vec * num7 + Utils.RandomVector2(Main.rand, -max, max);
                                if (this.type == 108)
                                {
                                    int num13 = Utils.SelectRandom<int>(Main.rand, 1, 1, 1, 1, 2, 2, 3);
                                    for (int index2 = 0; index2 < num13; ++index2)
                                    {
                                        Vector2 vector2_2 = Utils.RandomVector2(Main.rand, -3.4f, 3.4f);
                                        int index5 = Projectile.NewProjectile(this.Center.X + (float)(this.spriteDirection * 16), this.Center.Y - 2f, vector2_1.X + vector2_2.X, vector2_1.Y + vector2_2.Y, Type, Damage, KnockBack, Main.myPlayer, 0.0f, 0.0f);
                                        Main.projectile[index5].npcProj = true;
                                        Main.projectile[index5].noDropItem = true;
                                    }
                                }
                                else if (this.type == 160)
                                {
                                    if (index1 != -1)
                                    {
                                        Vector2 vector2_2 = Main.npc[index1].position - Main.npc[index1].Size * 2f + Main.npc[index1].Size * Utils.RandomVector2(Main.rand, 0.0f, 1f) * 5f;
                                        for (int index2 = 10; index2 > 0 && WorldGen.SolidTile(Framing.GetTileSafely((int)vector2_2.X / 16, (int)vector2_2.Y / 16)); vector2_2 = Main.npc[index1].position - Main.npc[index1].Size * 2f + Main.npc[index1].Size * Utils.RandomVector2(Main.rand, 0.0f, 1f) * 5f)
                                            --index2;
                                        int index5 = Projectile.NewProjectile(vector2_2.X, vector2_2.Y, 0.0f, 0.0f, Type, Damage, KnockBack, Main.myPlayer, 0.0f, 0.0f);
                                        Main.projectile[index5].npcProj = true;
                                        Main.projectile[index5].noDropItem = true;
                                    }
                                }
                                else if (this.type == 20)
                                {
                                    int index2 = Projectile.NewProjectile(this.Center.X + (float)(this.spriteDirection * 16), this.Center.Y - 2f, vector2_1.X, vector2_1.Y, Type, Damage, KnockBack, Main.myPlayer, 0.0f, (float)this.whoAmI);
                                    Main.projectile[index2].npcProj = true;
                                    Main.projectile[index2].noDropItem = true;
                                }
                                else
                                {
                                    int index2 = Projectile.NewProjectile(this.Center.X + (float)(this.spriteDirection * 16), this.Center.Y - 2f, vector2_1.X, vector2_1.Y, Type, Damage, KnockBack, Main.myPlayer, 0.0f, 0.0f);
                                    Main.projectile[index2].npcProj = true;
                                    Main.projectile[index2].noDropItem = true;
                                }
                            }
                            if ((double)num12 > 0.0)
                            {
                                Vector3 vector3 = NPCID.Sets.MagicAuraColor[this.type].ToVector3() * num12;
                                Lighting.AddLight(this.Center, vector3.X, vector3.Y, vector3.Z);
                            }
                            if ((double)this.ai[1] <= 0.0)
                            {
                                this.ai[0] = (double)this.localAI[2] != 8.0 || !flag5 ? 0.0f : 8f;
                                this.ai[1] = (float)(num9 + Main.rand.Next(maxValue));
                                this.ai[2] = 0.0f;
                                this.localAI[1] = this.localAI[3] = (float)(num9 / 2 + Main.rand.Next(maxValue));
                                this.netUpdate = true;
                            }
                        }
                        else if ((double)this.ai[0] == 15.0)
                        {
                            int num6 = 0;
                            int maxValue = 0;
                            if ((double)NPCID.Sets.AttackTime[this.type] == (double)this.ai[1])
                            {
                                this.frameCounter = 0.0;
                                this.localAI[3] = 0.0f;
                            }
                            int num7 = 0;
                            float num8 = 0.0f;
                            int num9 = 0;
                            int num10 = 0;
                            if (num5 == 1)
                            {
                                int num11 = this.spriteDirection;
                            }
                            if (num5 == -1)
                            {
                                int num12 = this.spriteDirection;
                            }
                            if (this.type == 207)
                            {
                                num7 = 11;
                                num9 = num10 = 32;
                                num6 = 12;
                                maxValue = 6;
                                num8 = 4.25f;
                            }
                            else if (this.type == 441)
                            {
                                num7 = 9;
                                num9 = num10 = 28;
                                num6 = 9;
                                maxValue = 3;
                                num8 = 3.5f;
                            }
                            else if (this.type == 353)
                            {
                                num7 = 10;
                                num9 = num10 = 32;
                                num6 = 15;
                                maxValue = 8;
                                num8 = 5f;
                            }
                            if (Main.expertMode)
                                num7 = (int)((double)num7 * (double)Main.expertNPCDamage);
                            int Damage = (int)((double)num7 * (double)num1);
                            this.velocity.X *= 0.8f;
                            --this.ai[1];
                            if (Main.netMode != 1)
                            {
                                Tuple<Vector2, float> swingStats = this.GetSwingStats(NPCID.Sets.AttackTime[this.type] * 2, (int)this.ai[1], this.spriteDirection, num9, num10);
                                Rectangle itemRectangle = new Rectangle((int)swingStats.Item1.X, (int)swingStats.Item1.Y, num9, num10);
                                if (this.spriteDirection == -1)
                                    itemRectangle.X -= num9;
                                itemRectangle.Y -= num10;
                                this.TweakSwingStats(NPCID.Sets.AttackTime[this.type] * 2, (int)this.ai[1], this.spriteDirection, ref itemRectangle);
                                int index1 = Main.myPlayer;
                                for (int number = 0; number < 200; ++number)
                                {
                                    NPC npc = Main.npc[number];
                                    if (npc.active && npc.immune[index1] == 0 && (!npc.dontTakeDamage && !npc.friendly) && (npc.damage > 0 && itemRectangle.Intersects(npc.Hitbox) && (npc.noTileCollide || Collision.CanHit(this.position, this.width, this.height, npc.position, npc.width, npc.height))))
                                    {
                                        npc.StrikeNPCNoInteraction(Damage, num8, this.spriteDirection, false, false, false);
                                        if (Main.netMode != 0)
                                            NetMessage.SendData(28, -1, -1, "", number, (float)Damage, num8, (float)this.spriteDirection, 0, 0, 0);
                                        npc.netUpdate = true;
                                        npc.immune[index1] = (int)this.ai[1] + 2;
                                    }
                                }
                            }
                            if ((double)this.ai[1] <= 0.0)
                            {
                                bool flag3 = false;
                                if (flag5)
                                {
                                    if (!Collision.CanHit(this.Center, 0, 0, this.Center + Vector2.UnitX * (float)-num5 * 32f, 0, 0) || (double)this.localAI[2] == 8.0)
                                        flag3 = true;
                                    if (flag3)
                                    {
                                        int num13 = NPCID.Sets.AttackTime[this.type];
                                        int index1 = num5 == 1 ? index4 : index3;
                                        int index2 = num5 == 1 ? index3 : index4;
                                        if (index1 != -1 && !Collision.CanHit(this.Center, 0, 0, Main.npc[index1].Center, 0, 0))
                                            index1 = index2 == -1 || !Collision.CanHit(this.Center, 0, 0, Main.npc[index2].Center, 0, 0) ? -1 : index2;
                                        if (index1 != -1)
                                        {
                                            this.ai[0] = 15f;
                                            this.ai[1] = (float)num13;
                                            this.ai[2] = 0.0f;
                                            this.localAI[3] = 0.0f;
                                            this.direction = (double)this.position.X < (double)Main.npc[index1].position.X ? 1 : -1;
                                            this.netUpdate = true;
                                        }
                                        else
                                            flag3 = false;
                                    }
                                }
                                if (!flag3)
                                {
                                    this.ai[0] = (double)this.localAI[2] != 8.0 || !flag5 ? 0.0f : 8f;
                                    this.ai[1] = (float)(num6 + Main.rand.Next(maxValue));
                                    this.ai[2] = 0.0f;
                                    this.localAI[1] = this.localAI[3] = (float)(num6 / 2 + Main.rand.Next(maxValue));
                                    this.netUpdate = true;
                                }
                            }
                        }
                        if (Main.netMode == 1 || !this.townNPC && this.type != 453 || flag2)
                            return;
                        bool flag11 = (double)this.ai[0] < 2.0 && !flag5;
                        bool flag12 = ((double)this.ai[0] < 2.0 || (double)this.ai[0] == 8.0) && (flag5 || flag6);
                        if ((double)this.localAI[1] > 0.0)
                            --this.localAI[1];
                        if ((double)this.localAI[1] > 0.0)
                            flag12 = false;
                        if (flag12 && this.type == 124 && (double)this.localAI[0] == 1.0)
                            flag12 = false;
                        if (flag12 && this.type == 20)
                        {
                            flag12 = false;
                            for (int index1 = 0; index1 < 200; ++index1)
                            {
                                NPC npc = Main.npc[index1];
                                if (npc.active && npc.townNPC && ((double)this.Distance(npc.Center) <= 1200.0 && npc.HasBuff(165) == -1))
                                {
                                    flag12 = true;
                                    break;
                                }
                            }
                        }
                        if (flag11 && (double)this.ai[0] == 0.0 && ((double)this.velocity.Y == 0.0 && Main.rand.Next(300) == 0))
                        {
                            int num6 = 420;
                            int num7 = Main.rand.Next(2) != 0 ? num6 * Main.rand.Next(1, 3) : num6 * Main.rand.Next(1, 4);
                            int num8 = 100;
                            int num9 = 20;
                            for (int index1 = 0; index1 < 200; ++index1)
                            {
                                NPC npc = Main.npc[index1];
                                bool flag3 = (double)npc.ai[0] == 1.0 && npc.closeDoor || (double)npc.ai[0] == 1.0 && (double)npc.ai[1] > 200.0 || (double)npc.ai[0] > 1.0;
                                if (npc != this && npc.active && (npc.CanTalk && !flag3) && ((double)npc.Distance(this.Center) < (double)num8 && (double)npc.Distance(this.Center) > (double)num9 && Collision.CanHit(this.Center, 0, 0, npc.Center, 0, 0)))
                                {
                                    int num10 = Utils.ToDirectionInt((double)this.position.X < (double)npc.position.X);
                                    this.ai[0] = 3f;
                                    this.ai[1] = (float)num7;
                                    this.ai[2] = (float)index1;
                                    this.direction = num10;
                                    this.netUpdate = true;
                                    npc.ai[0] = 4f;
                                    npc.ai[1] = (float)num7;
                                    npc.ai[2] = (float)this.whoAmI;
                                    npc.direction = -num10;
                                    npc.netUpdate = true;
                                    break;
                                }
                            }
                        }
                        else if (flag11 && (double)this.ai[0] == 0.0 && ((double)this.velocity.Y == 0.0 && Main.rand.Next(1800) == 0))
                        {
                            int num6 = 420;
                            int num7 = Main.rand.Next(2) != 0 ? num6 * Main.rand.Next(1, 3) : num6 * Main.rand.Next(1, 4);
                            int num8 = 100;
                            int num9 = 20;
                            for (int index1 = 0; index1 < 200; ++index1)
                            {
                                NPC npc = Main.npc[index1];
                                bool flag3 = (double)npc.ai[0] == 1.0 && npc.closeDoor || (double)npc.ai[0] == 1.0 && (double)npc.ai[1] > 200.0 || (double)npc.ai[0] > 1.0;
                                if (npc != this && npc.active && (npc.CanTalk && !flag3) && ((double)npc.Distance(this.Center) < (double)num8 && (double)npc.Distance(this.Center) > (double)num9 && Collision.CanHit(this.Center, 0, 0, npc.Center, 0, 0)))
                                {
                                    int num10 = Utils.ToDirectionInt((double)this.position.X < (double)npc.position.X);
                                    this.ai[0] = 16f;
                                    this.ai[1] = (float)num7;
                                    this.ai[2] = (float)index1;
                                    this.localAI[2] = (float)Main.rand.Next(4);
                                    this.localAI[3] = (float)Main.rand.Next(3 - (int)this.localAI[2]);
                                    this.direction = num10;
                                    this.netUpdate = true;
                                    npc.ai[0] = 17f;
                                    npc.ai[1] = (float)num7;
                                    npc.ai[2] = (float)this.whoAmI;
                                    npc.localAI[2] = 0.0f;
                                    npc.localAI[3] = 0.0f;
                                    npc.direction = -num10;
                                    npc.netUpdate = true;
                                    break;
                                }
                            }
                        }
                        else if (flag11 && (double)this.ai[0] == 0.0 && ((double)this.velocity.Y == 0.0 && Main.rand.Next(1200) == 0) && this.type == 208)
                        {
                            int num6 = 300;
                            int num7 = 150;
                            for (int index1 = 0; index1 < (int)byte.MaxValue; ++index1)
                            {
                                Player player = Main.player[index1];
                                if (player.active && !player.dead && ((double)player.Distance(this.Center) < (double)num7 && Collision.CanHitLine(this.Top, 0, 0, player.Top, 0, 0)))
                                {
                                    int num8 = Utils.ToDirectionInt((double)this.position.X < (double)player.position.X);
                                    this.ai[0] = 6f;
                                    this.ai[1] = (float)num6;
                                    this.ai[2] = (float)index1;
                                    this.direction = num8;
                                    this.netUpdate = true;
                                    break;
                                }
                            }
                        }
                        else if (flag11 && (double)this.ai[0] == 0.0 && ((double)this.velocity.Y == 0.0 && Main.rand.Next(1800) == 0))
                        {
                            this.ai[0] = 2f;
                            this.ai[1] = (float)(45 * Main.rand.Next(1, 2));
                            this.netUpdate = true;
                        }
                        else if (flag11 && (double)this.ai[0] == 0.0 && ((double)this.velocity.Y == 0.0 && Main.rand.Next(600) == 0) && (this.type == 229 && !flag6))
                        {
                            this.ai[0] = 11f;
                            this.ai[1] = (float)(30 * Main.rand.Next(1, 4));
                            this.netUpdate = true;
                        }
                        else if (flag11 && (double)this.ai[0] == 0.0 && ((double)this.velocity.Y == 0.0 && Main.rand.Next(1200) == 0))
                        {
                            int num6 = 220;
                            int num7 = 150;
                            for (int index1 = 0; index1 < (int)byte.MaxValue; ++index1)
                            {
                                Player player = Main.player[index1];
                                if (player.active && !player.dead && ((double)player.Distance(this.Center) < (double)num7 && Collision.CanHitLine(this.Top, 0, 0, player.Top, 0, 0)))
                                {
                                    int num8 = Utils.ToDirectionInt((double)this.position.X < (double)player.position.X);
                                    this.ai[0] = 7f;
                                    this.ai[1] = (float)num6;
                                    this.ai[2] = (float)index1;
                                    this.direction = num8;
                                    this.netUpdate = true;
                                    break;
                                }
                            }
                        }
                        else if (flag11 && (double)this.ai[0] == 1.0 && ((double)this.velocity.Y == 0.0 && Main.rand.Next(300) == 0))
                        {
                            Point point = Utils.ToTileCoordinates(this.Center);
                            bool flag3 = WorldGen.InWorld(point.X, point.Y, 1);
                            if (flag3)
                            {
                                for (int index1 = 0; index1 < 200; ++index1)
                                {
                                    if (Main.npc[index1].active && Main.npc[index1].aiStyle == 7 && (Main.npc[index1].townNPC && (double)Main.npc[index1].ai[0] == 5.0) && Utils.ToTileCoordinates(Main.npc[index1].Center) == point)
                                    {
                                        flag3 = false;
                                        break;
                                    }
                                }
                            }
                            if (flag3)
                            {
                                Tile tile = Main.tile[point.X, point.Y];
                                bool flag7 = (int)tile.type == 15;
                                if (flag7 && (int)tile.frameY == 1080)
                                    flag7 = false;
                                if (flag7)
                                {
                                    this.ai[0] = 5f;
                                    this.ai[1] = (float)(900 + Main.rand.Next(10800));
                                    this.direction = (int)tile.frameX == 0 ? -1 : 1;
                                    this.Bottom = new Vector2((float)(point.X * 16 + 8 + 2 * this.direction), (float)(point.Y * 16 + 32));
                                    this.velocity = Vector2.Zero;
                                    this.localAI[3] = 0.0f;
                                    this.netUpdate = true;
                                }
                            }
                        }
                        else if (flag11 && (double)this.ai[0] == 1.0 && ((double)this.velocity.Y == 0.0 && Main.rand.Next(600) == 0) && Utils.PlotTileLine(this.Top, this.Bottom, (float)this.width, new Utils.PerLinePoint(DelegateMethods.SearchAvoidedByNPCs)))
                        {
                            Point point = Utils.ToTileCoordinates(this.Center + new Vector2((float)(this.direction * 10), 0.0f));
                            bool flag3 = WorldGen.InWorld(point.X, point.Y, 1);
                            if (flag3)
                            {
                                Tile tileSafely = Framing.GetTileSafely(point.X, point.Y);
                                if (!tileSafely.nactive() || !TileID.Sets.InteractibleByNPCs[(int)tileSafely.type])
                                    flag3 = false;
                            }
                            if (flag3)
                            {
                                this.ai[0] = 9f;
                                this.ai[1] = (float)(40 + Main.rand.Next(90));
                                this.velocity = Vector2.Zero;
                                this.localAI[3] = 0.0f;
                                this.netUpdate = true;
                            }
                        }
                        if ((double)this.ai[0] < 2.0 && (double)this.velocity.Y == 0.0 && this.type == 18)
                        {
                            int index1 = -1;
                            for (int index2 = 0; index2 < 200; ++index2)
                            {
                                NPC npc = Main.npc[index2];
                                if (npc.active && npc.townNPC && npc.life != npc.lifeMax && ((index1 == -1 || npc.lifeMax - npc.life > Main.npc[index1].lifeMax - Main.npc[index1].life) && (Collision.CanHitLine(this.position, this.width, this.height, npc.position, npc.width, npc.height) && (double)this.Distance(npc.Center) < 500.0)))
                                    index1 = index2;
                            }
                            if (index1 != -1)
                            {
                                this.ai[0] = 13f;
                                this.ai[1] = 34f;
                                this.ai[2] = (float)index1;
                                this.localAI[3] = 0.0f;
                                this.direction = (double)this.position.X < (double)Main.npc[index1].position.X ? 1 : -1;
                                this.netUpdate = true;
                            }
                        }
                        if (flag12 && (double)this.velocity.Y == 0.0 && (NPCID.Sets.AttackType[this.type] == 0 && NPCID.Sets.AttackAverageChance[this.type] > 0) && Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) == 0)
                        {
                            int num6 = NPCID.Sets.AttackTime[this.type];
                            int index1 = num5 == 1 ? index4 : index3;
                            int index2 = num5 == 1 ? index3 : index4;
                            if (index1 != -1 && !Collision.CanHit(this.Center, 0, 0, Main.npc[index1].Center, 0, 0))
                                index1 = index2 == -1 || !Collision.CanHit(this.Center, 0, 0, Main.npc[index2].Center, 0, 0) ? -1 : index2;
                            if (index1 != -1)
                            {
                                this.localAI[2] = this.ai[0];
                                this.ai[0] = 10f;
                                this.ai[1] = (float)num6;
                                this.ai[2] = 0.0f;
                                this.localAI[3] = 0.0f;
                                this.direction = (double)this.position.X < (double)Main.npc[index1].position.X ? 1 : -1;
                                this.netUpdate = true;
                            }
                        }
                        else if (flag12 && (double)this.velocity.Y == 0.0 && (NPCID.Sets.AttackType[this.type] == 1 && NPCID.Sets.AttackAverageChance[this.type] > 0) && Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) == 0)
                        {
                            int num6 = NPCID.Sets.AttackTime[this.type];
                            int index1 = num5 == 1 ? index4 : index3;
                            int index2 = num5 == 1 ? index3 : index4;
                            if (index1 != -1 && !Collision.CanHitLine(this.Center, 0, 0, Main.npc[index1].Center, 0, 0))
                                index1 = index2 == -1 || !Collision.CanHitLine(this.Center, 0, 0, Main.npc[index2].Center, 0, 0) ? -1 : index2;
                            if (index1 != -1)
                            {
                                Vector2 vector2 = this.DirectionTo(Main.npc[index1].Center);
                                if ((double)vector2.Y <= 0.5 && (double)vector2.Y >= -0.5)
                                {
                                    this.localAI[2] = this.ai[0];
                                    this.ai[0] = 12f;
                                    this.ai[1] = (float)num6;
                                    this.ai[2] = vector2.Y;
                                    this.localAI[3] = 0.0f;
                                    this.direction = (double)this.position.X < (double)Main.npc[index1].position.X ? 1 : -1;
                                    this.netUpdate = true;
                                }
                            }
                        }
                        if (flag12 && (double)this.velocity.Y == 0.0 && (NPCID.Sets.AttackType[this.type] == 2 && NPCID.Sets.AttackAverageChance[this.type] > 0) && Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) == 0)
                        {
                            int num6 = NPCID.Sets.AttackTime[this.type];
                            int index1 = num5 == 1 ? index4 : index3;
                            int index2 = num5 == 1 ? index3 : index4;
                            if (index1 != -1 && !Collision.CanHitLine(this.Center, 0, 0, Main.npc[index1].Center, 0, 0))
                                index1 = index2 == -1 || !Collision.CanHitLine(this.Center, 0, 0, Main.npc[index2].Center, 0, 0) ? -1 : index2;
                            if (index1 != -1)
                            {
                                this.localAI[2] = this.ai[0];
                                this.ai[0] = 14f;
                                this.ai[1] = (float)num6;
                                this.ai[2] = 0.0f;
                                this.localAI[3] = 0.0f;
                                this.direction = (double)this.position.X < (double)Main.npc[index1].position.X ? 1 : -1;
                                this.netUpdate = true;
                            }
                            else if (this.type == 20)
                            {
                                this.localAI[2] = this.ai[0];
                                this.ai[0] = 14f;
                                this.ai[1] = (float)num6;
                                this.ai[2] = 0.0f;
                                this.localAI[3] = 0.0f;
                                this.netUpdate = true;
                            }
                        }
                        if (!flag12 || (double)this.velocity.Y != 0.0 || (NPCID.Sets.AttackType[this.type] != 3 || NPCID.Sets.AttackAverageChance[this.type] <= 0) || Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) != 0)
                            return;
                        int num14 = NPCID.Sets.AttackTime[this.type];
                        int index6 = num5 == 1 ? index4 : index3;
                        int index7 = num5 == 1 ? index3 : index4;
                        if (index6 != -1 && !Collision.CanHit(this.Center, 0, 0, Main.npc[index6].Center, 0, 0))
                            index6 = index7 == -1 || !Collision.CanHit(this.Center, 0, 0, Main.npc[index7].Center, 0, 0) ? -1 : index7;
                        if (index6 == -1)
                            return;
                        this.localAI[2] = this.ai[0];
                        this.ai[0] = 15f;
                        this.ai[1] = (float)num14;
                        this.ai[2] = 0.0f;
                        this.localAI[3] = 0.0f;
                        this.direction = (double)this.position.X < (double)Main.npc[index6].position.X ? 1 : -1;
                        this.netUpdate = true;
                    }
                }
            }
            else if (this.aiStyle == 8)
            {
                this.TargetClosest(true);
                this.velocity.X *= 0.93f;
                if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                    this.velocity.X = 0.0f;
                if ((double)this.ai[0] == 0.0)
                    this.ai[0] = 500f;
                if (this.type == 172)
                {
                    if (this.alpha < (int)byte.MaxValue)
                        ++this.alpha;
                    if (this.justHit)
                        this.alpha = 0;
                }
                if ((double)this.ai[2] != 0.0 && (double)this.ai[3] != 0.0)
                {
                    if (this.type == 172)
                        this.alpha = (int)byte.MaxValue;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                    for (int index1 = 0; index1 < 50; ++index1)
                    {
                        if (this.type == 29 || this.type == 45)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0.0f, 0.0f, 100, new Color(), (float)Main.rand.Next(1, 3));
                            Main.dust[index2].velocity *= 3f;
                            if ((double)Main.dust[index2].scale > 1.0)
                                Main.dust[index2].noGravity = true;
                        }
                        else if (this.type == 32)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, 0.0f, 0.0f, 100, new Color(), 1.5f);
                            Main.dust[index2].velocity *= 3f;
                            Main.dust[index2].noGravity = true;
                        }
                        else if (this.type == 283 || this.type == 284)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 173, 0.0f, 0.0f, 0, new Color(), 1f);
                            Main.dust[index2].velocity *= 2f;
                            Main.dust[index2].scale = 1.4f;
                        }
                        else if (this.type == 285 || this.type == 286)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 174, 0.0f, 0.0f, 100, new Color(), 1.5f);
                            Main.dust[index2].velocity *= 3f;
                            Main.dust[index2].noGravity = true;
                        }
                        else if (this.type == 281 || this.type == 282)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0.0f, 0.0f, 100, new Color(), 1.5f);
                            Main.dust[index2].velocity *= 3f;
                            Main.dust[index2].noGravity = true;
                        }
                        else if (this.type == 172)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 106, 0.0f, 0.0f, 100, new Color(), 2.5f);
                            Main.dust[index2].velocity *= 3f;
                            Main.dust[index2].noGravity = true;
                        }
                        else if (this.type == 533)
                        {
                            int index2 = Dust.NewDust(this.position, this.width, this.height, 27, 0.0f, 0.0f, 100, new Color(), 2.5f);
                            Main.dust[index2].velocity *= 3f;
                            Main.dust[index2].noGravity = true;
                        }
                        else
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                            Main.dust[index2].velocity *= 3f;
                            Main.dust[index2].noGravity = true;
                        }
                    }
                    this.position.X = (float)((double)this.ai[2] * 16.0 - (double)(this.width / 2) + 8.0);
                    this.position.Y = this.ai[3] * 16f - (float)this.height;
                    this.velocity.X = 0.0f;
                    this.velocity.Y = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                    for (int index1 = 0; index1 < 50; ++index1)
                    {
                        if (this.type == 29 || this.type == 45)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0.0f, 0.0f, 100, new Color(), (float)Main.rand.Next(1, 3));
                            Main.dust[index2].velocity *= 3f;
                            if ((double)Main.dust[index2].scale > 1.0)
                                Main.dust[index2].noGravity = true;
                        }
                        else if (this.type == 32)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, 0.0f, 0.0f, 100, new Color(), 1.5f);
                            Main.dust[index2].velocity *= 3f;
                            Main.dust[index2].noGravity = true;
                        }
                        else if (this.type == 172)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 106, 0.0f, 0.0f, 100, new Color(), 2.5f);
                            Main.dust[index2].velocity *= 3f;
                            Main.dust[index2].noGravity = true;
                        }
                        else if (this.type == 283 || this.type == 284)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 173, 0.0f, 0.0f, 0, new Color(), 1f);
                            Main.dust[index2].velocity *= 2f;
                            Main.dust[index2].scale = 1.4f;
                        }
                        else if (this.type == 285 || this.type == 286)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 174, 0.0f, 0.0f, 100, new Color(), 1.5f);
                            Main.dust[index2].velocity *= 3f;
                            Main.dust[index2].noGravity = true;
                        }
                        else if (this.type == 281 || this.type == 282)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0.0f, 0.0f, 100, new Color(), 1.5f);
                            Main.dust[index2].velocity *= 3f;
                            Main.dust[index2].noGravity = true;
                        }
                        else if (this.type == 533)
                        {
                            int index2 = Dust.NewDust(this.position, this.width, this.height, 27, 0.0f, 0.0f, 100, new Color(), 2.5f);
                            Main.dust[index2].velocity *= 3f;
                            Main.dust[index2].noGravity = true;
                        }
                        else
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                            Main.dust[index2].velocity *= 3f;
                            Main.dust[index2].noGravity = true;
                        }
                    }
                }
                ++this.ai[0];
                if (this.type == 283 || this.type == 284)
                {
                    if ((double)this.ai[0] == 50.0 || (double)this.ai[0] == 100.0 || ((double)this.ai[0] == 150.0 || (double)this.ai[0] == 200.0) || (double)this.ai[0] == 250.0)
                    {
                        this.ai[1] = 30f;
                        this.netUpdate = true;
                    }
                    if ((double)this.ai[0] >= 400.0)
                        this.ai[0] = 700f;
                }
                else if (this.type == 172)
                {
                    if ((double)this.ai[0] == 75.0 || (double)this.ai[0] == 150.0 || ((double)this.ai[0] == 225.0 || (double)this.ai[0] == 300.0) || ((double)this.ai[0] == 375.0 || (double)this.ai[0] == 450.0))
                    {
                        this.ai[1] = 30f;
                        this.netUpdate = true;
                    }
                }
                else if (this.type == 533)
                {
                    if ((double)this.ai[0] == 180.0)
                    {
                        this.ai[1] = 181f;
                        this.netUpdate = true;
                    }
                }
                else if (this.type == 281 || this.type == 282)
                {
                    if ((double)this.ai[0] == 20.0 || (double)this.ai[0] == 40.0 || ((double)this.ai[0] == 60.0 || (double)this.ai[0] == 120.0) || ((double)this.ai[0] == 140.0 || (double)this.ai[0] == 160.0 || ((double)this.ai[0] == 220.0 || (double)this.ai[0] == 240.0)) || (double)this.ai[0] == 260.0)
                    {
                        this.ai[1] = 30f;
                        this.netUpdate = true;
                    }
                    if ((double)this.ai[0] >= 460.0)
                        this.ai[0] = 700f;
                }
                else if ((double)this.ai[0] == 100.0 || (double)this.ai[0] == 200.0 || (double)this.ai[0] == 300.0)
                {
                    this.ai[1] = 30f;
                    this.netUpdate = true;
                }
                if ((this.type == 285 || this.type == 286) && (double)this.ai[0] > 400.0)
                    this.ai[0] = 650f;
                if (this.type == 533 && (double)this.ai[0] >= 360.0)
                    this.ai[0] = 650f;
                if ((double)this.ai[0] >= 650.0 && Main.netMode != 1)
                {
                    this.ai[0] = 1f;
                    int num1 = (int)Main.player[this.target].position.X / 16;
                    int num2 = (int)Main.player[this.target].position.Y / 16;
                    int num3 = (int)this.position.X / 16;
                    int num4 = (int)this.position.Y / 16;
                    int num5 = 20;
                    int num6 = 0;
                    bool flag1 = false;
                    if ((double)Math.Abs(this.position.X - Main.player[this.target].position.X) + (double)Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000.0)
                    {
                        num6 = 100;
                        flag1 = true;
                    }
                    while (!flag1 && num6 < 100)
                    {
                        ++num6;
                        int index1 = Main.rand.Next(num1 - num5, num1 + num5);
                        for (int index2 = Main.rand.Next(num2 - num5, num2 + num5); index2 < num2 + num5; ++index2)
                        {
                            if ((index2 < num2 - 4 || index2 > num2 + 4 || (index1 < num1 - 4 || index1 > num1 + 4)) && (index2 < num4 - 1 || index2 > num4 + 1 || (index1 < num3 - 1 || index1 > num3 + 1)) && Main.tile[index1, index2].nactive())
                            {
                                bool flag2 = true;
                                if ((this.type == 32 || this.type >= 281 && this.type <= 286) && !Main.wallDungeon[(int)Main.tile[index1, index2 - 1].wall])
                                    flag2 = false;
                                else if (Main.tile[index1, index2 - 1].lava())
                                    flag2 = false;
                                if (flag2 && Main.tileSolid[(int)Main.tile[index1, index2].type] && !Collision.SolidTiles(index1 - 1, index1 + 1, index2 - 4, index2 - 1))
                                {
                                    this.ai[1] = 20f;
                                    this.ai[2] = (float)index1;
                                    this.ai[3] = (float)index2;
                                    flag1 = true;
                                    break;
                                }
                            }
                        }
                    }
                    this.netUpdate = true;
                }
                if ((double)this.ai[1] > 0.0)
                {
                    --this.ai[1];
                    if (this.type == 533)
                    {
                        if ((double)this.ai[1] % 30.0 == 0.0 && (double)this.ai[1] / 30.0 < 5.0)
                        {
                            Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                            if (Main.netMode != 1)
                            {
                                Point point1 = Utils.ToTileCoordinates(this.Center);
                                Point point2 = Utils.ToTileCoordinates(Main.player[this.target].Center);
                                Vector2 vector2 = Main.player[this.target].Center - this.Center;
                                int num1 = 6;
                                int num2 = 6;
                                int num3 = 0;
                                int num4 = 2;
                                int num5 = 0;
                                bool flag1 = false;
                                if ((double)vector2.Length() > 2000.0)
                                    flag1 = true;
                                while (!flag1 && num5 < 50)
                                {
                                    ++num5;
                                    int index1 = Main.rand.Next(point2.X - num1, point2.X + num1 + 1);
                                    int index2 = Main.rand.Next(point2.Y - num1, point2.Y + num1 + 1);
                                    if ((index2 < point2.Y - num3 || index2 > point2.Y + num3 || (index1 < point2.X - num3 || index1 > point2.X + num3)) && (index2 < point1.Y - num2 || index2 > point1.Y + num2 || (index1 < point1.X - num2 || index1 > point1.X + num2)) && !Main.tile[index1, index2].nactive())
                                    {
                                        bool flag2 = true;
                                        if (flag2 && Main.tile[index1, index2].lava())
                                            flag2 = false;
                                        if (flag2 && Collision.SolidTiles(index1 - num4, index1 + num4, index2 - num4, index2 + num4))
                                            flag2 = false;
                                        if (flag2)
                                        {
                                            Projectile.NewProjectile((float)(index1 * 16 + 8), (float)(index2 * 16 + 8), 0.0f, 0.0f, 596, 0, 1f, Main.myPlayer, (float)this.target, 0.0f);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    else if ((double)this.ai[1] == 25.0)
                    {
                        if (this.type >= 281 && this.type <= 286)
                        {
                            if (Main.netMode != 1)
                            {
                                float num1 = 6f;
                                if (this.type == 285 || this.type == 286)
                                    num1 = 8f;
                                if (this.type == 281 || this.type == 282)
                                    num1 = 4f;
                                Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y);
                                float num2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                                float num3 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y;
                                if (this.type == 283 || this.type == 284)
                                {
                                    float num4 = num2 + (float)Main.rand.Next(-30, 31);
                                    float num5 = num3 + (float)Main.rand.Next(-30, 31);
                                    num2 = num4 - Main.player[this.target].velocity.X * 10f;
                                    num3 = num5 - Main.player[this.target].velocity.Y * 10f;
                                }
                                float num6 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                                float num7 = num1 / num6;
                                float SpeedX = num2 * num7;
                                float SpeedY = num3 * num7;
                                int Damage = 30;
                                int Type = 290;
                                if (this.type == 285 || this.type == 286)
                                {
                                    Type = 291;
                                    Damage = 40;
                                }
                                if (this.type == 281 || this.type == 282)
                                {
                                    Type = 293;
                                    Damage = 40;
                                }
                                if (Main.expertMode)
                                    Damage = (int)((double)Damage * 0.8);
                                int index = Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                Main.projectile[index].timeLeft = 300;
                                if (Type == 291)
                                {
                                    Main.projectile[index].ai[0] = Main.player[this.target].Center.X;
                                    Main.projectile[index].ai[1] = Main.player[this.target].Center.Y;
                                    Main.projectile[index].netUpdate = true;
                                }
                                this.localAI[0] = 0.0f;
                            }
                        }
                        else
                        {
                            if (this.type != 172)
                                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                            if (Main.netMode != 1)
                            {
                                if (this.type == 29 || this.type == 45)
                                    NPC.NewNPC((int)this.position.X + this.width / 2, (int)this.position.Y - 8, 30, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (this.type == 32)
                                    NPC.NewNPC((int)this.position.X + this.width / 2, (int)this.position.Y - 8, 33, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (this.type == 172)
                                {
                                    float num1 = 10f;
                                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                                    float num2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X + (float)Main.rand.Next(-10, 11);
                                    float num3 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y + (float)Main.rand.Next(-10, 11);
                                    float num4 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                                    float num5 = num1 / num4;
                                    float SpeedX = num2 * num5;
                                    float SpeedY = num3 * num5;
                                    int Damage = 40;
                                    int Type = 129;
                                    int index = Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                    Main.projectile[index].timeLeft = 300;
                                    this.localAI[0] = 0.0f;
                                }
                                else
                                    NPC.NewNPC((int)this.position.X + this.width / 2 + this.direction * 8, (int)this.position.Y + 20, 25, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                        }
                    }
                }
                if (this.type == 29 || this.type == 45)
                {
                    if (Main.rand.Next(5) != 0)
                        return;
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 27, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 1.5f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity.X *= 0.5f;
                    Main.dust[index].velocity.Y = -2f;
                }
                else if (this.type == 32)
                {
                    if (Main.rand.Next(3) == 0)
                        return;
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 172, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 0.9f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity.X *= 0.3f;
                    Main.dust[index].velocity.Y *= 0.2f;
                    --Main.dust[index].velocity.Y;
                }
                else if (this.type == 172)
                {
                    int num = 1;
                    if (this.alpha == (int)byte.MaxValue)
                        num = 2;
                    for (int index1 = 0; index1 < num; ++index1)
                    {
                        if (Main.rand.Next((int)byte.MaxValue) > (int)byte.MaxValue - this.alpha)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 106, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 1.2f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity.X *= (float)(0.100000001490116 + (double)Main.rand.Next(30) * 0.00999999977648258);
                            Main.dust[index2].velocity.Y *= (float)(0.100000001490116 + (double)Main.rand.Next(30) * 0.00999999977648258);
                            Main.dust[index2].scale *= (float)(1.0 + (double)Main.rand.Next(6) * 0.100000001490116);
                        }
                    }
                }
                else if (this.type == 283 || this.type == 284)
                {
                    if (Main.rand.Next(2) != 0)
                        return;
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 173, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index].velocity.X *= 0.5f;
                    Main.dust[index].velocity.Y *= 0.5f;
                }
                else if (this.type == 285 || this.type == 286)
                {
                    if (Main.rand.Next(2) != 0)
                        return;
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 174, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 1f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity *= 0.4f;
                    Main.dust[index].velocity.Y -= 0.7f;
                }
                else if (this.type == 281 || this.type == 282)
                {
                    if (Main.rand.Next(2) != 0)
                        return;
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 175, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 0.1f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity *= 0.5f;
                    Main.dust[index].fadeIn = 1.2f;
                }
                else if (this.type == 533)
                {
                    Lighting.AddLight(this.Top, 0.6f, 0.6f, 0.3f);
                }
                else
                {
                    if (Main.rand.Next(2) != 0)
                        return;
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 2f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity.X *= 1f;
                    Main.dust[index].velocity.Y *= 1f;
                }
            }
            else if (this.aiStyle == 9)
            {
                if (this.type == 516)
                {
                    if (this.alpha < 220)
                        this.alpha += 40;
                    if ((double)this.ai[0] == 0.0)
                    {
                        this.ai[0] = 1f;
                        Vector2 vector2_1 = Main.player[this.target].Center - this.Center;
                        vector2_1.Normalize();
                        if (Utils.HasNaNs(vector2_1))
                            vector2_1 = -Vector2.UnitY;
                        Vector2 vector2_2 = Utils.RotatedBy(Utils.RotatedByRandom(vector2_1, 1.57079637050629), -0.785398185253143, new Vector2());
                        if ((double)vector2_2.Y > 0.200000002980232)
                            vector2_2.Y = 0.2f;
                        this.velocity = vector2_2 * (float)(6.0 + (double)Utils.NextFloat(Main.rand) * 4.0);
                    }
                    if (this.collideX || this.collideY || (double)this.Distance(Main.player[this.target].Center) < 20.0)
                        this.StrikeNPCNoInteraction(9999, 0.0f, this.direction, false, false, false);
                }
                if (this.target == (int)byte.MaxValue)
                {
                    this.TargetClosest(true);
                    float num1 = 6f;
                    if (this.type == 25)
                        num1 = 5f;
                    if (this.type == 112)
                        num1 = 7f;
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num2 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num3 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num4 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                    float num5 = num1 / num4;
                    this.velocity.X = num2 * num5;
                    this.velocity.Y = num3 * num5;
                }
                if (this.type == 112)
                {
                    ++this.ai[0];
                    if ((double)this.ai[0] > 3.0)
                        this.ai[0] = 3f;
                    if ((double)this.ai[0] == 2.0)
                    {
                        NPC npc = this;
                        Vector2 vector2 = npc.position + this.velocity;
                        npc.position = vector2;
                        Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 9);
                        for (int index1 = 0; index1 < 20; ++index1)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 18, 0.0f, 0.0f, 100, new Color(), 1.8f);
                            Main.dust[index2].velocity *= 1.3f;
                            Main.dust[index2].velocity += this.velocity;
                            Main.dust[index2].noGravity = true;
                        }
                    }
                }
                if (this.type == 112 && Collision.SolidCollision(this.position, this.width, this.height))
                {
                    int num = Main.netMode;
                    this.StrikeNPCNoInteraction(999, 0.0f, 0, false, false, false);
                }
                if (this.timeLeft > 100)
                    this.timeLeft = 100;
                if (this.type == 516)
                {
                    this.rotation += 0.1f * (float)this.direction;
                    float num1 = 15f;
                    float num2 = 0.08333334f;
                    Vector2 center = this.Center;
                    Vector2 vec = Main.player[this.target].Center - center;
                    vec.Normalize();
                    if (Utils.HasNaNs(vec))
                        vec = new Vector2((float)this.direction, 0.0f);
                    this.velocity = (this.velocity * (num1 - 1f) + vec * (this.velocity.Length() + num2)) / num1;
                    if ((double)this.velocity.Length() >= 6.0)
                        return;
                    NPC npc = this;
                    Vector2 vector2 = npc.velocity * 1.05f;
                    npc.velocity = vector2;
                }
                else
                {
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        if (this.type == 30)
                        {
                            this.alpha = (int)byte.MaxValue;
                            for (int index2 = 0; index2 < 2; ++index2)
                            {
                                int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 27, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 1.3f);
                                Main.dust[index3].noGravity = true;
                                Main.dust[index3].velocity *= 0.3f;
                                Main.dust[index3].velocity.X -= this.velocity.X * 0.2f;
                                Main.dust[index3].velocity.Y -= this.velocity.Y * 0.2f;
                            }
                        }
                        else if (this.type == 33)
                        {
                            for (int index2 = 0; index2 < 3; ++index2)
                            {
                                float num1 = this.velocity.X / 3f * (float)index1;
                                float num2 = this.velocity.Y / 3f * (float)index1;
                                int num3 = 2;
                                int index3 = Dust.NewDust(new Vector2(this.position.X + (float)num3, this.position.Y + (float)num3), this.width - num3 * 2, this.height - num3 * 2, 172, 0.0f, 0.0f, 100, new Color(), 1.2f);
                                Main.dust[index3].noGravity = true;
                                Main.dust[index3].velocity *= 0.1f;
                                Main.dust[index3].velocity += this.velocity * 0.5f;
                                Main.dust[index3].position.X -= num1;
                                Main.dust[index3].position.Y -= num2;
                            }
                            if (Main.rand.Next(5) == 0)
                            {
                                int num = 2;
                                int index2 = Dust.NewDust(new Vector2(this.position.X + (float)num, this.position.Y + (float)num), this.width - num * 2, this.height - num * 2, 172, 0.0f, 0.0f, 100, new Color(), 0.6f);
                                Main.dust[index2].velocity *= 0.25f;
                                Main.dust[index2].velocity += this.velocity * 0.5f;
                            }
                        }
                        else if (this.type == 112)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 18, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 80, new Color(), 1.3f);
                            Main.dust[index2].velocity *= 0.3f;
                            Main.dust[index2].noGravity = true;
                        }
                        else
                        {
                            Lighting.AddLight((int)(((double)this.position.X + (double)(this.width / 2)) / 16.0), (int)(((double)this.position.Y + (double)(this.height / 2)) / 16.0), 1f, 0.3f, 0.1f);
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 2f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity.X *= 0.3f;
                            Main.dust[index2].velocity.Y *= 0.3f;
                        }
                    }
                    this.rotation += 0.4f * (float)this.direction;
                }
            }
            else if (this.aiStyle == 10)
            {
                float num1 = 1f;
                float num2 = 11.0f / 1000.0f;
                this.TargetClosest(true);
                Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                float num3 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                float num4 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                float num5 = (float)Math.Sqrt((double)num3 * (double)num3 + (double)num4 * (double)num4);
                float num6 = num5;
                ++this.ai[1];
                if ((double)this.ai[1] > 600.0)
                {
                    num2 *= 8f;
                    num1 = 4f;
                    if ((double)this.ai[1] > 650.0)
                        this.ai[1] = 0.0f;
                }
                else if ((double)num6 < 250.0)
                {
                    this.ai[0] += 0.9f;
                    if ((double)this.ai[0] > 0.0)
                        this.velocity.Y += 0.019f;
                    else
                        this.velocity.Y -= 0.019f;
                    if ((double)this.ai[0] < -100.0 || (double)this.ai[0] > 100.0)
                        this.velocity.X += 0.019f;
                    else
                        this.velocity.X -= 0.019f;
                    if ((double)this.ai[0] > 200.0)
                        this.ai[0] = -200f;
                }
                if ((double)num6 > 350.0)
                {
                    num1 = 5f;
                    num2 = 0.3f;
                }
                else if ((double)num6 > 300.0)
                {
                    num1 = 3f;
                    num2 = 0.2f;
                }
                else if ((double)num6 > 250.0)
                {
                    num1 = 1.5f;
                    num2 = 0.1f;
                }
                float num7 = num1 / num5;
                float num8 = num3 * num7;
                float num9 = num4 * num7;
                if (Main.player[this.target].dead)
                {
                    num8 = (float)((double)this.direction * (double)num1 / 2.0);
                    num9 = (float)(-(double)num1 / 2.0);
                }
                if ((double)this.velocity.X < (double)num8)
                    this.velocity.X += num2;
                else if ((double)this.velocity.X > (double)num8)
                    this.velocity.X -= num2;
                if ((double)this.velocity.Y < (double)num9)
                    this.velocity.Y += num2;
                else if ((double)this.velocity.Y > (double)num9)
                    this.velocity.Y -= num2;
                if ((double)num8 > 0.0)
                {
                    this.spriteDirection = -1;
                    this.rotation = (float)Math.Atan2((double)num9, (double)num8);
                }
                if ((double)num8 < 0.0)
                {
                    this.spriteDirection = 1;
                    this.rotation = (float)Math.Atan2((double)num9, (double)num8) + 3.14f;
                }
                if (this.type != 289)
                    return;
                if (this.justHit)
                {
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                }
                vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                float num10 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                float num11 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                float num12 = (float)Math.Sqrt((double)num10 * (double)num10 + (double)num11 * (double)num11);
                if ((double)num12 <= 500.0)
                {
                    ++this.ai[2];
                    if ((double)this.ai[3] == 0.0)
                    {
                        if ((double)this.ai[2] <= 120.0)
                            return;
                        this.ai[2] = 0.0f;
                        this.ai[3] = 1f;
                        this.netUpdate = true;
                    }
                    else
                    {
                        if ((double)this.ai[2] > 40.0)
                            this.ai[3] = 0.0f;
                        if (Main.netMode == 1 || (double)this.ai[2] != 20.0)
                            return;
                        float num13 = 6f;
                        int Damage = 25;
                        int Type = 299;
                        float num14 = num13 / num12;
                        float SpeedX = num10 * num14;
                        float SpeedY = num11 * num14;
                        Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                }
                else
                {
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                }
            }
            else if (this.aiStyle == 11)
            {
                this.defense = this.defDefense;
                if ((double)this.ai[0] == 0.0 && Main.netMode != 1)
                {
                    this.TargetClosest(true);
                    this.ai[0] = 1f;
                    if (this.type != 68)
                    {
                        int index1 = NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)this.position.Y + this.height / 2, 36, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        Main.npc[index1].ai[0] = -1f;
                        Main.npc[index1].ai[1] = (float)this.whoAmI;
                        Main.npc[index1].target = this.target;
                        Main.npc[index1].netUpdate = true;
                        int index2 = NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)this.position.Y + this.height / 2, 36, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        Main.npc[index2].ai[0] = 1f;
                        Main.npc[index2].ai[1] = (float)this.whoAmI;
                        Main.npc[index2].ai[3] = 150f;
                        Main.npc[index2].target = this.target;
                        Main.npc[index2].netUpdate = true;
                    }
                }
                if (this.type == 68 && (double)this.ai[1] != 3.0 && (double)this.ai[1] != 2.0)
                {
                    Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
                    this.ai[1] = 2f;
                }
                if (Main.player[this.target].dead || (double)Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000.0 || (double)Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000.0)
                {
                    this.TargetClosest(true);
                    if (Main.player[this.target].dead || (double)Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000.0 || (double)Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000.0)
                        this.ai[1] = 3f;
                }
                if (Main.dayTime && (double)this.ai[1] != 3.0 && (double)this.ai[1] != 2.0)
                {
                    this.ai[1] = 2f;
                    Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
                }
                int num1 = 0;
                if (Main.expertMode)
                {
                    for (int index = 0; index < 200; ++index)
                    {
                        if (Main.npc[index].active && Main.npc[index].type == this.type + 1)
                            ++num1;
                    }
                    this.defense += num1 * 25;
                    if ((num1 < 2 || (double)this.life < (double)this.lifeMax * 0.75) && (double)this.ai[1] == 0.0)
                    {
                        float num2 = 80f;
                        if (num1 == 0)
                            num2 /= 2f;
                        if (Main.netMode != 1 && (double)this.ai[2] % (double)num2 == 0.0)
                        {
                            Vector2 center = this.Center;
                            float num3 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - center.X;
                            float num4 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - center.Y;
                            Math.Sqrt((double)num3 * (double)num3 + (double)num4 * (double)num4);
                            if (Collision.CanHit(center, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                            {
                                float num5 = 3f;
                                if (num1 == 0)
                                    num5 += 2f;
                                float num6 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - center.X + (float)Main.rand.Next(-20, 21);
                                float num7 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - center.Y + (float)Main.rand.Next(-20, 21);
                                float num8 = (float)Math.Sqrt((double)num6 * (double)num6 + (double)num7 * (double)num7);
                                float num9 = num5 / num8;
                                float num10 = num6 * num9;
                                float num11 = num7 * num9;
                                Vector2 vector2_1 = new Vector2((float)((double)num10 * 1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258), (float)((double)num11 * 1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258));
                                vector2_1.Normalize();
                                Vector2 vector2_2 = vector2_1 * num5 + this.velocity;
                                float SpeedX = vector2_2.X;
                                float SpeedY = vector2_2.Y;
                                int Damage = 17;
                                int Type = 270;
                                center += vector2_2 * 5f;
                                int index = Projectile.NewProjectile(center.X, center.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, -1f, 0.0f);
                                Main.projectile[index].timeLeft = 300;
                            }
                        }
                    }
                }
                if ((double)this.ai[1] == 0.0)
                {
                    this.damage = this.defDamage;
                    ++this.ai[2];
                    if ((double)this.ai[2] >= 800.0)
                    {
                        this.ai[2] = 0.0f;
                        this.ai[1] = 1f;
                        this.TargetClosest(true);
                        this.netUpdate = true;
                    }
                    this.rotation = this.velocity.X / 15f;
                    float num2 = 0.02f;
                    float num3 = 2f;
                    float num4 = 0.05f;
                    float num5 = 8f;
                    if (Main.expertMode)
                    {
                        num2 = 0.03f;
                        num3 = 4f;
                        num4 = 0.07f;
                        num5 = 9.5f;
                    }
                    if ((double)this.position.Y > (double)Main.player[this.target].position.Y - 250.0)
                    {
                        if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y *= 0.98f;
                        this.velocity.Y -= num2;
                        if ((double)this.velocity.Y > (double)num3)
                            this.velocity.Y = num3;
                    }
                    else if ((double)this.position.Y < (double)Main.player[this.target].position.Y - 250.0)
                    {
                        if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y *= 0.98f;
                        this.velocity.Y += num2;
                        if ((double)this.velocity.Y < -(double)num3)
                            this.velocity.Y = -num3;
                    }
                    if ((double)this.position.X + (double)(this.width / 2) > (double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2))
                    {
                        if ((double)this.velocity.X > 0.0)
                            this.velocity.X *= 0.98f;
                        this.velocity.X -= num4;
                        if ((double)this.velocity.X > (double)num5)
                            this.velocity.X = num5;
                    }
                    if ((double)this.position.X + (double)(this.width / 2) < (double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2))
                    {
                        if ((double)this.velocity.X < 0.0)
                            this.velocity.X *= 0.98f;
                        this.velocity.X += num4;
                        if ((double)this.velocity.X < -(double)num5)
                            this.velocity.X = -num5;
                    }
                }
                else if ((double)this.ai[1] == 1.0)
                {
                    this.defense -= 10;
                    ++this.ai[2];
                    if ((double)this.ai[2] == 2.0)
                        Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
                    if ((double)this.ai[2] >= 400.0)
                    {
                        this.ai[2] = 0.0f;
                        this.ai[1] = 0.0f;
                    }
                    this.rotation += (float)this.direction * 0.3f;
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num2 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num3 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num4 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                    float num5 = 1.5f;
                    if (Main.expertMode)
                    {
                        this.damage = (int)((double)this.defDamage * 1.3);
                        num5 = 4f;
                        if ((double)num4 > 150.0)
                            num5 *= 1.05f;
                        if ((double)num4 > 200.0)
                            num5 *= 1.1f;
                        if ((double)num4 > 250.0)
                            num5 *= 1.1f;
                        if ((double)num4 > 300.0)
                            num5 *= 1.1f;
                        if ((double)num4 > 350.0)
                            num5 *= 1.1f;
                        if ((double)num4 > 400.0)
                            num5 *= 1.1f;
                        if ((double)num4 > 450.0)
                            num5 *= 1.1f;
                        if ((double)num4 > 500.0)
                            num5 *= 1.1f;
                        if ((double)num4 > 550.0)
                            num5 *= 1.1f;
                        if ((double)num4 > 600.0)
                            num5 *= 1.1f;
                        if (num1 == 0)
                            num5 *= 1.2f;
                        else if (num1 == 1)
                            num5 *= 1.1f;
                    }
                    float num6 = num5 / num4;
                    this.velocity.X = num2 * num6;
                    this.velocity.Y = num3 * num6;
                }
                else if ((double)this.ai[1] == 2.0)
                {
                    this.damage = 1000;
                    this.defense = 9999;
                    this.rotation += (float)this.direction * 0.3f;
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num2 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num3 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num4 = 8f / (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                    this.velocity.X = num2 * num4;
                    this.velocity.Y = num3 * num4;
                }
                else if ((double)this.ai[1] == 3.0)
                {
                    this.velocity.Y += 0.1f;
                    if ((double)this.velocity.Y < 0.0)
                        this.velocity.Y *= 0.95f;
                    this.velocity.X *= 0.95f;
                    if (this.timeLeft > 50)
                        this.timeLeft = 50;
                }
                if ((double)this.ai[1] == 2.0 || (double)this.ai[1] == 3.0 || this.type == 68 || num1 == 0 && Main.expertMode)
                    return;
                int index3 = Dust.NewDust(new Vector2((float)((double)this.position.X + (double)(this.width / 2) - 15.0 - (double)this.velocity.X * 5.0), (float)((double)this.position.Y + (double)this.height - 2.0)), 30, 10, 5, (float)(-(double)this.velocity.X * 0.200000002980232), 3f, 0, new Color(), 2f);
                Main.dust[index3].noGravity = true;
                Main.dust[index3].velocity.X *= 1.3f;
                Main.dust[index3].velocity.X += this.velocity.X * 0.4f;
                Main.dust[index3].velocity.Y += 2f + this.velocity.Y;
                for (int index1 = 0; index1 < 2; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 120f), this.width, 60, 5, this.velocity.X, this.velocity.Y, 0, new Color(), 2f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= this.velocity;
                    Main.dust[index2].velocity.Y += 5f;
                }
            }
            else if (this.aiStyle == 12)
            {
                this.spriteDirection = -(int)this.ai[0];
                if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 11)
                {
                    this.ai[2] += 10f;
                    if ((double)this.ai[2] > 50.0 || Main.netMode != 2)
                    {
                        this.life = -1;
                        this.HitEffect(0, 10.0);
                        this.active = false;
                    }
                }
                if ((double)this.ai[2] == 0.0 || (double)this.ai[2] == 3.0)
                {
                    if ((double)Main.npc[(int)this.ai[1]].ai[1] == 3.0 && this.timeLeft > 10)
                        this.timeLeft = 10;
                    if ((double)Main.npc[(int)this.ai[1]].ai[1] != 0.0)
                    {
                        if ((double)this.position.Y > (double)Main.npc[(int)this.ai[1]].position.Y - 100.0)
                        {
                            if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y -= 0.07f;
                            if ((double)this.velocity.Y > 6.0)
                                this.velocity.Y = 6f;
                        }
                        else if ((double)this.position.Y < (double)Main.npc[(int)this.ai[1]].position.Y - 100.0)
                        {
                            if ((double)this.velocity.Y < 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y += 0.07f;
                            if ((double)this.velocity.Y < -6.0)
                                this.velocity.Y = -6f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) > (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 120.0 * (double)this.ai[0])
                        {
                            if ((double)this.velocity.X > 0.0)
                                this.velocity.X *= 0.96f;
                            this.velocity.X -= 0.1f;
                            if ((double)this.velocity.X > 8.0)
                                this.velocity.X = 8f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) < (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 120.0 * (double)this.ai[0])
                        {
                            if ((double)this.velocity.X < 0.0)
                                this.velocity.X *= 0.96f;
                            this.velocity.X += 0.1f;
                            if ((double)this.velocity.X < -8.0)
                                this.velocity.X = -8f;
                        }
                    }
                    else
                    {
                        ++this.ai[3];
                        if (Main.expertMode)
                            this.ai[3] += 0.5f;
                        if ((double)this.ai[3] >= 300.0)
                        {
                            ++this.ai[2];
                            this.ai[3] = 0.0f;
                            this.netUpdate = true;
                        }
                        if (Main.expertMode)
                        {
                            if ((double)this.position.Y > (double)Main.npc[(int)this.ai[1]].position.Y + 230.0)
                            {
                                if ((double)this.velocity.Y > 0.0)
                                    this.velocity.Y *= 0.96f;
                                this.velocity.Y -= 0.04f;
                                if ((double)this.velocity.Y > 3.0)
                                    this.velocity.Y = 3f;
                            }
                            else if ((double)this.position.Y < (double)Main.npc[(int)this.ai[1]].position.Y + 230.0)
                            {
                                if ((double)this.velocity.Y < 0.0)
                                    this.velocity.Y *= 0.96f;
                                this.velocity.Y += 0.04f;
                                if ((double)this.velocity.Y < -3.0)
                                    this.velocity.Y = -3f;
                            }
                            if ((double)this.position.X + (double)(this.width / 2) > (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0])
                            {
                                if ((double)this.velocity.X > 0.0)
                                    this.velocity.X *= 0.96f;
                                this.velocity.X -= 0.07f;
                                if ((double)this.velocity.X > 8.0)
                                    this.velocity.X = 8f;
                            }
                            if ((double)this.position.X + (double)(this.width / 2) < (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0])
                            {
                                if ((double)this.velocity.X < 0.0)
                                    this.velocity.X *= 0.96f;
                                this.velocity.X += 0.07f;
                                if ((double)this.velocity.X < -8.0)
                                    this.velocity.X = -8f;
                            }
                        }
                        if ((double)this.position.Y > (double)Main.npc[(int)this.ai[1]].position.Y + 230.0)
                        {
                            if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y -= 0.04f;
                            if ((double)this.velocity.Y > 3.0)
                                this.velocity.Y = 3f;
                        }
                        else if ((double)this.position.Y < (double)Main.npc[(int)this.ai[1]].position.Y + 230.0)
                        {
                            if ((double)this.velocity.Y < 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y += 0.04f;
                            if ((double)this.velocity.Y < -3.0)
                                this.velocity.Y = -3f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) > (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0])
                        {
                            if ((double)this.velocity.X > 0.0)
                                this.velocity.X *= 0.96f;
                            this.velocity.X -= 0.07f;
                            if ((double)this.velocity.X > 8.0)
                                this.velocity.X = 8f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) < (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0])
                        {
                            if ((double)this.velocity.X < 0.0)
                                this.velocity.X *= 0.96f;
                            this.velocity.X += 0.07f;
                            if ((double)this.velocity.X < -8.0)
                                this.velocity.X = -8f;
                        }
                    }
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = (float)((double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0]) - vector2.X;
                    float num2 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2.Y;
                    Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    this.rotation = (float)Math.Atan2((double)num2, (double)num1) + 1.57f;
                }
                else if ((double)this.ai[2] == 1.0)
                {
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = (float)((double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0]) - vector2.X;
                    float num2 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2.Y;
                    float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    this.rotation = (float)Math.Atan2((double)num2, (double)num1) + 1.57f;
                    this.velocity.X *= 0.95f;
                    this.velocity.Y -= 0.1f;
                    if (Main.expertMode)
                    {
                        this.velocity.Y -= 0.06f;
                        if ((double)this.velocity.Y < -13.0)
                            this.velocity.Y = -13f;
                    }
                    else if ((double)this.velocity.Y < -8.0)
                        this.velocity.Y = -8f;
                    if ((double)this.position.Y >= (double)Main.npc[(int)this.ai[1]].position.Y - 200.0)
                        return;
                    this.TargetClosest(true);
                    this.ai[2] = 2f;
                    vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num4 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num5 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num6 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                    float num7 = !Main.expertMode ? 18f / num6 : 21f / num6;
                    this.velocity.X = num4 * num7;
                    this.velocity.Y = num5 * num7;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[2] == 2.0)
                {
                    if ((double)this.position.Y <= (double)Main.player[this.target].position.Y && (double)this.velocity.Y >= 0.0)
                        return;
                    this.ai[2] = 3f;
                }
                else if ((double)this.ai[2] == 4.0)
                {
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = (float)((double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0]) - vector2.X;
                    float num2 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2.Y;
                    float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    this.rotation = (float)Math.Atan2((double)num2, (double)num1) + 1.57f;
                    this.velocity.Y *= 0.95f;
                    this.velocity.X += (float)(0.100000001490116 * -(double)this.ai[0]);
                    if (Main.expertMode)
                    {
                        this.velocity.X += (float)(0.0700000002980232 * -(double)this.ai[0]);
                        if ((double)this.velocity.X < -12.0)
                            this.velocity.X = -12f;
                        else if ((double)this.velocity.X > 12.0)
                            this.velocity.X = 12f;
                    }
                    else if ((double)this.velocity.X < -8.0)
                        this.velocity.X = -8f;
                    else if ((double)this.velocity.X > 8.0)
                        this.velocity.X = 8f;
                    if ((double)this.position.X + (double)(this.width / 2) >= (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 500.0 && (double)this.position.X + (double)(this.width / 2) <= (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) + 500.0)
                        return;
                    this.TargetClosest(true);
                    this.ai[2] = 5f;
                    vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num4 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num5 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num6 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                    float num7 = !Main.expertMode ? 17f / num6 : 22f / num6;
                    this.velocity.X = num4 * num7;
                    this.velocity.Y = num5 * num7;
                    this.netUpdate = true;
                }
                else
                {
                    if ((double)this.ai[2] != 5.0 || ((double)this.velocity.X <= 0.0 || (double)this.position.X + (double)(this.width / 2) <= (double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2)) && ((double)this.velocity.X >= 0.0 || (double)this.position.X + (double)(this.width / 2) >= (double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2)))
                        return;
                    this.ai[2] = 0.0f;
                }
            }
            else if (this.aiStyle == 13)
            {
                if ((double)this.ai[0] < 0.0 || (double)this.ai[0] >= (double)Main.maxTilesX || ((double)this.ai[1] < 0.0 || (double)this.ai[1] >= (double)Main.maxTilesX))
                    return;
                if (Main.tile[(int)this.ai[0], (int)this.ai[1]] == null)
                    Main.tile[(int)this.ai[0], (int)this.ai[1]] = new Tile();
                if (!Main.tile[(int)this.ai[0], (int)this.ai[1]].active())
                {
                    this.life = -1;
                    this.HitEffect(0, 10.0);
                    this.active = false;
                }
                else
                {
                    this.TargetClosest(true);
                    float num1 = 0.035f;
                    float num2 = 150f;
                    if (this.type == 43)
                        num2 = 250f;
                    if (this.type == 101)
                        num2 = 175f;
                    if (this.type == 259)
                        num2 = 100f;
                    if (this.type == 175)
                    {
                        num2 = 500f;
                        num1 = 0.05f;
                    }
                    if (this.type == 260)
                    {
                        num2 = 350f;
                        num1 = 0.15f;
                    }
                    ++this.ai[2];
                    if ((double)this.ai[2] > 300.0)
                    {
                        num2 = (float)(int)((double)num2 * 1.3);
                        if ((double)this.ai[2] > 450.0)
                            this.ai[2] = 0.0f;
                    }
                    Vector2 vector2 = new Vector2((float)((double)this.ai[0] * 16.0 + 8.0), (float)((double)this.ai[1] * 16.0 + 8.0));
                    float num3 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - (float)(this.width / 2) - vector2.X;
                    float SpeedY = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - (float)(this.height / 2) - vector2.Y;
                    float num4 = (float)Math.Sqrt((double)num3 * (double)num3 + (double)SpeedY * (double)SpeedY);
                    if ((double)num4 > (double)num2)
                    {
                        float num5 = num2 / num4;
                        num3 *= num5;
                        SpeedY *= num5;
                    }
                    if ((double)this.position.X < (double)this.ai[0] * 16.0 + 8.0 + (double)num3)
                    {
                        this.velocity.X += num1;
                        if ((double)this.velocity.X < 0.0 && (double)num3 > 0.0)
                            this.velocity.X += num1 * 1.5f;
                    }
                    else if ((double)this.position.X > (double)this.ai[0] * 16.0 + 8.0 + (double)num3)
                    {
                        this.velocity.X -= num1;
                        if ((double)this.velocity.X > 0.0 && (double)num3 < 0.0)
                            this.velocity.X -= num1 * 1.5f;
                    }
                    if ((double)this.position.Y < (double)this.ai[1] * 16.0 + 8.0 + (double)SpeedY)
                    {
                        this.velocity.Y += num1;
                        if ((double)this.velocity.Y < 0.0 && (double)SpeedY > 0.0)
                            this.velocity.Y += num1 * 1.5f;
                    }
                    else if ((double)this.position.Y > (double)this.ai[1] * 16.0 + 8.0 + (double)SpeedY)
                    {
                        this.velocity.Y -= num1;
                        if ((double)this.velocity.Y > 0.0 && (double)SpeedY < 0.0)
                            this.velocity.Y -= num1 * 1.5f;
                    }
                    if (this.type == 43)
                    {
                        if ((double)this.velocity.X > 3.0)
                            this.velocity.X = 3f;
                        if ((double)this.velocity.X < -3.0)
                            this.velocity.X = -3f;
                        if ((double)this.velocity.Y > 3.0)
                            this.velocity.Y = 3f;
                        if ((double)this.velocity.Y < -3.0)
                            this.velocity.Y = -3f;
                    }
                    else if (this.type == 175)
                    {
                        if ((double)this.velocity.X > 4.0)
                            this.velocity.X = 4f;
                        if ((double)this.velocity.X < -4.0)
                            this.velocity.X = -4f;
                        if ((double)this.velocity.Y > 4.0)
                            this.velocity.Y = 4f;
                        if ((double)this.velocity.Y < -4.0)
                            this.velocity.Y = -4f;
                    }
                    else
                    {
                        if ((double)this.velocity.X > 2.0)
                            this.velocity.X = 2f;
                        if ((double)this.velocity.X < -2.0)
                            this.velocity.X = -2f;
                        if ((double)this.velocity.Y > 2.0)
                            this.velocity.Y = 2f;
                        if ((double)this.velocity.Y < -2.0)
                            this.velocity.Y = -2f;
                    }
                    if (this.type == 259 || this.type == 260)
                    {
                        this.rotation = (float)Math.Atan2((double)SpeedY, (double)num3) + 1.57f;
                    }
                    else
                    {
                        if ((double)num3 > 0.0)
                        {
                            this.spriteDirection = 1;
                            this.rotation = (float)Math.Atan2((double)SpeedY, (double)num3);
                        }
                        if ((double)num3 < 0.0)
                        {
                            this.spriteDirection = -1;
                            this.rotation = (float)Math.Atan2((double)SpeedY, (double)num3) + 3.14f;
                        }
                    }
                    if (this.collideX)
                    {
                        this.netUpdate = true;
                        this.velocity.X = this.oldVelocity.X * -0.7f;
                        if ((double)this.velocity.X > 0.0 && (double)this.velocity.X < 2.0)
                            this.velocity.X = 2f;
                        if ((double)this.velocity.X < 0.0 && (double)this.velocity.X > -2.0)
                            this.velocity.X = -2f;
                    }
                    if (this.collideY)
                    {
                        this.netUpdate = true;
                        this.velocity.Y = this.oldVelocity.Y * -0.7f;
                        if ((double)this.velocity.Y > 0.0 && (double)this.velocity.Y < 2.0)
                            this.velocity.Y = 2f;
                        if ((double)this.velocity.Y < 0.0 && (double)this.velocity.Y > -2.0)
                            this.velocity.Y = -2f;
                    }
                    if (Main.netMode == 1)
                        return;
                    if (this.type == 101 && !Main.player[this.target].dead)
                    {
                        if (this.justHit)
                            this.localAI[0] = 0.0f;
                        ++this.localAI[0];
                        if ((double)this.localAI[0] >= 120.0)
                        {
                            if (!Collision.SolidCollision(this.position, this.width, this.height) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                            {
                                float num5 = 10f;
                                vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                                float num6 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X + (float)Main.rand.Next(-10, 11);
                                float num7 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y + (float)Main.rand.Next(-10, 11);
                                float num8 = (float)Math.Sqrt((double)num6 * (double)num6 + (double)num7 * (double)num7);
                                float num9 = num5 / num8;
                                float SpeedX = num6 * num9;
                                SpeedY = num7 * num9;
                                int Damage = 22;
                                if (Main.expertMode)
                                    Damage = (int)((double)Damage * 0.8);
                                int Type = 96;
                                int index = Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                Main.projectile[index].timeLeft = 300;
                                this.localAI[0] = 0.0f;
                            }
                            else
                                this.localAI[0] = 100f;
                        }
                    }
                    if (this.type != 260 || Main.player[this.target].dead)
                        return;
                    if (this.justHit)
                        this.localAI[0] = 0.0f;
                    ++this.localAI[0];
                    if ((double)this.localAI[0] < 150.0)
                        return;
                    if (!Collision.SolidCollision(this.position, this.width, this.height))
                    {
                        float num5 = 14f;
                        vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num6 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X + (float)Main.rand.Next(-10, 11);
                        float num7 = Math.Abs(num6 * 0.1f);
                        if ((double)SpeedY > 0.0)
                            num7 = 0.0f;
                        float num8 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y + (float)Main.rand.Next(-10, 11) - num7;
                        float num9 = (float)Math.Sqrt((double)num6 * (double)num6 + (double)num8 * (double)num8);
                        float num10 = num5 / num9;
                        float num11 = num6 * num10;
                        float num12 = num8 * num10;
                        int index = NPC.NewNPC((int)this.Center.X, (int)this.Center.Y, 261, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        Main.npc[index].velocity.X = num11;
                        Main.npc[index].velocity.Y = num12;
                        Main.npc[index].netUpdate = true;
                        this.localAI[0] = 0.0f;
                    }
                    else
                        this.localAI[0] = 250f;
                }
            }
            else if (this.aiStyle == 14)
            {
                if (this.type == 60 || this.type == 151)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 2f);
                    Main.dust[index].noGravity = true;
                }
                if (this.type == 150 && Main.rand.Next(10) == 0)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, new Color(), 1.5f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity *= 0.2f;
                    Main.dust[index].noLight = true;
                }
                this.noGravity = true;
                if (this.collideX)
                {
                    this.velocity.X = this.oldVelocity.X * -0.5f;
                    if (this.direction == -1 && (double)this.velocity.X > 0.0 && (double)this.velocity.X < 2.0)
                        this.velocity.X = 2f;
                    if (this.direction == 1 && (double)this.velocity.X < 0.0 && (double)this.velocity.X > -2.0)
                        this.velocity.X = -2f;
                }
                if (this.collideY)
                {
                    this.velocity.Y = this.oldVelocity.Y * -0.5f;
                    if ((double)this.velocity.Y > 0.0 && (double)this.velocity.Y < 1.0)
                        this.velocity.Y = 1f;
                    if ((double)this.velocity.Y < 0.0 && (double)this.velocity.Y > -1.0)
                        this.velocity.Y = -1f;
                }
                if (this.type == 226)
                {
                    int num1 = 1;
                    int num2 = 1;
                    if ((double)this.velocity.X < 0.0)
                        num1 = -1;
                    if ((double)this.velocity.Y < 0.0)
                        num2 = -1;
                    this.TargetClosest(true);
                    if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                    {
                        this.direction = num1;
                        this.directionY = num2;
                    }
                }
                else
                    this.TargetClosest(true);
                if (this.type == 158)
                {
                    if ((double)this.position.Y < Main.worldSurface * 16.0 && Main.dayTime && !Main.eclipse)
                    {
                        this.directionY = -1;
                        this.direction *= -1;
                    }
                    if (this.direction == -1 && (double)this.velocity.X > -7.0)
                    {
                        this.velocity.X -= 0.2f;
                        if ((double)this.velocity.X > 4.0)
                            this.velocity.X -= 0.1f;
                        else if ((double)this.velocity.X > 0.0)
                            this.velocity.X += 0.05f;
                        if ((double)this.velocity.X < -7.0)
                            this.velocity.X = -7f;
                    }
                    else if (this.direction == 1 && (double)this.velocity.X < 7.0)
                    {
                        this.velocity.X += 0.2f;
                        if ((double)this.velocity.X < -4.0)
                            this.velocity.X += 0.1f;
                        else if ((double)this.velocity.X < 0.0)
                            this.velocity.X -= 0.05f;
                        if ((double)this.velocity.X > 7.0)
                            this.velocity.X = 7f;
                    }
                    if (this.directionY == -1 && (double)this.velocity.Y > -7.0)
                    {
                        this.velocity.Y -= 0.2f;
                        if ((double)this.velocity.Y > 4.0)
                            this.velocity.Y -= 0.1f;
                        else if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y += 0.05f;
                        if ((double)this.velocity.Y < -7.0)
                            this.velocity.Y = -7f;
                    }
                    else if (this.directionY == 1 && (double)this.velocity.Y < 7.0)
                    {
                        this.velocity.Y += 0.2f;
                        if ((double)this.velocity.Y < -4.0)
                            this.velocity.Y += 0.1f;
                        else if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y -= 0.05f;
                        if ((double)this.velocity.Y > 7.0)
                            this.velocity.Y = 7f;
                    }
                }
                else if (this.type == 226)
                {
                    if (this.direction == -1 && (double)this.velocity.X > -4.0)
                    {
                        this.velocity.X -= 0.2f;
                        if ((double)this.velocity.X > 4.0)
                            this.velocity.X -= 0.1f;
                        else if ((double)this.velocity.X > 0.0)
                            this.velocity.X += 0.05f;
                        if ((double)this.velocity.X < -4.0)
                            this.velocity.X = -4f;
                    }
                    else if (this.direction == 1 && (double)this.velocity.X < 4.0)
                    {
                        this.velocity.X += 0.2f;
                        if ((double)this.velocity.X < -4.0)
                            this.velocity.X += 0.1f;
                        else if ((double)this.velocity.X < 0.0)
                            this.velocity.X -= 0.05f;
                        if ((double)this.velocity.X > 4.0)
                            this.velocity.X = 4f;
                    }
                    if (this.directionY == -1 && (double)this.velocity.Y > -2.5)
                    {
                        this.velocity.Y -= 0.1f;
                        if ((double)this.velocity.Y > 2.5)
                            this.velocity.Y -= 0.05f;
                        else if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y += 0.03f;
                        if ((double)this.velocity.Y < -2.5)
                            this.velocity.Y = -2.5f;
                    }
                    else if (this.directionY == 1 && (double)this.velocity.Y < 2.5)
                    {
                        this.velocity.Y += 0.1f;
                        if ((double)this.velocity.Y < -2.5)
                            this.velocity.Y += 0.05f;
                        else if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y -= 0.03f;
                        if ((double)this.velocity.Y > 2.5)
                            this.velocity.Y = 2.5f;
                    }
                }
                else
                {
                    if (this.direction == -1 && (double)this.velocity.X > -4.0)
                    {
                        this.velocity.X -= 0.1f;
                        if ((double)this.velocity.X > 4.0)
                            this.velocity.X -= 0.1f;
                        else if ((double)this.velocity.X > 0.0)
                            this.velocity.X += 0.05f;
                        if ((double)this.velocity.X < -4.0)
                            this.velocity.X = -4f;
                    }
                    else if (this.direction == 1 && (double)this.velocity.X < 4.0)
                    {
                        this.velocity.X += 0.1f;
                        if ((double)this.velocity.X < -4.0)
                            this.velocity.X += 0.1f;
                        else if ((double)this.velocity.X < 0.0)
                            this.velocity.X -= 0.05f;
                        if ((double)this.velocity.X > 4.0)
                            this.velocity.X = 4f;
                    }
                    if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
                    {
                        this.velocity.Y -= 0.04f;
                        if ((double)this.velocity.Y > 1.5)
                            this.velocity.Y -= 0.05f;
                        else if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y += 0.03f;
                        if ((double)this.velocity.Y < -1.5)
                            this.velocity.Y = -1.5f;
                    }
                    else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
                    {
                        this.velocity.Y += 0.04f;
                        if ((double)this.velocity.Y < -1.5)
                            this.velocity.Y += 0.05f;
                        else if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y -= 0.03f;
                        if ((double)this.velocity.Y > 1.5)
                            this.velocity.Y = 1.5f;
                    }
                }
                if (this.type == 49 || this.type == 51 || (this.type == 60 || this.type == 62) || (this.type == 66 || this.type == 93 || (this.type == 137 || this.type == 150)) || (this.type == 151 || this.type == 152))
                {
                    if (this.wet)
                    {
                        if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y *= 0.95f;
                        this.velocity.Y -= 0.5f;
                        if ((double)this.velocity.Y < -4.0)
                            this.velocity.Y = -4f;
                        this.TargetClosest(true);
                    }
                    if (this.type == 60)
                    {
                        if (this.direction == -1 && (double)this.velocity.X > -4.0)
                        {
                            this.velocity.X -= 0.1f;
                            if ((double)this.velocity.X > 4.0)
                                this.velocity.X -= 0.07f;
                            else if ((double)this.velocity.X > 0.0)
                                this.velocity.X += 0.03f;
                            if ((double)this.velocity.X < -4.0)
                                this.velocity.X = -4f;
                        }
                        else if (this.direction == 1 && (double)this.velocity.X < 4.0)
                        {
                            this.velocity.X += 0.1f;
                            if ((double)this.velocity.X < -4.0)
                                this.velocity.X += 0.07f;
                            else if ((double)this.velocity.X < 0.0)
                                this.velocity.X -= 0.03f;
                            if ((double)this.velocity.X > 4.0)
                                this.velocity.X = 4f;
                        }
                        if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
                        {
                            this.velocity.Y -= 0.04f;
                            if ((double)this.velocity.Y > 1.5)
                                this.velocity.Y -= 0.03f;
                            else if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y += 0.02f;
                            if ((double)this.velocity.Y < -1.5)
                                this.velocity.Y = -1.5f;
                        }
                        else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
                        {
                            this.velocity.Y += 0.04f;
                            if ((double)this.velocity.Y < -1.5)
                                this.velocity.Y += 0.03f;
                            else if ((double)this.velocity.Y < 0.0)
                                this.velocity.Y -= 0.02f;
                            if ((double)this.velocity.Y > 1.5)
                                this.velocity.Y = 1.5f;
                        }
                    }
                    else
                    {
                        if (this.direction == -1 && (double)this.velocity.X > -4.0)
                        {
                            this.velocity.X -= 0.1f;
                            if ((double)this.velocity.X > 4.0)
                                this.velocity.X -= 0.1f;
                            else if ((double)this.velocity.X > 0.0)
                                this.velocity.X += 0.05f;
                            if ((double)this.velocity.X < -4.0)
                                this.velocity.X = -4f;
                        }
                        else if (this.direction == 1 && (double)this.velocity.X < 4.0)
                        {
                            this.velocity.X += 0.1f;
                            if ((double)this.velocity.X < -4.0)
                                this.velocity.X += 0.1f;
                            else if ((double)this.velocity.X < 0.0)
                                this.velocity.X -= 0.05f;
                            if ((double)this.velocity.X > 4.0)
                                this.velocity.X = 4f;
                        }
                        if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
                        {
                            this.velocity.Y -= 0.04f;
                            if ((double)this.velocity.Y > 1.5)
                                this.velocity.Y -= 0.05f;
                            else if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y += 0.03f;
                            if ((double)this.velocity.Y < -1.5)
                                this.velocity.Y = -1.5f;
                        }
                        else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
                        {
                            this.velocity.Y += 0.04f;
                            if ((double)this.velocity.Y < -1.5)
                                this.velocity.Y += 0.05f;
                            else if ((double)this.velocity.Y < 0.0)
                                this.velocity.Y -= 0.03f;
                            if ((double)this.velocity.Y > 1.5)
                                this.velocity.Y = 1.5f;
                        }
                    }
                }
                if (this.type == 158 && Main.netMode != 1)
                {
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                    float num2 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y;
                    if (Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2) < 200.0 && (double)this.position.Y + (double)this.height < (double)Main.player[this.target].position.Y + (double)Main.player[this.target].height && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                        this.Transform(159);
                }
                ++this.ai[1];
                if (this.type == 158)
                    ++this.ai[1];
                if ((double)this.ai[1] > 200.0)
                {
                    if (!Main.player[this.target].wet && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                        this.ai[1] = 0.0f;
                    float num1 = 0.2f;
                    float num2 = 0.1f;
                    float num3 = 4f;
                    float num4 = 1.5f;
                    if (this.type == 48 || this.type == 62 || this.type == 66)
                    {
                        num1 = 0.12f;
                        num2 = 0.07f;
                        num3 = 3f;
                        num4 = 1.25f;
                    }
                    if ((double)this.ai[1] > 1000.0)
                        this.ai[1] = 0.0f;
                    ++this.ai[2];
                    if ((double)this.ai[2] > 0.0)
                    {
                        if ((double)this.velocity.Y < (double)num4)
                            this.velocity.Y += num2;
                    }
                    else if ((double)this.velocity.Y > -(double)num4)
                        this.velocity.Y -= num2;
                    if ((double)this.ai[2] < -150.0 || (double)this.ai[2] > 150.0)
                    {
                        if ((double)this.velocity.X < (double)num3)
                            this.velocity.X += num1;
                    }
                    else if ((double)this.velocity.X > -(double)num3)
                        this.velocity.X -= num1;
                    if ((double)this.ai[2] > 300.0)
                        this.ai[2] = -300f;
                }
                if (Main.netMode == 1)
                    return;
                if (this.type == 48)
                {
                    ++this.ai[0];
                    if ((double)this.ai[0] == 30.0 || (double)this.ai[0] == 60.0 || (double)this.ai[0] == 90.0)
                    {
                        if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                        {
                            float num1 = 6f;
                            Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                            float num2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X + (float)Main.rand.Next(-100, 101);
                            float num3 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y + (float)Main.rand.Next(-100, 101);
                            float num4 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                            float num5 = num1 / num4;
                            float SpeedX = num2 * num5;
                            float SpeedY = num3 * num5;
                            int Damage = 15;
                            int Type = 38;
                            int index = Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            Main.projectile[index].timeLeft = 300;
                        }
                    }
                    else if ((double)this.ai[0] >= (double)(400 + Main.rand.Next(400)))
                        this.ai[0] = 0.0f;
                }
                if (this.type == 62 || this.type == 66)
                {
                    ++this.ai[0];
                    if ((double)this.ai[0] == 20.0 || (double)this.ai[0] == 40.0 || ((double)this.ai[0] == 60.0 || (double)this.ai[0] == 80.0))
                    {
                        if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                        {
                            float num1 = 0.2f;
                            Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                            float num2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X + (float)Main.rand.Next(-100, 101);
                            float num3 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y + (float)Main.rand.Next(-100, 101);
                            float num4 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                            float num5 = num1 / num4;
                            float SpeedX = num2 * num5;
                            float SpeedY = num3 * num5;
                            int Damage = 21;
                            int Type = 44;
                            int index = Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            Main.projectile[index].timeLeft = 300;
                        }
                    }
                    else if ((double)this.ai[0] >= (double)(300 + Main.rand.Next(300)))
                        this.ai[0] = 0.0f;
                }
                if (this.type != 156)
                    return;
                ++this.ai[0];
                if ((double)this.ai[0] == 20.0 || (double)this.ai[0] == 40.0 || ((double)this.ai[0] == 60.0 || (double)this.ai[0] == 80.0) || (double)this.ai[0] == 100.0)
                {
                    if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                        return;
                    float num1 = 0.2f;
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X + (float)Main.rand.Next(-50, 51);
                    float num3 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y + (float)Main.rand.Next(-50, 51);
                    float num4 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                    float num5 = num1 / num4;
                    float SpeedX = num2 * num5;
                    float SpeedY = num3 * num5;
                    int Damage = 80;
                    int Type = 115;
                    vector2 += this.velocity * 5f;
                    int index = Projectile.NewProjectile(vector2.X + SpeedX * 100f, vector2.Y + SpeedY * 100f, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    Main.projectile[index].timeLeft = 300;
                }
                else
                {
                    if ((double)this.ai[0] < (double)(250 + Main.rand.Next(250)))
                        return;
                    this.ai[0] = 0.0f;
                }
            }
            else if (this.aiStyle == 15)
            {
                float num1 = 1f;
                bool flag1 = false;
                bool flag2 = false;
                this.aiAction = 0;
                if ((double)this.ai[3] == 0.0 && this.life > 0)
                    this.ai[3] = (float)this.lifeMax;
                if ((double)this.localAI[3] == 0.0 && Main.netMode != 1)
                {
                    this.ai[0] = -100f;
                    this.localAI[3] = 1f;
                    this.TargetClosest(true);
                    this.netUpdate = true;
                }
                if (Main.player[this.target].dead)
                {
                    this.TargetClosest(true);
                    if (Main.player[this.target].dead)
                    {
                        this.timeLeft = 0;
                        if ((double)Main.player[this.target].Center.X < (double)this.Center.X)
                            this.direction = 1;
                        else
                            this.direction = -1;
                    }
                }
                if (!Main.player[this.target].dead && (double)this.ai[2] >= 300.0 && ((double)this.ai[1] < 5.0 && (double)this.velocity.Y == 0.0))
                {
                    this.ai[2] = 0.0f;
                    this.ai[0] = 0.0f;
                    this.ai[1] = 5f;
                    if (Main.netMode != 1)
                    {
                        this.TargetClosest(false);
                        Point point1 = Utils.ToTileCoordinates(this.Center);
                        Point point2 = Utils.ToTileCoordinates(Main.player[this.target].Center);
                        Vector2 vector2 = Main.player[this.target].Center - this.Center;
                        int num2 = 10;
                        int num3 = 0;
                        int num4 = 7;
                        int num5 = 0;
                        bool flag3 = false;
                        if ((double)vector2.Length() > 2000.0)
                        {
                            flag3 = true;
                            num5 = 100;
                        }
                        while (!flag3 && num5 < 100)
                        {
                            ++num5;
                            int index1 = Main.rand.Next(point2.X - num2, point2.X + num2 + 1);
                            int index2 = Main.rand.Next(point2.Y - num2, point2.Y + 1);
                            if ((index2 < point2.Y - num4 || index2 > point2.Y + num4 || (index1 < point2.X - num4 || index1 > point2.X + num4)) && (index2 < point1.Y - num3 || index2 > point1.Y + num3 || (index1 < point1.X - num3 || index1 > point1.X + num3)) && !Main.tile[index1, index2].nactive())
                            {
                                int index3 = index2;
                                int num6 = 0;
                                if (Main.tile[index1, index3].nactive() && Main.tileSolid[(int)Main.tile[index1, index3].type] && !Main.tileSolidTop[(int)Main.tile[index1, index3].type])
                                {
                                    num6 = 1;
                                }
                                else
                                {
                                    for (; num6 < 150 && index3 + num6 < Main.maxTilesY; ++num6)
                                    {
                                        int index4 = index3 + num6;
                                        if (Main.tile[index1, index4].nactive() && Main.tileSolid[(int)Main.tile[index1, index4].type] && !Main.tileSolidTop[(int)Main.tile[index1, index4].type])
                                        {
                                            --num6;
                                            break;
                                        }
                                    }
                                }
                                int index5 = index2 + num6;
                                bool flag4 = true;
                                if (flag4 && Main.tile[index1, index5].lava())
                                    flag4 = false;
                                if (flag4 && !Collision.CanHitLine(this.Center, 0, 0, Main.player[this.target].Center, 0, 0))
                                    flag4 = false;
                                if (flag4)
                                {
                                    this.localAI[1] = (float)(index1 * 16 + 8);
                                    this.localAI[2] = (float)(index5 * 16 + 16);
                                    break;
                                }
                            }
                        }
                        if (num5 >= 100)
                        {
                            Vector2 bottom = Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].Bottom;
                            this.localAI[1] = bottom.X;
                            this.localAI[2] = bottom.Y;
                        }
                    }
                }
                if (!Collision.CanHitLine(this.Center, 0, 0, Main.player[this.target].Center, 0, 0))
                    ++this.ai[2];
                if ((double)Math.Abs(this.Top.Y - Main.player[this.target].Bottom.Y) > 320.0)
                    ++this.ai[2];
                if ((double)this.ai[1] == 5.0)
                {
                    flag1 = true;
                    this.aiAction = 1;
                    ++this.ai[0];
                    num1 = (float)(0.5 + (double)MathHelper.Clamp((float)((60.0 - (double)this.ai[0]) / 60.0), 0.0f, 1f) * 0.5);
                    if ((double)this.ai[0] >= 60.0)
                        flag2 = true;
                    if ((double)this.ai[0] == 60.0)
                        Gore.NewGore(this.Center + new Vector2(-40f, (float)(-this.height / 2)), this.velocity, 734, 1f);
                    if ((double)this.ai[0] >= 60.0 && Main.netMode != 1)
                    {
                        this.Bottom = new Vector2(this.localAI[1], this.localAI[2]);
                        this.ai[1] = 6f;
                        this.ai[0] = 0.0f;
                        this.netUpdate = true;
                    }
                    if (Main.netMode == 1 && (double)this.ai[0] >= 120.0)
                    {
                        this.ai[1] = 6f;
                        this.ai[0] = 0.0f;
                    }
                    if (!flag2)
                    {
                        for (int index1 = 0; index1 < 10; ++index1)
                        {
                            int index2 = Dust.NewDust(this.position + Vector2.UnitX * -20f, this.width + 40, this.height, 4, this.velocity.X, this.velocity.Y, 150, new Color(78, 136, (int)byte.MaxValue, 80), 2f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity *= 0.5f;
                        }
                    }
                }
                else if ((double)this.ai[1] == 6.0)
                {
                    flag1 = true;
                    this.aiAction = 0;
                    ++this.ai[0];
                    num1 = (float)(0.5 + (double)MathHelper.Clamp(this.ai[0] / 30f, 0.0f, 1f) * 0.5);
                    if ((double)this.ai[0] >= 30.0 && Main.netMode != 1)
                    {
                        this.ai[1] = 0.0f;
                        this.ai[0] = 0.0f;
                        this.netUpdate = true;
                        this.TargetClosest(true);
                    }
                    if (Main.netMode == 1 && (double)this.ai[0] >= 60.0)
                    {
                        this.ai[1] = 0.0f;
                        this.ai[0] = 0.0f;
                        this.TargetClosest(true);
                    }
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(this.position + Vector2.UnitX * -20f, this.width + 40, this.height, 4, this.velocity.X, this.velocity.Y, 150, new Color(78, 136, (int)byte.MaxValue, 80), 2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 2f;
                    }
                }
                this.dontTakeDamage = this.hide = flag2;
                if ((double)this.velocity.Y == 0.0)
                {
                    this.velocity.X *= 0.8f;
                    if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                        this.velocity.X = 0.0f;
                    if (!flag1)
                    {
                        this.ai[0] += 2f;
                        if ((double)this.life < (double)this.lifeMax * 0.8)
                            ++this.ai[0];
                        if ((double)this.life < (double)this.lifeMax * 0.6)
                            ++this.ai[0];
                        if ((double)this.life < (double)this.lifeMax * 0.4)
                            this.ai[0] += 2f;
                        if ((double)this.life < (double)this.lifeMax * 0.2)
                            this.ai[0] += 3f;
                        if ((double)this.life < (double)this.lifeMax * 0.1)
                            this.ai[0] += 4f;
                        if ((double)this.ai[0] >= 0.0)
                        {
                            this.netUpdate = true;
                            this.TargetClosest(true);
                            if ((double)this.ai[1] == 3.0)
                            {
                                this.velocity.Y = -13f;
                                this.velocity.X += 3.5f * (float)this.direction;
                                this.ai[0] = -200f;
                                this.ai[1] = 0.0f;
                            }
                            else if ((double)this.ai[1] == 2.0)
                            {
                                this.velocity.Y = -6f;
                                this.velocity.X += 4.5f * (float)this.direction;
                                this.ai[0] = -120f;
                                ++this.ai[1];
                            }
                            else
                            {
                                this.velocity.Y = -8f;
                                this.velocity.X += 4f * (float)this.direction;
                                this.ai[0] = -120f;
                                ++this.ai[1];
                            }
                        }
                        else if ((double)this.ai[0] >= -30.0)
                            this.aiAction = 1;
                    }
                }
                else if (this.target < (int)byte.MaxValue && (this.direction == 1 && (double)this.velocity.X < 3.0 || this.direction == -1 && (double)this.velocity.X > -3.0))
                {
                    if (this.direction == -1 && (double)this.velocity.X < 0.1 || this.direction == 1 && (double)this.velocity.X > -0.1)
                        this.velocity.X += 0.2f * (float)this.direction;
                    else
                        this.velocity.X *= 0.93f;
                }
                int index6 = Dust.NewDust(this.position, this.width, this.height, 4, this.velocity.X, this.velocity.Y, (int)byte.MaxValue, new Color(0, 80, (int)byte.MaxValue, 80), this.scale * 1.2f);
                Main.dust[index6].noGravity = true;
                Main.dust[index6].velocity *= 0.5f;
                if (this.life <= 0)
                    return;
                float num7 = (float)((double)((float)this.life / (float)this.lifeMax) * 0.5 + 0.75) * num1;
                if ((double)num7 != (double)this.scale)
                {
                    this.position.X += (float)(this.width / 2);
                    this.position.Y += (float)this.height;
                    this.scale = num7;
                    this.width = (int)(98.0 * (double)this.scale);
                    this.height = (int)(92.0 * (double)this.scale);
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)this.height;
                }
                if (Main.netMode == 1 || (double)(this.life + (int)((double)this.lifeMax * 0.05)) >= (double)this.ai[3])
                    return;
                this.ai[3] = (float)this.life;
                int num8 = Main.rand.Next(1, 4);
                for (int index1 = 0; index1 < num8; ++index1)
                {
                    int X = (int)((double)this.position.X + (double)Main.rand.Next(this.width - 32));
                    int Y = (int)((double)this.position.Y + (double)Main.rand.Next(this.height - 32));
                    int Type = 1;
                    if (Main.expertMode && Main.rand.Next(4) == 0)
                        Type = 535;
                    int number = NPC.NewNPC(X, Y, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    Main.npc[number].SetDefaults(Type, -1f);
                    Main.npc[number].velocity.X = (float)Main.rand.Next(-15, 16) * 0.1f;
                    Main.npc[number].velocity.Y = (float)Main.rand.Next(-30, 1) * 0.1f;
                    Main.npc[number].ai[0] = (float)(-1000 * Main.rand.Next(3));
                    Main.npc[number].ai[1] = 0.0f;
                    if (Main.netMode == 2 && number < 200)
                        NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                }
            }
            else if (this.aiStyle == 16)
            {
                if (this.direction == 0)
                    this.TargetClosest(true);
                if (this.wet)
                {
                    bool flag = false;
                    if (this.type != 55)
                    {
                        this.TargetClosest(false);
                        if (Main.player[this.target].wet && !Main.player[this.target].dead)
                            flag = true;
                    }
                    if (!flag)
                    {
                        if (this.collideX)
                        {
                            this.velocity.X *= -1f;
                            this.direction *= -1;
                            this.netUpdate = true;
                        }
                        if (this.collideY)
                        {
                            this.netUpdate = true;
                            if ((double)this.velocity.Y > 0.0)
                            {
                                this.velocity.Y = Math.Abs(this.velocity.Y) * -1f;
                                this.directionY = -1;
                                this.ai[0] = -1f;
                            }
                            else if ((double)this.velocity.Y < 0.0)
                            {
                                this.velocity.Y = Math.Abs(this.velocity.Y);
                                this.directionY = 1;
                                this.ai[0] = 1f;
                            }
                        }
                    }
                    if (this.type == 102)
                        Lighting.AddLight((int)((double)this.position.X + (double)(this.width / 2) + (double)(this.direction * (this.width + 8))) / 16, (int)((double)this.position.Y + 2.0) / 16, 0.07f, 0.04f, 0.025f);
                    if (flag)
                    {
                        this.TargetClosest(true);
                        if (this.type == 157)
                        {
                            if ((double)this.velocity.X > 0.0 && this.direction < 0)
                                this.velocity.X *= 0.95f;
                            if ((double)this.velocity.X < 0.0 && this.direction > 0)
                                this.velocity.X *= 0.95f;
                            this.velocity.X += (float)this.direction * 0.25f;
                            this.velocity.Y += (float)this.directionY * 0.2f;
                            if ((double)this.velocity.X > 8.0)
                                this.velocity.X = 7f;
                            if ((double)this.velocity.X < -8.0)
                                this.velocity.X = -7f;
                            if ((double)this.velocity.Y > 5.0)
                                this.velocity.Y = 4f;
                            if ((double)this.velocity.Y < -5.0)
                                this.velocity.Y = -4f;
                        }
                        else if (this.type == 65 || this.type == 102)
                        {
                            this.velocity.X += (float)this.direction * 0.15f;
                            this.velocity.Y += (float)this.directionY * 0.15f;
                            if ((double)this.velocity.X > 5.0)
                                this.velocity.X = 5f;
                            if ((double)this.velocity.X < -5.0)
                                this.velocity.X = -5f;
                            if ((double)this.velocity.Y > 3.0)
                                this.velocity.Y = 3f;
                            if ((double)this.velocity.Y < -3.0)
                                this.velocity.Y = -3f;
                        }
                        else
                        {
                            this.velocity.X += (float)this.direction * 0.1f;
                            this.velocity.Y += (float)this.directionY * 0.1f;
                            if ((double)this.velocity.X > 3.0)
                                this.velocity.X = 3f;
                            if ((double)this.velocity.X < -3.0)
                                this.velocity.X = -3f;
                            if ((double)this.velocity.Y > 2.0)
                                this.velocity.Y = 2f;
                            if ((double)this.velocity.Y < -2.0)
                                this.velocity.Y = -2f;
                        }
                    }
                    else
                    {
                        if (this.type == 157)
                        {
                            this.directionY = (double)Main.player[this.target].position.Y <= (double)this.position.Y ? -1 : 1;
                            this.velocity.X += (float)this.direction * 0.2f;
                            if ((double)this.velocity.X < -2.0 || (double)this.velocity.X > 2.0)
                                this.velocity.X *= 0.95f;
                            if ((double)this.ai[0] == -1.0)
                            {
                                float num = -0.6f;
                                if (this.directionY < 0)
                                    num = -1f;
                                if (this.directionY > 0)
                                    num = -0.2f;
                                this.velocity.Y -= 0.02f;
                                if ((double)this.velocity.Y < (double)num)
                                    this.ai[0] = 1f;
                            }
                            else
                            {
                                float num = 0.6f;
                                if (this.directionY < 0)
                                    num = 0.2f;
                                if (this.directionY > 0)
                                    num = 1f;
                                this.velocity.Y += 0.02f;
                                if ((double)this.velocity.Y > (double)num)
                                    this.ai[0] = -1f;
                            }
                        }
                        else
                        {
                            this.velocity.X += (float)this.direction * 0.1f;
                            if ((double)this.velocity.X < -1.0 || (double)this.velocity.X > 1.0)
                                this.velocity.X *= 0.95f;
                            if ((double)this.ai[0] == -1.0)
                            {
                                this.velocity.Y -= 0.01f;
                                if ((double)this.velocity.Y < -0.3)
                                    this.ai[0] = 1f;
                            }
                            else
                            {
                                this.velocity.Y += 0.01f;
                                if ((double)this.velocity.Y > 0.3)
                                    this.ai[0] = -1f;
                            }
                        }
                        int index = (int)((double)this.position.X + (double)(this.width / 2)) / 16;
                        int num1 = (int)((double)this.position.Y + (double)(this.height / 2)) / 16;
                        if (Main.tile[index, num1 - 1] == null)
                            Main.tile[index, num1 - 1] = new Tile();
                        if (Main.tile[index, num1 + 1] == null)
                            Main.tile[index, num1 + 1] = new Tile();
                        if (Main.tile[index, num1 + 2] == null)
                            Main.tile[index, num1 + 2] = new Tile();
                        if ((int)Main.tile[index, num1 - 1].liquid > 128)
                        {
                            if (Main.tile[index, num1 + 1].active())
                                this.ai[0] = -1f;
                            else if (Main.tile[index, num1 + 2].active())
                                this.ai[0] = -1f;
                        }
                        if (this.type != 157 && ((double)this.velocity.Y > 0.4 || (double)this.velocity.Y < -0.4))
                            this.velocity.Y *= 0.95f;
                    }
                }
                else
                {
                    if ((double)this.velocity.Y == 0.0)
                    {
                        if (this.type == 65)
                        {
                            this.velocity.X *= 0.94f;
                            if ((double)this.velocity.X > -0.2 && (double)this.velocity.X < 0.2)
                                this.velocity.X = 0.0f;
                        }
                        else if (Main.netMode != 1)
                        {
                            this.velocity.Y = (float)Main.rand.Next(-50, -20) * 0.1f;
                            this.velocity.X = (float)Main.rand.Next(-20, 20) * 0.1f;
                            this.netUpdate = true;
                        }
                    }
                    this.velocity.Y += 0.3f;
                    if ((double)this.velocity.Y > 10.0)
                        this.velocity.Y = 10f;
                    this.ai[0] = 1f;
                }
                this.rotation = (float)((double)this.velocity.Y * (double)this.direction * 0.100000001490116);
                if ((double)this.rotation < -0.2)
                    this.rotation = -0.2f;
                if ((double)this.rotation <= 0.2)
                    return;
                this.rotation = 0.2f;
            }
            else if (this.aiStyle == 17)
            {
                this.noGravity = true;
                if ((double)this.ai[0] == 0.0)
                {
                    this.noGravity = false;
                    this.TargetClosest(true);
                    if (Main.netMode != 1)
                    {
                        if ((double)this.velocity.X != 0.0 || (double)this.velocity.Y < 0.0 || (double)this.velocity.Y > 0.3)
                        {
                            this.ai[0] = 1f;
                            this.netUpdate = true;
                        }
                        else if (new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200).Intersects(new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height)) || this.life < this.lifeMax)
                        {
                            this.ai[0] = 1f;
                            this.velocity.Y -= 6f;
                            this.netUpdate = true;
                        }
                    }
                }
                else if (!Main.player[this.target].dead)
                {
                    if (this.collideX)
                    {
                        this.velocity.X = this.oldVelocity.X * -0.5f;
                        if (this.direction == -1 && (double)this.velocity.X > 0.0 && (double)this.velocity.X < 2.0)
                            this.velocity.X = 2f;
                        if (this.direction == 1 && (double)this.velocity.X < 0.0 && (double)this.velocity.X > -2.0)
                            this.velocity.X = -2f;
                    }
                    if (this.collideY)
                    {
                        this.velocity.Y = this.oldVelocity.Y * -0.5f;
                        if ((double)this.velocity.Y > 0.0 && (double)this.velocity.Y < 1.0)
                            this.velocity.Y = 1f;
                        if ((double)this.velocity.Y < 0.0 && (double)this.velocity.Y > -1.0)
                            this.velocity.Y = -1f;
                    }
                    this.TargetClosest(true);
                    if (this.direction == -1 && (double)this.velocity.X > -3.0)
                    {
                        this.velocity.X -= 0.1f;
                        if ((double)this.velocity.X > 3.0)
                            this.velocity.X -= 0.1f;
                        else if ((double)this.velocity.X > 0.0)
                            this.velocity.X -= 0.05f;
                        if ((double)this.velocity.X < -3.0)
                            this.velocity.X = -3f;
                    }
                    else if (this.direction == 1 && (double)this.velocity.X < 3.0)
                    {
                        this.velocity.X += 0.1f;
                        if ((double)this.velocity.X < -3.0)
                            this.velocity.X += 0.1f;
                        else if ((double)this.velocity.X < 0.0)
                            this.velocity.X += 0.05f;
                        if ((double)this.velocity.X > 3.0)
                            this.velocity.X = 3f;
                    }
                    float num1 = Math.Abs((float)((double)this.position.X + (double)(this.width / 2) - ((double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2))));
                    float num2 = Main.player[this.target].position.Y - (float)(this.height / 2);
                    if ((double)num1 > 50.0)
                        num2 -= 100f;
                    if ((double)this.position.Y < (double)num2)
                    {
                        this.velocity.Y += 0.05f;
                        if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y += 0.01f;
                    }
                    else
                    {
                        this.velocity.Y -= 0.05f;
                        if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y -= 0.01f;
                    }
                    if ((double)this.velocity.Y < -3.0)
                        this.velocity.Y = -3f;
                    if ((double)this.velocity.Y > 3.0)
                        this.velocity.Y = 3f;
                }
                if (!this.wet)
                    return;
                if ((double)this.velocity.Y > 0.0)
                    this.velocity.Y *= 0.95f;
                this.velocity.Y -= 0.5f;
                if ((double)this.velocity.Y < -4.0)
                    this.velocity.Y = -4f;
                this.TargetClosest(true);
            }
            else if (this.aiStyle == 18)
            {
                bool flag1 = false;
                if (this.wet && (double)this.ai[1] == 1.0)
                    flag1 = true;
                else
                    this.dontTakeDamage = false;
                if (Main.expertMode && (this.type == 63 || this.type == 64 || (this.type == 103 || this.type == 242)))
                {
                    if (this.wet)
                    {
                        if (this.target >= 0 && Main.player[this.target].wet && !Main.player[this.target].dead && (double)(Main.player[this.target].Center - this.Center).Length() < 150.0)
                        {
                            if ((double)this.ai[1] == 0.0)
                                this.ai[2] += 2f;
                            else
                                this.ai[2] -= 0.25f;
                        }
                        if (flag1)
                        {
                            this.dontTakeDamage = true;
                            ++this.ai[2];
                            if ((double)this.ai[2] >= 120.0)
                                this.ai[1] = 0.0f;
                        }
                        else
                        {
                            ++this.ai[2];
                            if ((double)this.ai[2] >= 420.0)
                            {
                                this.ai[1] = 1f;
                                this.ai[2] = 0.0f;
                            }
                        }
                    }
                    else
                    {
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                    }
                }
                float num1 = 1f;
                if (flag1)
                    num1 += 0.5f;
                if (this.type == 63)
                    Lighting.AddLight((int)((double)this.position.X + (double)(this.height / 2)) / 16, (int)((double)this.position.Y + (double)(this.height / 2)) / 16, 0.05f * num1, 0.15f * num1, 0.4f * num1);
                else if (this.type == 103)
                    Lighting.AddLight((int)((double)this.position.X + (double)(this.height / 2)) / 16, (int)((double)this.position.Y + (double)(this.height / 2)) / 16, 0.05f * num1, 0.45f * num1, 0.1f * num1);
                else if (this.type != 221 && this.type != 242)
                    Lighting.AddLight((int)((double)this.position.X + (double)(this.height / 2)) / 16, (int)((double)this.position.Y + (double)(this.height / 2)) / 16, 0.35f * num1, 0.05f * num1, 0.2f * num1);
                if (this.direction == 0)
                    this.TargetClosest(true);
                if (flag1)
                    return;
                if (this.wet)
                {
                    if (this.collideX)
                    {
                        this.velocity.X *= -1f;
                        this.direction *= -1;
                    }
                    if (this.collideY)
                    {
                        if ((double)this.velocity.Y > 0.0)
                        {
                            this.velocity.Y = Math.Abs(this.velocity.Y) * -1f;
                            this.directionY = -1;
                            this.ai[0] = -1f;
                        }
                        else if ((double)this.velocity.Y < 0.0)
                        {
                            this.velocity.Y = Math.Abs(this.velocity.Y);
                            this.directionY = 1;
                            this.ai[0] = 1f;
                        }
                    }
                    bool flag2 = false;
                    if (!this.friendly)
                    {
                        this.TargetClosest(false);
                        if (Main.player[this.target].wet && !Main.player[this.target].dead)
                            flag2 = true;
                    }
                    if (flag2)
                    {
                        this.localAI[2] = 1f;
                        this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
                        NPC npc1 = this;
                        Vector2 vector2_1 = npc1.velocity * 0.98f;
                        npc1.velocity = vector2_1;
                        float num2 = 0.2f;
                        if (this.type == 103)
                        {
                            NPC npc2 = this;
                            Vector2 vector2_2 = npc2.velocity * 0.98f;
                            npc2.velocity = vector2_2;
                            num2 = 0.6f;
                        }
                        if (this.type == 221)
                        {
                            NPC npc2 = this;
                            Vector2 vector2_2 = npc2.velocity * 0.99f;
                            npc2.velocity = vector2_2;
                            num2 = 1f;
                        }
                        if (this.type == 242)
                        {
                            NPC npc2 = this;
                            Vector2 vector2_2 = npc2.velocity * 0.995f;
                            npc2.velocity = vector2_2;
                            num2 = 3f;
                        }
                        if ((double)this.velocity.X <= -(double)num2 || (double)this.velocity.X >= (double)num2 || ((double)this.velocity.Y <= -(double)num2 || (double)this.velocity.Y >= (double)num2))
                            return;
                        if (this.type == 221)
                            this.localAI[0] = 1f;
                        this.TargetClosest(true);
                        float num3 = 7f;
                        if (this.type == 103)
                            num3 = 9f;
                        Vector2 vector2_3 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num4 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2_3.X;
                        float num5 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2_3.Y;
                        float num6 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                        float num7 = num3 / num6;
                        float num8 = num4 * num7;
                        float num9 = num5 * num7;
                        this.velocity.X = num8;
                        this.velocity.Y = num9;
                    }
                    else
                    {
                        this.localAI[2] = 0.0f;
                        this.velocity.X += (float)this.direction * 0.02f;
                        this.rotation = this.velocity.X * 0.4f;
                        if ((double)this.velocity.X < -1.0 || (double)this.velocity.X > 1.0)
                            this.velocity.X *= 0.95f;
                        if ((double)this.ai[0] == -1.0)
                        {
                            this.velocity.Y -= 0.01f;
                            if ((double)this.velocity.Y < -1.0)
                                this.ai[0] = 1f;
                        }
                        else
                        {
                            this.velocity.Y += 0.01f;
                            if ((double)this.velocity.Y > 1.0)
                                this.ai[0] = -1f;
                        }
                        int index = (int)((double)this.position.X + (double)(this.width / 2)) / 16;
                        int num2 = (int)((double)this.position.Y + (double)(this.height / 2)) / 16;
                        if (Main.tile[index, num2 - 1] == null)
                            Main.tile[index, num2 - 1] = new Tile();
                        if (Main.tile[index, num2 + 1] == null)
                            Main.tile[index, num2 + 1] = new Tile();
                        if (Main.tile[index, num2 + 2] == null)
                            Main.tile[index, num2 + 2] = new Tile();
                        if ((int)Main.tile[index, num2 - 1].liquid > 128)
                        {
                            if (Main.tile[index, num2 + 1].active())
                                this.ai[0] = -1f;
                            else if (Main.tile[index, num2 + 2].active())
                                this.ai[0] = -1f;
                        }
                        else
                            this.ai[0] = 1f;
                        if ((double)this.velocity.Y <= 1.2 && (double)this.velocity.Y >= -1.2)
                            return;
                        this.velocity.Y *= 0.99f;
                    }
                }
                else
                {
                    this.rotation += this.velocity.X * 0.1f;
                    if ((double)this.velocity.Y == 0.0)
                    {
                        this.velocity.X *= 0.98f;
                        if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
                            this.velocity.X = 0.0f;
                    }
                    this.velocity.Y += 0.2f;
                    if ((double)this.velocity.Y > 10.0)
                        this.velocity.Y = 10f;
                    this.ai[0] = 1f;
                }
            }
            else if (this.aiStyle == 19)
            {
                this.TargetClosest(true);
                float num1 = 12f;
                Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                float num2 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                float num3 = Main.player[this.target].position.Y - vector2.Y;
                float num4 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                float num5 = num1 / num4;
                float SpeedX = num2 * num5;
                float SpeedY = num3 * num5;
                bool flag1 = false;
                if (this.directionY < 0)
                {
                    this.rotation = (float)(Math.Atan2((double)SpeedY, (double)SpeedX) + 1.57);
                    flag1 = (double)this.rotation >= -1.2 && (double)this.rotation <= 1.2;
                    if ((double)this.rotation < -0.8)
                        this.rotation = -0.8f;
                    else if ((double)this.rotation > 0.8)
                        this.rotation = 0.8f;
                    if ((double)this.velocity.X != 0.0)
                    {
                        this.velocity.X *= 0.9f;
                        if ((double)this.velocity.X > -0.1 || (double)this.velocity.X < 0.1)
                        {
                            this.netUpdate = true;
                            this.velocity.X = 0.0f;
                        }
                    }
                }
                if ((double)this.ai[0] > 0.0)
                {
                    if ((double)this.ai[0] == 200.0)
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 5);
                    --this.ai[0];
                }
                if (Main.netMode != 1)
                {
                    if (flag1)
                    {
                        if ((double)this.ai[0] == 0.0)
                        {
                            if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                            {
                                this.ai[0] = 200f;
                                int Damage = 10;
                                int Type = 31;
                                int number = Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                Main.projectile[number].ai[0] = 2f;
                                Main.projectile[number].timeLeft = 300;
                                Main.projectile[number].friendly = false;
                                NetMessage.SendData(27, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                                this.netUpdate = true;
                            }
                        }
                    }
                }
                try
                {
                    int index1 = (int)this.position.X / 16;
                    int index2 = (int)((double)this.position.X + (double)(this.width / 2)) / 16;
                    int index3 = (int)((double)this.position.X + (double)this.width) / 16;
                    int index4 = (int)((double)this.position.Y + (double)this.height) / 16;
                    bool flag2 = false;
                    if (Main.tile[index1, index4] == null)
                        Main.tile[index1, index4] = new Tile();
                    if (Main.tile[index2, index4] == null)
                        Main.tile[index1, index4] = new Tile();
                    if (Main.tile[index3, index4] == null)
                        Main.tile[index1, index4] = new Tile();
                    if (Main.tile[index1, index4].nactive() && Main.tileSolid[(int)Main.tile[index1, index4].type] || Main.tile[index2, index4].nactive() && Main.tileSolid[(int)Main.tile[index2, index4].type] || Main.tile[index3, index4].nactive() && Main.tileSolid[(int)Main.tile[index3, index4].type])
                        flag2 = true;
                    if (flag2)
                    {
                        this.noGravity = true;
                        this.noTileCollide = true;
                        this.velocity.Y = -0.2f;
                    }
                    else
                    {
                        this.noGravity = false;
                        this.noTileCollide = false;
                        if (Main.rand.Next(2) != 0)
                            return;
                        int index5 = Dust.NewDust(new Vector2(this.position.X - 4f, (float)((double)this.position.Y + (double)this.height - 8.0)), this.width + 8, 24, 32, 0.0f, this.velocity.Y / 2f, 0, new Color(), 1f);
                        Main.dust[index5].velocity.X *= 0.4f;
                        Main.dust[index5].velocity.Y *= -1f;
                        if (Main.rand.Next(2) != 0)
                            return;
                        Main.dust[index5].noGravity = true;
                        Main.dust[index5].scale += 0.2f;
                    }
                }
                catch
                {
                }
            }
            else if (this.aiStyle == 20)
            {
                if ((double)this.ai[0] == 0.0)
                {
                    if (Main.netMode != 1)
                    {
                        this.TargetClosest(true);
                        this.direction *= -1;
                        this.directionY *= -1;
                        this.position.Y += (float)(this.height / 2 + 8);
                        this.ai[1] = this.position.X + (float)(this.width / 2);
                        this.ai[2] = this.position.Y + (float)(this.height / 2);
                        if (this.direction == 0)
                            this.direction = 1;
                        if (this.directionY == 0)
                            this.directionY = 1;
                        this.ai[3] = (float)(1.0 + (double)Main.rand.Next(15) * 0.100000001490116);
                        this.velocity.Y = (float)(this.directionY * 6) * this.ai[3];
                        ++this.ai[0];
                        this.netUpdate = true;
                    }
                    else
                    {
                        this.ai[1] = this.position.X + (float)(this.width / 2);
                        this.ai[2] = this.position.Y + (float)(this.height / 2);
                    }
                }
                else
                {
                    float num1 = 6f * this.ai[3];
                    float num2 = 0.2f * this.ai[3];
                    float num3 = (float)((double)num1 / (double)num2 / 2.0);
                    if ((double)this.ai[0] >= 1.0 && (double)this.ai[0] < (double)(int)num3)
                    {
                        this.velocity.Y = (float)this.directionY * num1;
                        ++this.ai[0];
                    }
                    else if ((double)this.ai[0] >= (double)(int)num3)
                    {
                        this.velocity.Y = 0.0f;
                        this.directionY *= -1;
                        this.velocity.X = num1 * (float)this.direction;
                        this.ai[0] = -1f;
                    }
                    else
                    {
                        if (this.directionY > 0)
                        {
                            if ((double)this.velocity.Y >= (double)num1)
                            {
                                this.directionY *= -1;
                                this.velocity.Y = num1;
                            }
                        }
                        else if (this.directionY < 0 && (double)this.velocity.Y <= -(double)num1)
                        {
                            this.directionY *= -1;
                            this.velocity.Y = -num1;
                        }
                        if (this.direction > 0)
                        {
                            if ((double)this.velocity.X >= (double)num1)
                            {
                                this.direction *= -1;
                                this.velocity.X = num1;
                            }
                        }
                        else if (this.direction < 0 && (double)this.velocity.X <= -(double)num1)
                        {
                            this.direction *= -1;
                            this.velocity.X = -num1;
                        }
                        this.velocity.X += num2 * (float)this.direction;
                        this.velocity.Y += num2 * (float)this.directionY;
                    }
                }
            }
            else if (this.aiStyle == 21)
            {
                if ((double)this.ai[0] == 0.0)
                {
                    this.TargetClosest(true);
                    this.directionY = 1;
                    this.ai[0] = 1f;
                }
                int num = 6;
                if ((double)this.ai[1] == 0.0)
                {
                    this.rotation += (float)(this.direction * this.directionY) * 0.13f;
                    if (this.collideY)
                        this.ai[0] = 2f;
                    if (!this.collideY && (double)this.ai[0] == 2.0)
                    {
                        this.direction = -this.direction;
                        this.ai[1] = 1f;
                        this.ai[0] = 1f;
                    }
                    if (this.collideX)
                    {
                        this.directionY = -this.directionY;
                        this.ai[1] = 1f;
                    }
                }
                else
                {
                    this.rotation -= (float)(this.direction * this.directionY) * 0.13f;
                    if (this.collideX)
                        this.ai[0] = 2f;
                    if (!this.collideX && (double)this.ai[0] == 2.0)
                    {
                        this.directionY = -this.directionY;
                        this.ai[1] = 0.0f;
                        this.ai[0] = 1f;
                    }
                    if (this.collideY)
                    {
                        this.direction = -this.direction;
                        this.ai[1] = 0.0f;
                    }
                }
                this.velocity.X = (float)(num * this.direction);
                this.velocity.Y = (float)(num * this.directionY);
                Lighting.AddLight((int)((double)this.position.X + (double)(this.width / 2)) / 16, (int)((double)this.position.Y + (double)(this.height / 2)) / 16, 0.9f, 0.3f + (float)(270 - (int)Main.mouseTextColor) / 400f, 0.2f);
            }
            else if (this.aiStyle == 22)
            {
                bool flag1 = false;
                bool flag2 = this.type == 330 && !Main.pumpkinMoon;
                if (this.type == 253 && !Main.eclipse)
                    flag2 = true;
                if (this.type == 490 && Main.dayTime)
                    flag2 = true;
                if (this.justHit)
                    this.ai[2] = 0.0f;
                if (!flag2)
                {
                    if ((double)this.ai[2] >= 0.0)
                    {
                        int num1 = 16;
                        bool flag3 = false;
                        bool flag4 = false;
                        if ((double)this.position.X > (double)this.ai[0] - (double)num1 && (double)this.position.X < (double)this.ai[0] + (double)num1)
                            flag3 = true;
                        else if ((double)this.velocity.X < 0.0 && this.direction > 0 || (double)this.velocity.X > 0.0 && this.direction < 0)
                            flag3 = true;
                        int num2 = num1 + 24;
                        if ((double)this.position.Y > (double)this.ai[1] - (double)num2 && (double)this.position.Y < (double)this.ai[1] + (double)num2)
                            flag4 = true;
                        if (flag3 && flag4)
                        {
                            ++this.ai[2];
                            if ((double)this.ai[2] >= 30.0 && num2 == 16)
                                flag1 = true;
                            if ((double)this.ai[2] >= 60.0)
                            {
                                this.ai[2] = -200f;
                                this.direction *= -1;
                                this.velocity.X *= -1f;
                                this.collideX = false;
                            }
                        }
                        else
                        {
                            this.ai[0] = this.position.X;
                            this.ai[1] = this.position.Y;
                            this.ai[2] = 0.0f;
                        }
                        this.TargetClosest(true);
                    }
                    else if (this.type == 253)
                    {
                        this.TargetClosest(true);
                        this.ai[2] += 2f;
                    }
                    else
                    {
                        if (this.type == 330)
                            this.ai[2] += 0.1f;
                        else
                            ++this.ai[2];
                        if ((double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2) > (double)this.position.X + (double)(this.width / 2))
                            this.direction = -1;
                        else
                            this.direction = 1;
                    }
                }
                int index1 = (int)(((double)this.position.X + (double)(this.width / 2)) / 16.0) + this.direction * 2;
                int num3 = (int)(((double)this.position.Y + (double)this.height) / 16.0);
                bool flag5 = true;
                bool flag6 = false;
                int num4 = 3;
                if (this.type == 122)
                {
                    if (this.justHit)
                    {
                        this.ai[3] = 0.0f;
                        this.localAI[1] = 0.0f;
                    }
                    float num1 = 7f;
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num2 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num5 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num6 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num5 * (double)num5);
                    float num7 = num1 / num6;
                    float SpeedX = num2 * num7;
                    float SpeedY = num5 * num7;
                    if (Main.netMode != 1 && (double)this.ai[3] == 32.0 && !Main.player[this.target].npcTypeNoAggro[this.type])
                    {
                        int Damage = 25;
                        int Type = 84;
                        Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                    num4 = 8;
                    if ((double)this.ai[3] > 0.0)
                    {
                        ++this.ai[3];
                        if ((double)this.ai[3] >= 64.0)
                            this.ai[3] = 0.0f;
                    }
                    if (Main.netMode != 1 && (double)this.ai[3] == 0.0)
                    {
                        ++this.localAI[1];
                        if ((double)this.localAI[1] > 120.0 && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && !Main.player[this.target].npcTypeNoAggro[this.type])
                        {
                            this.localAI[1] = 0.0f;
                            this.ai[3] = 1f;
                            this.netUpdate = true;
                        }
                    }
                }
                else if (this.type == 75)
                {
                    num4 = 4;
                    if (Main.rand.Next(6) == 0)
                    {
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 55, 0.0f, 0.0f, 200, this.color, 1f);
                        Main.dust[index2].velocity *= 0.3f;
                    }
                    if (Main.rand.Next(40) == 0)
                        Main.PlaySound(27, (int)this.position.X, (int)this.position.Y, 1);
                }
                else if (this.type == 169)
                {
                    Lighting.AddLight((int)(((double)this.position.X + (double)(this.width / 2)) / 16.0), (int)(((double)this.position.Y + (double)(this.height / 2)) / 16.0), 0.0f, 0.6f, 0.75f);
                    this.alpha = 30;
                    if (Main.rand.Next(3) == 0)
                    {
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 92, 0.0f, 0.0f, 200, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.3f;
                        Main.dust[index2].noGravity = true;
                    }
                    if (this.justHit)
                    {
                        this.ai[3] = 0.0f;
                        this.localAI[1] = 0.0f;
                    }
                    float num1 = 5f;
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num2 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num5 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num6 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num5 * (double)num5);
                    float num7 = num1 / num6;
                    float SpeedX = num2 * num7;
                    float SpeedY = num5 * num7;
                    if ((double)SpeedX > 0.0)
                        this.direction = 1;
                    else
                        this.direction = -1;
                    this.spriteDirection = this.direction;
                    this.rotation = this.direction >= 0 ? (float)Math.Atan2((double)SpeedY, (double)SpeedX) : (float)Math.Atan2(-(double)SpeedY, -(double)SpeedX);
                    if (Main.netMode != 1 && (double)this.ai[3] == 16.0)
                    {
                        int Damage = 45;
                        int Type = 128;
                        Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                    num4 = 10;
                    if ((double)this.ai[3] > 0.0)
                    {
                        ++this.ai[3];
                        if ((double)this.ai[3] >= 64.0)
                            this.ai[3] = 0.0f;
                    }
                    if (Main.netMode != 1 && (double)this.ai[3] == 0.0)
                    {
                        ++this.localAI[1];
                        if ((double)this.localAI[1] > 120.0 && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                        {
                            this.localAI[1] = 0.0f;
                            this.ai[3] = 1f;
                            this.netUpdate = true;
                        }
                    }
                }
                else if (this.type == 268)
                {
                    this.rotation = this.velocity.X * 0.1f;
                    num4 = (double)Main.player[this.target].Center.Y >= (double)this.Center.Y ? 6 : 12;
                    if (Main.netMode != 1 && !this.confused)
                    {
                        ++this.ai[3];
                        if (this.justHit)
                        {
                            this.ai[3] = -45f;
                            this.localAI[1] = 0.0f;
                        }
                        if (Main.netMode != 1 && (double)this.ai[3] >= (double)(60 + Main.rand.Next(60)))
                        {
                            this.ai[3] = 0.0f;
                            if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].head))
                            {
                                float num1 = 10f;
                                Vector2 vector2 = new Vector2((float)((double)this.position.X + (double)this.width * 0.5 - 4.0), this.position.Y + (float)this.height * 0.7f);
                                float num2 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                                float num5 = Math.Abs(num2) * 0.1f;
                                float num6 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y - num5;
                                float num7 = num2 + (float)Main.rand.Next(-10, 11);
                                float num8 = num6 + (float)Main.rand.Next(-30, 21);
                                float num9 = (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                                float num10 = num1 / num9;
                                float SpeedX = num7 * num10;
                                float SpeedY = num8 * num10;
                                int Damage = 40;
                                int Type = 288;
                                Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            }
                        }
                    }
                }
                if (this.type == 490)
                {
                    num4 = 4;
                    if (this.target >= 0)
                    {
                        float num1 = (Main.player[this.target].Center - this.Center).Length() / 70f;
                        if ((double)num1 > 8.0)
                            num1 = 8f;
                        num4 += (int)num1;
                    }
                }
                for (int index2 = num3; index2 < num3 + num4; ++index2)
                {
                    if (Main.tile[index1, index2] == null)
                        Main.tile[index1, index2] = new Tile();
                    if (Main.tile[index1, index2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2].type] || (int)Main.tile[index1, index2].liquid > 0)
                    {
                        if (index2 <= num3 + 1)
                            flag6 = true;
                        flag5 = false;
                        break;
                    }
                }
                if (Main.player[this.target].npcTypeNoAggro[this.type])
                {
                    bool flag3 = false;
                    for (int index2 = num3; index2 < num3 + num4 - 2; ++index2)
                    {
                        if (Main.tile[index1, index2] == null)
                            Main.tile[index1, index2] = new Tile();
                        if (Main.tile[index1, index2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2].type] || (int)Main.tile[index1, index2].liquid > 0)
                        {
                            flag3 = true;
                            break;
                        }
                    }
                    this.directionY = Utils.ToDirectionInt(!flag3);
                }
                if (this.type == 169 || this.type == 268)
                {
                    for (int index2 = num3 - 3; index2 < num3; ++index2)
                    {
                        if (Main.tile[index1, index2] == null)
                            Main.tile[index1, index2] = new Tile();
                        if (Main.tile[index1, index2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2].type] || (int)Main.tile[index1, index2].liquid > 0)
                        {
                            flag6 = false;
                            flag1 = true;
                            break;
                        }
                    }
                }
                if (flag1)
                {
                    flag6 = false;
                    flag5 = true;
                    if (this.type == 268)
                        this.velocity.Y += 2f;
                }
                if (flag5)
                {
                    if (this.type == 75 || this.type == 169)
                    {
                        this.velocity.Y += 0.2f;
                        if ((double)this.velocity.Y > 2.0)
                            this.velocity.Y = 2f;
                    }
                    else if (this.type == 490)
                    {
                        this.velocity.Y += 0.03f;
                        if ((double)this.velocity.Y > 0.75)
                            this.velocity.Y = 0.75f;
                    }
                    else
                    {
                        this.velocity.Y += 0.1f;
                        if ((double)this.velocity.Y > 3.0)
                            this.velocity.Y = 3f;
                    }
                }
                else
                {
                    if (this.type == 75 || this.type == 169)
                    {
                        if (this.directionY < 0 && (double)this.velocity.Y > 0.0 || flag6)
                            this.velocity.Y -= 0.2f;
                    }
                    else if (this.type == 490)
                    {
                        if (this.directionY < 0 && (double)this.velocity.Y > 0.0 || flag6)
                            this.velocity.Y -= 0.075f;
                        if ((double)this.velocity.Y < -0.75)
                            this.velocity.Y = -0.75f;
                    }
                    else if (this.directionY < 0 && (double)this.velocity.Y > 0.0)
                        this.velocity.Y -= 0.1f;
                    if ((double)this.velocity.Y < -4.0)
                        this.velocity.Y = -4f;
                }
                if (this.type == 75 && this.wet)
                {
                    this.velocity.Y -= 0.2f;
                    if ((double)this.velocity.Y < -2.0)
                        this.velocity.Y = -2f;
                }
                if (this.collideX)
                {
                    this.velocity.X = this.oldVelocity.X * -0.4f;
                    if (this.direction == -1 && (double)this.velocity.X > 0.0 && (double)this.velocity.X < 1.0)
                        this.velocity.X = 1f;
                    if (this.direction == 1 && (double)this.velocity.X < 0.0 && (double)this.velocity.X > -1.0)
                        this.velocity.X = -1f;
                }
                if (this.collideY)
                {
                    this.velocity.Y = this.oldVelocity.Y * -0.25f;
                    if ((double)this.velocity.Y > 0.0 && (double)this.velocity.Y < 1.0)
                        this.velocity.Y = 1f;
                    if ((double)this.velocity.Y < 0.0 && (double)this.velocity.Y > -1.0)
                        this.velocity.Y = -1f;
                }
                float num11 = 2f;
                if (this.type == 75)
                    num11 = 3f;
                if (this.type == 253)
                    num11 = 4f;
                if (this.type == 490)
                    num11 = 1.5f;
                if (this.type == 330)
                {
                    this.alpha = 0;
                    num11 = 4f;
                    if (!flag2)
                        this.TargetClosest(true);
                    else if (this.timeLeft > 10)
                        this.timeLeft = 10;
                    if (this.direction < 0 && (double)this.velocity.X > 0.0)
                        this.velocity.X *= 0.9f;
                    if (this.direction > 0 && (double)this.velocity.X < 0.0)
                        this.velocity.X *= 0.9f;
                }
                if (this.direction == -1 && (double)this.velocity.X > -(double)num11)
                {
                    this.velocity.X -= 0.1f;
                    if ((double)this.velocity.X > (double)num11)
                        this.velocity.X -= 0.1f;
                    else if ((double)this.velocity.X > 0.0)
                        this.velocity.X += 0.05f;
                    if ((double)this.velocity.X < -(double)num11)
                        this.velocity.X = -num11;
                }
                else if (this.direction == 1 && (double)this.velocity.X < (double)num11)
                {
                    this.velocity.X += 0.1f;
                    if ((double)this.velocity.X < -(double)num11)
                        this.velocity.X += 0.1f;
                    else if ((double)this.velocity.X < 0.0)
                        this.velocity.X -= 0.05f;
                    if ((double)this.velocity.X > (double)num11)
                        this.velocity.X = num11;
                }
                float num12 = this.type != 490 ? 1.5f : 1f;
                if (this.directionY == -1 && (double)this.velocity.Y > -(double)num12)
                {
                    this.velocity.Y -= 0.04f;
                    if ((double)this.velocity.Y > (double)num12)
                        this.velocity.Y -= 0.05f;
                    else if ((double)this.velocity.Y > 0.0)
                        this.velocity.Y += 0.03f;
                    if ((double)this.velocity.Y < -(double)num12)
                        this.velocity.Y = -num12;
                }
                else if (this.directionY == 1 && (double)this.velocity.Y < (double)num12)
                {
                    this.velocity.Y += 0.04f;
                    if ((double)this.velocity.Y < -(double)num12)
                        this.velocity.Y += 0.05f;
                    else if ((double)this.velocity.Y < 0.0)
                        this.velocity.Y -= 0.03f;
                    if ((double)this.velocity.Y > (double)num12)
                        this.velocity.Y = num12;
                }
                if (this.type != 122)
                    return;
                Lighting.AddLight((int)this.position.X / 16, (int)this.position.Y / 16, 0.4f, 0.0f, 0.25f);
            }
            else if (this.aiStyle == 23)
            {
                this.noGravity = true;
                this.noTileCollide = true;
                if (this.type == 83)
                    Lighting.AddLight((int)(((double)this.position.X + (double)(this.width / 2)) / 16.0), (int)(((double)this.position.Y + (double)(this.height / 2)) / 16.0), 0.2f, 0.05f, 0.3f);
                else if (this.type == 179)
                    Lighting.AddLight((int)(((double)this.position.X + (double)(this.width / 2)) / 16.0), (int)(((double)this.position.Y + (double)(this.height / 2)) / 16.0), 0.3f, 0.15f, 0.05f);
                else
                    Lighting.AddLight((int)(((double)this.position.X + (double)(this.width / 2)) / 16.0), (int)(((double)this.position.Y + (double)(this.height / 2)) / 16.0), 0.05f, 0.2f, 0.3f);
                if (this.target < 0 || this.target == (int)byte.MaxValue || Main.player[this.target].dead)
                    this.TargetClosest(true);
                if ((double)this.ai[0] == 0.0)
                {
                    float num1 = 9f;
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num2 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num3 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num4 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                    float num5 = num1 / num4;
                    float num6 = num2 * num5;
                    float num7 = num3 * num5;
                    this.velocity.X = num6;
                    this.velocity.Y = num7;
                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 0.785f;
                    this.ai[0] = 1f;
                    this.ai[1] = 0.0f;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    if (this.justHit)
                    {
                        this.ai[0] = 2f;
                        this.ai[1] = 0.0f;
                    }
                    NPC npc = this;
                    Vector2 vector2 = npc.velocity * 0.99f;
                    npc.velocity = vector2;
                    ++this.ai[1];
                    if ((double)this.ai[1] < 100.0)
                        return;
                    this.netUpdate = true;
                    this.ai[0] = 2f;
                    this.ai[1] = 0.0f;
                    this.velocity.X = 0.0f;
                    this.velocity.Y = 0.0f;
                }
                else
                {
                    if (this.justHit)
                    {
                        this.ai[0] = 2f;
                        this.ai[1] = 0.0f;
                    }
                    NPC npc = this;
                    Vector2 vector2 = npc.velocity * 0.96f;
                    npc.velocity = vector2;
                    ++this.ai[1];
                    this.rotation += (float)(0.100000001490116 + (double)(this.ai[1] / 120f) * 0.400000005960464) * (float)this.direction;
                    if ((double)this.ai[1] < 120.0)
                        return;
                    this.netUpdate = true;
                    this.ai[0] = 0.0f;
                    this.ai[1] = 0.0f;
                }
            }
            else if (this.aiStyle == 24)
            {
                this.noGravity = true;
                if ((double)this.ai[0] == 0.0)
                {
                    this.noGravity = false;
                    this.TargetClosest(true);
                    if (Main.netMode != 1)
                    {
                        if ((double)this.velocity.X != 0.0 || (double)this.velocity.Y < 0.0 || (double)this.velocity.Y > 0.3)
                        {
                            this.ai[0] = 1f;
                            this.netUpdate = true;
                            this.direction = -this.direction;
                        }
                        else if (new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200).Intersects(new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height)) || this.life < this.lifeMax)
                        {
                            this.ai[0] = 1f;
                            this.velocity.Y -= 6f;
                            this.netUpdate = true;
                            this.direction = -this.direction;
                        }
                    }
                }
                else if (!Main.player[this.target].dead)
                {
                    if (this.collideX)
                    {
                        this.direction *= -1;
                        this.velocity.X = this.oldVelocity.X * -0.5f;
                        if (this.direction == -1 && (double)this.velocity.X > 0.0 && (double)this.velocity.X < 2.0)
                            this.velocity.X = 2f;
                        if (this.direction == 1 && (double)this.velocity.X < 0.0 && (double)this.velocity.X > -2.0)
                            this.velocity.X = -2f;
                    }
                    if (this.collideY)
                    {
                        this.velocity.Y = this.oldVelocity.Y * -0.5f;
                        if ((double)this.velocity.Y > 0.0 && (double)this.velocity.Y < 1.0)
                            this.velocity.Y = 1f;
                        if ((double)this.velocity.Y < 0.0 && (double)this.velocity.Y > -1.0)
                            this.velocity.Y = -1f;
                    }
                    if (this.direction == -1 && (double)this.velocity.X > -3.0)
                    {
                        this.velocity.X -= 0.1f;
                        if ((double)this.velocity.X > 3.0)
                            this.velocity.X -= 0.1f;
                        else if ((double)this.velocity.X > 0.0)
                            this.velocity.X -= 0.05f;
                        if ((double)this.velocity.X < -3.0)
                            this.velocity.X = -3f;
                    }
                    else if (this.direction == 1 && (double)this.velocity.X < 3.0)
                    {
                        this.velocity.X += 0.1f;
                        if ((double)this.velocity.X < -3.0)
                            this.velocity.X += 0.1f;
                        else if ((double)this.velocity.X < 0.0)
                            this.velocity.X += 0.05f;
                        if ((double)this.velocity.X > 3.0)
                            this.velocity.X = 3f;
                    }
                    int index1 = (int)(((double)this.position.X + (double)(this.width / 2)) / 16.0) + this.direction;
                    int num1 = (int)(((double)this.position.Y + (double)this.height) / 16.0);
                    bool flag1 = true;
                    int num2 = 15;
                    bool flag2 = false;
                    for (int index2 = num1; index2 < num1 + num2; ++index2)
                    {
                        if (Main.tile[index1, index2] == null)
                            Main.tile[index1, index2] = new Tile();
                        if (Main.tile[index1, index2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2].type] || (int)Main.tile[index1, index2].liquid > 0)
                        {
                            if (index2 < num1 + 5)
                                flag2 = true;
                            flag1 = false;
                            break;
                        }
                    }
                    if (flag1)
                        this.velocity.Y += 0.05f;
                    else
                        this.velocity.Y -= 0.1f;
                    if (flag2)
                        this.velocity.Y -= 0.2f;
                    if ((double)this.velocity.Y > 2.0)
                        this.velocity.Y = 2f;
                    if ((double)this.velocity.Y < -4.0)
                        this.velocity.Y = -4f;
                }
                if (!this.wet)
                    return;
                this.ai[1] = 0.0f;
                if ((double)this.velocity.Y > 0.0)
                    this.velocity.Y *= 0.95f;
                this.velocity.Y -= 0.5f;
                if ((double)this.velocity.Y < -4.0)
                    this.velocity.Y = -4f;
                this.TargetClosest(true);
            }
            else if (this.aiStyle == 25)
            {
                bool flag = this.type == 341 && !Main.snowMoon;
                if ((double)this.ai[3] == 0.0)
                {
                    this.position.X += 8f;
                    if ((double)this.position.Y / 16.0 > (double)(Main.maxTilesY - 200))
                        this.ai[3] = 3f;
                    else if ((double)this.position.Y / 16.0 > Main.worldSurface)
                    {
                        this.TargetClosest(true);
                        this.ai[3] = !Main.player[this.target].ZoneSnow ? 2f : 4f;
                    }
                    else
                        this.ai[3] = 1f;
                }
                if (this.type == 341)
                    this.ai[3] = 1f;
                if ((double)this.ai[0] == 0.0)
                {
                    if (!flag)
                        this.TargetClosest(true);
                    if (Main.netMode == 1)
                        return;
                    if ((double)this.velocity.X != 0.0 || (double)this.velocity.Y < 0.0 || (double)this.velocity.Y > 0.3)
                    {
                        this.ai[0] = 1f;
                        this.netUpdate = true;
                    }
                    else
                    {
                        if (!new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200).Intersects(new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height)) && this.life >= this.lifeMax)
                            return;
                        this.ai[0] = 1f;
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.velocity.Y == 0.0)
                {
                    ++this.ai[2];
                    int num = 20;
                    if ((double)this.ai[1] == 0.0)
                        num = 12;
                    if ((double)this.ai[2] < (double)num)
                    {
                        this.velocity.X *= 0.9f;
                    }
                    else
                    {
                        this.ai[2] = 0.0f;
                        if (!flag)
                            this.TargetClosest(true);
                        if (this.direction == 0)
                            this.direction = -1;
                        this.spriteDirection = this.direction;
                        ++this.ai[1];
                        if ((double)this.ai[1] == 2.0)
                        {
                            this.velocity.X = (float)this.direction * 2.5f;
                            this.velocity.Y = -8f;
                            this.ai[1] = 0.0f;
                        }
                        else
                        {
                            this.velocity.X = (float)this.direction * 3.5f;
                            this.velocity.Y = -4f;
                        }
                        this.netUpdate = true;
                    }
                }
                else if (this.direction == 1 && (double)this.velocity.X < 1.0)
                {
                    this.velocity.X += 0.1f;
                }
                else
                {
                    if (this.direction != -1 || (double)this.velocity.X <= -1.0)
                        return;
                    this.velocity.X -= 0.1f;
                }
            }
            else if (this.aiStyle == 26)
            {
                int num1 = 30;
                int num2 = 10;
                bool flag1 = false;
                bool flag2 = false;
                bool flag3 = false;
                if ((double)this.velocity.Y == 0.0 && ((double)this.velocity.X > 0.0 && this.direction < 0 || (double)this.velocity.X < 0.0 && this.direction > 0))
                {
                    flag2 = true;
                    ++this.ai[3];
                }
                if ((double)this.position.X == (double)this.oldPosition.X || (double)this.ai[3] >= (double)num1 || flag2)
                {
                    ++this.ai[3];
                    flag3 = true;
                }
                else if ((double)this.ai[3] > 0.0)
                    --this.ai[3];
                if ((double)this.ai[3] > (double)(num1 * num2))
                    this.ai[3] = 0.0f;
                if (this.justHit)
                    this.ai[3] = 0.0f;
                if ((double)this.ai[3] == (double)num1)
                    this.netUpdate = true;
                Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                float num3 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_1.X;
                float num4 = Main.player[this.target].position.Y - vector2_1.Y;
                float num5 = (float)Math.Sqrt((double)num3 * (double)num3 + (double)num4 * (double)num4);
                if ((double)num5 < 200.0 && !flag3)
                    this.ai[3] = 0.0f;
                if (this.type == 410)
                {
                    ++this.ai[1];
                    bool flag4 = (double)this.ai[1] >= 240.0;
                    if (!flag4 && (double)this.velocity.Y == 0.0)
                    {
                        for (int index = 0; index < (int)byte.MaxValue; ++index)
                        {
                            if (Main.player[index].active && !Main.player[index].dead && ((double)Main.player[index].Distance(this.Center) < 800.0 && (double)Main.player[index].Center.Y < (double)this.Center.Y) && (double)Math.Abs(Main.player[index].Center.X - this.Center.X) < 20.0)
                            {
                                flag4 = true;
                                break;
                            }
                        }
                    }
                    if (flag4 && Main.netMode != 1)
                    {
                        for (int index = 0; index < 3; ++index)
                            Projectile.NewProjectile(this.Center.X, this.Center.Y, (float)(((double)Utils.NextFloat(Main.rand) - 0.5) * 2.0), (float)(-4.0 - 10.0 * (double)Utils.NextFloat(Main.rand)), 538, 50, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        this.HitEffect(9999, 10.0);
                        this.active = false;
                        return;
                    }
                }
                else if (this.type == 423)
                {
                    if ((double)this.ai[2] == 1.0)
                    {
                        ++this.ai[1];
                        this.velocity.X *= 0.7f;
                        if ((double)this.ai[1] < 30.0)
                        {
                            Vector2 Position = this.Center + Vector2.UnitX * (float)this.spriteDirection * -20f;
                            Dust dust = Main.dust[Dust.NewDust(Position, 0, 0, 242, 0.0f, 0.0f, 0, new Color(), 1f)];
                            Vector2 vector2_2 = Utils.RotatedByRandom(Vector2.UnitY, 6.28318548202515);
                            dust.position = Position + vector2_2 * 20f;
                            dust.velocity = -vector2_2 * 2f;
                            dust.scale = (float)(0.5 + (double)vector2_2.X * (double)-this.spriteDirection);
                            dust.fadeIn = 1f;
                            dust.noGravity = true;
                        }
                        else if ((double)this.ai[1] == 30.0)
                        {
                            for (int index = 0; index < 20; ++index)
                            {
                                Vector2 Position = this.Center + Vector2.UnitX * (float)this.spriteDirection * -20f;
                                Dust dust = Main.dust[Dust.NewDust(Position, 0, 0, 242, 0.0f, 0.0f, 0, new Color(), 1f)];
                                Vector2 vector2_2 = Utils.RotatedByRandom(Vector2.UnitY, 6.28318548202515);
                                dust.position = Position + vector2_2 * 4f;
                                dust.velocity = vector2_2 * 4f + Vector2.UnitX * Utils.NextFloat(Main.rand) * (float)this.spriteDirection * -5f;
                                dust.scale = (float)(0.5 + (double)vector2_2.X * (double)-this.spriteDirection);
                                dust.fadeIn = 1f;
                                dust.noGravity = true;
                            }
                        }
                        if ((double)this.velocity.X > -0.5 && (double)this.velocity.X < 0.5)
                            this.velocity.X = 0.0f;
                        if ((double)this.ai[1] == 30.0 && Main.netMode != 1)
                            Projectile.NewProjectile(this.Center.X + (float)(this.spriteDirection * -20), this.Center.Y, (float)(this.spriteDirection * -7), 0.0f, 575, Main.expertMode ? 35 : 50, 0.0f, Main.myPlayer, (float)this.target, 0.0f);
                        if ((double)this.ai[1] >= 60.0)
                        {
                            this.ai[1] = (float)-Main.rand.Next(320, 601);
                            this.ai[2] = 0.0f;
                        }
                    }
                    else
                    {
                        ++this.ai[1];
                        if ((double)this.ai[1] >= 180.0 && (double)num5 < 500.0 && (double)this.velocity.Y == 0.0)
                        {
                            flag1 = true;
                            this.ai[1] = 0.0f;
                            this.ai[2] = 1f;
                            this.netUpdate = true;
                        }
                        else if ((double)this.velocity.Y == 0.0 && (double)num5 < 100.0 && (double)Math.Abs(this.velocity.X) > 3.0 && ((double)this.Center.X < (double)Main.player[this.target].Center.X && (double)this.velocity.X > 0.0 || (double)this.Center.X > (double)Main.player[this.target].Center.X && (double)this.velocity.X < 0.0))
                            this.velocity.Y -= 4f;
                    }
                }
                else if ((this.type == 155 || this.type == 329) && ((double)this.velocity.Y == 0.0 && (double)num5 < 100.0) && (double)Math.Abs(this.velocity.X) > 3.0 && ((double)this.position.X + (double)(this.width / 2) < (double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2) && (double)this.velocity.X > 0.0 || (double)this.position.X + (double)(this.width / 2) > (double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2) && (double)this.velocity.X < 0.0))
                    this.velocity.Y -= 4f;
                if ((double)this.ai[3] < (double)num1)
                {
                    if ((this.type == 329 || this.type == 315) && !Main.pumpkinMoon)
                    {
                        if (this.timeLeft > 10)
                            this.timeLeft = 10;
                    }
                    else
                        this.TargetClosest(true);
                }
                else
                {
                    if ((double)this.velocity.X == 0.0)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            ++this.ai[0];
                            if ((double)this.ai[0] >= 2.0)
                            {
                                this.direction *= -1;
                                this.spriteDirection = this.direction;
                                this.ai[0] = 0.0f;
                            }
                        }
                    }
                    else
                        this.ai[0] = 0.0f;
                    this.directionY = -1;
                    if (this.direction == 0)
                        this.direction = 1;
                }
                float num6 = 6f;
                float num7 = 0.07f;
                if (!flag1 && ((double)this.velocity.Y == 0.0 || this.wet || (double)this.velocity.X <= 0.0 && this.direction < 0 || (double)this.velocity.X >= 0.0 && this.direction > 0))
                {
                    if (this.type == 155)
                    {
                        if ((double)this.velocity.X > 0.0 && this.direction < 0)
                            this.velocity.X *= 0.95f;
                        if ((double)this.velocity.X < 0.0 && this.direction > 0)
                            this.velocity.X *= 0.95f;
                    }
                    else if (this.type == 329)
                    {
                        if ((double)this.velocity.X > 0.0 && this.direction < 0)
                            this.velocity.X *= 0.9f;
                        if ((double)this.velocity.X < 0.0 && this.direction > 0)
                            this.velocity.X *= 0.9f;
                        if (this.direction > 0 && (double)this.velocity.X < 3.0)
                            this.velocity.X += 0.1f;
                        if (this.direction < 0 && (double)this.velocity.X > -3.0)
                            this.velocity.X -= 0.1f;
                    }
                    else if (this.type == 315)
                    {
                        if ((double)this.velocity.X > 0.0 && this.direction < 0)
                            this.velocity.X *= 0.95f;
                        if ((double)this.velocity.X < 0.0 && this.direction > 0)
                            this.velocity.X *= 0.95f;
                        if ((double)this.velocity.X < -(double)num6 || (double)this.velocity.X > (double)num6)
                        {
                            if ((double)this.velocity.Y == 0.0)
                            {
                                NPC npc = this;
                                Vector2 vector2_2 = npc.velocity * 0.8f;
                                npc.velocity = vector2_2;
                            }
                        }
                        else if ((double)this.velocity.X < (double)num6 && this.direction == 1)
                        {
                            this.velocity.X += 0.07f;
                            if ((double)this.velocity.X > (double)num6)
                                this.velocity.X = num6;
                        }
                        else if ((double)this.velocity.X > -(double)num6 && this.direction == -1)
                        {
                            this.velocity.X -= 0.07f;
                            if ((double)this.velocity.X < -(double)num6)
                                this.velocity.X = -num6;
                        }
                    }
                    else if (this.type == 410)
                    {
                        if (Math.Sign(this.velocity.X) != this.direction)
                            this.velocity.X *= 0.9f;
                        num6 = 6f;
                        num7 = 0.2f;
                    }
                    else if (this.type == 423)
                    {
                        if (Math.Sign(this.velocity.X) != this.direction)
                            this.velocity.X *= 0.85f;
                        num6 = 10f;
                        num7 = 0.2f;
                    }
                    if ((double)this.velocity.X < -(double)num6 || (double)this.velocity.X > (double)num6)
                    {
                        if ((double)this.velocity.Y == 0.0)
                        {
                            NPC npc = this;
                            Vector2 vector2_2 = npc.velocity * 0.8f;
                            npc.velocity = vector2_2;
                        }
                    }
                    else if ((double)this.velocity.X < (double)num6 && this.direction == 1)
                    {
                        this.velocity.X += num7;
                        if ((double)this.velocity.X > (double)num6)
                            this.velocity.X = num6;
                    }
                    else if ((double)this.velocity.X > -(double)num6 && this.direction == -1)
                    {
                        this.velocity.X -= num7;
                        if ((double)this.velocity.X < -(double)num6)
                            this.velocity.X = -num6;
                    }
                }
                if ((double)this.velocity.Y >= 0.0)
                {
                    int num8 = 0;
                    if ((double)this.velocity.X < 0.0)
                        num8 = -1;
                    if ((double)this.velocity.X > 0.0)
                        num8 = 1;
                    Vector2 vector2_2 = this.position;
                    vector2_2.X += this.velocity.X;
                    int index1 = (int)(((double)vector2_2.X + (double)(this.width / 2) + (double)((this.width / 2 + 1) * num8)) / 16.0);
                    int index2 = (int)(((double)vector2_2.Y + (double)this.height - 1.0) / 16.0);
                    if (Main.tile[index1, index2] == null)
                        Main.tile[index1, index2] = new Tile();
                    if (Main.tile[index1, index2 - 1] == null)
                        Main.tile[index1, index2 - 1] = new Tile();
                    if (Main.tile[index1, index2 - 2] == null)
                        Main.tile[index1, index2 - 2] = new Tile();
                    if (Main.tile[index1, index2 - 3] == null)
                        Main.tile[index1, index2 - 3] = new Tile();
                    if (Main.tile[index1, index2 + 1] == null)
                        Main.tile[index1, index2 + 1] = new Tile();
                    if ((double)(index1 * 16) < (double)vector2_2.X + (double)this.width && (double)(index1 * 16 + 16) > (double)vector2_2.X && (Main.tile[index1, index2].nactive() && !Main.tile[index1, index2].topSlope() && (!Main.tile[index1, index2 - 1].topSlope() && Main.tileSolid[(int)Main.tile[index1, index2].type]) && !Main.tileSolidTop[(int)Main.tile[index1, index2].type] || Main.tile[index1, index2 - 1].halfBrick() && Main.tile[index1, index2 - 1].nactive()) && ((!Main.tile[index1, index2 - 1].nactive() || !Main.tileSolid[(int)Main.tile[index1, index2 - 1].type] || Main.tileSolidTop[(int)Main.tile[index1, index2 - 1].type] || Main.tile[index1, index2 - 1].halfBrick() && (!Main.tile[index1, index2 - 4].nactive() || !Main.tileSolid[(int)Main.tile[index1, index2 - 4].type] || Main.tileSolidTop[(int)Main.tile[index1, index2 - 4].type])) && ((!Main.tile[index1, index2 - 2].nactive() || !Main.tileSolid[(int)Main.tile[index1, index2 - 2].type] || Main.tileSolidTop[(int)Main.tile[index1, index2 - 2].type]) && (!Main.tile[index1, index2 - 3].nactive() || !Main.tileSolid[(int)Main.tile[index1, index2 - 3].type] || Main.tileSolidTop[(int)Main.tile[index1, index2 - 3].type]) && (!Main.tile[index1 - num8, index2 - 3].nactive() || !Main.tileSolid[(int)Main.tile[index1 - num8, index2 - 3].type]))))
                    {
                        float num9 = (float)(index2 * 16);
                        if (Main.tile[index1, index2].halfBrick())
                            num9 += 8f;
                        if (Main.tile[index1, index2 - 1].halfBrick())
                            num9 -= 8f;
                        if ((double)num9 < (double)vector2_2.Y + (double)this.height)
                        {
                            float num10 = vector2_2.Y + (float)this.height - num9;
                            if ((double)num10 <= 16.1)
                            {
                                this.gfxOffY += this.position.Y + (float)this.height - num9;
                                this.position.Y = num9 - (float)this.height;
                                this.stepSpeed = (double)num10 >= 9.0 ? 2f : 1f;
                            }
                        }
                    }
                }
                if ((double)this.velocity.Y == 0.0)
                {
                    int index1 = (int)(((double)this.position.X + (double)(this.width / 2) + (double)((this.width / 2 + 2) * this.direction) + (double)this.velocity.X * 5.0) / 16.0);
                    int index2 = (int)(((double)this.position.Y + (double)this.height - 15.0) / 16.0);
                    if (Main.tile[index1, index2] == null)
                        Main.tile[index1, index2] = new Tile();
                    if (Main.tile[index1, index2 - 1] == null)
                        Main.tile[index1, index2 - 1] = new Tile();
                    if (Main.tile[index1, index2 - 2] == null)
                        Main.tile[index1, index2 - 2] = new Tile();
                    if (Main.tile[index1, index2 - 3] == null)
                        Main.tile[index1, index2 - 3] = new Tile();
                    if (Main.tile[index1, index2 + 1] == null)
                        Main.tile[index1, index2 + 1] = new Tile();
                    if (Main.tile[index1 + this.direction, index2 - 1] == null)
                        Main.tile[index1 + this.direction, index2 - 1] = new Tile();
                    if (Main.tile[index1 + this.direction, index2 + 1] == null)
                        Main.tile[index1 + this.direction, index2 + 1] = new Tile();
                    if (Main.tile[index1 - this.direction, index2 + 1] == null)
                        Main.tile[index1 - this.direction, index2 + 1] = new Tile();
                    int num8 = this.spriteDirection;
                    if (this.type == 423 || this.type == 410)
                        num8 *= -1;
                    if ((double)this.velocity.X < 0.0 && num8 == -1 || (double)this.velocity.X > 0.0 && num8 == 1)
                    {
                        bool flag4 = this.type == 410 || this.type == 423;
                        float num9 = 3f;
                        if (Main.tile[index1, index2 - 2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2 - 2].type])
                        {
                            if (Main.tile[index1, index2 - 3].nactive() && Main.tileSolid[(int)Main.tile[index1, index2 - 3].type])
                            {
                                this.velocity.Y = -8.5f;
                                this.netUpdate = true;
                            }
                            else
                            {
                                this.velocity.Y = -7.5f;
                                this.netUpdate = true;
                            }
                        }
                        else if (Main.tile[index1, index2 - 1].nactive() && !Main.tile[index1, index2 - 1].topSlope() && Main.tileSolid[(int)Main.tile[index1, index2 - 1].type])
                        {
                            this.velocity.Y = -7f;
                            this.netUpdate = true;
                        }
                        else if ((double)this.position.Y + (double)this.height - (double)(index2 * 16) > 20.0 && Main.tile[index1, index2].nactive() && (!Main.tile[index1, index2].topSlope() && Main.tileSolid[(int)Main.tile[index1, index2].type]))
                        {
                            this.velocity.Y = -6f;
                            this.netUpdate = true;
                        }
                        else if ((this.directionY < 0 || (double)Math.Abs(this.velocity.X) > (double)num9) && (!flag4 || !Main.tile[index1, index2 + 1].nactive() || !Main.tileSolid[(int)Main.tile[index1, index2 + 1].type]) && ((!Main.tile[index1, index2 + 2].nactive() || !Main.tileSolid[(int)Main.tile[index1, index2 + 2].type]) && (!Main.tile[index1 + this.direction, index2 + 3].nactive() || !Main.tileSolid[(int)Main.tile[index1 + this.direction, index2 + 3].type])))
                        {
                            this.velocity.Y = -8f;
                            this.netUpdate = true;
                        }
                    }
                }
                if (this.type != 423 || (double)Math.Abs(this.velocity.X) < (double)num6 * 0.949999988079071)
                    return;
                Rectangle hitbox = this.Hitbox;
                for (int index = 0; index < 2; ++index)
                {
                    if (Main.rand.Next(3) == 0)
                    {
                        Dust dust = Main.dust[Dust.NewDust(Utils.TopLeft(hitbox), hitbox.Width, hitbox.Height, 242, 0.0f, 0.0f, 0, new Color(), 1f)];
                        dust.velocity = Vector2.Zero;
                        dust.noGravity = true;
                        dust.fadeIn = 1f;
                        dust.scale = 0.5f + Utils.NextFloat(Main.rand);
                    }
                }
            }
            else if (this.aiStyle == 27)
            {
                if ((double)this.position.X < 160.0 || (double)this.position.X > (double)((Main.maxTilesX - 10) * 16))
                    this.active = false;
                if ((double)this.localAI[0] == 0.0)
                {
                    this.localAI[0] = 1f;
                    Main.wofB = -1;
                    Main.wofT = -1;
                }
                ++this.ai[1];
                if ((double)this.ai[2] == 0.0)
                {
                    if ((double)this.life < (double)this.lifeMax * 0.5)
                        ++this.ai[1];
                    if ((double)this.life < (double)this.lifeMax * 0.2)
                        ++this.ai[1];
                    if ((double)this.ai[1] > 2700.0)
                        this.ai[2] = 1f;
                }
                if ((double)this.ai[2] > 0.0 && (double)this.ai[1] > 60.0)
                {
                    int num = 3;
                    if ((double)this.life < (double)this.lifeMax * 0.3)
                        ++num;
                    ++this.ai[2];
                    this.ai[1] = 0.0f;
                    if ((double)this.ai[2] > (double)num)
                        this.ai[2] = 0.0f;
                    if (Main.netMode != 1)
                    {
                        int index = NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)((double)this.position.Y + (double)(this.height / 2) + 20.0), 117, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        Main.npc[index].velocity.X = (float)(this.direction * 8);
                    }
                }
                ++this.localAI[3];
                if ((double)this.localAI[3] >= (double)(600 + Main.rand.Next(1000)))
                {
                    this.localAI[3] = (float)-Main.rand.Next(200);
                    Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 10);
                }
                Main.wof = this.whoAmI;
                int num1 = (int)((double)this.position.X / 16.0);
                int num2 = (int)(((double)this.position.X + (double)this.width) / 16.0);
                int num3 = (int)(((double)this.position.Y + (double)(this.height / 2)) / 16.0);
                int num4 = 0;
                int j1 = num3 + 7;
                while (num4 < 15 && j1 > Main.maxTilesY - 200)
                {
                    ++j1;
                    for (int i = num1; i <= num2; ++i)
                    {
                        try
                        {
                            if (!WorldGen.SolidTile(i, j1))
                            {
                                if ((int)Main.tile[i, j1].liquid <= 0)
                                    continue;
                            }
                            ++num4;
                        }
                        catch
                        {
                            num4 += 15;
                        }
                    }
                }
                int num5 = j1 + 4;
                if (Main.wofB == -1)
                    Main.wofB = num5 * 16;
                else if (Main.wofB > num5 * 16)
                {
                    --Main.wofB;
                    if (Main.wofB < num5 * 16)
                        Main.wofB = num5 * 16;
                }
                else if (Main.wofB < num5 * 16)
                {
                    ++Main.wofB;
                    if (Main.wofB > num5 * 16)
                        Main.wofB = num5 * 16;
                }
                int num6 = 0;
                int j2 = num3 - 7;
                while (num6 < 15 && j2 < Main.maxTilesY - 10)
                {
                    --j2;
                    for (int i = num1; i <= num2; ++i)
                    {
                        try
                        {
                            if (!WorldGen.SolidTile(i, j2))
                            {
                                if ((int)Main.tile[i, j2].liquid <= 0)
                                    continue;
                            }
                            ++num6;
                        }
                        catch
                        {
                            num6 += 15;
                        }
                    }
                }
                int num7 = j2 - 4;
                if (Main.wofT == -1)
                    Main.wofT = num7 * 16;
                else if (Main.wofT > num7 * 16)
                {
                    --Main.wofT;
                    if (Main.wofT < num7 * 16)
                        Main.wofT = num7 * 16;
                }
                else if (Main.wofT < num7 * 16)
                {
                    ++Main.wofT;
                    if (Main.wofT > num7 * 16)
                        Main.wofT = num7 * 16;
                }
                float num8 = (float)((Main.wofB + Main.wofT) / 2 - this.height / 2);
                if ((double)this.position.Y > (double)num8 + 1.0)
                    this.velocity.Y = -1f;
                else if ((double)this.position.Y < (double)num8 - 1.0)
                    this.velocity.Y = 1f;
                this.velocity.Y = 0.0f;
                this.position.Y = num8;
                float num9 = 1.5f;
                if ((double)this.life < (double)this.lifeMax * 0.75)
                    num9 += 0.25f;
                if ((double)this.life < (double)this.lifeMax * 0.5)
                    num9 += 0.4f;
                if ((double)this.life < (double)this.lifeMax * 0.25)
                    num9 += 0.5f;
                if ((double)this.life < (double)this.lifeMax * 0.1)
                    num9 += 0.6f;
                if ((double)this.life < (double)this.lifeMax * 0.66 && Main.expertMode)
                    num9 += 0.3f;
                if ((double)this.life < (double)this.lifeMax * 0.33 && Main.expertMode)
                    num9 += 0.3f;
                if ((double)this.life < (double)this.lifeMax * 0.05 && Main.expertMode)
                    num9 += 0.6f;
                if ((double)this.life < (double)this.lifeMax * 0.035 && Main.expertMode)
                    num9 += 0.6f;
                if ((double)this.life < (double)this.lifeMax * 0.025 && Main.expertMode)
                    num9 += 0.6f;
                if (Main.expertMode)
                    num9 = num9 * 1.35f + 0.35f;
                if ((double)this.velocity.X == 0.0)
                {
                    this.TargetClosest(true);
                    this.velocity.X = (float)this.direction;
                }
                if ((double)this.velocity.X < 0.0)
                {
                    this.velocity.X = -num9;
                    this.direction = -1;
                }
                else
                {
                    this.velocity.X = num9;
                    this.direction = 1;
                }
                this.spriteDirection = this.direction;
                Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                float num10 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                float num11 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                float num12 = (float)Math.Sqrt((double)num10 * (double)num10 + (double)num11 * (double)num11);
                float num13 = num10 * num12;
                float num14 = num11 * num12;
                this.rotation = this.direction <= 0 ? ((double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2) >= (double)this.position.X + (double)(this.width / 2) ? 0.0f : (float)Math.Atan2((double)num14, (double)num13) + 3.14f) : ((double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2) <= (double)this.position.X + (double)(this.width / 2) ? 0.0f : (float)Math.Atan2(-(double)num14, -(double)num13) + 3.14f);
                if (Main.expertMode && Main.netMode != 1)
                {
                    int num15 = (int)(1.0 + (double)this.life / (double)this.lifeMax * 10.0);
                    int num16 = num15 * num15;
                    if (num16 < 400)
                        num16 = (num16 * 19 + 400) / 20;
                    if (num16 < 60)
                        num16 = (num16 * 3 + 60) / 4;
                    if (num16 < 20)
                        num16 = (num16 + 20) / 2;
                    int maxValue1 = (int)((double)num16 * 0.7);
                    if (Main.rand.Next(maxValue1) == 0)
                    {
                        int index1 = 0;
                        float[] numArray = new float[10];
                        for (int index2 = 0; index2 < 200; ++index2)
                        {
                            if (index1 < 10 && Main.npc[index2].active && Main.npc[index2].type == 115)
                            {
                                numArray[index1] = Main.npc[index2].ai[0];
                                ++index1;
                            }
                        }
                        int maxValue2 = 1 + index1 * 2;
                        if (index1 < 10 && Main.rand.Next(maxValue2) <= 1)
                        {
                            int num17 = -1;
                            for (int index2 = 0; index2 < 1000; ++index2)
                            {
                                int num18 = Main.rand.Next(10);
                                float num19 = (float)((double)num18 * 0.100000001490116 - 0.0500000007450581);
                                bool flag = true;
                                for (int index3 = 0; index3 < index1; ++index3)
                                {
                                    if ((double)num19 == (double)numArray[index3])
                                    {
                                        flag = false;
                                        break;
                                    }
                                }
                                if (flag)
                                {
                                    num17 = num18;
                                    break;
                                }
                            }
                            if (num17 >= 0)
                            {
                                int index2 = NPC.NewNPC((int)this.position.X, (int)num8, 115, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                Main.npc[index2].ai[0] = (float)((double)num17 * 0.100000001490116 - 0.0500000007450581);
                            }
                        }
                    }
                }
                if ((double)this.localAI[0] != 1.0 || Main.netMode == 1)
                    return;
                this.localAI[0] = 2f;
                int index4 = NPC.NewNPC((int)this.position.X, (int)(float)(((double)((Main.wofB + Main.wofT) / 2) + (double)Main.wofT) / 2.0), 114, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                Main.npc[index4].ai[0] = 1f;
                int index5 = NPC.NewNPC((int)this.position.X, (int)(float)(((double)((Main.wofB + Main.wofT) / 2) + (double)Main.wofB) / 2.0), 114, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                Main.npc[index5].ai[0] = -1f;
                float num20 = (float)(((double)((Main.wofB + Main.wofT) / 2) + (double)Main.wofB) / 2.0);
                for (int index1 = 0; index1 < 11; ++index1)
                {
                    int index2 = NPC.NewNPC((int)this.position.X, (int)num20, 115, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    Main.npc[index2].ai[0] = (float)((double)index1 * 0.100000001490116 - 0.0500000007450581);
                }
            }
            else if (this.aiStyle == 28)
            {
                if (Main.wof < 0)
                {
                    this.active = false;
                }
                else
                {
                    this.realLife = Main.wof;
                    if (Main.npc[Main.wof].life > 0)
                        this.life = Main.npc[Main.wof].life;
                    this.TargetClosest(true);
                    this.position.X = Main.npc[Main.wof].position.X;
                    this.direction = Main.npc[Main.wof].direction;
                    this.spriteDirection = this.direction;
                    float num1 = (float)((Main.wofB + Main.wofT) / 2);
                    float num2 = ((double)this.ai[0] <= 0.0 ? (float)(((double)num1 + (double)Main.wofB) / 2.0) : (float)(((double)num1 + (double)Main.wofT) / 2.0)) - (float)(this.height / 2);
                    if ((double)this.position.Y > (double)num2 + 1.0)
                        this.velocity.Y = -1f;
                    else if ((double)this.position.Y < (double)num2 - 1.0)
                    {
                        this.velocity.Y = 1f;
                    }
                    else
                    {
                        this.velocity.Y = 0.0f;
                        this.position.Y = num2;
                    }
                    if ((double)this.velocity.Y > 5.0)
                        this.velocity.Y = 5f;
                    if ((double)this.velocity.Y < -5.0)
                        this.velocity.Y = -5f;
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num3 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num4 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num5 = (float)Math.Sqrt((double)num3 * (double)num3 + (double)num4 * (double)num4);
                    float num6 = num3 * num5;
                    float num7 = num4 * num5;
                    bool flag = true;
                    if (this.direction > 0)
                    {
                        if ((double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2) > (double)this.position.X + (double)(this.width / 2))
                        {
                            this.rotation = (float)Math.Atan2(-(double)num7, -(double)num6) + 3.14f;
                        }
                        else
                        {
                            this.rotation = 0.0f;
                            flag = false;
                        }
                    }
                    else if ((double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2) < (double)this.position.X + (double)(this.width / 2))
                    {
                        this.rotation = (float)Math.Atan2((double)num7, (double)num6) + 3.14f;
                    }
                    else
                    {
                        this.rotation = 0.0f;
                        flag = false;
                    }
                    if (Main.netMode == 1)
                        return;
                    int num8 = 4;
                    ++this.localAI[1];
                    if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.75)
                    {
                        ++this.localAI[1];
                        ++num8;
                    }
                    if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
                    {
                        ++this.localAI[1];
                        ++num8;
                    }
                    if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
                    {
                        ++this.localAI[1];
                        num8 += 2;
                    }
                    if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
                    {
                        this.localAI[1] += 2f;
                        num8 += 3;
                    }
                    if (Main.expertMode)
                    {
                        this.localAI[1] += 0.5f;
                        ++num8;
                        if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
                        {
                            this.localAI[1] += 2f;
                            num8 += 3;
                        }
                    }
                    if ((double)this.localAI[2] == 0.0)
                    {
                        if ((double)this.localAI[1] <= 600.0)
                            return;
                        this.localAI[2] = 1f;
                        this.localAI[1] = 0.0f;
                    }
                    else
                    {
                        if ((double)this.localAI[1] <= 45.0 || !Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                            return;
                        this.localAI[1] = 0.0f;
                        ++this.localAI[2];
                        if ((double)this.localAI[2] >= (double)num8)
                            this.localAI[2] = 0.0f;
                        if (!flag)
                            return;
                        float num9 = 9f;
                        int Damage = 11;
                        int Type = 83;
                        if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
                        {
                            ++Damage;
                            ++num9;
                        }
                        if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
                        {
                            ++Damage;
                            ++num9;
                        }
                        if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
                        {
                            Damage += 2;
                            num9 += 2f;
                        }
                        vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num10 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                        float num11 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y;
                        float num12 = (float)Math.Sqrt((double)num10 * (double)num10 + (double)num11 * (double)num11);
                        float num13 = num9 / num12;
                        float SpeedX = num10 * num13;
                        float SpeedY = num11 * num13;
                        vector2.X += SpeedX;
                        vector2.Y += SpeedY;
                        Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                }
            }
            else if (this.aiStyle == 29)
            {
                if (this.justHit)
                    this.ai[1] = 10f;
                if (Main.wof < 0)
                {
                    this.active = false;
                }
                else
                {
                    this.TargetClosest(true);
                    float num1 = 0.1f;
                    float num2 = 300f;
                    if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
                    {
                        this.damage = (int)(75.0 * (double)Main.damageMultiplier);
                        this.defense = 40;
                        if (!Main.expertMode)
                            num2 = 900f;
                        else
                            num1 += 0.1f;
                    }
                    else if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
                    {
                        this.damage = (int)(60.0 * (double)Main.damageMultiplier);
                        this.defense = 30;
                        if (!Main.expertMode)
                            num2 = 700f;
                        else
                            num1 += 0.066f;
                    }
                    else if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.75)
                    {
                        this.damage = (int)(45.0 * (double)Main.damageMultiplier);
                        this.defense = 20;
                        if (!Main.expertMode)
                            num2 = 500f;
                        else
                            num1 += 0.033f;
                    }
                    if (Main.expertMode)
                    {
                        this.defense = this.defDefense;
                        if (this.whoAmI % 4 == 0)
                            num2 *= 1.75f;
                        if (this.whoAmI % 4 == 1)
                            num2 *= 1.5f;
                        if (this.whoAmI % 4 == 2)
                            num2 *= 1.25f;
                        if (this.whoAmI % 3 == 0)
                            num2 *= 1.5f;
                        if (this.whoAmI % 3 == 1)
                            num2 *= 1.25f;
                        num2 *= 0.75f;
                    }
                    float x = Main.npc[Main.wof].position.X + (float)(Main.npc[Main.wof].width / 2);
                    float num3 = Main.npc[Main.wof].position.Y;
                    float num4 = (float)(Main.wofB - Main.wofT);
                    float y = (float)Main.wofT + num4 * this.ai[0];
                    ++this.ai[2];
                    if ((double)this.ai[2] > 100.0)
                    {
                        num2 = (float)(int)((double)num2 * 1.29999995231628);
                        if ((double)this.ai[2] > 200.0)
                            this.ai[2] = 0.0f;
                    }
                    Vector2 vector2 = new Vector2(x, y);
                    float num5 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - (float)(this.width / 2) - vector2.X;
                    float num6 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - (float)(this.height / 2) - vector2.Y;
                    float num7 = (float)Math.Sqrt((double)num5 * (double)num5 + (double)num6 * (double)num6);
                    if ((double)this.ai[1] == 0.0)
                    {
                        if ((double)num7 > (double)num2)
                        {
                            float num8 = num2 / num7;
                            num5 *= num8;
                            num6 *= num8;
                        }
                        if ((double)this.position.X < (double)x + (double)num5)
                        {
                            this.velocity.X += num1;
                            if ((double)this.velocity.X < 0.0 && (double)num5 > 0.0)
                                this.velocity.X += num1 * 2.5f;
                        }
                        else if ((double)this.position.X > (double)x + (double)num5)
                        {
                            this.velocity.X -= num1;
                            if ((double)this.velocity.X > 0.0 && (double)num5 < 0.0)
                                this.velocity.X -= num1 * 2.5f;
                        }
                        if ((double)this.position.Y < (double)y + (double)num6)
                        {
                            this.velocity.Y += num1;
                            if ((double)this.velocity.Y < 0.0 && (double)num6 > 0.0)
                                this.velocity.Y += num1 * 2.5f;
                        }
                        else if ((double)this.position.Y > (double)y + (double)num6)
                        {
                            this.velocity.Y -= num1;
                            if ((double)this.velocity.Y > 0.0 && (double)num6 < 0.0)
                                this.velocity.Y -= num1 * 2.5f;
                        }
                        float num9 = 4f;
                        if (Main.expertMode && Main.wof >= 0)
                        {
                            float num8 = 1.5f;
                            float num10 = (float)(Main.npc[Main.wof].life / Main.npc[Main.wof].lifeMax);
                            if ((double)num10 < 0.75)
                                num8 += 0.7f;
                            if ((double)num10 < 0.5)
                                num8 += 0.7f;
                            if ((double)num10 < 0.25)
                                num8 += 0.9f;
                            if ((double)num10 < 0.1)
                                num8 += 0.9f;
                            float num11 = num8 * 1.25f + 0.3f;
                            num9 += num11 * 0.35f;
                            if ((double)this.Center.X < (double)Main.npc[Main.wof].Center.X && (double)Main.npc[Main.wof].velocity.X > 0.0)
                                num9 += 6f;
                            if ((double)this.Center.X > (double)Main.npc[Main.wof].Center.X && (double)Main.npc[Main.wof].velocity.X < 0.0)
                                num9 += 6f;
                        }
                        if ((double)this.velocity.X > (double)num9)
                            this.velocity.X = num9;
                        if ((double)this.velocity.X < -(double)num9)
                            this.velocity.X = -num9;
                        if ((double)this.velocity.Y > (double)num9)
                            this.velocity.Y = num9;
                        if ((double)this.velocity.Y < -(double)num9)
                            this.velocity.Y = -num9;
                    }
                    else if ((double)this.ai[1] > 0.0)
                        --this.ai[1];
                    else
                        this.ai[1] = 0.0f;
                    if ((double)num5 > 0.0)
                    {
                        this.spriteDirection = 1;
                        this.rotation = (float)Math.Atan2((double)num6, (double)num5);
                    }
                    if ((double)num5 < 0.0)
                    {
                        this.spriteDirection = -1;
                        this.rotation = (float)Math.Atan2((double)num6, (double)num5) + 3.14f;
                    }
                    Lighting.AddLight((int)((double)this.position.X + (double)(this.width / 2)) / 16, (int)((double)this.position.Y + (double)(this.height / 2)) / 16, 0.3f, 0.2f, 0.1f);
                }
            }
            else if (this.aiStyle == 30)
            {
                if (this.target < 0 || this.target == (int)byte.MaxValue || (Main.player[this.target].dead || !Main.player[this.target].active))
                    this.TargetClosest(true);
                bool flag = Main.player[this.target].dead;
                float num1 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
                float num2 = (float)Math.Atan2((double)((float)((double)this.position.Y + (double)this.height - 59.0) - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2)), (double)num1) + 1.57f;
                if ((double)num2 < 0.0)
                    num2 += 6.283f;
                else if ((double)num2 > 6.283)
                    num2 -= 6.283f;
                float num3 = 0.1f;
                if ((double)this.rotation < (double)num2)
                {
                    if ((double)num2 - (double)this.rotation > 3.1415)
                        this.rotation -= num3;
                    else
                        this.rotation += num3;
                }
                else if ((double)this.rotation > (double)num2)
                {
                    if ((double)this.rotation - (double)num2 > 3.1415)
                        this.rotation += num3;
                    else
                        this.rotation -= num3;
                }
                if ((double)this.rotation > (double)num2 - (double)num3 && (double)this.rotation < (double)num2 + (double)num3)
                    this.rotation = num2;
                if ((double)this.rotation < 0.0)
                    this.rotation += 6.283f;
                else if ((double)this.rotation > 6.283)
                    this.rotation -= 6.283f;
                if ((double)this.rotation > (double)num2 - (double)num3 && (double)this.rotation < (double)num2 + (double)num3)
                    this.rotation = num2;
                if (Main.rand.Next(5) == 0)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((double)this.height * 0.5), 5, this.velocity.X, 2f, 0, new Color(), 1f);
                    Main.dust[index].velocity.X *= 0.5f;
                    Main.dust[index].velocity.Y *= 0.1f;
                }
                if (Main.netMode != 1 && !Main.dayTime && (!flag && this.timeLeft < 10))
                {
                    for (int index = 0; index < 200; ++index)
                    {
                        if (index != this.whoAmI && Main.npc[index].active && (Main.npc[index].type == 125 || Main.npc[index].type == 126) && Main.npc[index].timeLeft - 1 > this.timeLeft)
                            this.timeLeft = Main.npc[index].timeLeft - 1;
                    }
                }
                if (Main.dayTime || flag)
                {
                    this.velocity.Y -= 0.04f;
                    if (this.timeLeft <= 10)
                        return;
                    this.timeLeft = 10;
                }
                else if ((double)this.ai[0] == 0.0)
                {
                    if ((double)this.ai[1] == 0.0)
                    {
                        float num4 = 7f;
                        float num5 = 0.1f;
                        if (Main.expertMode)
                        {
                            num4 = 8.25f;
                            num5 = 0.115f;
                        }
                        int num6 = 1;
                        if ((double)this.position.X + (double)(this.width / 2) < (double)Main.player[this.target].position.X + (double)Main.player[this.target].width)
                            num6 = -1;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num7 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num6 * 300) - vector2.X;
                        float num8 = (float)((double)Main.player[this.target].position.Y + (double)(Main.player[this.target].height / 2) - 300.0) - vector2.Y;
                        float num9 = (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                        float num10 = num9;
                        float num11 = num4 / num9;
                        float num12 = num7 * num11;
                        float num13 = num8 * num11;
                        if ((double)this.velocity.X < (double)num12)
                        {
                            this.velocity.X += num5;
                            if ((double)this.velocity.X < 0.0 && (double)num12 > 0.0)
                                this.velocity.X += num5;
                        }
                        else if ((double)this.velocity.X > (double)num12)
                        {
                            this.velocity.X -= num5;
                            if ((double)this.velocity.X > 0.0 && (double)num12 < 0.0)
                                this.velocity.X -= num5;
                        }
                        if ((double)this.velocity.Y < (double)num13)
                        {
                            this.velocity.Y += num5;
                            if ((double)this.velocity.Y < 0.0 && (double)num13 > 0.0)
                                this.velocity.Y += num5;
                        }
                        else if ((double)this.velocity.Y > (double)num13)
                        {
                            this.velocity.Y -= num5;
                            if ((double)this.velocity.Y > 0.0 && (double)num13 < 0.0)
                                this.velocity.Y -= num5;
                        }
                        ++this.ai[2];
                        if ((double)this.ai[2] >= 600.0)
                        {
                            this.ai[1] = 1f;
                            this.ai[2] = 0.0f;
                            this.ai[3] = 0.0f;
                            this.target = (int)byte.MaxValue;
                            this.netUpdate = true;
                        }
                        else if ((double)this.position.Y + (double)this.height < (double)Main.player[this.target].position.Y && (double)num10 < 400.0)
                        {
                            if (!Main.player[this.target].dead)
                            {
                                ++this.ai[3];
                                if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.9)
                                    this.ai[3] += 0.3f;
                                if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.8)
                                    this.ai[3] += 0.3f;
                                if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.7)
                                    this.ai[3] += 0.3f;
                                if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.6)
                                    this.ai[3] += 0.3f;
                            }
                            if ((double)this.ai[3] >= 60.0)
                            {
                                this.ai[3] = 0.0f;
                                vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                                float num14 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                                float num15 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                                if (Main.netMode != 1)
                                {
                                    float num16 = 9f;
                                    int Damage = 20;
                                    int Type = 83;
                                    if (Main.expertMode)
                                    {
                                        num16 = 10.5f;
                                        Damage = 19;
                                    }
                                    float num17 = (float)Math.Sqrt((double)num14 * (double)num14 + (double)num15 * (double)num15);
                                    float num18 = num16 / num17;
                                    float num19 = num14 * num18;
                                    float num20 = num15 * num18;
                                    float SpeedX = num19 + (float)Main.rand.Next(-40, 41) * 0.08f;
                                    float SpeedY = num20 + (float)Main.rand.Next(-40, 41) * 0.08f;
                                    vector2.X += SpeedX * 15f;
                                    vector2.Y += SpeedY * 15f;
                                    Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                }
                            }
                        }
                    }
                    else if ((double)this.ai[1] == 1.0)
                    {
                        this.rotation = num2;
                        float num4 = 12f;
                        if (Main.expertMode)
                            num4 = 15f;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num5 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                        float num6 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                        float num7 = (float)Math.Sqrt((double)num5 * (double)num5 + (double)num6 * (double)num6);
                        float num8 = num4 / num7;
                        this.velocity.X = num5 * num8;
                        this.velocity.Y = num6 * num8;
                        this.ai[1] = 2f;
                    }
                    else if ((double)this.ai[1] == 2.0)
                    {
                        ++this.ai[2];
                        if ((double)this.ai[2] >= 25.0)
                        {
                            this.velocity.X *= 0.96f;
                            this.velocity.Y *= 0.96f;
                            if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                                this.velocity.X = 0.0f;
                            if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
                                this.velocity.Y = 0.0f;
                        }
                        else
                            this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
                        if ((double)this.ai[2] >= 70.0)
                        {
                            ++this.ai[3];
                            this.ai[2] = 0.0f;
                            this.target = (int)byte.MaxValue;
                            this.rotation = num2;
                            if ((double)this.ai[3] >= 4.0)
                            {
                                this.ai[1] = 0.0f;
                                this.ai[3] = 0.0f;
                            }
                            else
                                this.ai[1] = 1f;
                        }
                    }
                    if ((double)this.life >= (double)this.lifeMax * 0.4)
                        return;
                    this.ai[0] = 1f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 1.0 || (double)this.ai[0] == 2.0)
                {
                    if ((double)this.ai[0] == 1.0)
                    {
                        this.ai[2] += 0.005f;
                        if ((double)this.ai[2] > 0.5)
                            this.ai[2] = 0.5f;
                    }
                    else
                    {
                        this.ai[2] -= 0.005f;
                        if ((double)this.ai[2] < 0.0)
                            this.ai[2] = 0.0f;
                    }
                    this.rotation += this.ai[2];
                    ++this.ai[1];
                    if ((double)this.ai[1] == 100.0)
                    {
                        ++this.ai[0];
                        this.ai[1] = 0.0f;
                        if ((double)this.ai[0] == 3.0)
                        {
                            this.ai[2] = 0.0f;
                        }
                        else
                        {
                            Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
                            for (int index = 0; index < 2; ++index)
                            {
                                Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 143, 1f);
                                Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
                                Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 6, 1f);
                            }
                            for (int index = 0; index < 20; ++index)
                                Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, new Color(), 1f);
                            Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
                        }
                    }
                    Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, new Color(), 1f);
                    this.velocity.X *= 0.98f;
                    this.velocity.Y *= 0.98f;
                    if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                        this.velocity.X = 0.0f;
                    if ((double)this.velocity.Y <= -0.1 || (double)this.velocity.Y >= 0.1)
                        return;
                    this.velocity.Y = 0.0f;
                }
                else
                {
                    this.damage = (int)((double)this.defDamage * 1.5);
                    this.defense = this.defDefense + 10;
                    this.soundHit = 4;
                    if ((double)this.ai[1] == 0.0)
                    {
                        float num4 = 8f;
                        float num5 = 0.15f;
                        if (Main.expertMode)
                        {
                            num4 = 9.5f;
                            num5 = 0.175f;
                        }
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num6 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                        float num7 = (float)((double)Main.player[this.target].position.Y + (double)(Main.player[this.target].height / 2) - 300.0) - vector2.Y;
                        float num8 = (float)Math.Sqrt((double)num6 * (double)num6 + (double)num7 * (double)num7);
                        float num9 = num4 / num8;
                        float num10 = num6 * num9;
                        float num11 = num7 * num9;
                        if ((double)this.velocity.X < (double)num10)
                        {
                            this.velocity.X += num5;
                            if ((double)this.velocity.X < 0.0 && (double)num10 > 0.0)
                                this.velocity.X += num5;
                        }
                        else if ((double)this.velocity.X > (double)num10)
                        {
                            this.velocity.X -= num5;
                            if ((double)this.velocity.X > 0.0 && (double)num10 < 0.0)
                                this.velocity.X -= num5;
                        }
                        if ((double)this.velocity.Y < (double)num11)
                        {
                            this.velocity.Y += num5;
                            if ((double)this.velocity.Y < 0.0 && (double)num11 > 0.0)
                                this.velocity.Y += num5;
                        }
                        else if ((double)this.velocity.Y > (double)num11)
                        {
                            this.velocity.Y -= num5;
                            if ((double)this.velocity.Y > 0.0 && (double)num11 < 0.0)
                                this.velocity.Y -= num5;
                        }
                        ++this.ai[2];
                        if ((double)this.ai[2] >= 300.0)
                        {
                            this.ai[1] = 1f;
                            this.ai[2] = 0.0f;
                            this.ai[3] = 0.0f;
                            this.TargetClosest(true);
                            this.netUpdate = true;
                        }
                        vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num12 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                        float num13 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                        this.rotation = (float)Math.Atan2((double)num13, (double)num12) - 1.57f;
                        if (Main.netMode == 1)
                            return;
                        ++this.localAI[1];
                        if ((double)this.life < (double)this.lifeMax * 0.75)
                            ++this.localAI[1];
                        if ((double)this.life < (double)this.lifeMax * 0.5)
                            ++this.localAI[1];
                        if ((double)this.life < (double)this.lifeMax * 0.25)
                            ++this.localAI[1];
                        if ((double)this.life < (double)this.lifeMax * 0.1)
                            this.localAI[1] += 2f;
                        if ((double)this.localAI[1] <= 180.0 || !Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                            return;
                        this.localAI[1] = 0.0f;
                        float num14 = 8.5f;
                        int Damage = 25;
                        int Type = 100;
                        if (Main.expertMode)
                        {
                            num14 = 10f;
                            Damage = 23;
                        }
                        float num15 = (float)Math.Sqrt((double)num12 * (double)num12 + (double)num13 * (double)num13);
                        float num16 = num14 / num15;
                        float SpeedX = num12 * num16;
                        float SpeedY = num13 * num16;
                        vector2.X += SpeedX * 15f;
                        vector2.Y += SpeedY * 15f;
                        Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                    else
                    {
                        int num4 = 1;
                        if ((double)this.position.X + (double)(this.width / 2) < (double)Main.player[this.target].position.X + (double)Main.player[this.target].width)
                            num4 = -1;
                        float num5 = 8f;
                        float num6 = 0.2f;
                        if (Main.expertMode)
                        {
                            num5 = 9.5f;
                            num6 = 0.25f;
                        }
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num7 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num4 * 340) - vector2.X;
                        float num8 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                        float num9 = (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                        float num10 = num5 / num9;
                        float num11 = num7 * num10;
                        float num12 = num8 * num10;
                        if ((double)this.velocity.X < (double)num11)
                        {
                            this.velocity.X += num6;
                            if ((double)this.velocity.X < 0.0 && (double)num11 > 0.0)
                                this.velocity.X += num6;
                        }
                        else if ((double)this.velocity.X > (double)num11)
                        {
                            this.velocity.X -= num6;
                            if ((double)this.velocity.X > 0.0 && (double)num11 < 0.0)
                                this.velocity.X -= num6;
                        }
                        if ((double)this.velocity.Y < (double)num12)
                        {
                            this.velocity.Y += num6;
                            if ((double)this.velocity.Y < 0.0 && (double)num12 > 0.0)
                                this.velocity.Y += num6;
                        }
                        else if ((double)this.velocity.Y > (double)num12)
                        {
                            this.velocity.Y -= num6;
                            if ((double)this.velocity.Y > 0.0 && (double)num12 < 0.0)
                                this.velocity.Y -= num6;
                        }
                        vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num13 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                        float num14 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                        this.rotation = (float)Math.Atan2((double)num14, (double)num13) - 1.57f;
                        if (Main.netMode != 1)
                        {
                            ++this.localAI[1];
                            if ((double)this.life < (double)this.lifeMax * 0.75)
                                this.localAI[1] += 0.5f;
                            if ((double)this.life < (double)this.lifeMax * 0.5)
                                this.localAI[1] += 0.75f;
                            if ((double)this.life < (double)this.lifeMax * 0.25)
                                ++this.localAI[1];
                            if ((double)this.life < (double)this.lifeMax * 0.1)
                                this.localAI[1] += 1.5f;
                            if (Main.expertMode)
                                this.localAI[1] += 1.5f;
                            if ((double)this.localAI[1] > 60.0 && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                            {
                                this.localAI[1] = 0.0f;
                                float num15 = 9f;
                                int Damage = 18;
                                int Type = 100;
                                if (Main.expertMode)
                                    Damage = 17;
                                float num16 = (float)Math.Sqrt((double)num13 * (double)num13 + (double)num14 * (double)num14);
                                float num17 = num15 / num16;
                                float SpeedX = num13 * num17;
                                float SpeedY = num14 * num17;
                                vector2.X += SpeedX * 15f;
                                vector2.Y += SpeedY * 15f;
                                Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            }
                        }
                        ++this.ai[2];
                        if ((double)this.ai[2] < 180.0)
                            return;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.ai[3] = 0.0f;
                        this.TargetClosest(true);
                        this.netUpdate = true;
                    }
                }
            }
            else if (this.aiStyle == 31)
            {
                if (this.target < 0 || this.target == (int)byte.MaxValue || (Main.player[this.target].dead || !Main.player[this.target].active))
                    this.TargetClosest(true);
                bool flag = Main.player[this.target].dead;
                float num1 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
                float num2 = (float)Math.Atan2((double)((float)((double)this.position.Y + (double)this.height - 59.0) - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2)), (double)num1) + 1.57f;
                if ((double)num2 < 0.0)
                    num2 += 6.283f;
                else if ((double)num2 > 6.283)
                    num2 -= 6.283f;
                float num3 = 0.15f;
                if ((double)this.rotation < (double)num2)
                {
                    if ((double)num2 - (double)this.rotation > 3.1415)
                        this.rotation -= num3;
                    else
                        this.rotation += num3;
                }
                else if ((double)this.rotation > (double)num2)
                {
                    if ((double)this.rotation - (double)num2 > 3.1415)
                        this.rotation += num3;
                    else
                        this.rotation -= num3;
                }
                if ((double)this.rotation > (double)num2 - (double)num3 && (double)this.rotation < (double)num2 + (double)num3)
                    this.rotation = num2;
                if ((double)this.rotation < 0.0)
                    this.rotation += 6.283f;
                else if ((double)this.rotation > 6.283)
                    this.rotation -= 6.283f;
                if ((double)this.rotation > (double)num2 - (double)num3 && (double)this.rotation < (double)num2 + (double)num3)
                    this.rotation = num2;
                if (Main.rand.Next(5) == 0)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((double)this.height * 0.5), 5, this.velocity.X, 2f, 0, new Color(), 1f);
                    Main.dust[index].velocity.X *= 0.5f;
                    Main.dust[index].velocity.Y *= 0.1f;
                }
                if (Main.netMode != 1 && !Main.dayTime && (!flag && this.timeLeft < 10))
                {
                    for (int index = 0; index < 200; ++index)
                    {
                        if (index != this.whoAmI && Main.npc[index].active && (Main.npc[index].type == 125 || Main.npc[index].type == 126) && Main.npc[index].timeLeft - 1 > this.timeLeft)
                            this.timeLeft = Main.npc[index].timeLeft - 1;
                    }
                }
                if (Main.dayTime || flag)
                {
                    this.velocity.Y -= 0.04f;
                    if (this.timeLeft <= 10)
                        return;
                    this.timeLeft = 10;
                }
                else if ((double)this.ai[0] == 0.0)
                {
                    if ((double)this.ai[1] == 0.0)
                    {
                        this.TargetClosest(true);
                        float num4 = 12f;
                        float num5 = 0.4f;
                        int num6 = 1;
                        if ((double)this.position.X + (double)(this.width / 2) < (double)Main.player[this.target].position.X + (double)Main.player[this.target].width)
                            num6 = -1;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num7 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num6 * 400) - vector2.X;
                        float num8 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                        float num9 = (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                        float num10 = num4 / num9;
                        float num11 = num7 * num10;
                        float num12 = num8 * num10;
                        if ((double)this.velocity.X < (double)num11)
                        {
                            this.velocity.X += num5;
                            if ((double)this.velocity.X < 0.0 && (double)num11 > 0.0)
                                this.velocity.X += num5;
                        }
                        else if ((double)this.velocity.X > (double)num11)
                        {
                            this.velocity.X -= num5;
                            if ((double)this.velocity.X > 0.0 && (double)num11 < 0.0)
                                this.velocity.X -= num5;
                        }
                        if ((double)this.velocity.Y < (double)num12)
                        {
                            this.velocity.Y += num5;
                            if ((double)this.velocity.Y < 0.0 && (double)num12 > 0.0)
                                this.velocity.Y += num5;
                        }
                        else if ((double)this.velocity.Y > (double)num12)
                        {
                            this.velocity.Y -= num5;
                            if ((double)this.velocity.Y > 0.0 && (double)num12 < 0.0)
                                this.velocity.Y -= num5;
                        }
                        ++this.ai[2];
                        if ((double)this.ai[2] >= 600.0)
                        {
                            this.ai[1] = 1f;
                            this.ai[2] = 0.0f;
                            this.ai[3] = 0.0f;
                            this.target = (int)byte.MaxValue;
                            this.netUpdate = true;
                        }
                        else
                        {
                            if (!Main.player[this.target].dead)
                            {
                                ++this.ai[3];
                                if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.8)
                                    this.ai[3] += 0.6f;
                            }
                            if ((double)this.ai[3] >= 60.0)
                            {
                                this.ai[3] = 0.0f;
                                vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                                float num13 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                                float num14 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                                if (Main.netMode != 1)
                                {
                                    float num15 = 12f;
                                    int Damage = 25;
                                    int Type = 96;
                                    if (Main.expertMode)
                                    {
                                        num15 = 14f;
                                        Damage = 22;
                                    }
                                    float num16 = (float)Math.Sqrt((double)num13 * (double)num13 + (double)num14 * (double)num14);
                                    float num17 = num15 / num16;
                                    float num18 = num13 * num17;
                                    float num19 = num14 * num17;
                                    float SpeedX = num18 + (float)Main.rand.Next(-40, 41) * 0.05f;
                                    float SpeedY = num19 + (float)Main.rand.Next(-40, 41) * 0.05f;
                                    vector2.X += SpeedX * 4f;
                                    vector2.Y += SpeedY * 4f;
                                    Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                }
                            }
                        }
                    }
                    else if ((double)this.ai[1] == 1.0)
                    {
                        this.rotation = num2;
                        float num4 = 13f;
                        if (Main.expertMode)
                        {
                            if ((double)this.life < (double)this.lifeMax * 0.9)
                                num4 += 0.5f;
                            if ((double)this.life < (double)this.lifeMax * 0.8)
                                num4 += 0.5f;
                            if ((double)this.life < (double)this.lifeMax * 0.7)
                                num4 += 0.55f;
                            if ((double)this.life < (double)this.lifeMax * 0.6)
                                num4 += 0.6f;
                            if ((double)this.life < (double)this.lifeMax * 0.5)
                                num4 += 0.65f;
                        }
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num5 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                        float num6 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                        float num7 = (float)Math.Sqrt((double)num5 * (double)num5 + (double)num6 * (double)num6);
                        float num8 = num4 / num7;
                        this.velocity.X = num5 * num8;
                        this.velocity.Y = num6 * num8;
                        this.ai[1] = 2f;
                    }
                    else if ((double)this.ai[1] == 2.0)
                    {
                        ++this.ai[2];
                        if ((double)this.ai[2] >= 8.0)
                        {
                            this.velocity.X *= 0.9f;
                            this.velocity.Y *= 0.9f;
                            if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                                this.velocity.X = 0.0f;
                            if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
                                this.velocity.Y = 0.0f;
                        }
                        else
                            this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
                        if ((double)this.ai[2] >= 42.0)
                        {
                            ++this.ai[3];
                            this.ai[2] = 0.0f;
                            this.target = (int)byte.MaxValue;
                            this.rotation = num2;
                            if ((double)this.ai[3] >= 10.0)
                            {
                                this.ai[1] = 0.0f;
                                this.ai[3] = 0.0f;
                            }
                            else
                                this.ai[1] = 1f;
                        }
                    }
                    if ((double)this.life >= (double)this.lifeMax * 0.4)
                        return;
                    this.ai[0] = 1f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 1.0 || (double)this.ai[0] == 2.0)
                {
                    if ((double)this.ai[0] == 1.0)
                    {
                        this.ai[2] += 0.005f;
                        if ((double)this.ai[2] > 0.5)
                            this.ai[2] = 0.5f;
                    }
                    else
                    {
                        this.ai[2] -= 0.005f;
                        if ((double)this.ai[2] < 0.0)
                            this.ai[2] = 0.0f;
                    }
                    this.rotation += this.ai[2];
                    ++this.ai[1];
                    if ((double)this.ai[1] == 100.0)
                    {
                        ++this.ai[0];
                        this.ai[1] = 0.0f;
                        if ((double)this.ai[0] == 3.0)
                        {
                            this.ai[2] = 0.0f;
                        }
                        else
                        {
                            Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
                            for (int index = 0; index < 2; ++index)
                            {
                                Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 144, 1f);
                                Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
                                Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 6, 1f);
                            }
                            for (int index = 0; index < 20; ++index)
                                Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, new Color(), 1f);
                            Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
                        }
                    }
                    Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, new Color(), 1f);
                    this.velocity.X *= 0.98f;
                    this.velocity.Y *= 0.98f;
                    if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                        this.velocity.X = 0.0f;
                    if ((double)this.velocity.Y <= -0.1 || (double)this.velocity.Y >= 0.1)
                        return;
                    this.velocity.Y = 0.0f;
                }
                else
                {
                    this.soundHit = 4;
                    this.damage = (int)((double)this.defDamage * 1.5);
                    this.defense = this.defDefense + 18;
                    if ((double)this.ai[1] == 0.0)
                    {
                        float num4 = 4f;
                        float num5 = 0.1f;
                        int num6 = 1;
                        if ((double)this.position.X + (double)(this.width / 2) < (double)Main.player[this.target].position.X + (double)Main.player[this.target].width)
                            num6 = -1;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num7 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num6 * 180) - vector2.X;
                        float num8 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                        float num9 = (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                        if (Main.expertMode)
                        {
                            if ((double)num9 > 300.0)
                                num4 += 0.5f;
                            if ((double)num9 > 400.0)
                                num4 += 0.5f;
                            if ((double)num9 > 500.0)
                                num4 += 0.55f;
                            if ((double)num9 > 600.0)
                                num4 += 0.55f;
                            if ((double)num9 > 700.0)
                                num4 += 0.6f;
                            if ((double)num9 > 800.0)
                                num4 += 0.6f;
                        }
                        float num10 = num4 / num9;
                        float num11 = num7 * num10;
                        float num12 = num8 * num10;
                        if ((double)this.velocity.X < (double)num11)
                        {
                            this.velocity.X += num5;
                            if ((double)this.velocity.X < 0.0 && (double)num11 > 0.0)
                                this.velocity.X += num5;
                        }
                        else if ((double)this.velocity.X > (double)num11)
                        {
                            this.velocity.X -= num5;
                            if ((double)this.velocity.X > 0.0 && (double)num11 < 0.0)
                                this.velocity.X -= num5;
                        }
                        if ((double)this.velocity.Y < (double)num12)
                        {
                            this.velocity.Y += num5;
                            if ((double)this.velocity.Y < 0.0 && (double)num12 > 0.0)
                                this.velocity.Y += num5;
                        }
                        else if ((double)this.velocity.Y > (double)num12)
                        {
                            this.velocity.Y -= num5;
                            if ((double)this.velocity.Y > 0.0 && (double)num12 < 0.0)
                                this.velocity.Y -= num5;
                        }
                        ++this.ai[2];
                        if ((double)this.ai[2] >= 400.0)
                        {
                            this.ai[1] = 1f;
                            this.ai[2] = 0.0f;
                            this.ai[3] = 0.0f;
                            this.target = (int)byte.MaxValue;
                            this.netUpdate = true;
                        }
                        if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                            return;
                        ++this.localAI[2];
                        if ((double)this.localAI[2] > 22.0)
                        {
                            this.localAI[2] = 0.0f;
                            Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 34);
                        }
                        if (Main.netMode == 1)
                            return;
                        ++this.localAI[1];
                        if ((double)this.life < (double)this.lifeMax * 0.75)
                            ++this.localAI[1];
                        if ((double)this.life < (double)this.lifeMax * 0.5)
                            ++this.localAI[1];
                        if ((double)this.life < (double)this.lifeMax * 0.25)
                            ++this.localAI[1];
                        if ((double)this.life < (double)this.lifeMax * 0.1)
                            this.localAI[1] += 2f;
                        if ((double)this.localAI[1] <= 8.0)
                            return;
                        this.localAI[1] = 0.0f;
                        float num13 = 6f;
                        int Damage = 30;
                        if (Main.expertMode)
                            Damage = 27;
                        int Type = 101;
                        vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num14 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                        float num15 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                        float num16 = (float)Math.Sqrt((double)num14 * (double)num14 + (double)num15 * (double)num15);
                        float num17 = num13 / num16;
                        float num18 = num14 * num17;
                        float num19 = num15 * num17 + (float)Main.rand.Next(-40, 41) * 0.01f;
                        float num20 = num18 + (float)Main.rand.Next(-40, 41) * 0.01f;
                        float SpeedY = num19 + this.velocity.Y * 0.5f;
                        float SpeedX = num20 + this.velocity.X * 0.5f;
                        vector2.X -= SpeedX * 1f;
                        vector2.Y -= SpeedY * 1f;
                        Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                    else if ((double)this.ai[1] == 1.0)
                    {
                        Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
                        this.rotation = num2;
                        float num4 = 14f;
                        if (Main.expertMode)
                            num4 += 2.5f;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num5 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                        float num6 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                        float num7 = (float)Math.Sqrt((double)num5 * (double)num5 + (double)num6 * (double)num6);
                        float num8 = num4 / num7;
                        this.velocity.X = num5 * num8;
                        this.velocity.Y = num6 * num8;
                        this.ai[1] = 2f;
                    }
                    else
                    {
                        if ((double)this.ai[1] != 2.0)
                            return;
                        ++this.ai[2];
                        if (Main.expertMode)
                            this.ai[2] += 0.5f;
                        if ((double)this.ai[2] >= 50.0)
                        {
                            this.velocity.X *= 0.93f;
                            this.velocity.Y *= 0.93f;
                            if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                                this.velocity.X = 0.0f;
                            if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
                                this.velocity.Y = 0.0f;
                        }
                        else
                            this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
                        if ((double)this.ai[2] < 80.0)
                            return;
                        ++this.ai[3];
                        this.ai[2] = 0.0f;
                        this.target = (int)byte.MaxValue;
                        this.rotation = num2;
                        if ((double)this.ai[3] >= 6.0)
                        {
                            this.ai[1] = 0.0f;
                            this.ai[3] = 0.0f;
                        }
                        else
                            this.ai[1] = 1f;
                    }
                }
            }
            else if (this.aiStyle == 32)
            {
                this.damage = this.defDamage;
                this.defense = this.defDefense;
                if ((double)this.ai[0] == 0.0 && Main.netMode != 1)
                {
                    this.TargetClosest(true);
                    this.ai[0] = 1f;
                    int index1 = NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)this.position.Y + this.height / 2, 128, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    Main.npc[index1].ai[0] = -1f;
                    Main.npc[index1].ai[1] = (float)this.whoAmI;
                    Main.npc[index1].target = this.target;
                    Main.npc[index1].netUpdate = true;
                    int index2 = NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)this.position.Y + this.height / 2, 129, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    Main.npc[index2].ai[0] = 1f;
                    Main.npc[index2].ai[1] = (float)this.whoAmI;
                    Main.npc[index2].target = this.target;
                    Main.npc[index2].netUpdate = true;
                    int index3 = NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)this.position.Y + this.height / 2, 130, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    Main.npc[index3].ai[0] = -1f;
                    Main.npc[index3].ai[1] = (float)this.whoAmI;
                    Main.npc[index3].target = this.target;
                    Main.npc[index3].ai[3] = 150f;
                    Main.npc[index3].netUpdate = true;
                    int index4 = NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)this.position.Y + this.height / 2, 131, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    Main.npc[index4].ai[0] = 1f;
                    Main.npc[index4].ai[1] = (float)this.whoAmI;
                    Main.npc[index4].target = this.target;
                    Main.npc[index4].netUpdate = true;
                    Main.npc[index4].ai[3] = 150f;
                }
                if (Main.player[this.target].dead || (double)Math.Abs(this.position.X - Main.player[this.target].position.X) > 6000.0 || (double)Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 6000.0)
                {
                    this.TargetClosest(true);
                    if (Main.player[this.target].dead || (double)Math.Abs(this.position.X - Main.player[this.target].position.X) > 6000.0 || (double)Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 6000.0)
                        this.ai[1] = 3f;
                }
                if (Main.dayTime && (double)this.ai[1] != 3.0 && (double)this.ai[1] != 2.0)
                {
                    this.ai[1] = 2f;
                    Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
                }
                if ((double)this.ai[1] == 0.0)
                {
                    ++this.ai[2];
                    if ((double)this.ai[2] >= 600.0)
                    {
                        this.ai[2] = 0.0f;
                        this.ai[1] = 1f;
                        this.TargetClosest(true);
                        this.netUpdate = true;
                    }
                    this.rotation = this.velocity.X / 15f;
                    if ((double)this.position.Y > (double)Main.player[this.target].position.Y - 200.0)
                    {
                        if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y *= 0.98f;
                        this.velocity.Y -= 0.1f;
                        if ((double)this.velocity.Y > 2.0)
                            this.velocity.Y = 2f;
                    }
                    else if ((double)this.position.Y < (double)Main.player[this.target].position.Y - 500.0)
                    {
                        if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y *= 0.98f;
                        this.velocity.Y += 0.1f;
                        if ((double)this.velocity.Y < -2.0)
                            this.velocity.Y = -2f;
                    }
                    if ((double)this.position.X + (double)(this.width / 2) > (double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2) + 100.0)
                    {
                        if ((double)this.velocity.X > 0.0)
                            this.velocity.X *= 0.98f;
                        this.velocity.X -= 0.1f;
                        if ((double)this.velocity.X > 8.0)
                            this.velocity.X = 8f;
                    }
                    if ((double)this.position.X + (double)(this.width / 2) >= (double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2) - 100.0)
                        return;
                    if ((double)this.velocity.X < 0.0)
                        this.velocity.X *= 0.98f;
                    this.velocity.X += 0.1f;
                    if ((double)this.velocity.X >= -8.0)
                        return;
                    this.velocity.X = -8f;
                }
                else if ((double)this.ai[1] == 1.0)
                {
                    this.defense *= 2;
                    this.damage *= 2;
                    ++this.ai[2];
                    if ((double)this.ai[2] == 2.0)
                        Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
                    if ((double)this.ai[2] >= 400.0)
                    {
                        this.ai[2] = 0.0f;
                        this.ai[1] = 0.0f;
                    }
                    this.rotation += (float)this.direction * 0.3f;
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num2 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num3 = 2f / (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    this.velocity.X = num1 * num3;
                    this.velocity.Y = num2 * num3;
                }
                else if ((double)this.ai[1] == 2.0)
                {
                    this.damage = 1000;
                    this.defense = 9999;
                    this.rotation += (float)this.direction * 0.3f;
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num2 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    float num4 = 10f + num3 / 100f;
                    if ((double)num4 < 8.0)
                        num4 = 8f;
                    if ((double)num4 > 32.0)
                        num4 = 32f;
                    float num5 = num4 / num3;
                    this.velocity.X = num1 * num5;
                    this.velocity.Y = num2 * num5;
                }
                else
                {
                    if ((double)this.ai[1] != 3.0)
                        return;
                    this.velocity.Y += 0.1f;
                    if ((double)this.velocity.Y < 0.0)
                        this.velocity.Y *= 0.95f;
                    this.velocity.X *= 0.95f;
                    if (this.timeLeft <= 500)
                        return;
                    this.timeLeft = 500;
                }
            }
            else if (this.aiStyle == 33)
            {
                Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                float num1 = (float)((double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0]) - vector2_1.X;
                float num2 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2_1.Y;
                float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                if ((double)this.ai[2] != 99.0)
                {
                    if ((double)num3 > 800.0)
                        this.ai[2] = 99f;
                }
                else if ((double)num3 < 400.0)
                    this.ai[2] = 0.0f;
                this.spriteDirection = -(int)this.ai[0];
                if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
                {
                    this.ai[2] += 10f;
                    if ((double)this.ai[2] > 50.0 || Main.netMode != 2)
                    {
                        this.life = -1;
                        this.HitEffect(0, 10.0);
                        this.active = false;
                    }
                }
                if ((double)this.ai[2] == 99.0)
                {
                    if ((double)this.position.Y > (double)Main.npc[(int)this.ai[1]].position.Y)
                    {
                        if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y *= 0.96f;
                        this.velocity.Y -= 0.1f;
                        if ((double)this.velocity.Y > 8.0)
                            this.velocity.Y = 8f;
                    }
                    else if ((double)this.position.Y < (double)Main.npc[(int)this.ai[1]].position.Y)
                    {
                        if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y *= 0.96f;
                        this.velocity.Y += 0.1f;
                        if ((double)this.velocity.Y < -8.0)
                            this.velocity.Y = -8f;
                    }
                    if ((double)this.position.X + (double)(this.width / 2) > (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2))
                    {
                        if ((double)this.velocity.X > 0.0)
                            this.velocity.X *= 0.96f;
                        this.velocity.X -= 0.5f;
                        if ((double)this.velocity.X > 12.0)
                            this.velocity.X = 12f;
                    }
                    if ((double)this.position.X + (double)(this.width / 2) >= (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2))
                        return;
                    if ((double)this.velocity.X < 0.0)
                        this.velocity.X *= 0.96f;
                    this.velocity.X += 0.5f;
                    if ((double)this.velocity.X >= -12.0)
                        return;
                    this.velocity.X = -12f;
                }
                else if ((double)this.ai[2] == 0.0 || (double)this.ai[2] == 3.0)
                {
                    if ((double)Main.npc[(int)this.ai[1]].ai[1] == 3.0 && this.timeLeft > 10)
                        this.timeLeft = 10;
                    if ((double)Main.npc[(int)this.ai[1]].ai[1] != 0.0)
                    {
                        this.TargetClosest(true);
                        if (Main.player[this.target].dead)
                        {
                            this.velocity.Y += 0.1f;
                            if ((double)this.velocity.Y > 16.0)
                                this.velocity.Y = 16f;
                        }
                        else
                        {
                            Vector2 vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                            float num4 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2_2.X;
                            float num5 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2_2.Y;
                            float num6 = 7f / (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                            float num7 = num4 * num6;
                            float num8 = num5 * num6;
                            this.rotation = (float)Math.Atan2((double)num8, (double)num7) - 1.57f;
                            if ((double)this.velocity.X > (double)num7)
                            {
                                if ((double)this.velocity.X > 0.0)
                                    this.velocity.X *= 0.97f;
                                this.velocity.X -= 0.05f;
                            }
                            if ((double)this.velocity.X < (double)num7)
                            {
                                if ((double)this.velocity.X < 0.0)
                                    this.velocity.X *= 0.97f;
                                this.velocity.X += 0.05f;
                            }
                            if ((double)this.velocity.Y > (double)num8)
                            {
                                if ((double)this.velocity.Y > 0.0)
                                    this.velocity.Y *= 0.97f;
                                this.velocity.Y -= 0.05f;
                            }
                            if ((double)this.velocity.Y < (double)num8)
                            {
                                if ((double)this.velocity.Y < 0.0)
                                    this.velocity.Y *= 0.97f;
                                this.velocity.Y += 0.05f;
                            }
                        }
                        ++this.ai[3];
                        if ((double)this.ai[3] >= 600.0)
                        {
                            this.ai[2] = 0.0f;
                            this.ai[3] = 0.0f;
                            this.netUpdate = true;
                        }
                    }
                    else
                    {
                        ++this.ai[3];
                        if ((double)this.ai[3] >= 300.0)
                        {
                            ++this.ai[2];
                            this.ai[3] = 0.0f;
                            this.netUpdate = true;
                        }
                        if ((double)this.position.Y > (double)Main.npc[(int)this.ai[1]].position.Y + 320.0)
                        {
                            if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y -= 0.04f;
                            if ((double)this.velocity.Y > 3.0)
                                this.velocity.Y = 3f;
                        }
                        else if ((double)this.position.Y < (double)Main.npc[(int)this.ai[1]].position.Y + 260.0)
                        {
                            if ((double)this.velocity.Y < 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y += 0.04f;
                            if ((double)this.velocity.Y < -3.0)
                                this.velocity.Y = -3f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) > (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2))
                        {
                            if ((double)this.velocity.X > 0.0)
                                this.velocity.X *= 0.96f;
                            this.velocity.X -= 0.3f;
                            if ((double)this.velocity.X > 12.0)
                                this.velocity.X = 12f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) < (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 250.0)
                        {
                            if ((double)this.velocity.X < 0.0)
                                this.velocity.X *= 0.96f;
                            this.velocity.X += 0.3f;
                            if ((double)this.velocity.X < -12.0)
                                this.velocity.X = -12f;
                        }
                    }
                    Vector2 vector2_3 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num9 = (float)((double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0]) - vector2_3.X;
                    float num10 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2_3.Y;
                    Math.Sqrt((double)num9 * (double)num9 + (double)num10 * (double)num10);
                    this.rotation = (float)Math.Atan2((double)num10, (double)num9) + 1.57f;
                }
                else if ((double)this.ai[2] == 1.0)
                {
                    Vector2 vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num4 = (float)((double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0]) - vector2_2.X;
                    float num5 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2_2.Y;
                    float num6 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                    this.rotation = (float)Math.Atan2((double)num5, (double)num4) + 1.57f;
                    this.velocity.X *= 0.95f;
                    this.velocity.Y -= 0.1f;
                    if ((double)this.velocity.Y < -8.0)
                        this.velocity.Y = -8f;
                    if ((double)this.position.Y >= (double)Main.npc[(int)this.ai[1]].position.Y - 200.0)
                        return;
                    this.TargetClosest(true);
                    this.ai[2] = 2f;
                    vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num7 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2_2.X;
                    float num8 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2_2.Y;
                    float num9 = 22f / (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                    this.velocity.X = num7 * num9;
                    this.velocity.Y = num8 * num9;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[2] == 2.0)
                {
                    if ((double)this.position.Y <= (double)Main.player[this.target].position.Y && (double)this.velocity.Y >= 0.0)
                        return;
                    this.ai[2] = 3f;
                }
                else if ((double)this.ai[2] == 4.0)
                {
                    this.TargetClosest(true);
                    Vector2 vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num4 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2_2.X;
                    float num5 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2_2.Y;
                    float num6 = 7f / (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                    float num7 = num4 * num6;
                    float num8 = num5 * num6;
                    if ((double)this.velocity.X > (double)num7)
                    {
                        if ((double)this.velocity.X > 0.0)
                            this.velocity.X *= 0.97f;
                        this.velocity.X -= 0.05f;
                    }
                    if ((double)this.velocity.X < (double)num7)
                    {
                        if ((double)this.velocity.X < 0.0)
                            this.velocity.X *= 0.97f;
                        this.velocity.X += 0.05f;
                    }
                    if ((double)this.velocity.Y > (double)num8)
                    {
                        if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y *= 0.97f;
                        this.velocity.Y -= 0.05f;
                    }
                    if ((double)this.velocity.Y < (double)num8)
                    {
                        if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y *= 0.97f;
                        this.velocity.Y += 0.05f;
                    }
                    ++this.ai[3];
                    if ((double)this.ai[3] >= 600.0)
                    {
                        this.ai[2] = 0.0f;
                        this.ai[3] = 0.0f;
                        this.netUpdate = true;
                    }
                    vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num9 = (float)((double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0]) - vector2_2.X;
                    float num10 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2_2.Y;
                    float num11 = (float)Math.Sqrt((double)num9 * (double)num9 + (double)num10 * (double)num10);
                    this.rotation = (float)Math.Atan2((double)num10, (double)num9) + 1.57f;
                }
                else
                {
                    if ((double)this.ai[2] != 5.0 || ((double)this.velocity.X <= 0.0 || (double)this.position.X + (double)(this.width / 2) <= (double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2)) && ((double)this.velocity.X >= 0.0 || (double)this.position.X + (double)(this.width / 2) >= (double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2)))
                        return;
                    this.ai[2] = 0.0f;
                }
            }
            else if (this.aiStyle == 34)
            {
                this.spriteDirection = -(int)this.ai[0];
                Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                float num1 = (float)((double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0]) - vector2_1.X;
                float num2 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2_1.Y;
                float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                if ((double)this.ai[2] != 99.0)
                {
                    if ((double)num3 > 800.0)
                        this.ai[2] = 99f;
                }
                else if ((double)num3 < 400.0)
                    this.ai[2] = 0.0f;
                if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
                {
                    this.ai[2] += 10f;
                    if ((double)this.ai[2] > 50.0 || Main.netMode != 2)
                    {
                        this.life = -1;
                        this.HitEffect(0, 10.0);
                        this.active = false;
                    }
                }
                if ((double)this.ai[2] == 99.0)
                {
                    if ((double)this.position.Y > (double)Main.npc[(int)this.ai[1]].position.Y)
                    {
                        if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y *= 0.96f;
                        this.velocity.Y -= 0.1f;
                        if ((double)this.velocity.Y > 8.0)
                            this.velocity.Y = 8f;
                    }
                    else if ((double)this.position.Y < (double)Main.npc[(int)this.ai[1]].position.Y)
                    {
                        if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y *= 0.96f;
                        this.velocity.Y += 0.1f;
                        if ((double)this.velocity.Y < -8.0)
                            this.velocity.Y = -8f;
                    }
                    if ((double)this.position.X + (double)(this.width / 2) > (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2))
                    {
                        if ((double)this.velocity.X > 0.0)
                            this.velocity.X *= 0.96f;
                        this.velocity.X -= 0.5f;
                        if ((double)this.velocity.X > 12.0)
                            this.velocity.X = 12f;
                    }
                    if ((double)this.position.X + (double)(this.width / 2) >= (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2))
                        return;
                    if ((double)this.velocity.X < 0.0)
                        this.velocity.X *= 0.96f;
                    this.velocity.X += 0.5f;
                    if ((double)this.velocity.X >= -12.0)
                        return;
                    this.velocity.X = -12f;
                }
                else if ((double)this.ai[2] == 0.0 || (double)this.ai[2] == 3.0)
                {
                    if ((double)Main.npc[(int)this.ai[1]].ai[1] == 3.0 && this.timeLeft > 10)
                        this.timeLeft = 10;
                    if ((double)Main.npc[(int)this.ai[1]].ai[1] != 0.0)
                    {
                        this.TargetClosest(true);
                        this.TargetClosest(true);
                        if (Main.player[this.target].dead)
                        {
                            this.velocity.Y += 0.1f;
                            if ((double)this.velocity.Y > 16.0)
                                this.velocity.Y = 16f;
                        }
                        else
                        {
                            Vector2 vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                            float num4 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2_2.X;
                            float num5 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2_2.Y;
                            float num6 = 12f / (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                            float num7 = num4 * num6;
                            float num8 = num5 * num6;
                            this.rotation = (float)Math.Atan2((double)num8, (double)num7) - 1.57f;
                            if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < 2.0)
                            {
                                this.rotation = (float)Math.Atan2((double)num8, (double)num7) - 1.57f;
                                this.velocity.X = num7;
                                this.velocity.Y = num8;
                                this.netUpdate = true;
                            }
                            else
                            {
                                NPC npc = this;
                                Vector2 vector2_3 = npc.velocity * 0.97f;
                                npc.velocity = vector2_3;
                            }
                            ++this.ai[3];
                            if ((double)this.ai[3] >= 600.0)
                            {
                                this.ai[2] = 0.0f;
                                this.ai[3] = 0.0f;
                                this.netUpdate = true;
                            }
                        }
                    }
                    else
                    {
                        ++this.ai[3];
                        if ((double)this.ai[3] >= 600.0)
                        {
                            ++this.ai[2];
                            this.ai[3] = 0.0f;
                            this.netUpdate = true;
                        }
                        if ((double)this.position.Y > (double)Main.npc[(int)this.ai[1]].position.Y + 300.0)
                        {
                            if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y -= 0.1f;
                            if ((double)this.velocity.Y > 3.0)
                                this.velocity.Y = 3f;
                        }
                        else if ((double)this.position.Y < (double)Main.npc[(int)this.ai[1]].position.Y + 230.0)
                        {
                            if ((double)this.velocity.Y < 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y += 0.1f;
                            if ((double)this.velocity.Y < -3.0)
                                this.velocity.Y = -3f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) > (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) + 250.0)
                        {
                            if ((double)this.velocity.X > 0.0)
                                this.velocity.X *= 0.94f;
                            this.velocity.X -= 0.3f;
                            if ((double)this.velocity.X > 9.0)
                                this.velocity.X = 9f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) < (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2))
                        {
                            if ((double)this.velocity.X < 0.0)
                                this.velocity.X *= 0.94f;
                            this.velocity.X += 0.2f;
                            if ((double)this.velocity.X < -8.0)
                                this.velocity.X = -8f;
                        }
                    }
                    Vector2 vector2_4 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num9 = (float)((double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0]) - vector2_4.X;
                    float num10 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2_4.Y;
                    Math.Sqrt((double)num9 * (double)num9 + (double)num10 * (double)num10);
                    this.rotation = (float)Math.Atan2((double)num10, (double)num9) + 1.57f;
                }
                else if ((double)this.ai[2] == 1.0)
                {
                    if ((double)this.velocity.Y > 0.0)
                        this.velocity.Y *= 0.9f;
                    Vector2 vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num4 = (float)((double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 280.0 * (double)this.ai[0]) - vector2_2.X;
                    float num5 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2_2.Y;
                    float num6 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                    this.rotation = (float)Math.Atan2((double)num5, (double)num4) + 1.57f;
                    this.velocity.X = (float)(((double)this.velocity.X * 5.0 + (double)Main.npc[(int)this.ai[1]].velocity.X) / 6.0);
                    this.velocity.X += 0.5f;
                    this.velocity.Y -= 0.5f;
                    if ((double)this.velocity.Y < -9.0)
                        this.velocity.Y = -9f;
                    if ((double)this.position.Y >= (double)Main.npc[(int)this.ai[1]].position.Y - 280.0)
                        return;
                    this.TargetClosest(true);
                    this.ai[2] = 2f;
                    vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num7 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2_2.X;
                    float num8 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2_2.Y;
                    float num9 = 20f / (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                    this.velocity.X = num7 * num9;
                    this.velocity.Y = num8 * num9;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[2] == 2.0)
                {
                    if ((double)this.position.Y <= (double)Main.player[this.target].position.Y && (double)this.velocity.Y >= 0.0)
                        return;
                    if ((double)this.ai[3] >= 4.0)
                    {
                        this.ai[2] = 3f;
                        this.ai[3] = 0.0f;
                    }
                    else
                    {
                        this.ai[2] = 1f;
                        ++this.ai[3];
                    }
                }
                else if ((double)this.ai[2] == 4.0)
                {
                    Vector2 vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num4 = (float)((double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0]) - vector2_2.X;
                    float num5 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2_2.Y;
                    float num6 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                    this.rotation = (float)Math.Atan2((double)num5, (double)num4) + 1.57f;
                    this.velocity.Y = (float)(((double)this.velocity.Y * 5.0 + (double)Main.npc[(int)this.ai[1]].velocity.Y) / 6.0);
                    this.velocity.X += 0.5f;
                    if ((double)this.velocity.X > 12.0)
                        this.velocity.X = 12f;
                    if ((double)this.position.X + (double)(this.width / 2) >= (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 500.0 && (double)this.position.X + (double)(this.width / 2) <= (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) + 500.0)
                        return;
                    this.TargetClosest(true);
                    this.ai[2] = 5f;
                    vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num7 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2_2.X;
                    float num8 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2_2.Y;
                    float num9 = 17f / (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                    this.velocity.X = num7 * num9;
                    this.velocity.Y = num8 * num9;
                    this.netUpdate = true;
                }
                else
                {
                    if ((double)this.ai[2] != 5.0 || (double)this.position.X + (double)(this.width / 2) >= (double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2) - 100.0)
                        return;
                    if ((double)this.ai[3] >= 4.0)
                    {
                        this.ai[2] = 0.0f;
                        this.ai[3] = 0.0f;
                    }
                    else
                    {
                        this.ai[2] = 4f;
                        ++this.ai[3];
                    }
                }
            }
            else if (this.aiStyle == 35)
            {
                this.spriteDirection = -(int)this.ai[0];
                if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
                {
                    this.ai[2] += 10f;
                    if ((double)this.ai[2] > 50.0 || Main.netMode != 2)
                    {
                        this.life = -1;
                        this.HitEffect(0, 10.0);
                        this.active = false;
                    }
                }
                if ((double)this.ai[2] == 0.0)
                {
                    if ((double)Main.npc[(int)this.ai[1]].ai[1] == 3.0 && this.timeLeft > 10)
                        this.timeLeft = 10;
                    if ((double)Main.npc[(int)this.ai[1]].ai[1] != 0.0)
                    {
                        this.localAI[0] += 2f;
                        if ((double)this.position.Y > (double)Main.npc[(int)this.ai[1]].position.Y - 100.0)
                        {
                            if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y -= 0.07f;
                            if ((double)this.velocity.Y > 6.0)
                                this.velocity.Y = 6f;
                        }
                        else if ((double)this.position.Y < (double)Main.npc[(int)this.ai[1]].position.Y - 100.0)
                        {
                            if ((double)this.velocity.Y < 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y += 0.07f;
                            if ((double)this.velocity.Y < -6.0)
                                this.velocity.Y = -6f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) > (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 120.0 * (double)this.ai[0])
                        {
                            if ((double)this.velocity.X > 0.0)
                                this.velocity.X *= 0.96f;
                            this.velocity.X -= 0.1f;
                            if ((double)this.velocity.X > 8.0)
                                this.velocity.X = 8f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) < (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 120.0 * (double)this.ai[0])
                        {
                            if ((double)this.velocity.X < 0.0)
                                this.velocity.X *= 0.96f;
                            this.velocity.X += 0.1f;
                            if ((double)this.velocity.X < -8.0)
                                this.velocity.X = -8f;
                        }
                    }
                    else
                    {
                        ++this.ai[3];
                        if ((double)this.ai[3] >= 1100.0)
                        {
                            this.localAI[0] = 0.0f;
                            this.ai[2] = 1f;
                            this.ai[3] = 0.0f;
                            this.netUpdate = true;
                        }
                        if ((double)this.position.Y > (double)Main.npc[(int)this.ai[1]].position.Y - 150.0)
                        {
                            if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y -= 0.04f;
                            if ((double)this.velocity.Y > 3.0)
                                this.velocity.Y = 3f;
                        }
                        else if ((double)this.position.Y < (double)Main.npc[(int)this.ai[1]].position.Y - 150.0)
                        {
                            if ((double)this.velocity.Y < 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y += 0.04f;
                            if ((double)this.velocity.Y < -3.0)
                                this.velocity.Y = -3f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) > (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) + 200.0)
                        {
                            if ((double)this.velocity.X > 0.0)
                                this.velocity.X *= 0.96f;
                            this.velocity.X -= 0.2f;
                            if ((double)this.velocity.X > 8.0)
                                this.velocity.X = 8f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) < (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) + 160.0)
                        {
                            if ((double)this.velocity.X < 0.0)
                                this.velocity.X *= 0.96f;
                            this.velocity.X += 0.2f;
                            if ((double)this.velocity.X < -8.0)
                                this.velocity.X = -8f;
                        }
                    }
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = (float)((double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0]) - vector2.X;
                    float num2 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2.Y;
                    float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    this.rotation = (float)Math.Atan2((double)num2, (double)num1) + 1.57f;
                    if (Main.netMode == 1)
                        return;
                    ++this.localAI[0];
                    if ((double)this.localAI[0] <= 140.0)
                        return;
                    this.localAI[0] = 0.0f;
                    float num4 = 12f;
                    int Damage = 0;
                    int Type = 102;
                    float num5 = num4 / num3;
                    float num6 = -num1 * num5;
                    float num7 = -num2 * num5;
                    float SpeedX = num6 + (float)Main.rand.Next(-40, 41) * 0.01f;
                    float SpeedY = num7 + (float)Main.rand.Next(-40, 41) * 0.01f;
                    vector2.X += SpeedX * 4f;
                    vector2.Y += SpeedY * 4f;
                    Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                }
                else
                {
                    if ((double)this.ai[2] != 1.0)
                        return;
                    ++this.ai[3];
                    if ((double)this.ai[3] >= 300.0)
                    {
                        this.localAI[0] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.ai[3] = 0.0f;
                        this.netUpdate = true;
                    }
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - vector2.X;
                    float num2 = Main.npc[(int)this.ai[1]].position.Y - vector2.Y;
                    float num3 = (float)((double)Main.player[this.target].position.Y + (double)(Main.player[this.target].height / 2) - 80.0) - vector2.Y;
                    float num4 = 6f / (float)Math.Sqrt((double)num1 * (double)num1 + (double)num3 * (double)num3);
                    float num5 = num1 * num4;
                    float num6 = num3 * num4;
                    if ((double)this.velocity.X > (double)num5)
                    {
                        if ((double)this.velocity.X > 0.0)
                            this.velocity.X *= 0.9f;
                        this.velocity.X -= 0.04f;
                    }
                    if ((double)this.velocity.X < (double)num5)
                    {
                        if ((double)this.velocity.X < 0.0)
                            this.velocity.X *= 0.9f;
                        this.velocity.X += 0.04f;
                    }
                    if ((double)this.velocity.Y > (double)num6)
                    {
                        if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y *= 0.9f;
                        this.velocity.Y -= 0.08f;
                    }
                    if ((double)this.velocity.Y < (double)num6)
                    {
                        if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y *= 0.9f;
                        this.velocity.Y += 0.08f;
                    }
                    this.TargetClosest(true);
                    vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num7 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num8 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num9 = (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                    this.rotation = (float)Math.Atan2((double)num8, (double)num7) - 1.57f;
                    if (Main.netMode == 1)
                        return;
                    ++this.localAI[0];
                    if ((double)this.localAI[0] <= 40.0)
                        return;
                    this.localAI[0] = 0.0f;
                    float num10 = 10f;
                    int Damage = 0;
                    int Type = 102;
                    float num11 = num10 / num9;
                    float num12 = num7 * num11;
                    float num13 = num8 * num11;
                    float SpeedX = num12 + (float)Main.rand.Next(-40, 41) * 0.01f;
                    float SpeedY = num13 + (float)Main.rand.Next(-40, 41) * 0.01f;
                    vector2.X += SpeedX * 4f;
                    vector2.Y += SpeedY * 4f;
                    Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                }
            }
            else if (this.aiStyle == 36)
            {
                this.spriteDirection = -(int)this.ai[0];
                if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
                {
                    this.ai[2] += 10f;
                    if ((double)this.ai[2] > 50.0 || Main.netMode != 2)
                    {
                        this.life = -1;
                        this.HitEffect(0, 10.0);
                        this.active = false;
                    }
                }
                if ((double)this.ai[2] == 0.0 || (double)this.ai[2] == 3.0)
                {
                    if ((double)Main.npc[(int)this.ai[1]].ai[1] == 3.0 && this.timeLeft > 10)
                        this.timeLeft = 10;
                    if ((double)Main.npc[(int)this.ai[1]].ai[1] != 0.0)
                    {
                        this.localAI[0] += 3f;
                        if ((double)this.position.Y > (double)Main.npc[(int)this.ai[1]].position.Y - 100.0)
                        {
                            if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y -= 0.07f;
                            if ((double)this.velocity.Y > 6.0)
                                this.velocity.Y = 6f;
                        }
                        else if ((double)this.position.Y < (double)Main.npc[(int)this.ai[1]].position.Y - 100.0)
                        {
                            if ((double)this.velocity.Y < 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y += 0.07f;
                            if ((double)this.velocity.Y < -6.0)
                                this.velocity.Y = -6f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) > (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 120.0 * (double)this.ai[0])
                        {
                            if ((double)this.velocity.X > 0.0)
                                this.velocity.X *= 0.96f;
                            this.velocity.X -= 0.1f;
                            if ((double)this.velocity.X > 8.0)
                                this.velocity.X = 8f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) < (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 120.0 * (double)this.ai[0])
                        {
                            if ((double)this.velocity.X < 0.0)
                                this.velocity.X *= 0.96f;
                            this.velocity.X += 0.1f;
                            if ((double)this.velocity.X < -8.0)
                                this.velocity.X = -8f;
                        }
                    }
                    else
                    {
                        ++this.ai[3];
                        if ((double)this.ai[3] >= 800.0)
                        {
                            ++this.ai[2];
                            this.ai[3] = 0.0f;
                            this.netUpdate = true;
                        }
                        if ((double)this.position.Y > (double)Main.npc[(int)this.ai[1]].position.Y - 100.0)
                        {
                            if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y -= 0.1f;
                            if ((double)this.velocity.Y > 3.0)
                                this.velocity.Y = 3f;
                        }
                        else if ((double)this.position.Y < (double)Main.npc[(int)this.ai[1]].position.Y - 100.0)
                        {
                            if ((double)this.velocity.Y < 0.0)
                                this.velocity.Y *= 0.96f;
                            this.velocity.Y += 0.1f;
                            if ((double)this.velocity.Y < -3.0)
                                this.velocity.Y = -3f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) > (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 180.0 * (double)this.ai[0])
                        {
                            if ((double)this.velocity.X > 0.0)
                                this.velocity.X *= 0.96f;
                            this.velocity.X -= 0.14f;
                            if ((double)this.velocity.X > 8.0)
                                this.velocity.X = 8f;
                        }
                        if ((double)this.position.X + (double)(this.width / 2) < (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 180.0 * (double)this.ai[0])
                        {
                            if ((double)this.velocity.X < 0.0)
                                this.velocity.X *= 0.96f;
                            this.velocity.X += 0.14f;
                            if ((double)this.velocity.X < -8.0)
                                this.velocity.X = -8f;
                        }
                    }
                    this.TargetClosest(true);
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num2 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    this.rotation = (float)Math.Atan2((double)num2, (double)num1) - 1.57f;
                    if (Main.netMode == 1)
                        return;
                    ++this.localAI[0];
                    if ((double)this.localAI[0] <= 200.0)
                        return;
                    this.localAI[0] = 0.0f;
                    float num4 = 8f;
                    int Damage = 25;
                    int Type = 100;
                    float num5 = num4 / num3;
                    float num6 = num1 * num5;
                    float num7 = num2 * num5;
                    float SpeedX = num6 + (float)Main.rand.Next(-40, 41) * 0.05f;
                    float SpeedY = num7 + (float)Main.rand.Next(-40, 41) * 0.05f;
                    vector2.X += SpeedX * 8f;
                    vector2.Y += SpeedY * 8f;
                    Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                }
                else
                {
                    if ((double)this.ai[2] != 1.0)
                        return;
                    ++this.ai[3];
                    if ((double)this.ai[3] >= 200.0)
                    {
                        this.localAI[0] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.ai[3] = 0.0f;
                        this.netUpdate = true;
                    }
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = (float)((double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2) - 350.0) - vector2.X;
                    float num2 = (float)((double)Main.player[this.target].position.Y + (double)(Main.player[this.target].height / 2) - 20.0) - vector2.Y;
                    float num3 = 7f / (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    float num4 = num1 * num3;
                    float num5 = num2 * num3;
                    if ((double)this.velocity.X > (double)num4)
                    {
                        if ((double)this.velocity.X > 0.0)
                            this.velocity.X *= 0.9f;
                        this.velocity.X -= 0.1f;
                    }
                    if ((double)this.velocity.X < (double)num4)
                    {
                        if ((double)this.velocity.X < 0.0)
                            this.velocity.X *= 0.9f;
                        this.velocity.X += 0.1f;
                    }
                    if ((double)this.velocity.Y > (double)num5)
                    {
                        if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y *= 0.9f;
                        this.velocity.Y -= 0.03f;
                    }
                    if ((double)this.velocity.Y < (double)num5)
                    {
                        if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y *= 0.9f;
                        this.velocity.Y += 0.03f;
                    }
                    this.TargetClosest(true);
                    vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num6 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num7 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num8 = (float)Math.Sqrt((double)num6 * (double)num6 + (double)num7 * (double)num7);
                    this.rotation = (float)Math.Atan2((double)num7, (double)num6) - 1.57f;
                    if (Main.netMode != 1)
                        return;
                    ++this.localAI[0];
                    if ((double)this.localAI[0] <= 80.0)
                        return;
                    this.localAI[0] = 0.0f;
                    float num9 = 10f;
                    int Damage = 25;
                    int Type = 100;
                    float num10 = num9 / num8;
                    float num11 = num6 * num10;
                    float num12 = num7 * num10;
                    float SpeedX = num11 + (float)Main.rand.Next(-40, 41) * 0.05f;
                    float SpeedY = num12 + (float)Main.rand.Next(-40, 41) * 0.05f;
                    vector2.X += SpeedX * 8f;
                    vector2.Y += SpeedY * 8f;
                    Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                }
            }
            else if (this.aiStyle == 37)
            {
                if ((double)this.ai[3] > 0.0)
                    this.realLife = (int)this.ai[3];
                if (this.target < 0 || this.target == (int)byte.MaxValue || Main.player[this.target].dead)
                    this.TargetClosest(true);
                if (this.type >= 134 && this.type <= 136)
                {
                    double num = (double)this.velocity.Length();
                    if (this.type == 134 || this.type != 134 && Main.npc[(int)this.ai[1]].alpha < 128)
                    {
                        if (this.alpha != 0)
                        {
                            for (int index1 = 0; index1 < 2; ++index1)
                            {
                                int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 182, 0.0f, 0.0f, 100, new Color(), 2f);
                                Main.dust[index2].noGravity = true;
                                Main.dust[index2].noLight = true;
                            }
                        }
                        this.alpha -= 42;
                        if (this.alpha < 0)
                            this.alpha = 0;
                    }
                }
                if (this.type > 134)
                {
                    bool flag = false;
                    if ((double)this.ai[1] <= 0.0)
                        flag = true;
                    else if (Main.npc[(int)this.ai[1]].life <= 0)
                        flag = true;
                    if (flag)
                    {
                        this.life = 0;
                        this.HitEffect(0, 10.0);
                        this.checkDead();
                    }
                }
                if (Main.netMode != 1)
                {
                    if ((double)this.ai[0] == 0.0 && this.type == 134)
                    {
                        this.ai[3] = (float)this.whoAmI;
                        this.realLife = this.whoAmI;
                        int index1 = this.whoAmI;
                        int num = 80;
                        for (int index2 = 0; index2 <= num; ++index2)
                        {
                            int Type = 135;
                            if (index2 == num)
                                Type = 136;
                            int number = NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)((double)this.position.Y + (double)this.height), Type, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            Main.npc[number].ai[3] = (float)this.whoAmI;
                            Main.npc[number].realLife = this.whoAmI;
                            Main.npc[number].ai[1] = (float)index1;
                            Main.npc[index1].ai[0] = (float)number;
                            NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                            index1 = number;
                        }
                    }
                    if (this.type == 135)
                    {
                        this.localAI[0] += (float)Main.rand.Next(4);
                        if ((double)this.localAI[0] >= (double)Main.rand.Next(1400, 26000))
                        {
                            this.localAI[0] = 0.0f;
                            this.TargetClosest(true);
                            if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                            {
                                float num1 = 8f;
                                Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)(this.height / 2));
                                float num2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X + (float)Main.rand.Next(-20, 21);
                                float num3 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y + (float)Main.rand.Next(-20, 21);
                                float num4 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                                float num5 = num1 / num4;
                                float num6 = num2 * num5;
                                float num7 = num3 * num5;
                                float SpeedX = num6 + (float)Main.rand.Next(-20, 21) * 0.05f;
                                float SpeedY = num7 + (float)Main.rand.Next(-20, 21) * 0.05f;
                                int Damage = 22;
                                if (Main.expertMode)
                                    Damage = 18;
                                int Type = 100;
                                vector2.X += SpeedX * 5f;
                                vector2.Y += SpeedY * 5f;
                                int index = Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                Main.projectile[index].timeLeft = 300;
                                this.netUpdate = true;
                            }
                        }
                    }
                }
                int num8 = (int)((double)this.position.X / 16.0) - 1;
                int num9 = (int)(((double)this.position.X + (double)this.width) / 16.0) + 2;
                int num10 = (int)((double)this.position.Y / 16.0) - 1;
                int num11 = (int)(((double)this.position.Y + (double)this.height) / 16.0) + 2;
                if (num8 < 0)
                    num8 = 0;
                if (num9 > Main.maxTilesX)
                    num9 = Main.maxTilesX;
                if (num10 < 0)
                    num10 = 0;
                if (num11 > Main.maxTilesY)
                    num11 = Main.maxTilesY;
                bool flag1 = false;
                if (!flag1)
                {
                    for (int index1 = num8; index1 < num9; ++index1)
                    {
                        for (int index2 = num10; index2 < num11; ++index2)
                        {
                            if (Main.tile[index1, index2] != null && (Main.tile[index1, index2].nactive() && (Main.tileSolid[(int)Main.tile[index1, index2].type] || Main.tileSolidTop[(int)Main.tile[index1, index2].type] && (int)Main.tile[index1, index2].frameY == 0) || (int)Main.tile[index1, index2].liquid > 64))
                            {
                                Vector2 vector2;
                                vector2.X = (float)(index1 * 16);
                                vector2.Y = (float)(index2 * 16);
                                if ((double)this.position.X + (double)this.width > (double)vector2.X && (double)this.position.X < (double)vector2.X + 16.0 && ((double)this.position.Y + (double)this.height > (double)vector2.Y && (double)this.position.Y < (double)vector2.Y + 16.0))
                                {
                                    flag1 = true;
                                    break;
                                }
                            }
                        }
                    }
                }
                if (!flag1)
                {
                    if (this.type != 135 || (double)this.ai[2] != 1.0)
                        Lighting.AddLight((int)(((double)this.position.X + (double)(this.width / 2)) / 16.0), (int)(((double)this.position.Y + (double)(this.height / 2)) / 16.0), 0.3f, 0.1f, 0.05f);
                    this.localAI[1] = 1f;
                    if (this.type == 134)
                    {
                        Rectangle rectangle1 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
                        int num1 = 1000;
                        bool flag2 = true;
                        if ((double)this.position.Y > (double)Main.player[this.target].position.Y)
                        {
                            for (int index = 0; index < (int)byte.MaxValue; ++index)
                            {
                                if (Main.player[index].active)
                                {
                                    Rectangle rectangle2 = new Rectangle((int)Main.player[index].position.X - num1, (int)Main.player[index].position.Y - num1, num1 * 2, num1 * 2);
                                    if (rectangle1.Intersects(rectangle2))
                                    {
                                        flag2 = false;
                                        break;
                                    }
                                }
                            }
                            if (flag2)
                                flag1 = true;
                        }
                    }
                }
                else
                    this.localAI[1] = 0.0f;
                float num12 = 16f;
                if (Main.dayTime || Main.player[this.target].dead)
                {
                    flag1 = false;
                    ++this.velocity.Y;
                    if ((double)this.position.Y > Main.worldSurface * 16.0)
                    {
                        ++this.velocity.Y;
                        num12 = 32f;
                    }
                    if ((double)this.position.Y > Main.rockLayer * 16.0)
                    {
                        for (int index = 0; index < 200; ++index)
                        {
                            if (Main.npc[index].aiStyle == this.aiStyle)
                                Main.npc[index].active = false;
                        }
                    }
                }
                float num13 = 0.1f;
                float num14 = 0.15f;
                Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                float num15 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
                float num16 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
                float num17 = (float)((int)((double)num15 / 16.0) * 16);
                float num18 = (float)((int)((double)num16 / 16.0) * 16);
                vector2_1.X = (float)((int)((double)vector2_1.X / 16.0) * 16);
                vector2_1.Y = (float)((int)((double)vector2_1.Y / 16.0) * 16);
                float num19 = num17 - vector2_1.X;
                float num20 = num18 - vector2_1.Y;
                float num21 = (float)Math.Sqrt((double)num19 * (double)num19 + (double)num20 * (double)num20);
                if ((double)this.ai[1] > 0.0)
                {
                    if ((double)this.ai[1] < (double)Main.npc.Length)
                    {
                        try
                        {
                            vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                            num19 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - vector2_1.X;
                            num20 = Main.npc[(int)this.ai[1]].position.Y + (float)(Main.npc[(int)this.ai[1]].height / 2) - vector2_1.Y;
                        }
                        catch
                        {
                        }
                        this.rotation = (float)Math.Atan2((double)num20, (double)num19) + 1.57f;
                        float num1 = (float)Math.Sqrt((double)num19 * (double)num19 + (double)num20 * (double)num20);
                        int num2 = (int)(44.0 * (double)this.scale);
                        float num3 = (num1 - (float)num2) / num1;
                        float num4 = num19 * num3;
                        float num5 = num20 * num3;
                        this.velocity = Vector2.Zero;
                        this.position.X += num4;
                        this.position.Y += num5;
                        return;
                    }
                }
                if (!flag1)
                {
                    this.TargetClosest(true);
                    this.velocity.Y += 0.15f;
                    if ((double)this.velocity.Y > (double)num12)
                        this.velocity.Y = num12;
                    if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < (double)num12 * 0.4)
                    {
                        if ((double)this.velocity.X < 0.0)
                            this.velocity.X -= num13 * 1.1f;
                        else
                            this.velocity.X += num13 * 1.1f;
                    }
                    else if ((double)this.velocity.Y == (double)num12)
                    {
                        if ((double)this.velocity.X < (double)num19)
                            this.velocity.X += num13;
                        else if ((double)this.velocity.X > (double)num19)
                            this.velocity.X -= num13;
                    }
                    else if ((double)this.velocity.Y > 4.0)
                    {
                        if ((double)this.velocity.X < 0.0)
                            this.velocity.X += num13 * 0.9f;
                        else
                            this.velocity.X -= num13 * 0.9f;
                    }
                }
                else
                {
                    if (this.soundDelay == 0)
                    {
                        float num1 = num21 / 40f;
                        if ((double)num1 < 10.0)
                            num1 = 10f;
                        if ((double)num1 > 20.0)
                            num1 = 20f;
                        this.soundDelay = (int)num1;
                        Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 1);
                    }
                    float num2 = (float)Math.Sqrt((double)num19 * (double)num19 + (double)num20 * (double)num20);
                    float num3 = Math.Abs(num19);
                    float num4 = Math.Abs(num20);
                    float num5 = num12 / num2;
                    float num6 = num19 * num5;
                    float num7 = num20 * num5;
                    if (((double)this.velocity.X > 0.0 && (double)num6 > 0.0 || (double)this.velocity.X < 0.0 && (double)num6 < 0.0) && ((double)this.velocity.Y > 0.0 && (double)num7 > 0.0 || (double)this.velocity.Y < 0.0 && (double)num7 < 0.0))
                    {
                        if ((double)this.velocity.X < (double)num6)
                            this.velocity.X += num14;
                        else if ((double)this.velocity.X > (double)num6)
                            this.velocity.X -= num14;
                        if ((double)this.velocity.Y < (double)num7)
                            this.velocity.Y += num14;
                        else if ((double)this.velocity.Y > (double)num7)
                            this.velocity.Y -= num14;
                    }
                    if ((double)this.velocity.X > 0.0 && (double)num6 > 0.0 || (double)this.velocity.X < 0.0 && (double)num6 < 0.0 || ((double)this.velocity.Y > 0.0 && (double)num7 > 0.0 || (double)this.velocity.Y < 0.0 && (double)num7 < 0.0))
                    {
                        if ((double)this.velocity.X < (double)num6)
                            this.velocity.X += num13;
                        else if ((double)this.velocity.X > (double)num6)
                            this.velocity.X -= num13;
                        if ((double)this.velocity.Y < (double)num7)
                            this.velocity.Y += num13;
                        else if ((double)this.velocity.Y > (double)num7)
                            this.velocity.Y -= num13;
                        if ((double)Math.Abs(num7) < (double)num12 * 0.2 && ((double)this.velocity.X > 0.0 && (double)num6 < 0.0 || (double)this.velocity.X < 0.0 && (double)num6 > 0.0))
                        {
                            if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y += num13 * 2f;
                            else
                                this.velocity.Y -= num13 * 2f;
                        }
                        if ((double)Math.Abs(num6) < (double)num12 * 0.2 && ((double)this.velocity.Y > 0.0 && (double)num7 < 0.0 || (double)this.velocity.Y < 0.0 && (double)num7 > 0.0))
                        {
                            if ((double)this.velocity.X > 0.0)
                                this.velocity.X += num13 * 2f;
                            else
                                this.velocity.X -= num13 * 2f;
                        }
                    }
                    else if ((double)num3 > (double)num4)
                    {
                        if ((double)this.velocity.X < (double)num6)
                            this.velocity.X += num13 * 1.1f;
                        else if ((double)this.velocity.X > (double)num6)
                            this.velocity.X -= num13 * 1.1f;
                        if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < (double)num12 * 0.5)
                        {
                            if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y += num13;
                            else
                                this.velocity.Y -= num13;
                        }
                    }
                    else
                    {
                        if ((double)this.velocity.Y < (double)num7)
                            this.velocity.Y += num13 * 1.1f;
                        else if ((double)this.velocity.Y > (double)num7)
                            this.velocity.Y -= num13 * 1.1f;
                        if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < (double)num12 * 0.5)
                        {
                            if ((double)this.velocity.X > 0.0)
                                this.velocity.X += num13;
                            else
                                this.velocity.X -= num13;
                        }
                    }
                }
                this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
                if (this.type != 134)
                    return;
                if (flag1)
                {
                    if ((double)this.localAI[0] != 1.0)
                        this.netUpdate = true;
                    this.localAI[0] = 1f;
                }
                else
                {
                    if ((double)this.localAI[0] != 0.0)
                        this.netUpdate = true;
                    this.localAI[0] = 0.0f;
                }
                if (((double)this.velocity.X <= 0.0 || (double)this.oldVelocity.X >= 0.0) && ((double)this.velocity.X >= 0.0 || (double)this.oldVelocity.X <= 0.0) && (((double)this.velocity.Y <= 0.0 || (double)this.oldVelocity.Y >= 0.0) && ((double)this.velocity.Y >= 0.0 || (double)this.oldVelocity.Y <= 0.0)) || this.justHit)
                    return;
                this.netUpdate = true;
            }
            else if (this.aiStyle == 38)
            {
                float num1 = 4f;
                float num2 = 1f;
                if (this.type == 143)
                {
                    num1 = 3f;
                    num2 = 0.7f;
                }
                if (this.type == 145)
                {
                    num1 = 3.5f;
                    num2 = 0.8f;
                }
                if (this.type == 143)
                {
                    ++this.ai[2];
                    if ((double)this.ai[2] >= 120.0)
                    {
                        this.ai[2] = 0.0f;
                        if (Main.netMode != 1)
                        {
                            Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 12), this.position.Y + (float)this.height * 0.5f);
                            float SpeedX = (float)(12 * this.spriteDirection);
                            float SpeedY = 0.0f;
                            if (Main.netMode != 1)
                            {
                                int Damage = 25;
                                int Type = 110;
                                int number = Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                Main.projectile[number].ai[0] = 2f;
                                Main.projectile[number].timeLeft = 300;
                                Main.projectile[number].friendly = false;
                                NetMessage.SendData(27, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                                this.netUpdate = true;
                            }
                        }
                    }
                }
                if (this.type == 144 && (double)this.ai[1] >= 3.0)
                {
                    this.TargetClosest(true);
                    this.spriteDirection = this.direction;
                    if ((double)this.velocity.Y == 0.0)
                    {
                        this.velocity.X *= 0.9f;
                        ++this.ai[2];
                        if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
                            this.velocity.X = 0.0f;
                        if ((double)this.ai[2] >= 200.0)
                        {
                            this.ai[2] = 0.0f;
                            this.ai[1] = 0.0f;
                        }
                    }
                }
                else if (this.type == 145 && (double)this.ai[1] >= 3.0)
                {
                    this.TargetClosest(true);
                    if ((double)this.velocity.Y == 0.0)
                    {
                        this.velocity.X *= 0.9f;
                        ++this.ai[2];
                        if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
                            this.velocity.X = 0.0f;
                        if ((double)this.ai[2] >= 16.0)
                        {
                            this.ai[2] = 0.0f;
                            this.ai[1] = 0.0f;
                        }
                    }
                    if ((double)this.velocity.X == 0.0 && (double)this.velocity.Y == 0.0 && (double)this.ai[2] == 8.0)
                    {
                        float num3 = 10f;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 12), this.position.Y + (float)this.height * 0.25f);
                        float num4 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                        float num5 = Main.player[this.target].position.Y - vector2.Y;
                        float num6 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                        float num7 = num3 / num6;
                        float SpeedX = num4 * num7;
                        float SpeedY = num5 * num7;
                        if (Main.netMode != 1)
                        {
                            int Damage = 35;
                            int Type = 109;
                            int number = Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            Main.projectile[number].ai[0] = 2f;
                            Main.projectile[number].timeLeft = 300;
                            Main.projectile[number].friendly = false;
                            NetMessage.SendData(27, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                            this.netUpdate = true;
                        }
                    }
                }
                else
                {
                    if ((double)this.velocity.Y == 0.0)
                    {
                        if ((double)this.localAI[2] == (double)this.position.X)
                        {
                            this.direction *= -1;
                            this.ai[3] = 60f;
                        }
                        this.localAI[2] = this.position.X;
                        if ((double)this.ai[3] == 0.0)
                            this.TargetClosest(true);
                        ++this.ai[0];
                        if ((double)this.ai[0] > 2.0)
                        {
                            this.ai[0] = 0.0f;
                            ++this.ai[1];
                            this.velocity.Y = -8.2f;
                            this.velocity.X += (float)((double)this.direction * (double)num2 * 1.10000002384186);
                        }
                        else
                        {
                            this.velocity.Y = -6f;
                            this.velocity.X += (float)((double)this.direction * (double)num2 * 0.899999976158142);
                        }
                        this.spriteDirection = this.direction;
                    }
                    this.velocity.X += (float)((double)this.direction * (double)num2 * 0.00999999977648258);
                }
                if ((double)this.ai[3] > 0.0)
                    --this.ai[3];
                if ((double)this.velocity.X > (double)num1 && this.direction > 0)
                    this.velocity.X = 4f;
                if ((double)this.velocity.X >= -(double)num1 || this.direction >= 0)
                    return;
                this.velocity.X = -4f;
            }
            else if (this.aiStyle == 39)
            {
                if (this.target < 0 || Main.player[this.target].dead || this.direction == 0)
                    this.TargetClosest(true);
                bool flag1 = true;
                int num1 = 0;
                if ((double)this.velocity.X < 0.0)
                    num1 = -1;
                if ((double)this.velocity.X > 0.0)
                    num1 = 1;
                Vector2 vector2_1 = this.position;
                vector2_1.X += this.velocity.X;
                int index1 = (int)(((double)vector2_1.X + (double)(this.width / 2) + (double)((this.width / 2 + 1) * num1)) / 16.0);
                int index2 = (int)(((double)vector2_1.Y + (double)this.height - 1.0) / 16.0);
                if ((double)(index1 * 16) < (double)vector2_1.X + (double)this.width && (double)(index1 * 16 + 16) > (double)vector2_1.X && (Main.tile[index1, index2].nactive() && !Main.tile[index1, index2].topSlope() && !Main.tile[index1, index2 - 1].topSlope() && (Main.tileSolid[(int)Main.tile[index1, index2].type] && !Main.tileSolidTop[(int)Main.tile[index1, index2].type] || flag1 && Main.tileSolidTop[(int)Main.tile[index1, index2].type] && (!Main.tileSolid[(int)Main.tile[index1, index2 - 1].type] || !Main.tile[index1, index2 - 1].nactive()) && ((int)Main.tile[index1, index2].type != 16 && (int)Main.tile[index1, index2].type != 18 && (int)Main.tile[index1, index2].type != 134)) || Main.tile[index1, index2 - 1].halfBrick() && Main.tile[index1, index2 - 1].nactive()) && ((!Main.tile[index1, index2 - 1].nactive() || !Main.tileSolid[(int)Main.tile[index1, index2 - 1].type] || Main.tileSolidTop[(int)Main.tile[index1, index2 - 1].type] || Main.tile[index1, index2 - 1].halfBrick() && (!Main.tile[index1, index2 - 4].nactive() || !Main.tileSolid[(int)Main.tile[index1, index2 - 4].type] || Main.tileSolidTop[(int)Main.tile[index1, index2 - 4].type])) && ((!Main.tile[index1, index2 - 2].nactive() || !Main.tileSolid[(int)Main.tile[index1, index2 - 2].type] || Main.tileSolidTop[(int)Main.tile[index1, index2 - 2].type]) && (!Main.tile[index1, index2 - 3].nactive() || !Main.tileSolid[(int)Main.tile[index1, index2 - 3].type] || Main.tileSolidTop[(int)Main.tile[index1, index2 - 3].type]) && (!Main.tile[index1 - num1, index2 - 3].nactive() || !Main.tileSolid[(int)Main.tile[index1 - num1, index2 - 3].type] || Main.tileSolidTop[(int)Main.tile[index1 - num1, index2 - 3].type]))))
                {
                    float num2 = (float)(index2 * 16);
                    if (Main.tile[index1, index2].halfBrick())
                        num2 += 8f;
                    if (Main.tile[index1, index2 - 1].halfBrick())
                        num2 -= 8f;
                    if ((double)num2 < (double)vector2_1.Y + (double)this.height)
                    {
                        float num3 = vector2_1.Y + (float)this.height - num2;
                        if ((double)num3 <= 16.1)
                        {
                            this.gfxOffY += this.position.Y + (float)this.height - num2;
                            this.position.Y = num2 - (float)this.height;
                            this.stepSpeed = (double)num3 >= 9.0 ? 1.5f : 0.75f;
                        }
                    }
                }
                if (this.justHit && this.type != 417)
                {
                    this.ai[0] = 0.0f;
                    this.ai[1] = 0.0f;
                    this.TargetClosest(true);
                }
                if (this.type == 154 && Main.rand.Next(10) == 0)
                {
                    int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, new Color(), 1.5f);
                    Main.dust[index3].noGravity = true;
                    Main.dust[index3].velocity *= 0.2f;
                }
                if ((double)this.ai[0] == 0.0)
                {
                    if ((double)this.velocity.X < 0.0)
                        this.direction = -1;
                    else if ((double)this.velocity.X > 0.0)
                        this.direction = 1;
                    this.spriteDirection = this.direction;
                    Vector2 vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_2.X;
                    float num3 = Main.player[this.target].position.Y - vector2_2.Y;
                    float num4 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                    bool flag2 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
                    if (this.type >= 496 && this.type <= 497)
                    {
                        if ((double)num4 > 200.0 && flag2)
                            this.ai[1] += 2f;
                        if ((double)num4 > 600.0 && (flag2 || (double)this.position.Y + (double)this.height > (double)Main.player[this.target].position.Y - 200.0))
                            this.ai[1] += 4f;
                    }
                    else
                    {
                        if ((double)num4 > 200.0 && flag2)
                            this.ai[1] += 4f;
                        if ((double)num4 > 600.0 && (flag2 || (double)this.position.Y + (double)this.height > (double)Main.player[this.target].position.Y - 200.0))
                            this.ai[1] += 10f;
                        if (this.wet)
                            this.ai[1] = 1000f;
                    }
                    this.defense = this.defDefense;
                    this.damage = this.defDamage;
                    this.knockBackResist = this.type < 496 || this.type > 497 ? 0.3f * Main.knockBackMultiplier : 0.75f * Main.knockBackMultiplier;
                    ++this.ai[1];
                    if ((double)this.ai[1] >= 400.0)
                    {
                        this.ai[1] = 0.0f;
                        this.ai[0] = 1f;
                    }
                    if (!this.justHit && (double)this.velocity.X != (double)this.oldVelocity.X)
                        this.direction *= -1;
                    if ((double)this.velocity.Y == 0.0 && (double)Main.player[this.target].position.Y < (double)this.position.Y + (double)this.height)
                    {
                        int num5;
                        int num6;
                        if (this.direction > 0)
                        {
                            num5 = (int)(((double)this.position.X + (double)this.width * 0.5) / 16.0);
                            num6 = num5 + 3;
                        }
                        else
                        {
                            num6 = (int)(((double)this.position.X + (double)this.width * 0.5) / 16.0);
                            num5 = num6 - 3;
                        }
                        int num7 = (int)(((double)this.position.Y + (double)this.height + 2.0) / 16.0) - 1;
                        int num8 = num7 + 4;
                        bool flag3 = false;
                        for (int index3 = num5; index3 <= num6; ++index3)
                        {
                            for (int index4 = num7; index4 <= num8; ++index4)
                            {
                                if (Main.tile[index3, index4] != null && Main.tile[index3, index4].nactive() && Main.tileSolid[(int)Main.tile[index3, index4].type])
                                    flag3 = true;
                            }
                        }
                        if (!flag3)
                        {
                            this.direction *= -1;
                            this.velocity.X = 0.1f * (float)this.direction;
                        }
                    }
                    if (this.type >= 496 && this.type <= 497)
                    {
                        float num5 = 0.5f;
                        if ((double)this.velocity.X < -(double)num5 || (double)this.velocity.X > (double)num5)
                        {
                            if ((double)this.velocity.Y != 0.0)
                                return;
                            NPC npc = this;
                            Vector2 vector2_3 = npc.velocity * 0.8f;
                            npc.velocity = vector2_3;
                        }
                        else if ((double)this.velocity.X < (double)num5 && this.direction == 1)
                        {
                            this.velocity.X += 0.07f;
                            if ((double)this.velocity.X <= (double)num5)
                                return;
                            this.velocity.X = num5;
                        }
                        else
                        {
                            if ((double)this.velocity.X <= -(double)num5 || this.direction != -1)
                                return;
                            this.velocity.X -= 0.07f;
                            if ((double)this.velocity.X >= -(double)num5)
                                return;
                            this.velocity.X = -num5;
                        }
                    }
                    else
                    {
                        float num5 = 1f;
                        if ((double)num4 < 400.0)
                        {
                            if ((double)this.velocity.X < -(double)num5 || (double)this.velocity.X > (double)num5)
                            {
                                if ((double)this.velocity.Y != 0.0)
                                    return;
                                NPC npc = this;
                                Vector2 vector2_3 = npc.velocity * 0.8f;
                                npc.velocity = vector2_3;
                            }
                            else if ((double)this.velocity.X < (double)num5 && this.direction == 1)
                            {
                                this.velocity.X += 0.07f;
                                if ((double)this.velocity.X <= (double)num5)
                                    return;
                                this.velocity.X = num5;
                            }
                            else
                            {
                                if ((double)this.velocity.X <= -(double)num5 || this.direction != -1)
                                    return;
                                this.velocity.X -= 0.07f;
                                if ((double)this.velocity.X >= -(double)num5)
                                    return;
                                this.velocity.X = -num5;
                            }
                        }
                        else if ((double)this.velocity.X < -1.5 || (double)this.velocity.X > 1.5)
                        {
                            if ((double)this.velocity.Y != 0.0)
                                return;
                            NPC npc = this;
                            Vector2 vector2_3 = npc.velocity * 0.8f;
                            npc.velocity = vector2_3;
                        }
                        else if ((double)this.velocity.X < 1.5 && this.direction == 1)
                        {
                            this.velocity.X += 0.07f;
                            if ((double)this.velocity.X <= 1.5)
                                return;
                            this.velocity.X = 1.5f;
                        }
                        else
                        {
                            if ((double)this.velocity.X <= -1.5 || this.direction != -1)
                                return;
                            this.velocity.X -= 0.07f;
                            if ((double)this.velocity.X >= -1.5)
                                return;
                            this.velocity.X = -1.5f;
                        }
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    this.velocity.X *= 0.5f;
                    if (this.type >= 496 && this.type <= 497)
                        this.ai[1] += 0.5f;
                    else
                        ++this.ai[1];
                    if ((double)this.ai[1] < 30.0)
                        return;
                    this.netUpdate = true;
                    this.TargetClosest(true);
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[0] = 3f;
                    if (this.type != 417)
                        return;
                    this.ai[0] = 6f;
                    this.ai[2] = (float)Main.rand.Next(2, 5);
                }
                else if ((double)this.ai[0] == 3.0)
                {
                    if (this.type == 154 && Main.rand.Next(3) < 2)
                    {
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, new Color(), 1.5f);
                        Main.dust[index3].noGravity = true;
                        Main.dust[index3].velocity *= 0.2f;
                    }
                    this.damage = !Main.expertMode ? (this.type < 496 || this.type > 497 ? this.defDamage * 2 : (int)((double)this.defDamage * 1.5)) : (this.type < 496 || this.type > 497 ? (int)((double)(this.defDamage * 2) * 0.9) : (int)((double)this.defDamage * 1.5 * 0.9));
                    this.defense = this.defDefense * 2;
                    ++this.ai[1];
                    if ((double)this.ai[1] == 1.0)
                    {
                        this.netUpdate = true;
                        this.TargetClosest(true);
                        this.ai[2] += 0.3f;
                        this.rotation += this.ai[2] * (float)this.direction;
                        ++this.ai[1];
                        bool flag2 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
                        float num2 = 10f;
                        if (!flag2)
                            num2 = 6f;
                        if (this.type >= 496 && this.type <= 497)
                            num2 *= 0.75f;
                        Vector2 vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num3 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_2.X;
                        float num4 = Math.Abs(num3) * 0.2f;
                        if (this.directionY > 0)
                            num4 = 0.0f;
                        float num5 = Main.player[this.target].position.Y - vector2_2.Y - num4;
                        float num6 = (float)Math.Sqrt((double)num3 * (double)num3 + (double)num5 * (double)num5);
                        this.netUpdate = true;
                        float num7 = num2 / num6;
                        float num8 = num3 * num7;
                        float num9 = num5 * num7;
                        if (!flag2)
                            num9 = -10f;
                        this.velocity.X = num8;
                        this.velocity.Y = num9;
                        this.ai[3] = this.velocity.X;
                    }
                    else
                    {
                        if ((double)this.position.X + (double)this.width > (double)Main.player[this.target].position.X && (double)this.position.X < (double)Main.player[this.target].position.X + (double)Main.player[this.target].width && (double)this.position.Y < (double)Main.player[this.target].position.Y + (double)Main.player[this.target].height)
                        {
                            this.velocity.X *= 0.8f;
                            this.ai[3] = 0.0f;
                            if ((double)this.velocity.Y < 0.0)
                                this.velocity.Y += 0.2f;
                        }
                        if ((double)this.ai[3] != 0.0)
                        {
                            this.velocity.X = this.ai[3];
                            this.velocity.Y -= 0.22f;
                        }
                        if ((double)this.ai[1] >= 90.0)
                        {
                            this.noGravity = false;
                            this.ai[1] = 0.0f;
                            this.ai[0] = 4f;
                        }
                    }
                    if (this.wet && this.directionY < 0)
                        this.velocity.Y -= 0.3f;
                    this.rotation += this.ai[2] * (float)this.direction;
                }
                else if ((double)this.ai[0] == 4.0)
                {
                    if (this.wet && this.directionY < 0)
                        this.velocity.Y -= 0.3f;
                    this.velocity.X *= 0.96f;
                    if ((double)this.ai[2] > 0.0)
                    {
                        this.ai[2] -= 0.01f;
                        this.rotation += this.ai[2] * (float)this.direction;
                    }
                    else if ((double)this.velocity.Y >= 0.0)
                        this.rotation = 0.0f;
                    if ((double)this.ai[2] > 0.0 || (double)this.velocity.Y != 0.0 && !this.wet)
                        return;
                    this.netUpdate = true;
                    this.rotation = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[1] = 0.0f;
                    this.ai[0] = 5f;
                }
                else if ((double)this.ai[0] == 6.0)
                {
                    this.damage = (int)((double)this.defDamage * (Main.expertMode ? 1.39999997615814 : 1.79999995231628));
                    this.defense = this.defDefense * 2;
                    this.knockBackResist = 0.0f;
                    if (Main.rand.Next(3) < 2)
                    {
                        int index3 = Dust.NewDust(this.Center - new Vector2(30f), 60, 60, 6, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, new Color(), 1.5f);
                        Main.dust[index3].noGravity = true;
                        Main.dust[index3].velocity *= 0.2f;
                        Main.dust[index3].fadeIn = 1f;
                    }
                    ++this.ai[1];
                    if ((double)this.ai[3] > 0.0)
                    {
                        if ((double)this.ai[3] == 1.0)
                        {
                            Vector2 Position = this.Center - new Vector2(50f);
                            for (int index3 = 0; index3 < 32; ++index3)
                            {
                                int index4 = Dust.NewDust(Position, 100, 100, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                                Main.dust[index4].noGravity = true;
                                Main.dust[index4].velocity *= 3f;
                                int index5 = Dust.NewDust(Position, 100, 100, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                                Main.dust[index5].velocity *= 2f;
                                Main.dust[index5].noGravity = true;
                            }
                            for (int index3 = 0; index3 < 4; ++index3)
                            {
                                int index4 = Gore.NewGore(Position + new Vector2((float)(50 * Main.rand.Next(100)) / 100f, (float)(50 * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                                Main.gore[index4].velocity *= 0.3f;
                                Main.gore[index4].velocity.X += (float)Main.rand.Next(-10, 11) * 0.05f;
                                Main.gore[index4].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.05f;
                            }
                        }
                        for (int index3 = 0; index3 < 5; ++index3)
                        {
                            int index4 = Dust.NewDust(this.position, this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                            Main.dust[index4].velocity = Main.dust[index4].velocity * Utils.NextFloat(Main.rand);
                        }
                        ++this.ai[3];
                        if ((double)this.ai[3] >= 10.0)
                            this.ai[3] = 0.0f;
                    }
                    if ((double)this.ai[1] == 1.0)
                    {
                        this.netUpdate = true;
                        this.TargetClosest(true);
                        bool flag2 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
                        float num2 = 16f;
                        if (!flag2)
                            num2 = 10f;
                        Vector2 vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num3 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_2.X;
                        float num4 = Math.Abs(num3) * 0.2f;
                        if (this.directionY > 0)
                            num4 = 0.0f;
                        float num5 = Main.player[this.target].position.Y - vector2_2.Y - num4;
                        float num6 = (float)Math.Sqrt((double)num3 * (double)num3 + (double)num5 * (double)num5);
                        this.netUpdate = true;
                        float num7 = num2 / num6;
                        float num8 = num3 * num7;
                        float num9 = num5 * num7;
                        if (!flag2)
                            num9 = -12f;
                        this.velocity.X = num8;
                        this.velocity.Y = num9;
                    }
                    else
                    {
                        if ((double)this.position.X + (double)this.width > (double)Main.player[this.target].position.X && (double)this.position.X < (double)Main.player[this.target].position.X + (double)Main.player[this.target].width && (double)this.position.Y < (double)Main.player[this.target].position.Y + (double)Main.player[this.target].height)
                        {
                            this.velocity.X *= 0.9f;
                            if ((double)this.velocity.Y < 0.0)
                                this.velocity.Y += 0.2f;
                        }
                        if ((double)this.ai[2] == 0.0 || (double)this.ai[1] >= 1200.0)
                        {
                            this.ai[1] = 0.0f;
                            this.ai[0] = 5f;
                        }
                    }
                    if (this.wet && this.directionY < 0)
                        this.velocity.Y -= 0.3f;
                    this.rotation += MathHelper.Clamp(this.velocity.X / 10f * (float)this.direction, -0.3141593f, 0.3141593f);
                }
                else
                {
                    if ((double)this.ai[0] != 5.0)
                        return;
                    this.rotation = 0.0f;
                    this.velocity.X = 0.0f;
                    if (this.type >= 496 && this.type <= 497)
                        this.ai[1] += 0.5f;
                    else
                        ++this.ai[1];
                    if ((double)this.ai[1] >= 30.0)
                    {
                        this.TargetClosest(true);
                        this.netUpdate = true;
                        this.ai[1] = 0.0f;
                        this.ai[0] = 0.0f;
                    }
                    if (!this.wet)
                        return;
                    this.ai[0] = 3f;
                    this.ai[1] = 0.0f;
                }
            }
            else if (this.aiStyle == 40)
            {
                if (this.target < 0 || this.target == (int)byte.MaxValue || Main.player[this.target].dead)
                    this.TargetClosest(true);
                float num1 = 2f;
                float num2 = 0.08f;
                if (this.type == 531)
                {
                    num1 = 4f;
                    num2 = 0.16f;
                }
                Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                float num3 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
                float num4 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
                float num5 = (float)((int)((double)num3 / 8.0) * 8);
                float num6 = (float)((int)((double)num4 / 8.0) * 8);
                vector2_1.X = (float)((int)((double)vector2_1.X / 8.0) * 8);
                vector2_1.Y = (float)((int)((double)vector2_1.Y / 8.0) * 8);
                float num7 = num5 - vector2_1.X;
                float num8 = num6 - vector2_1.Y;
                float num9 = (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                float num10;
                float num11;
                if ((double)num9 == 0.0)
                {
                    num10 = this.velocity.X;
                    num11 = this.velocity.Y;
                }
                else
                {
                    float num12 = num1 / num9;
                    num10 = num7 * num12;
                    num11 = num8 * num12;
                }
                if (Main.player[this.target].dead)
                {
                    num10 = (float)((double)this.direction * (double)num1 / 2.0);
                    num11 = (float)(-(double)num1 / 2.0);
                }
                this.spriteDirection = -1;
                if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                {
                    ++this.ai[0];
                    if ((double)this.ai[0] > 0.0)
                        this.velocity.Y += 23.0f / 1000.0f;
                    else
                        this.velocity.Y -= 23.0f / 1000.0f;
                    if ((double)this.ai[0] < -100.0 || (double)this.ai[0] > 100.0)
                        this.velocity.X += 23.0f / 1000.0f;
                    else
                        this.velocity.X -= 23.0f / 1000.0f;
                    if ((double)this.ai[0] > 200.0)
                        this.ai[0] = -200f;
                    this.velocity.X += num10 * 0.007f;
                    this.velocity.Y += num11 * 0.007f;
                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                    if ((double)this.velocity.X > 1.5)
                        this.velocity.X *= 0.9f;
                    if ((double)this.velocity.X < -1.5)
                        this.velocity.X *= 0.9f;
                    if ((double)this.velocity.Y > 1.5)
                        this.velocity.Y *= 0.9f;
                    if ((double)this.velocity.Y < -1.5)
                        this.velocity.Y *= 0.9f;
                    if ((double)this.velocity.X > 3.0)
                        this.velocity.X = 3f;
                    if ((double)this.velocity.X < -3.0)
                        this.velocity.X = -3f;
                    if ((double)this.velocity.Y > 3.0)
                        this.velocity.Y = 3f;
                    if ((double)this.velocity.Y < -3.0)
                        this.velocity.Y = -3f;
                }
                else
                {
                    if ((double)this.velocity.X < (double)num10)
                    {
                        this.velocity.X += num2;
                        if ((double)this.velocity.X < 0.0 && (double)num10 > 0.0)
                            this.velocity.X += num2;
                    }
                    else if ((double)this.velocity.X > (double)num10)
                    {
                        this.velocity.X -= num2;
                        if ((double)this.velocity.X > 0.0 && (double)num10 < 0.0)
                            this.velocity.X -= num2;
                    }
                    if ((double)this.velocity.Y < (double)num11)
                    {
                        this.velocity.Y += num2;
                        if ((double)this.velocity.Y < 0.0 && (double)num11 > 0.0)
                            this.velocity.Y += num2;
                    }
                    else if ((double)this.velocity.Y > (double)num11)
                    {
                        this.velocity.Y -= num2;
                        if ((double)this.velocity.Y > 0.0 && (double)num11 < 0.0)
                            this.velocity.Y -= num2;
                    }
                    this.rotation = (float)Math.Atan2((double)num11, (double)num10);
                }
                if (this.type == 531)
                    this.rotation += 1.570796f;
                float num13 = 0.5f;
                if (this.collideX)
                {
                    this.netUpdate = true;
                    this.velocity.X = this.oldVelocity.X * -num13;
                    if (this.direction == -1 && (double)this.velocity.X > 0.0 && (double)this.velocity.X < 2.0)
                        this.velocity.X = 2f;
                    if (this.direction == 1 && (double)this.velocity.X < 0.0 && (double)this.velocity.X > -2.0)
                        this.velocity.X = -2f;
                }
                if (this.collideY)
                {
                    this.netUpdate = true;
                    this.velocity.Y = this.oldVelocity.Y * -num13;
                    if ((double)this.velocity.Y > 0.0 && (double)this.velocity.Y < 1.5)
                        this.velocity.Y = 2f;
                    if ((double)this.velocity.Y < 0.0 && (double)this.velocity.Y > -1.5)
                        this.velocity.Y = -2f;
                }
                if (((double)this.velocity.X > 0.0 && (double)this.oldVelocity.X < 0.0 || (double)this.velocity.X < 0.0 && (double)this.oldVelocity.X > 0.0 || ((double)this.velocity.Y > 0.0 && (double)this.oldVelocity.Y < 0.0 || (double)this.velocity.Y < 0.0 && (double)this.oldVelocity.Y > 0.0)) && !this.justHit)
                    this.netUpdate = true;
                if (Main.netMode == 1)
                    return;
                if (Main.netMode != 1 && Main.expertMode && this.target >= 0 && ((this.type == 163 || this.type == 238) && Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1)))
                {
                    ++this.localAI[0];
                    if (this.justHit)
                    {
                        this.localAI[0] -= (float)Main.rand.Next(20, 60);
                        if ((double)this.localAI[0] < 0.0)
                            this.localAI[0] = 0.0f;
                    }
                    if ((double)this.localAI[0] > (double)Main.rand.Next(180, 900))
                    {
                        this.localAI[0] = 0.0f;
                        Vector2 vector2_2 = Main.player[this.target].Center - this.Center;
                        vector2_2.Normalize();
                        Vector2 vector2_3 = vector2_2 * 8f;
                        Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2_3.X, vector2_3.Y, 472, 18, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                }
                int num14 = (int)this.Center.X / 16;
                int num15 = (int)this.Center.Y / 16;
                bool flag = false;
                for (int index1 = num14 - 1; index1 <= num14 + 1; ++index1)
                {
                    for (int index2 = num15 - 1; index2 <= num15 + 1; ++index2)
                    {
                        if (Main.tile[index1, index2] == null)
                            return;
                        if ((int)Main.tile[index1, index2].wall > 0)
                            flag = true;
                    }
                }
                if (flag)
                    return;
                if (this.type == 237)
                    this.Transform(236);
                else if (this.type == 238)
                    this.Transform(163);
                else if (this.type == 240)
                    this.Transform(239);
                else if (this.type == 531)
                    this.Transform(530);
                else
                    this.Transform(164);
            }
            else if (this.aiStyle == 41)
            {
                if ((double)this.ai[2] > 1.0)
                    --this.ai[2];
                if ((double)this.ai[2] == 0.0)
                {
                    this.ai[0] = -100f;
                    this.ai[2] = 1f;
                    this.TargetClosest(true);
                    this.spriteDirection = this.direction;
                }
                if (this.type == 378)
                {
                    Vector2 vector2 = new Vector2(-6f, -10f);
                    vector2.X *= (float)this.spriteDirection;
                    if ((double)this.ai[1] != 5.0 && Main.rand.Next(3) == 0)
                    {
                        int index = Dust.NewDust(this.Center + vector2 - Vector2.One * 5f, 4, 4, 6, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index].scale = 1.5f;
                        Main.dust[index].noGravity = true;
                        Main.dust[index].velocity = Main.dust[index].velocity * 0.25f + Vector2.Normalize(vector2) * 1f;
                        Main.dust[index].velocity = Utils.RotatedBy(Main.dust[index].velocity, -1.57079637050629 * (double)this.direction, new Vector2());
                    }
                    if ((double)this.ai[1] == 5.0)
                    {
                        this.velocity = Vector2.Zero;
                        this.position.X += (float)(this.width / 2);
                        this.position.Y += (float)(this.height / 2);
                        this.width = 160;
                        this.height = 160;
                        this.position.X -= (float)(this.width / 2);
                        this.position.Y -= (float)(this.height / 2);
                        this.dontTakeDamage = true;
                        for (int index = 0; index < 8; ++index)
                            Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        for (int index1 = 0; index1 < 32; ++index1)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity *= 3f;
                            int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                            Main.dust[index3].velocity *= 2f;
                            Main.dust[index3].noGravity = true;
                        }
                        for (int index1 = 0; index1 < 2; ++index1)
                        {
                            int index2 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                            Main.gore[index2].velocity *= 0.3f;
                            Main.gore[index2].velocity.X += (float)Main.rand.Next(-10, 11) * 0.05f;
                            Main.gore[index2].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.05f;
                        }
                        if ((double)this.ai[2] != 1.0)
                            return;
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                        this.life = -1;
                        this.HitEffect(0, 10.0);
                        this.active = false;
                        return;
                    }
                }
                if (this.type == 378 && (double)this.ai[1] != 5.0)
                {
                    if (this.wet || (double)Vector2.Distance(this.Center, Main.player[this.target].Center) < 64.0)
                    {
                        this.ai[1] = 5f;
                        this.ai[2] = 3f;
                        this.netUpdate = true;
                        return;
                    }
                }
                else if (this.wet && this.type != 177)
                {
                    if (this.collideX)
                    {
                        this.direction *= -this.direction;
                        this.spriteDirection = this.direction;
                    }
                    if (this.collideY)
                    {
                        this.TargetClosest(true);
                        if ((double)this.oldVelocity.Y < 0.0)
                            this.velocity.Y = 5f;
                        else
                            this.velocity.Y -= 2f;
                        this.spriteDirection = this.direction;
                    }
                    if ((double)this.velocity.Y > 4.0)
                        this.velocity.Y *= 0.95f;
                    this.velocity.Y -= 0.3f;
                    if ((double)this.velocity.Y < -4.0)
                        this.velocity.Y = -4f;
                }
                if ((double)this.velocity.Y == 0.0)
                {
                    if ((double)this.ai[3] == (double)this.position.X)
                    {
                        this.direction *= -1;
                        this.ai[2] = 300f;
                    }
                    this.ai[3] = 0.0f;
                    this.velocity.X *= 0.8f;
                    if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                        this.velocity.X = 0.0f;
                    if (this.type == 177)
                        this.ai[0] += 2f;
                    else
                        this.ai[0] += 5f;
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                    float num2 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2.Y;
                    float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    float num4 = 400f / num3;
                    float num5 = this.type != 177 ? num4 * 10f : num4 * 5f;
                    if ((double)num5 > 30.0)
                        num5 = 30f;
                    this.ai[0] += (float)(int)num5;
                    if ((double)this.ai[0] >= 0.0)
                    {
                        this.netUpdate = true;
                        if ((double)this.ai[2] == 1.0)
                            this.TargetClosest(true);
                        if (this.type == 177)
                        {
                            if ((double)this.ai[1] == 2.0)
                            {
                                this.velocity.Y = -11.5f;
                                this.velocity.X += 2f * (float)this.direction;
                                if ((double)num3 < 350.0 && (double)num3 > 200.0)
                                    this.velocity.X += (float)this.direction;
                                this.ai[0] = -200f;
                                this.ai[1] = 0.0f;
                                this.ai[3] = this.position.X;
                            }
                            else
                            {
                                this.velocity.Y = -7.5f;
                                this.velocity.X += (float)(4 * this.direction);
                                if ((double)num3 < 350.0 && (double)num3 > 200.0)
                                    this.velocity.X += (float)this.direction;
                                this.ai[0] = -120f;
                                ++this.ai[1];
                            }
                        }
                        else if ((double)this.ai[1] == 3.0)
                        {
                            this.velocity.Y = -9f;
                            this.velocity.X += (float)(3 * this.direction);
                            if ((double)num3 < 350.0 && (double)num3 > 200.0)
                                this.velocity.X += (float)this.direction;
                            this.ai[0] = -200f;
                            this.ai[1] = 0.0f;
                            this.ai[3] = this.position.X;
                        }
                        else
                        {
                            this.velocity.Y = -5f;
                            this.velocity.X += (float)(5 * this.direction);
                            if ((double)num3 < 350.0 && (double)num3 > 200.0)
                                this.velocity.X += (float)this.direction;
                            this.ai[0] = -120f;
                            ++this.ai[1];
                        }
                    }
                    else if ((double)this.ai[0] >= -30.0)
                        this.aiAction = 1;
                    this.spriteDirection = this.direction;
                }
                else
                {
                    if (this.target >= (int)byte.MaxValue)
                        return;
                    if (this.type == 177)
                    {
                        bool flag = false;
                        if ((double)this.position.Y + (double)this.height < (double)Main.player[this.target].position.Y && (double)this.position.X + (double)this.width > (double)Main.player[this.target].position.X && (double)this.position.X < (double)Main.player[this.target].position.X + (double)Main.player[this.target].width)
                        {
                            flag = true;
                            this.velocity.X *= 0.92f;
                            if ((double)this.velocity.Y < 0.0)
                            {
                                this.velocity.Y *= 0.9f;
                                this.velocity.Y += 0.1f;
                            }
                        }
                        if (flag || (this.direction != 1 || (double)this.velocity.X >= 4.0) && (this.direction != -1 || (double)this.velocity.X <= -4.0))
                            return;
                        if (this.direction == -1 && (double)this.velocity.X < 0.1 || this.direction == 1 && (double)this.velocity.X > -0.1)
                            this.velocity.X += 0.2f * (float)this.direction;
                        else
                            this.velocity.X *= 0.93f;
                    }
                    else
                    {
                        if ((this.direction != 1 || (double)this.velocity.X >= 3.0) && (this.direction != -1 || (double)this.velocity.X <= -3.0))
                            return;
                        if (this.direction == -1 && (double)this.velocity.X < 0.1 || this.direction == 1 && (double)this.velocity.X > -0.1)
                            this.velocity.X += 0.2f * (float)this.direction;
                        else
                            this.velocity.X *= 0.93f;
                    }
                }
            }
            else if (this.aiStyle == 42)
            {
                this.TargetClosest(true);
                if ((double)this.ai[0] == 0.0)
                {
                    if (this.target >= 0)
                    {
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num1 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                        float num2 = Main.player[this.target].position.Y - vector2.Y;
                        if (Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2) < 200.0 && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                            this.ai[0] = 1f;
                    }
                    if ((double)this.velocity.X == 0.0 && (double)this.velocity.Y >= 0.0 && ((double)this.velocity.Y <= 2.0 && this.life == this.lifeMax))
                        return;
                    this.ai[0] = 1f;
                }
                else
                {
                    ++this.ai[0];
                    if ((double)this.ai[0] < 21.0)
                        return;
                    this.ai[0] = 21f;
                    this.Transform(196);
                }
            }
            else if (this.aiStyle == 43)
            {
                int num1 = 0;
                for (int index = 0; index < (int)byte.MaxValue; ++index)
                {
                    if (Main.player[index].active && !Main.player[index].dead && (double)(this.Center - Main.player[index].Center).Length() < 1000.0)
                        ++num1;
                }
                if (Main.expertMode)
                    this.defense = this.defDefense + (int)(20.0 * (1.0 - (double)this.life / (double)this.lifeMax));
                if (this.target < 0 || this.target == (int)byte.MaxValue || (Main.player[this.target].dead || !Main.player[this.target].active))
                    this.TargetClosest(true);
                if (Main.player[this.target].dead && Main.expertMode)
                {
                    if ((double)this.position.Y < Main.worldSurface * 16.0 + 2000.0)
                        this.velocity.Y += 0.04f;
                    if ((double)this.position.X < (double)(Main.maxTilesX * 8))
                        this.velocity.X -= 0.04f;
                    else
                        this.velocity.X += 0.04f;
                    if (this.timeLeft <= 10)
                        return;
                    this.timeLeft = 10;
                }
                else if ((double)this.ai[0] == -1.0)
                {
                    if (Main.netMode == 1)
                        return;
                    float num2 = this.ai[1];
                    int num3;
                    do
                    {
                        num3 = Main.rand.Next(3);
                        switch (num3)
                        {
                            case 1:
                                num3 = 2;
                                break;
                            case 2:
                                num3 = 3;
                                break;
                        }
                    }
                    while ((double)num3 == (double)num2);
                    this.ai[0] = (float)num3;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                }
                else if ((double)this.ai[0] == 0.0)
                {
                    int num2 = 2;
                    if (Main.expertMode)
                    {
                        if (this.life < this.lifeMax / 2)
                            ++num2;
                        if (this.life < this.lifeMax / 3)
                            ++num2;
                        if (this.life < this.lifeMax / 5)
                            ++num2;
                    }
                    if ((double)this.ai[1] > (double)(2 * num2) && (double)this.ai[1] % 2.0 == 0.0)
                    {
                        this.ai[0] = -1f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.netUpdate = true;
                    }
                    else if ((double)this.ai[1] % 2.0 == 0.0)
                    {
                        this.TargetClosest(true);
                        if ((double)Math.Abs((float)((double)this.position.Y + (double)(this.height / 2) - ((double)Main.player[this.target].position.Y + (double)(Main.player[this.target].height / 2)))) < 20.0)
                        {
                            this.localAI[0] = 1f;
                            ++this.ai[1];
                            this.ai[2] = 0.0f;
                            float num3 = 12f;
                            if (Main.expertMode)
                            {
                                num3 = 16f;
                                if ((double)this.life < (double)this.lifeMax * 0.75)
                                    num3 += 2f;
                                if ((double)this.life < (double)this.lifeMax * 0.5)
                                    num3 += 2f;
                                if ((double)this.life < (double)this.lifeMax * 0.25)
                                    num3 += 2f;
                                if ((double)this.life < (double)this.lifeMax * 0.1)
                                    num3 += 2f;
                            }
                            Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                            float num4 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                            float num5 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                            float num6 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                            float num7 = num3 / num6;
                            this.velocity.X = num4 * num7;
                            this.velocity.Y = num5 * num7;
                            this.spriteDirection = this.direction;
                            Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
                        }
                        else
                        {
                            this.localAI[0] = 0.0f;
                            float num3 = 12f;
                            float num4 = 0.15f;
                            if (Main.expertMode)
                            {
                                if ((double)this.life < (double)this.lifeMax * 0.75)
                                {
                                    ++num3;
                                    num4 += 0.05f;
                                }
                                if ((double)this.life < (double)this.lifeMax * 0.5)
                                {
                                    ++num3;
                                    num4 += 0.05f;
                                }
                                if ((double)this.life < (double)this.lifeMax * 0.25)
                                {
                                    num3 += 2f;
                                    num4 += 0.05f;
                                }
                                if ((double)this.life < (double)this.lifeMax * 0.1)
                                {
                                    num3 += 2f;
                                    num4 += 0.1f;
                                }
                            }
                            if ((double)this.position.Y + (double)(this.height / 2) < (double)Main.player[this.target].position.Y + (double)(Main.player[this.target].height / 2))
                                this.velocity.Y += num4;
                            else
                                this.velocity.Y -= num4;
                            if ((double)this.velocity.Y < -12.0)
                                this.velocity.Y = -num3;
                            if ((double)this.velocity.Y > 12.0)
                                this.velocity.Y = num3;
                            if ((double)Math.Abs((float)((double)this.position.X + (double)(this.width / 2) - ((double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2)))) > 600.0)
                                this.velocity.X += 0.15f * (float)this.direction;
                            else if ((double)Math.Abs((float)((double)this.position.X + (double)(this.width / 2) - ((double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2)))) < 300.0)
                                this.velocity.X -= 0.15f * (float)this.direction;
                            else
                                this.velocity.X *= 0.8f;
                            if ((double)this.velocity.X < -16.0)
                                this.velocity.X = -16f;
                            if ((double)this.velocity.X > 16.0)
                                this.velocity.X = 16f;
                            this.spriteDirection = this.direction;
                        }
                    }
                    else
                    {
                        if ((double)this.velocity.X < 0.0)
                            this.direction = -1;
                        else
                            this.direction = 1;
                        this.spriteDirection = this.direction;
                        int num3 = 600;
                        if (Main.expertMode)
                        {
                            if ((double)this.life < (double)this.lifeMax * 0.1)
                                num3 = 300;
                            else if ((double)this.life < (double)this.lifeMax * 0.25)
                                num3 = 450;
                            else if ((double)this.life < (double)this.lifeMax * 0.5)
                                num3 = 500;
                            else if ((double)this.life < (double)this.lifeMax * 0.75)
                                num3 = 550;
                        }
                        int num4 = 1;
                        if ((double)this.position.X + (double)(this.width / 2) < (double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2))
                            num4 = -1;
                        if (this.direction == num4 && (double)Math.Abs((float)((double)this.position.X + (double)(this.width / 2) - ((double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2)))) > (double)num3)
                            this.ai[2] = 1f;
                        if ((double)this.ai[2] == 1.0)
                        {
                            this.TargetClosest(true);
                            this.spriteDirection = this.direction;
                            this.localAI[0] = 0.0f;
                            NPC npc1 = this;
                            Vector2 vector2_1 = npc1.velocity * 0.9f;
                            npc1.velocity = vector2_1;
                            float num5 = 0.1f;
                            if (Main.expertMode)
                            {
                                if (this.life < this.lifeMax / 2)
                                {
                                    NPC npc2 = this;
                                    Vector2 vector2_2 = npc2.velocity * 0.9f;
                                    npc2.velocity = vector2_2;
                                    num5 += 0.05f;
                                }
                                if (this.life < this.lifeMax / 3)
                                {
                                    NPC npc2 = this;
                                    Vector2 vector2_2 = npc2.velocity * 0.9f;
                                    npc2.velocity = vector2_2;
                                    num5 += 0.05f;
                                }
                                if (this.life < this.lifeMax / 5)
                                {
                                    NPC npc2 = this;
                                    Vector2 vector2_2 = npc2.velocity * 0.9f;
                                    npc2.velocity = vector2_2;
                                    num5 += 0.05f;
                                }
                            }
                            if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) >= (double)num5)
                                return;
                            this.ai[2] = 0.0f;
                            ++this.ai[1];
                        }
                        else
                            this.localAI[0] = 1f;
                    }
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    this.TargetClosest(true);
                    this.spriteDirection = this.direction;
                    float num2 = 12f;
                    float num3 = 0.07f;
                    if (Main.expertMode)
                        num3 = 0.1f;
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num4 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num5 = (float)((double)Main.player[this.target].position.Y + (double)(Main.player[this.target].height / 2) - 200.0) - vector2.Y;
                    float num6 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                    if ((double)num6 < 200.0)
                    {
                        this.ai[0] = 1f;
                        this.ai[1] = 0.0f;
                        this.netUpdate = true;
                    }
                    else
                    {
                        float num7 = num2 / num6;
                        if ((double)this.velocity.X < (double)num4)
                        {
                            this.velocity.X += num3;
                            if ((double)this.velocity.X < 0.0 && (double)num4 > 0.0)
                                this.velocity.X += num3;
                        }
                        else if ((double)this.velocity.X > (double)num4)
                        {
                            this.velocity.X -= num3;
                            if ((double)this.velocity.X > 0.0 && (double)num4 < 0.0)
                                this.velocity.X -= num3;
                        }
                        if ((double)this.velocity.Y < (double)num5)
                        {
                            this.velocity.Y += num3;
                            if ((double)this.velocity.Y >= 0.0 || (double)num5 <= 0.0)
                                return;
                            this.velocity.Y += num3;
                        }
                        else
                        {
                            if ((double)this.velocity.Y <= (double)num5)
                                return;
                            this.velocity.Y -= num3;
                            if ((double)this.velocity.Y <= 0.0 || (double)num5 >= 0.0)
                                return;
                            this.velocity.Y -= num3;
                        }
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    this.localAI[0] = 0.0f;
                    this.TargetClosest(true);
                    Vector2 Position1 = new Vector2(this.position.X + (float)(this.width / 2) + (float)(Main.rand.Next(20) * this.direction), this.position.Y + (float)this.height * 0.8f);
                    Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num2 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2_1.X;
                    float num3 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2_1.Y;
                    float num4 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                    ++this.ai[1];
                    if (Main.expertMode)
                    {
                        this.ai[1] += (float)(num1 / 2);
                        if ((double)this.life < (double)this.lifeMax * 0.75)
                            this.ai[1] += 0.25f;
                        if ((double)this.life < (double)this.lifeMax * 0.5)
                            this.ai[1] += 0.25f;
                        if ((double)this.life < (double)this.lifeMax * 0.25)
                            this.ai[1] += 0.25f;
                        if ((double)this.life < (double)this.lifeMax * 0.1)
                            this.ai[1] += 0.25f;
                    }
                    bool flag = false;
                    if ((double)this.ai[1] > 40.0)
                    {
                        this.ai[1] = 0.0f;
                        ++this.ai[2];
                        flag = true;
                    }
                    if (Collision.CanHit(Position1, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && flag)
                    {
                        Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
                        if (Main.netMode != 1)
                        {
                            int Type = Main.rand.Next(210, 212);
                            int index = NPC.NewNPC((int)Position1.X, (int)Position1.Y, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            Main.npc[index].velocity.X = (float)Main.rand.Next(-200, 201) * (1.0f / 500.0f);
                            Main.npc[index].velocity.Y = (float)Main.rand.Next(-200, 201) * (1.0f / 500.0f);
                            Main.npc[index].localAI[0] = 60f;
                            Main.npc[index].netUpdate = true;
                        }
                    }
                    if ((double)num4 > 400.0 || !Collision.CanHit(new Vector2(Position1.X, Position1.Y - 30f), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                    {
                        float num5 = 14f;
                        float num6 = 0.1f;
                        vector2_1 = Position1;
                        float num7 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2_1.X;
                        float num8 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2_1.Y;
                        float num9 = (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                        float num10 = num5 / num9;
                        if ((double)this.velocity.X < (double)num7)
                        {
                            this.velocity.X += num6;
                            if ((double)this.velocity.X < 0.0 && (double)num7 > 0.0)
                                this.velocity.X += num6;
                        }
                        else if ((double)this.velocity.X > (double)num7)
                        {
                            this.velocity.X -= num6;
                            if ((double)this.velocity.X > 0.0 && (double)num7 < 0.0)
                                this.velocity.X -= num6;
                        }
                        if ((double)this.velocity.Y < (double)num8)
                        {
                            this.velocity.Y += num6;
                            if ((double)this.velocity.Y < 0.0 && (double)num8 > 0.0)
                                this.velocity.Y += num6;
                        }
                        else if ((double)this.velocity.Y > (double)num8)
                        {
                            this.velocity.Y -= num6;
                            if ((double)this.velocity.Y > 0.0 && (double)num8 < 0.0)
                                this.velocity.Y -= num6;
                        }
                    }
                    else
                    {
                        NPC npc = this;
                        Vector2 vector2_2 = npc.velocity * 0.9f;
                        npc.velocity = vector2_2;
                    }
                    this.spriteDirection = this.direction;
                    if ((double)this.ai[2] <= 5.0)
                        return;
                    this.ai[0] = -1f;
                    this.ai[1] = 1f;
                    this.netUpdate = true;
                }
                else
                {
                    if ((double)this.ai[0] != 3.0)
                        return;
                    float num2 = 4f;
                    float num3 = 0.05f;
                    if (Main.expertMode)
                    {
                        num3 = 0.075f;
                        num2 = 6f;
                    }
                    Vector2 Position1 = new Vector2(this.position.X + (float)(this.width / 2) + (float)(Main.rand.Next(20) * this.direction), this.position.Y + (float)this.height * 0.8f);
                    Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num4 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2_1.X;
                    float num5 = (float)((double)Main.player[this.target].position.Y + (double)(Main.player[this.target].height / 2) - 300.0) - vector2_1.Y;
                    float num6 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                    ++this.ai[1];
                    bool flag = false;
                    if (Main.expertMode)
                    {
                        if ((double)this.life < (double)this.lifeMax * 0.1)
                        {
                            if ((double)this.ai[1] % 15.0 == 14.0)
                                flag = true;
                        }
                        else if (this.life < this.lifeMax / 3)
                        {
                            if ((double)this.ai[1] % 25.0 == 24.0)
                                flag = true;
                        }
                        else if (this.life < this.lifeMax / 2)
                        {
                            if ((double)this.ai[1] % 30.0 == 29.0)
                                flag = true;
                        }
                        else if ((double)this.ai[1] % 35.0 == 34.0)
                            flag = true;
                    }
                    else if ((double)this.ai[1] % 40.0 == 39.0)
                        flag = true;
                    if (flag && (double)this.position.Y + (double)this.height < (double)Main.player[this.target].position.Y && Collision.CanHit(Position1, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                    {
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
                        if (Main.netMode != 1)
                        {
                            float num7 = 8f;
                            if (Main.expertMode)
                                num7 += 2f;
                            if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.1)
                                num7 += 3f;
                            float num8 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - Position1.X + (float)Main.rand.Next(-80, 81);
                            float num9 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - Position1.Y + (float)Main.rand.Next(-40, 41);
                            float num10 = (float)Math.Sqrt((double)num8 * (double)num8 + (double)num9 * (double)num9);
                            float num11 = num7 / num10;
                            float SpeedX = num8 * num11;
                            float SpeedY = num9 * num11;
                            int Damage = 11;
                            int Type = 55;
                            int index = Projectile.NewProjectile(Position1.X, Position1.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            Main.projectile[index].timeLeft = 300;
                        }
                    }
                    float num12;
                    if (!Collision.CanHit(new Vector2(Position1.X, Position1.Y - 30f), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                    {
                        float num7 = 14f;
                        float num8 = 0.1f;
                        Vector2 vector2_2 = Position1;
                        float num9 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2_2.X;
                        float num10 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2_2.Y;
                        float num11 = (float)Math.Sqrt((double)num9 * (double)num9 + (double)num10 * (double)num10);
                        num12 = num7 / num11;
                        if ((double)this.velocity.X < (double)num9)
                        {
                            this.velocity.X += num8;
                            if ((double)this.velocity.X < 0.0 && (double)num9 > 0.0)
                                this.velocity.X += num8;
                        }
                        else if ((double)this.velocity.X > (double)num9)
                        {
                            this.velocity.X -= num8;
                            if ((double)this.velocity.X > 0.0 && (double)num9 < 0.0)
                                this.velocity.X -= num8;
                        }
                        if ((double)this.velocity.Y < (double)num10)
                        {
                            this.velocity.Y += num8;
                            if ((double)this.velocity.Y < 0.0 && (double)num10 > 0.0)
                                this.velocity.Y += num8;
                        }
                        else if ((double)this.velocity.Y > (double)num10)
                        {
                            this.velocity.Y -= num8;
                            if ((double)this.velocity.Y > 0.0 && (double)num10 < 0.0)
                                this.velocity.Y -= num8;
                        }
                    }
                    else if ((double)num6 > 100.0)
                    {
                        this.TargetClosest(true);
                        this.spriteDirection = this.direction;
                        num12 = num2 / num6;
                        if ((double)this.velocity.X < (double)num4)
                        {
                            this.velocity.X += num3;
                            if ((double)this.velocity.X < 0.0 && (double)num4 > 0.0)
                                this.velocity.X += num3 * 2f;
                        }
                        else if ((double)this.velocity.X > (double)num4)
                        {
                            this.velocity.X -= num3;
                            if ((double)this.velocity.X > 0.0 && (double)num4 < 0.0)
                                this.velocity.X -= num3 * 2f;
                        }
                        if ((double)this.velocity.Y < (double)num5)
                        {
                            this.velocity.Y += num3;
                            if ((double)this.velocity.Y < 0.0 && (double)num5 > 0.0)
                                this.velocity.Y += num3 * 2f;
                        }
                        else if ((double)this.velocity.Y > (double)num5)
                        {
                            this.velocity.Y -= num3;
                            if ((double)this.velocity.Y > 0.0 && (double)num5 < 0.0)
                                this.velocity.Y -= num3 * 2f;
                        }
                    }
                    if ((double)this.ai[1] <= 800.0)
                        return;
                    this.ai[0] = -1f;
                    this.ai[1] = 3f;
                    this.netUpdate = true;
                }
            }
            else if (this.aiStyle == 44)
            {
                this.noGravity = true;
                if (this.collideX)
                {
                    if ((double)this.oldVelocity.X > 0.0)
                        this.direction = -1;
                    else
                        this.direction = 1;
                    this.velocity.X = (float)this.direction;
                }
                if (this.collideY)
                {
                    this.directionY = (double)this.oldVelocity.Y <= 0.0 ? 1 : -1;
                    this.velocity.Y = (float)this.directionY;
                }
                int num1 = this.target;
                int num2 = this.direction;
                if (this.target == (int)byte.MaxValue || Main.player[this.target].dead || Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                {
                    this.ai[0] = 90f;
                    this.TargetClosest(true);
                }
                else if ((double)this.ai[0] > 0.0)
                {
                    --this.ai[0];
                    this.TargetClosest(true);
                }
                if (this.netUpdate && num1 == this.target && num2 == this.direction)
                    this.netUpdate = false;
                float num3 = 0.05f;
                float num4 = 0.01f;
                float num5 = 3f;
                float num6 = 1f;
                float num7 = 30f;
                float num8 = 100f;
                float num9 = Math.Abs((float)((double)this.position.X + (double)(this.width / 2) - ((double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2))));
                float num10 = Main.player[this.target].position.Y - (float)(this.height / 2);
                if (this.type == 509)
                {
                    num3 = 0.09f;
                    num4 = 0.03f;
                    num5 = 5f;
                    num6 = 2f;
                    num7 = 40f;
                    num8 = 150f;
                    num10 = Main.player[this.target].Center.Y - (float)(this.height / 2);
                    this.rotation = this.velocity.X * 0.1f;
                    for (int index = 0; index < 200; ++index)
                    {
                        if (index != this.whoAmI && Main.npc[index].active && (Main.npc[index].type == this.type && (double)Math.Abs(this.position.X - Main.npc[index].position.X) + (double)Math.Abs(this.position.Y - Main.npc[index].position.Y) < (double)this.width))
                        {
                            if ((double)this.position.X < (double)Main.npc[index].position.X)
                                this.velocity.X -= 0.05f;
                            else
                                this.velocity.X += 0.05f;
                            if ((double)this.position.Y < (double)Main.npc[index].position.Y)
                                this.velocity.Y -= 0.05f;
                            else
                                this.velocity.Y += 0.05f;
                        }
                    }
                }
                if ((double)this.ai[0] <= 0.0)
                {
                    num5 *= 0.8f;
                    num3 *= 0.7f;
                    num10 = this.Center.Y + (float)(this.directionY * 1000);
                    if ((double)this.velocity.X < 0.0)
                        this.direction = -1;
                    else if ((double)this.velocity.X > 0.0 || this.direction == 0)
                        this.direction = 1;
                }
                if ((double)num9 > (double)num7)
                {
                    if (this.direction == -1 && (double)this.velocity.X > -(double)num5)
                    {
                        this.velocity.X -= num3;
                        if ((double)this.velocity.X > (double)num5)
                            this.velocity.X -= num3;
                        else if ((double)this.velocity.X > 0.0)
                            this.velocity.X -= num3 / 2f;
                        if ((double)this.velocity.X < -(double)num5)
                            this.velocity.X = -num5;
                    }
                    else if (this.direction == 1 && (double)this.velocity.X < (double)num5)
                    {
                        this.velocity.X += num3;
                        if ((double)this.velocity.X < -(double)num5)
                            this.velocity.X += num3;
                        else if ((double)this.velocity.X < 0.0)
                            this.velocity.X += num3 / 2f;
                        if ((double)this.velocity.X > (double)num5)
                            this.velocity.X = num5;
                    }
                }
                if ((double)num9 > (double)num8)
                    num10 -= num8 / 2f;
                if ((double)this.position.Y < (double)num10)
                {
                    this.velocity.Y += num4;
                    if ((double)this.velocity.Y < 0.0)
                        this.velocity.Y += num4;
                }
                else
                {
                    this.velocity.Y -= num4;
                    if ((double)this.velocity.Y > 0.0)
                        this.velocity.Y -= num4;
                }
                if ((double)this.velocity.Y < -(double)num6)
                    this.velocity.Y = -num6;
                if ((double)this.velocity.Y <= (double)num6)
                    return;
                this.velocity.Y = num6;
            }
            else if (this.aiStyle == 45)
            {
                NPC.golemBoss = this.whoAmI;
                if ((double)this.localAI[0] == 0.0 && Main.netMode != 1)
                {
                    this.localAI[0] = 1f;
                    NPC.NewNPC((int)this.Center.X - 84, (int)this.Center.Y - 9, 247, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    NPC.NewNPC((int)this.Center.X + 78, (int)this.Center.Y - 9, 248, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    NPC.NewNPC((int)this.Center.X - 3, (int)this.Center.Y - 57, 246, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                }
                if (this.target >= 0 && Main.player[this.target].dead)
                {
                    this.TargetClosest(true);
                    if (Main.player[this.target].dead)
                        this.noTileCollide = true;
                }
                if (this.alpha > 0)
                {
                    this.alpha -= 10;
                    if (this.alpha < 0)
                        this.alpha = 0;
                    this.ai[1] = 0.0f;
                }
                bool flag1 = false;
                bool flag2 = false;
                bool flag3 = false;
                this.dontTakeDamage = false;
                for (int index = 0; index < 200; ++index)
                {
                    if (Main.npc[index].active && Main.npc[index].type == 246)
                        flag1 = true;
                    if (Main.npc[index].active && Main.npc[index].type == 247)
                        flag2 = true;
                    if (Main.npc[index].active && Main.npc[index].type == 248)
                        flag3 = true;
                }
                this.dontTakeDamage = flag1;
                if (!flag2)
                {
                    int index1 = Dust.NewDust(new Vector2(this.Center.X - 80f, this.Center.Y - 9f), 8, 8, 31, 0.0f, 0.0f, 100, new Color(), 1f);
                    Main.dust[index1].alpha += Main.rand.Next(100);
                    Main.dust[index1].velocity *= 0.2f;
                    Main.dust[index1].velocity.Y -= (float)(0.5 + (double)Main.rand.Next(10) * 0.100000001490116);
                    Main.dust[index1].fadeIn = (float)(0.5 + (double)Main.rand.Next(10) * 0.100000001490116);
                    if (Main.rand.Next(10) == 0)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.Center.X - 80f, this.Center.Y - 9f), 8, 8, 6, 0.0f, 0.0f, 0, new Color(), 1f);
                        if (Main.rand.Next(20) != 0)
                        {
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].scale *= (float)(1.0 + (double)Main.rand.Next(10) * 0.100000001490116);
                            --Main.dust[index2].velocity.Y;
                        }
                    }
                }
                if (!flag3)
                {
                    int index1 = Dust.NewDust(new Vector2(this.Center.X + 62f, this.Center.Y - 9f), 8, 8, 31, 0.0f, 0.0f, 100, new Color(), 1f);
                    Main.dust[index1].alpha += Main.rand.Next(100);
                    Main.dust[index1].velocity *= 0.2f;
                    Main.dust[index1].velocity.Y -= (float)(0.5 + (double)Main.rand.Next(10) * 0.100000001490116);
                    Main.dust[index1].fadeIn = (float)(0.5 + (double)Main.rand.Next(10) * 0.100000001490116);
                    if (Main.rand.Next(10) == 0)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.Center.X + 62f, this.Center.Y - 9f), 8, 8, 6, 0.0f, 0.0f, 0, new Color(), 1f);
                        if (Main.rand.Next(20) != 0)
                        {
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].scale *= (float)(1.0 + (double)Main.rand.Next(10) * 0.100000001490116);
                            --Main.dust[index2].velocity.Y;
                        }
                    }
                }
                if ((double)this.ai[0] == 0.0)
                {
                    this.noTileCollide = false;
                    if ((double)this.velocity.Y == 0.0)
                    {
                        this.velocity.X *= 0.8f;
                        ++this.ai[1];
                        if ((double)this.ai[1] > 0.0)
                        {
                            if (!flag2)
                                this.ai[1] += 2f;
                            if (!flag3)
                                this.ai[1] += 2f;
                            if (!flag1)
                                this.ai[1] += 2f;
                            if (this.life < this.lifeMax)
                                ++this.ai[1];
                            if (this.life < this.lifeMax / 2)
                                this.ai[1] += 4f;
                            if (this.life < this.lifeMax / 3)
                                this.ai[1] += 8f;
                        }
                        if ((double)this.ai[1] >= 300.0)
                        {
                            this.ai[1] = -20f;
                            this.frameCounter = 0.0;
                        }
                        else if ((double)this.ai[1] == -1.0)
                        {
                            this.TargetClosest(true);
                            this.velocity.X = (float)(4 * this.direction);
                            this.velocity.Y = -12.1f;
                            this.ai[0] = 1f;
                            this.ai[1] = 0.0f;
                        }
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    if ((double)this.velocity.Y == 0.0)
                    {
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                        this.ai[0] = 0.0f;
                        int num = (int)this.position.X - 20;
                        while (num < (int)this.position.X + this.width + 40)
                        {
                            for (int index1 = 0; index1 < 4; ++index1)
                            {
                                int index2 = Dust.NewDust(new Vector2(this.position.X - 20f, this.position.Y + (float)this.height), this.width + 20, 4, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                                Main.dust[index2].velocity *= 0.2f;
                            }
                            int index = Gore.NewGore(new Vector2((float)(num - 20), (float)((double)this.position.Y + (double)this.height - 8.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                            Main.gore[index].velocity *= 0.4f;
                            num += 20;
                        }
                    }
                    else
                    {
                        this.TargetClosest(true);
                        if ((double)this.position.X < (double)Main.player[this.target].position.X && (double)this.position.X + (double)this.width > (double)Main.player[this.target].position.X + (double)Main.player[this.target].width)
                        {
                            this.velocity.X *= 0.9f;
                            this.velocity.Y += 0.2f;
                        }
                        else
                        {
                            if (this.direction < 0)
                                this.velocity.X -= 0.2f;
                            else if (this.direction > 0)
                                this.velocity.X += 0.2f;
                            float num = 3f;
                            if (this.life < this.lifeMax)
                                ++num;
                            if (this.life < this.lifeMax / 2)
                                ++num;
                            if (this.life < this.lifeMax / 4)
                                ++num;
                            if ((double)this.velocity.X < -(double)num)
                                this.velocity.X = -num;
                            if ((double)this.velocity.X > (double)num)
                                this.velocity.X = num;
                        }
                    }
                }
                if (this.target <= 0 || this.target == (int)byte.MaxValue || Main.player[this.target].dead)
                    this.TargetClosest(true);
                int num1 = 3000;
                if ((double)Math.Abs(this.Center.X - Main.player[this.target].Center.X) + (double)Math.Abs(this.Center.Y - Main.player[this.target].Center.Y) <= (double)num1)
                    return;
                this.TargetClosest(true);
                if ((double)Math.Abs(this.Center.X - Main.player[this.target].Center.X) + (double)Math.Abs(this.Center.Y - Main.player[this.target].Center.Y) <= (double)num1)
                    return;
                this.active = false;
            }
            else if (this.aiStyle == 46)
            {
                this.noTileCollide = true;
                if (NPC.golemBoss < 0)
                {
                    this.StrikeNPCNoInteraction(9999, 0.0f, 0, false, false, false);
                }
                else
                {
                    float num1 = 12f;
                    Vector2 vector2_1 = new Vector2(this.Center.X, this.Center.Y);
                    float num2 = Main.npc[NPC.golemBoss].Center.X - vector2_1.X;
                    float num3 = Main.npc[NPC.golemBoss].Center.Y - vector2_1.Y - 57f;
                    float num4 = num2 - 3f;
                    float num5 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num3 * (double)num3);
                    if ((double)num5 < 20.0)
                    {
                        this.rotation = 0.0f;
                        this.velocity.X = num4;
                        this.velocity.Y = num3;
                    }
                    else
                    {
                        float num6 = num1 / num5;
                        this.velocity.X = num4 * num6;
                        this.velocity.Y = num3 * num6;
                        this.rotation = this.velocity.X * 0.1f;
                    }
                    if (this.alpha > 0)
                    {
                        this.alpha -= 10;
                        if (this.alpha < 0)
                            this.alpha = 0;
                        this.ai[1] = 30f;
                    }
                    if ((double)this.ai[0] == 0.0)
                    {
                        ++this.ai[1];
                        int num6 = 300;
                        this.localAI[0] = (double)this.ai[1] < 20.0 || (double)this.ai[1] > (double)(num6 - 20) ? 1f : 0.0f;
                        if ((double)this.ai[1] >= (double)num6)
                        {
                            this.TargetClosest(true);
                            this.ai[1] = 0.0f;
                            Vector2 vector2_2 = new Vector2(this.Center.X, this.Center.Y + 10f);
                            float num7 = 8f;
                            float num8 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_2.X;
                            float num9 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2_2.Y;
                            float num10 = (float)Math.Sqrt((double)num8 * (double)num8 + (double)num9 * (double)num9);
                            float num11 = num7 / num10;
                            float SpeedX = num8 * num11;
                            float SpeedY = num9 * num11;
                            int Damage = 18;
                            int Type = 258;
                            if (Main.netMode != 1)
                                Projectile.NewProjectile(vector2_2.X, vector2_2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        }
                    }
                    else if ((double)this.ai[0] == 1.0)
                    {
                        this.TargetClosest(true);
                        Vector2 vector2_2 = new Vector2(this.Center.X, this.Center.Y + 10f);
                        if ((double)Main.player[this.target].Center.X < (double)this.Center.X - (double)this.width)
                        {
                            this.localAI[1] = -1f;
                            vector2_2.X -= 40f;
                        }
                        else if ((double)Main.player[this.target].Center.X > (double)this.Center.X + (double)this.width)
                        {
                            this.localAI[1] = 1f;
                            vector2_2.X += 40f;
                        }
                        else
                            this.localAI[1] = 0.0f;
                        ++this.ai[1];
                        if ((double)this.life < (double)this.lifeMax * 0.4)
                            ++this.ai[1];
                        if ((double)this.life < (double)this.lifeMax * 0.2)
                            ++this.ai[1];
                        int num6 = 300;
                        this.localAI[0] = (double)this.ai[1] < 20.0 || (double)this.ai[1] > (double)(num6 - 20) ? 1f : 0.0f;
                        if ((double)this.ai[1] >= (double)num6)
                        {
                            this.TargetClosest(true);
                            this.ai[1] = 0.0f;
                            float num7 = 8f;
                            float num8 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_2.X;
                            float num9 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2_2.Y;
                            float num10 = (float)Math.Sqrt((double)num8 * (double)num8 + (double)num9 * (double)num9);
                            float num11 = num7 / num10;
                            float SpeedX = num8 * num11;
                            float SpeedY = num9 * num11;
                            int Damage = 24;
                            int Type = 258;
                            if (Main.netMode != 1)
                                Projectile.NewProjectile(vector2_2.X, vector2_2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        }
                        ++this.ai[2];
                        if (this.life < this.lifeMax / 3)
                            ++this.ai[2];
                        if (this.life < this.lifeMax / 4)
                            ++this.ai[2];
                        if (this.life < this.lifeMax / 5)
                            ++this.ai[2];
                        if (!Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                            this.ai[2] += 4f;
                        if ((double)this.ai[2] > (double)(60 + Main.rand.Next(600)))
                        {
                            this.ai[2] = 0.0f;
                            int Damage = 28;
                            int Type = 259;
                            if ((double)this.localAI[1] == 0.0)
                            {
                                for (int index1 = 0; index1 < 2; ++index1)
                                {
                                    vector2_2 = new Vector2(this.Center.X, this.Center.Y - 22f);
                                    if (index1 == 0)
                                        vector2_2.X -= 18f;
                                    else
                                        vector2_2.X += 18f;
                                    float num7 = 11f;
                                    float num8 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_2.X;
                                    float num9 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2_2.Y;
                                    float num10 = (float)Math.Sqrt((double)num8 * (double)num8 + (double)num9 * (double)num9);
                                    float num11 = num7 / num10;
                                    float SpeedX = num8 * num11;
                                    float SpeedY = num9 * num11;
                                    vector2_2.X += SpeedX * 3f;
                                    vector2_2.Y += SpeedY * 3f;
                                    if (Main.netMode != 1)
                                    {
                                        int index2 = Projectile.NewProjectile(vector2_2.X, vector2_2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                        Main.projectile[index2].timeLeft = 300;
                                    }
                                }
                            }
                            else if ((double)this.localAI[1] != 0.0)
                            {
                                vector2_2 = new Vector2(this.Center.X, this.Center.Y - 22f);
                                if ((double)this.localAI[1] == -1.0)
                                    vector2_2.X -= 30f;
                                else if ((double)this.localAI[1] == 1.0)
                                    vector2_2.X += 30f;
                                float num7 = 12f;
                                float num8 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_2.X;
                                float num9 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2_2.Y;
                                float num10 = (float)Math.Sqrt((double)num8 * (double)num8 + (double)num9 * (double)num9);
                                float num11 = num7 / num10;
                                float SpeedX = num8 * num11;
                                float SpeedY = num9 * num11;
                                vector2_2.X += SpeedX * 3f;
                                vector2_2.Y += SpeedY * 3f;
                                if (Main.netMode != 1)
                                {
                                    int index = Projectile.NewProjectile(vector2_2.X, vector2_2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                    Main.projectile[index].timeLeft = 300;
                                }
                            }
                        }
                    }
                    if (this.life < this.lifeMax / 2)
                        this.ai[0] = 1f;
                    else
                        this.ai[0] = 0.0f;
                }
            }
            else if (this.aiStyle == 47)
            {
                if (NPC.golemBoss < 0)
                {
                    this.StrikeNPCNoInteraction(9999, 0.0f, 0, false, false, false);
                }
                else
                {
                    if (this.alpha > 0)
                    {
                        this.alpha -= 10;
                        if (this.alpha < 0)
                            this.alpha = 0;
                        this.ai[1] = 0.0f;
                    }
                    if ((double)this.ai[0] == 0.0)
                    {
                        this.noTileCollide = true;
                        float num1 = 14f;
                        if (this.life < this.lifeMax / 2)
                            num1 += 3f;
                        if (this.life < this.lifeMax / 4)
                            num1 += 3f;
                        if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
                            num1 += 8f;
                        Vector2 vector2 = new Vector2(this.Center.X, this.Center.Y);
                        float num2 = Main.npc[NPC.golemBoss].Center.X - vector2.X;
                        float num3 = Main.npc[NPC.golemBoss].Center.Y - vector2.Y - 9f;
                        float num4 = this.type != 247 ? num2 + 78f : num2 - 84f;
                        float num5 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num3 * (double)num3);
                        if ((double)num5 < 12.0 + (double)num1)
                        {
                            this.rotation = 0.0f;
                            this.velocity.X = num4;
                            this.velocity.Y = num3;
                            ++this.ai[1];
                            if (this.life < this.lifeMax / 2)
                                ++this.ai[1];
                            if (this.life < this.lifeMax / 4)
                                ++this.ai[1];
                            if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
                                this.ai[1] += 10f;
                            if ((double)this.ai[1] < 60.0)
                                return;
                            this.TargetClosest(true);
                            if (this.type == 247 && (double)this.Center.X + 100.0 > (double)Main.player[this.target].Center.X || this.type == 248 && (double)this.Center.X - 100.0 < (double)Main.player[this.target].Center.X)
                            {
                                this.ai[1] = 0.0f;
                                this.ai[0] = 1f;
                            }
                            else
                                this.ai[1] = 0.0f;
                        }
                        else
                        {
                            float num6 = num1 / num5;
                            this.velocity.X = num4 * num6;
                            this.velocity.Y = num3 * num6;
                            this.rotation = (float)Math.Atan2(-(double)this.velocity.Y, -(double)this.velocity.X);
                            if (this.type != 247)
                                return;
                            this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                        }
                    }
                    else if ((double)this.ai[0] == 1.0)
                    {
                        this.noTileCollide = true;
                        this.collideX = false;
                        this.collideY = false;
                        float num1 = 12f;
                        if (this.life < this.lifeMax / 2)
                            num1 += 4f;
                        if (this.life < this.lifeMax / 4)
                            num1 += 4f;
                        if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
                            num1 += 10f;
                        Vector2 vector2 = new Vector2(this.Center.X, this.Center.Y);
                        float num2 = Main.player[this.target].Center.X - vector2.X;
                        float num3 = Main.player[this.target].Center.Y - vector2.Y;
                        float num4 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                        float num5 = num1 / num4;
                        this.velocity.X = num2 * num5;
                        this.velocity.Y = num3 * num5;
                        this.ai[0] = 2f;
                        this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                        if (this.type != 247)
                            return;
                        this.rotation = (float)Math.Atan2(-(double)this.velocity.Y, -(double)this.velocity.X);
                    }
                    else if ((double)this.ai[0] == 2.0)
                    {
                        if ((double)Math.Abs(this.velocity.X) > (double)Math.Abs(this.velocity.Y))
                        {
                            if ((double)this.velocity.X > 0.0 && (double)this.Center.X > (double)Main.player[this.target].Center.X)
                                this.noTileCollide = false;
                            if ((double)this.velocity.X < 0.0 && (double)this.Center.X < (double)Main.player[this.target].Center.X)
                                this.noTileCollide = false;
                        }
                        else
                        {
                            if ((double)this.velocity.Y > 0.0 && (double)this.Center.Y > (double)Main.player[this.target].Center.Y)
                                this.noTileCollide = false;
                            if ((double)this.velocity.Y < 0.0 && (double)this.Center.Y < (double)Main.player[this.target].Center.Y)
                                this.noTileCollide = false;
                        }
                        Vector2 vector2 = new Vector2(this.Center.X, this.Center.Y);
                        float num1 = Main.npc[NPC.golemBoss].Center.X - vector2.X;
                        float num2 = Main.npc[NPC.golemBoss].Center.Y - vector2.Y;
                        float num3 = num1 + Main.npc[NPC.golemBoss].velocity.X;
                        float num4 = num2 + Main.npc[NPC.golemBoss].velocity.Y - 9f;
                        float num5 = this.type != 247 ? num3 + 78f : num3 - 84f;
                        float num6 = (float)Math.Sqrt((double)num5 * (double)num5 + (double)num4 * (double)num4);
                        if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
                        {
                            this.knockBackResist = 0.0f;
                            if ((double)num6 <= 700.0 && !this.collideX && !this.collideY)
                                return;
                            this.noTileCollide = true;
                            this.ai[0] = 0.0f;
                        }
                        else
                        {
                            bool flag = this.justHit;
                            if (flag)
                            {
                                for (int index = 0; index < 200; ++index)
                                {
                                    if (Main.npc[index].active && Main.npc[index].type == 246)
                                    {
                                        if (Main.npc[index].life < Main.npc[index].lifeMax / 2)
                                        {
                                            if ((double)this.knockBackResist == 0.0)
                                                flag = false;
                                            this.knockBackResist = 0.0f;
                                            break;
                                        }
                                        break;
                                    }
                                }
                            }
                            if ((double)num6 <= 600.0 && !this.collideX && (!this.collideY && !flag))
                                return;
                            this.noTileCollide = true;
                            this.ai[0] = 0.0f;
                        }
                    }
                    else
                    {
                        if ((double)this.ai[0] != 3.0)
                            return;
                        this.noTileCollide = true;
                        float num1 = 12f;
                        float num2 = 0.4f;
                        Vector2 vector2 = new Vector2(this.Center.X, this.Center.Y);
                        float num3 = Main.player[this.target].Center.X - vector2.X;
                        float num4 = Main.player[this.target].Center.Y - vector2.Y;
                        float num5 = (float)Math.Sqrt((double)num3 * (double)num3 + (double)num4 * (double)num4);
                        float num6 = num1 / num5;
                        float num7 = num3 * num6;
                        float num8 = num4 * num6;
                        if ((double)this.velocity.X < (double)num7)
                        {
                            this.velocity.X += num2;
                            if ((double)this.velocity.X < 0.0 && (double)num7 > 0.0)
                                this.velocity.X += num2 * 2f;
                        }
                        else if ((double)this.velocity.X > (double)num7)
                        {
                            this.velocity.X -= num2;
                            if ((double)this.velocity.X > 0.0 && (double)num7 < 0.0)
                                this.velocity.X -= num2 * 2f;
                        }
                        if ((double)this.velocity.Y < (double)num8)
                        {
                            this.velocity.Y += num2;
                            if ((double)this.velocity.Y < 0.0 && (double)num8 > 0.0)
                                this.velocity.Y += num2 * 2f;
                        }
                        else if ((double)this.velocity.Y > (double)num8)
                        {
                            this.velocity.Y -= num2;
                            if ((double)this.velocity.Y > 0.0 && (double)num8 < 0.0)
                                this.velocity.Y -= num2 * 2f;
                        }
                        this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                        if (this.type != 247)
                            return;
                        this.rotation = (float)Math.Atan2(-(double)this.velocity.Y, -(double)this.velocity.X);
                    }
                }
            }
            else if (this.aiStyle == 48)
            {
                bool flag = false;
                if (!Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                {
                    this.noTileCollide = true;
                    flag = true;
                }
                else
                    this.noTileCollide = false;
                if (NPC.golemBoss < 0)
                {
                    this.StrikeNPCNoInteraction(9999, 0.0f, 0, false, false, false);
                }
                else
                {
                    this.TargetClosest(true);
                    float num1 = 7f;
                    float num2 = 0.05f;
                    Vector2 vector2_1 = new Vector2(this.Center.X, this.Center.Y);
                    float num3 = Main.player[this.target].Center.X - vector2_1.X;
                    float num4 = (float)((double)Main.player[this.target].Center.Y - (double)vector2_1.Y - 300.0);
                    float num5 = (float)Math.Sqrt((double)num3 * (double)num3 + (double)num4 * (double)num4);
                    float num6 = num1 / num5;
                    float num7 = num3 * num6;
                    float num8 = num4 * num6;
                    if ((double)this.velocity.X < (double)num7)
                    {
                        this.velocity.X += num2;
                        if ((double)this.velocity.X < 0.0 && (double)num7 > 0.0)
                            this.velocity.X += num2;
                    }
                    else if ((double)this.velocity.X > (double)num7)
                    {
                        this.velocity.X -= num2;
                        if ((double)this.velocity.X > 0.0 && (double)num7 < 0.0)
                            this.velocity.X -= num2;
                    }
                    if ((double)this.velocity.Y < (double)num8)
                    {
                        this.velocity.Y += num2;
                        if ((double)this.velocity.Y < 0.0 && (double)num8 > 0.0)
                            this.velocity.Y += num2;
                    }
                    else if ((double)this.velocity.Y > (double)num8)
                    {
                        this.velocity.Y -= num2;
                        if ((double)this.velocity.Y > 0.0 && (double)num8 < 0.0)
                            this.velocity.Y -= num2;
                    }
                    ++this.ai[1];
                    if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.8)
                        ++this.ai[1];
                    if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.6)
                        ++this.ai[1];
                    if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.2)
                        ++this.ai[1];
                    if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.1)
                        ++this.ai[1];
                    int num9 = 360;
                    this.localAI[0] = (double)this.ai[1] < 20.0 || (double)this.ai[1] > (double)(num9 - 20) ? 1f : 0.0f;
                    if (flag)
                        this.ai[1] = 20f;
                    if ((double)this.ai[1] >= (double)num9)
                    {
                        this.TargetClosest(true);
                        this.ai[1] = 0.0f;
                        Vector2 vector2_2 = new Vector2(this.Center.X, this.Center.Y - 10f);
                        float num10 = 8f;
                        int Damage = 20;
                        int Type = 258;
                        float num11 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_2.X;
                        float num12 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2_2.Y;
                        float num13 = (float)Math.Sqrt((double)num11 * (double)num11 + (double)num12 * (double)num12);
                        float num14 = num10 / num13;
                        float SpeedX = num11 * num14;
                        float SpeedY = num12 * num14;
                        if (Main.netMode != 1)
                            Projectile.NewProjectile(vector2_2.X, vector2_2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                    ++this.ai[2];
                    if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax / 1.25)
                        ++this.ai[2];
                    if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax / 1.5)
                        ++this.ai[2];
                    if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 2)
                        ++this.ai[2];
                    if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 3)
                        ++this.ai[2];
                    if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 4)
                        ++this.ai[2];
                    if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 5)
                        ++this.ai[2];
                    if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 6)
                        ++this.ai[2];
                    if (!Collision.CanHit(Main.npc[NPC.golemBoss].Center, 1, 1, Main.player[this.target].Center, 1, 1))
                        this.ai[2] += 4f;
                    if ((double)this.ai[2] <= (double)(100 + Main.rand.Next(4800)))
                        return;
                    this.ai[2] = 0.0f;
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        Vector2 vector2_2 = new Vector2(this.Center.X, this.Center.Y - 50f);
                        if (index1 == 0)
                            vector2_2.X -= 14f;
                        else if (index1 == 1)
                            vector2_2.X += 14f;
                        float num10 = 11f;
                        int Damage = 24;
                        int Type = 259;
                        if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.5)
                        {
                            ++Damage;
                            num10 += 0.25f;
                        }
                        if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.4)
                        {
                            ++Damage;
                            num10 += 0.25f;
                        }
                        if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.3)
                        {
                            ++Damage;
                            num10 += 0.25f;
                        }
                        if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.2)
                        {
                            ++Damage;
                            num10 += 0.25f;
                        }
                        if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.1)
                        {
                            ++Damage;
                            num10 += 0.25f;
                        }
                        float num11 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_2.X;
                        float num12 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2_2.Y;
                        float num13 = (float)Math.Sqrt((double)num11 * (double)num11 + (double)num12 * (double)num12);
                        float num14 = num10 / num13;
                        float SpeedX = num11 * num14;
                        float SpeedY = num12 * num14;
                        vector2_2.X += SpeedX * 3f;
                        vector2_2.Y += SpeedY * 3f;
                        if (Main.netMode != 1)
                        {
                            int index2 = Projectile.NewProjectile(vector2_2.X, vector2_2.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            Main.projectile[index2].timeLeft = 300;
                        }
                    }
                }
            }
            else if (this.aiStyle == 49)
            {
                this.noGravity = true;
                this.TargetClosest(true);
                float num1 = 4f;
                float num2 = 0.25f;
                Vector2 vector2 = new Vector2(this.Center.X, this.Center.Y);
                float num3 = Main.player[this.target].Center.X - vector2.X;
                float num4 = (float)((double)Main.player[this.target].Center.Y - (double)vector2.Y - 200.0);
                float num5 = (float)Math.Sqrt((double)num3 * (double)num3 + (double)num4 * (double)num4);
                float num6;
                float num7;
                if ((double)num5 < 20.0)
                {
                    num6 = this.velocity.X;
                    num7 = this.velocity.Y;
                }
                else
                {
                    float num8 = num1 / num5;
                    num6 = num3 * num8;
                    num7 = num4 * num8;
                }
                if ((double)this.velocity.X < (double)num6)
                {
                    this.velocity.X += num2;
                    if ((double)this.velocity.X < 0.0 && (double)num6 > 0.0)
                        this.velocity.X += num2 * 2f;
                }
                else if ((double)this.velocity.X > (double)num6)
                {
                    this.velocity.X -= num2;
                    if ((double)this.velocity.X > 0.0 && (double)num6 < 0.0)
                        this.velocity.X -= num2 * 2f;
                }
                if ((double)this.velocity.Y < (double)num7)
                {
                    this.velocity.Y += num2;
                    if ((double)this.velocity.Y < 0.0 && (double)num7 > 0.0)
                        this.velocity.Y += num2 * 2f;
                }
                else if ((double)this.velocity.Y > (double)num7)
                {
                    this.velocity.Y -= num2;
                    if ((double)this.velocity.Y > 0.0 && (double)num7 < 0.0)
                        this.velocity.Y -= num2 * 2f;
                }
                if ((double)this.position.X + (double)this.width <= (double)Main.player[this.target].position.X || (double)this.position.X >= (double)Main.player[this.target].position.X + (double)Main.player[this.target].width || ((double)this.position.Y + (double)this.height >= (double)Main.player[this.target].position.Y || !Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height)) || Main.netMode == 1)
                    return;
                ++this.ai[0];
                if ((double)this.ai[0] <= 8.0)
                    return;
                this.ai[0] = 0.0f;
                Projectile.NewProjectile((float)(int)((double)this.position.X + 10.0 + (double)Main.rand.Next(this.width - 20)), (float)(int)((double)this.position.Y + (double)this.height + 4.0), 0.0f, 5f, 264, 20, 0.0f, Main.myPlayer, 0.0f, 0.0f);
            }
            else if (this.aiStyle == 50)
            {
                if (this.timeLeft > 5)
                    this.timeLeft = 5;
                this.noTileCollide = true;
                this.velocity.Y += 0.02f;
                if ((double)this.velocity.Y < 0.0 && !Main.expertMode)
                    this.velocity.Y *= 0.99f;
                if ((double)this.velocity.Y > 1.0)
                    this.velocity.Y = 1f;
                this.TargetClosest(true);
                if ((double)this.position.X + (double)this.width < (double)Main.player[this.target].position.X)
                {
                    if ((double)this.velocity.X < 0.0)
                        this.velocity.X *= 0.98f;
                    if (Main.expertMode && (double)this.velocity.X < 0.0)
                        this.velocity.X *= 0.98f;
                    this.velocity.X += 0.1f;
                    if (Main.expertMode)
                        this.velocity.X += 0.1f;
                }
                else if ((double)this.position.X > (double)Main.player[this.target].position.X + (double)Main.player[this.target].width)
                {
                    if ((double)this.velocity.X > 0.0)
                        this.velocity.X *= 0.98f;
                    if (Main.expertMode && (double)this.velocity.X > 0.0)
                        this.velocity.X *= 0.98f;
                    this.velocity.X -= 0.1f;
                    if (Main.expertMode)
                        this.velocity.X += 0.1f;
                }
                if ((double)this.velocity.X > 5.0 || (double)this.velocity.X < -5.0)
                    this.velocity.X *= 0.97f;
                this.rotation = this.velocity.X * 0.2f;
            }
            else if (this.aiStyle == 51)
            {
                bool flag1 = false;
                bool flag2 = false;
                this.TargetClosest(true);
                if (Main.player[this.target].dead)
                {
                    flag2 = true;
                    flag1 = true;
                }
                if (Main.netMode != 1)
                {
                    int num = 6000;
                    if ((double)Math.Abs(this.Center.X - Main.player[this.target].Center.X) + (double)Math.Abs(this.Center.Y - Main.player[this.target].Center.Y) > (double)num)
                    {
                        this.active = false;
                        this.life = 0;
                        if (Main.netMode == 2)
                            NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                    }
                }
                NPC.plantBoss = this.whoAmI;
                if ((double)this.localAI[0] == 0.0 && Main.netMode != 1)
                {
                    this.localAI[0] = 1f;
                    NPC.NewNPC((int)this.Center.X, (int)this.Center.Y, 263, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    NPC.NewNPC((int)this.Center.X, (int)this.Center.Y, 263, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    NPC.NewNPC((int)this.Center.X, (int)this.Center.Y, 263, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                }
                int[] numArray = new int[3];
                float num1 = 0.0f;
                float num2 = 0.0f;
                int index1 = 0;
                for (int index2 = 0; index2 < 200; ++index2)
                {
                    if (Main.npc[index2].active && Main.npc[index2].aiStyle == 52)
                    {
                        num1 += Main.npc[index2].Center.X;
                        num2 += Main.npc[index2].Center.Y;
                        numArray[index1] = index2;
                        ++index1;
                        if (index1 > 2)
                            break;
                    }
                }
                float x = num1 / (float)index1;
                float y = num2 / (float)index1;
                float num3 = 2.5f;
                float num4 = 0.025f;
                if (this.life < this.lifeMax / 2)
                {
                    num3 = 5f;
                    num4 = 0.05f;
                }
                if (this.life < this.lifeMax / 4)
                    num3 = 7f;
                if (!Main.player[this.target].ZoneJungle || (double)Main.player[this.target].position.Y < Main.worldSurface * 16.0 || (double)Main.player[this.target].position.Y > (double)((Main.maxTilesY - 200) * 16))
                {
                    flag1 = true;
                    num3 += 8f;
                    num4 = 0.15f;
                }
                if (Main.expertMode)
                {
                    num3 = (num3 + 1f) * 1.1f;
                    num4 = (num4 + 0.01f) * 1.1f;
                }
                Vector2 vector2_1 = new Vector2(x, y);
                float num5 = Main.player[this.target].Center.X - vector2_1.X;
                float num6 = Main.player[this.target].Center.Y - vector2_1.Y;
                if (flag2)
                {
                    num6 *= -1f;
                    num5 *= -1f;
                    num3 += 8f;
                }
                float num7 = (float)Math.Sqrt((double)num5 * (double)num5 + (double)num6 * (double)num6);
                int num8 = 500;
                if (flag1)
                    num8 += 350;
                if (Main.expertMode)
                    num8 += 150;
                if ((double)num7 >= (double)num8)
                {
                    float num9 = (float)num8 / num7;
                    num5 *= num9;
                    num6 *= num9;
                }
                float num10 = x + num5;
                float num11 = y + num6;
                vector2_1 = new Vector2(this.Center.X, this.Center.Y);
                float num12 = num10 - vector2_1.X;
                float num13 = num11 - vector2_1.Y;
                float num14 = (float)Math.Sqrt((double)num12 * (double)num12 + (double)num13 * (double)num13);
                float num15;
                float num16;
                if ((double)num14 < (double)num3)
                {
                    num15 = this.velocity.X;
                    num16 = this.velocity.Y;
                }
                else
                {
                    float num9 = num3 / num14;
                    num15 = num12 * num9;
                    num16 = num13 * num9;
                }
                if ((double)this.velocity.X < (double)num15)
                {
                    this.velocity.X += num4;
                    if ((double)this.velocity.X < 0.0 && (double)num15 > 0.0)
                        this.velocity.X += num4 * 2f;
                }
                else if ((double)this.velocity.X > (double)num15)
                {
                    this.velocity.X -= num4;
                    if ((double)this.velocity.X > 0.0 && (double)num15 < 0.0)
                        this.velocity.X -= num4 * 2f;
                }
                if ((double)this.velocity.Y < (double)num16)
                {
                    this.velocity.Y += num4;
                    if ((double)this.velocity.Y < 0.0 && (double)num16 > 0.0)
                        this.velocity.Y += num4 * 2f;
                }
                else if ((double)this.velocity.Y > (double)num16)
                {
                    this.velocity.Y -= num4;
                    if ((double)this.velocity.Y > 0.0 && (double)num16 < 0.0)
                        this.velocity.Y -= num4 * 2f;
                }
                Vector2 vector2_2 = new Vector2(this.Center.X, this.Center.Y);
                float num17 = Main.player[this.target].Center.X - vector2_2.X;
                this.rotation = (float)Math.Atan2((double)(Main.player[this.target].Center.Y - vector2_2.Y), (double)num17) + 1.57f;
                if (this.life > this.lifeMax / 2)
                {
                    this.defense = 36;
                    this.damage = (int)(50.0 * (double)Main.damageMultiplier);
                    if (flag1)
                    {
                        this.defense *= 2;
                        this.damage *= 2;
                    }
                    if (Main.netMode == 1)
                        return;
                    ++this.localAI[1];
                    if ((double)this.life < (double)this.lifeMax * 0.9)
                        ++this.localAI[1];
                    if ((double)this.life < (double)this.lifeMax * 0.8)
                        ++this.localAI[1];
                    if ((double)this.life < (double)this.lifeMax * 0.7)
                        ++this.localAI[1];
                    if ((double)this.life < (double)this.lifeMax * 0.6)
                        ++this.localAI[1];
                    if (flag1)
                        this.localAI[1] += 3f;
                    if (Main.expertMode)
                        ++this.localAI[1];
                    if (Main.expertMode && this.justHit && Main.rand.Next(2) == 0)
                        this.localAI[3] = 1f;
                    if ((double)this.localAI[1] <= 80.0)
                        return;
                    this.localAI[1] = 0.0f;
                    bool flag3 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
                    if ((double)this.localAI[3] > 0.0)
                    {
                        flag3 = true;
                        this.localAI[3] = 0.0f;
                    }
                    if (!flag3)
                        return;
                    Vector2 vector2_3 = new Vector2(this.Center.X, this.Center.Y);
                    float num9 = 15f;
                    if (Main.expertMode)
                        num9 = 17f;
                    float num18 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_3.X;
                    float num19 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2_3.Y;
                    float num20 = (float)Math.Sqrt((double)num18 * (double)num18 + (double)num19 * (double)num19);
                    float num21 = num9 / num20;
                    float SpeedX = num18 * num21;
                    float SpeedY = num19 * num21;
                    int Damage = 22;
                    int Type = 275;
                    int maxValue1 = 4;
                    int maxValue2 = 8;
                    if (Main.expertMode)
                    {
                        maxValue1 = 2;
                        maxValue2 = 6;
                    }
                    if ((double)this.life < (double)this.lifeMax * 0.8 && Main.rand.Next(maxValue1) == 0)
                    {
                        Damage = 27;
                        this.localAI[1] = -30f;
                        Type = 276;
                    }
                    else if ((double)this.life < (double)this.lifeMax * 0.8 && Main.rand.Next(maxValue2) == 0)
                    {
                        Damage = 31;
                        this.localAI[1] = -120f;
                        Type = 277;
                    }
                    if (flag1)
                        Damage *= 2;
                    if (Main.expertMode)
                        Damage = (int)((double)Damage * 0.9);
                    vector2_3.X += SpeedX * 3f;
                    vector2_3.Y += SpeedY * 3f;
                    int index2 = Projectile.NewProjectile(vector2_3.X, vector2_3.Y, SpeedX, SpeedY, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    if (Type == 277)
                        return;
                    Main.projectile[index2].timeLeft = 300;
                }
                else
                {
                    this.defense = 10;
                    this.damage = (int)(70.0 * (double)Main.damageMultiplier);
                    if (flag1)
                    {
                        this.defense *= 4;
                        this.damage *= 2;
                    }
                    if (Main.netMode != 1)
                    {
                        if ((double)this.localAI[0] == 1.0)
                        {
                            this.localAI[0] = 2f;
                            for (int index2 = 0; index2 < 8; ++index2)
                                NPC.NewNPC((int)this.Center.X, (int)this.Center.Y, 264, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            if (Main.expertMode)
                            {
                                for (int index2 = 0; index2 < 200; ++index2)
                                {
                                    if (Main.npc[index2].active && Main.npc[index2].aiStyle == 52)
                                    {
                                        for (int index3 = 0; index3 < 3; ++index3)
                                        {
                                            int index4 = NPC.NewNPC((int)this.Center.X, (int)this.Center.Y, 264, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            Main.npc[index4].ai[3] = (float)(index2 + 1);
                                        }
                                    }
                                }
                            }
                        }
                        else if (Main.expertMode && Main.rand.Next(60) == 0)
                        {
                            int num9 = 0;
                            for (int index2 = 0; index2 < 200; ++index2)
                            {
                                if (Main.npc[index2].active && Main.npc[index2].type == 264 && (double)Main.npc[index2].ai[3] == 0.0)
                                    ++num9;
                            }
                            if (num9 < 8 && Main.rand.Next((num9 + 1) * 10) <= 1)
                                NPC.NewNPC((int)this.Center.X, (int)this.Center.Y, 264, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        }
                    }
                    if ((double)this.localAI[2] == 0.0)
                    {
                        Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 378, this.scale);
                        Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 379, this.scale);
                        Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 380, this.scale);
                        this.localAI[2] = 1f;
                    }
                    ++this.localAI[1];
                    if ((double)this.life < (double)this.lifeMax * 0.4)
                        ++this.localAI[1];
                    if ((double)this.life < (double)this.lifeMax * 0.3)
                        ++this.localAI[1];
                    if ((double)this.life < (double)this.lifeMax * 0.2)
                        ++this.localAI[1];
                    if ((double)this.life < (double)this.lifeMax * 0.1)
                        ++this.localAI[1];
                    if ((double)this.localAI[1] < 350.0)
                        return;
                    float num18 = 8f;
                    Vector2 vector2_3 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num19 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_3.X + (float)Main.rand.Next(-10, 11);
                    float num20 = Math.Abs(num19 * 0.2f);
                    float num21 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2_3.Y + (float)Main.rand.Next(-10, 11);
                    if ((double)num21 > 0.0)
                        num20 = 0.0f;
                    float num22 = num21 - num20;
                    float num23 = (float)Math.Sqrt((double)num19 * (double)num19 + (double)num22 * (double)num22);
                    float num24 = num18 / num23;
                    float num25 = num19 * num24;
                    float num26 = num22 * num24;
                    int index5 = NPC.NewNPC((int)this.Center.X, (int)this.Center.Y, 265, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    Main.npc[index5].velocity.X = num25;
                    Main.npc[index5].velocity.Y = num26;
                    Main.npc[index5].netUpdate = true;
                    this.localAI[1] = 0.0f;
                }
            }
            else if (this.aiStyle == 52)
            {
                bool flag1 = false;
                bool flag2 = false;
                if (NPC.plantBoss < 0)
                {
                    this.StrikeNPCNoInteraction(9999, 0.0f, 0, false, false, false);
                    this.netUpdate = true;
                }
                else
                {
                    if (Main.player[Main.npc[NPC.plantBoss].target].dead)
                        flag2 = true;
                    if (NPC.plantBoss != -1 && !Main.player[Main.npc[NPC.plantBoss].target].ZoneJungle || ((double)Main.player[Main.npc[NPC.plantBoss].target].position.Y < Main.worldSurface * 16.0 || (double)Main.player[Main.npc[NPC.plantBoss].target].position.Y > (double)((Main.maxTilesY - 200) * 16)) || flag2)
                    {
                        this.localAI[0] -= 4f;
                        flag1 = true;
                    }
                    if (Main.netMode == 1)
                    {
                        if ((double)this.ai[0] == 0.0)
                            this.ai[0] = (float)(int)((double)this.Center.X / 16.0);
                        if ((double)this.ai[1] == 0.0)
                            this.ai[1] = (float)(int)((double)this.Center.X / 16.0);
                    }
                    if (Main.netMode != 1)
                    {
                        if ((double)this.ai[0] == 0.0 || (double)this.ai[1] == 0.0)
                            this.localAI[0] = 0.0f;
                        --this.localAI[0];
                        if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
                            this.localAI[0] -= 2f;
                        if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 4)
                            this.localAI[0] -= 2f;
                        if (flag1)
                            this.localAI[0] -= 6f;
                        if (!flag2 && (double)this.localAI[0] <= 0.0 && (double)this.ai[0] != 0.0)
                        {
                            for (int index = 0; index < 200; ++index)
                            {
                                if (index != this.whoAmI && Main.npc[index].active && Main.npc[index].type == this.type && ((double)Main.npc[index].velocity.X != 0.0 || (double)Main.npc[index].velocity.Y != 0.0))
                                    this.localAI[0] = (float)Main.rand.Next(60, 300);
                            }
                        }
                        if ((double)this.localAI[0] <= 0.0)
                        {
                            this.localAI[0] = (float)Main.rand.Next(300, 600);
                            bool flag3 = false;
                            int num1 = 0;
                            while (!flag3 && num1 <= 1000)
                            {
                                ++num1;
                                int num2 = (int)((double)Main.player[Main.npc[NPC.plantBoss].target].Center.X / 16.0);
                                int num3 = (int)((double)Main.player[Main.npc[NPC.plantBoss].target].Center.Y / 16.0);
                                if ((double)this.ai[0] == 0.0)
                                {
                                    num2 = (int)(((double)Main.player[Main.npc[NPC.plantBoss].target].Center.X + (double)Main.npc[NPC.plantBoss].Center.X) / 32.0);
                                    num3 = (int)(((double)Main.player[Main.npc[NPC.plantBoss].target].Center.Y + (double)Main.npc[NPC.plantBoss].Center.Y) / 32.0);
                                }
                                if (flag2)
                                {
                                    num2 = (int)Main.npc[NPC.plantBoss].position.X / 16;
                                    num3 = (int)((double)Main.npc[NPC.plantBoss].position.Y + 400.0) / 16;
                                }
                                int num4 = 20 + (int)(100.0 * ((double)num1 / 1000.0));
                                int i = num2 + Main.rand.Next(-num4, num4 + 1);
                                int j = num3 + Main.rand.Next(-num4, num4 + 1);
                                if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
                                {
                                    if (Main.rand.Next(6) == 0)
                                    {
                                        this.TargetClosest(true);
                                        int index1 = (int)((double)Main.player[this.target].Center.X / 16.0);
                                        int index2 = (int)((double)Main.player[this.target].Center.Y / 16.0);
                                        if ((int)Main.tile[index1, index2].wall > 0)
                                        {
                                            i = index1;
                                            j = index2;
                                        }
                                    }
                                }
                                try
                                {
                                    if (!WorldGen.SolidTile(i, j))
                                    {
                                        if ((int)Main.tile[i, j].wall > 0)
                                        {
                                            if (num1 <= 500)
                                            {
                                                if (Main.npc[NPC.plantBoss].life >= Main.npc[NPC.plantBoss].lifeMax / 2)
                                                    continue;
                                            }
                                        }
                                        else
                                            continue;
                                    }
                                    flag3 = true;
                                    this.ai[0] = (float)i;
                                    this.ai[1] = (float)j;
                                    this.netUpdate = true;
                                }
                                catch
                                {
                                }
                            }
                        }
                    }
                    if ((double)this.ai[0] <= 0.0 || (double)this.ai[1] <= 0.0)
                        return;
                    float num5 = 6f;
                    if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
                        num5 = 8f;
                    if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 4)
                        num5 = 10f;
                    if (Main.expertMode)
                        ++num5;
                    if (Main.expertMode && Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
                        ++num5;
                    if (flag1)
                        num5 *= 2f;
                    if (flag2)
                        num5 *= 2f;
                    Vector2 vector2_1 = new Vector2(this.Center.X, this.Center.Y);
                    float num6 = (float)((double)this.ai[0] * 16.0 - 8.0) - vector2_1.X;
                    float num7 = (float)((double)this.ai[1] * 16.0 - 8.0) - vector2_1.Y;
                    float num8 = (float)Math.Sqrt((double)num6 * (double)num6 + (double)num7 * (double)num7);
                    if ((double)num8 < 12.0 + (double)num5)
                    {
                        this.velocity.X = num6;
                        this.velocity.Y = num7;
                    }
                    else
                    {
                        float num1 = num5 / num8;
                        this.velocity.X = num6 * num1;
                        this.velocity.Y = num7 * num1;
                    }
                    Vector2 vector2_2 = new Vector2(this.Center.X, this.Center.Y);
                    float num9 = Main.npc[NPC.plantBoss].Center.X - vector2_2.X;
                    this.rotation = (float)Math.Atan2((double)(Main.npc[NPC.plantBoss].Center.Y - vector2_2.Y), (double)num9) - 1.57f;
                }
            }
            else if (this.aiStyle == 53)
            {
                if (NPC.plantBoss < 0)
                {
                    this.StrikeNPCNoInteraction(9999, 0.0f, 0, false, false, false);
                    this.netUpdate = true;
                }
                else
                {
                    int index = NPC.plantBoss;
                    if ((double)this.ai[3] > 0.0)
                        index = (int)this.ai[3] - 1;
                    if (Main.netMode != 1)
                    {
                        --this.localAI[0];
                        if ((double)this.localAI[0] <= 0.0)
                        {
                            this.localAI[0] = (float)Main.rand.Next(120, 480);
                            this.ai[0] = (float)Main.rand.Next(-100, 101);
                            this.ai[1] = (float)Main.rand.Next(-100, 101);
                            this.netUpdate = true;
                        }
                    }
                    this.TargetClosest(true);
                    float num1 = 0.2f;
                    float num2 = 200f;
                    if ((double)Main.npc[NPC.plantBoss].life < (double)Main.npc[NPC.plantBoss].lifeMax * 0.25)
                        num2 += 100f;
                    if ((double)Main.npc[NPC.plantBoss].life < (double)Main.npc[NPC.plantBoss].lifeMax * 0.1)
                        num2 += 100f;
                    if (Main.expertMode)
                    {
                        float num3 = (float)(1.0 - (double)this.life / (double)this.lifeMax);
                        num2 += num3 * 300f;
                        num1 += 0.3f;
                    }
                    if (!Main.npc[index].active || NPC.plantBoss < 0)
                    {
                        this.active = false;
                    }
                    else
                    {
                        float x = Main.npc[index].position.X + (float)(Main.npc[index].width / 2);
                        float y = Main.npc[index].position.Y + (float)(Main.npc[index].height / 2);
                        Vector2 vector2 = new Vector2(x, y);
                        float num3 = x + this.ai[0];
                        float num4 = y + this.ai[1];
                        float num5 = num3 - vector2.X;
                        float num6 = num4 - vector2.Y;
                        float num7 = (float)Math.Sqrt((double)num5 * (double)num5 + (double)num6 * (double)num6);
                        float num8 = num2 / num7;
                        float num9 = num5 * num8;
                        float num10 = num6 * num8;
                        if ((double)this.position.X < (double)x + (double)num9)
                        {
                            this.velocity.X += num1;
                            if ((double)this.velocity.X < 0.0 && (double)num9 > 0.0)
                                this.velocity.X *= 0.9f;
                        }
                        else if ((double)this.position.X > (double)x + (double)num9)
                        {
                            this.velocity.X -= num1;
                            if ((double)this.velocity.X > 0.0 && (double)num9 < 0.0)
                                this.velocity.X *= 0.9f;
                        }
                        if ((double)this.position.Y < (double)y + (double)num10)
                        {
                            this.velocity.Y += num1;
                            if ((double)this.velocity.Y < 0.0 && (double)num10 > 0.0)
                                this.velocity.Y *= 0.9f;
                        }
                        else if ((double)this.position.Y > (double)y + (double)num10)
                        {
                            this.velocity.Y -= num1;
                            if ((double)this.velocity.Y > 0.0 && (double)num10 < 0.0)
                                this.velocity.Y *= 0.9f;
                        }
                        if ((double)this.velocity.X > 8.0)
                            this.velocity.X = 8f;
                        if ((double)this.velocity.X < -8.0)
                            this.velocity.X = -8f;
                        if ((double)this.velocity.Y > 8.0)
                            this.velocity.Y = 8f;
                        if ((double)this.velocity.Y < -8.0)
                            this.velocity.Y = -8f;
                        if ((double)num9 > 0.0)
                        {
                            this.spriteDirection = 1;
                            this.rotation = (float)Math.Atan2((double)num10, (double)num9);
                        }
                        if ((double)num9 >= 0.0)
                            return;
                        this.spriteDirection = -1;
                        this.rotation = (float)Math.Atan2((double)num10, (double)num9) + 3.14f;
                    }
                }
            }
            else if (this.aiStyle == 54)
            {
                NPC.crimsonBoss = this.whoAmI;
                if (Main.netMode != 1 && (double)this.localAI[0] == 0.0)
                {
                    this.localAI[0] = 1f;
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        float num1 = this.Center.X;
                        float num2 = this.Center.Y;
                        int index2 = NPC.NewNPC((int)(num1 + (float)Main.rand.Next(-this.width, this.width)), (int)(num2 + (float)Main.rand.Next(-this.height, this.height)), 267, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        Main.npc[index2].velocity = new Vector2((float)Main.rand.Next(-30, 31) * 0.1f, (float)Main.rand.Next(-30, 31) * 0.1f);
                        Main.npc[index2].netUpdate = true;
                    }
                }
                if (Main.netMode != 1)
                {
                    this.TargetClosest(true);
                    int num = 6000;
                    if ((double)Math.Abs(this.Center.X - Main.player[this.target].Center.X) + (double)Math.Abs(this.Center.Y - Main.player[this.target].Center.Y) > (double)num)
                    {
                        this.active = false;
                        this.life = 0;
                        if (Main.netMode == 2)
                            NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                    }
                }
                if ((double)this.ai[0] < 0.0)
                {
                    if ((double)this.localAI[2] == 0.0)
                    {
                        Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
                        this.localAI[2] = 1f;
                        Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 392, 1f);
                        Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 393, 1f);
                        Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 394, 1f);
                        Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 395, 1f);
                        for (int index = 0; index < 20; ++index)
                            Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, new Color(), 1f);
                        Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
                    }
                    this.dontTakeDamage = false;
                    this.knockBackResist = 0.5f;
                    if (Main.expertMode)
                        this.knockBackResist *= Main.expertKnockBack;
                    this.TargetClosest(true);
                    Vector2 vector2_1 = new Vector2(this.Center.X, this.Center.Y);
                    float num1 = Main.player[this.target].Center.X - vector2_1.X;
                    float num2 = Main.player[this.target].Center.Y - vector2_1.Y;
                    float num3 = 8f / (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    float num4 = num1 * num3;
                    float num5 = num2 * num3;
                    this.velocity.X = (float)(((double)this.velocity.X * 50.0 + (double)num4) / 51.0);
                    this.velocity.Y = (float)(((double)this.velocity.Y * 50.0 + (double)num5) / 51.0);
                    if ((double)this.ai[0] == -1.0)
                    {
                        if (Main.netMode == 1)
                            return;
                        ++this.localAI[1];
                        if (this.justHit)
                            this.localAI[1] -= (float)Main.rand.Next(5);
                        int num6 = 60 + Main.rand.Next(120);
                        if (Main.netMode != 0)
                            num6 += Main.rand.Next(30, 90);
                        if ((double)this.localAI[1] < (double)num6)
                            return;
                        this.localAI[1] = 0.0f;
                        this.TargetClosest(true);
                        int num7 = 0;
                        do
                        {
                            ++num7;
                            int num8 = (int)Main.player[this.target].Center.X / 16;
                            int num9 = (int)Main.player[this.target].Center.Y / 16;
                            int i = Main.rand.Next(2) != 0 ? num8 - Main.rand.Next(7, 13) : num8 + Main.rand.Next(7, 13);
                            int j = Main.rand.Next(2) != 0 ? num9 - Main.rand.Next(7, 13) : num9 + Main.rand.Next(7, 13);
                            if (!WorldGen.SolidTile(i, j))
                            {
                                this.ai[3] = 0.0f;
                                this.ai[0] = -2f;
                                this.ai[1] = (float)i;
                                this.ai[2] = (float)j;
                                this.netUpdate = true;
                                this.netSpam = 0;
                                break;
                            }
                        }
                        while (num7 <= 100);
                    }
                    else if ((double)this.ai[0] == -2.0)
                    {
                        NPC npc = this;
                        Vector2 vector2_2 = npc.velocity * 0.9f;
                        npc.velocity = vector2_2;
                        if (Main.netMode != 0)
                            this.ai[3] += 15f;
                        else
                            this.ai[3] += 25f;
                        if ((double)this.ai[3] >= (double)byte.MaxValue)
                        {
                            this.ai[3] = (float)byte.MaxValue;
                            this.position.X = this.ai[1] * 16f - (float)(this.width / 2);
                            this.position.Y = this.ai[2] * 16f - (float)(this.height / 2);
                            Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 8);
                            this.ai[0] = -3f;
                            this.netUpdate = true;
                            this.netSpam = 0;
                        }
                        this.alpha = (int)this.ai[3];
                    }
                    else
                    {
                        if ((double)this.ai[0] != -3.0)
                            return;
                        if (Main.netMode != 0)
                            this.ai[3] -= 15f;
                        else
                            this.ai[3] -= 25f;
                        if ((double)this.ai[3] <= 0.0)
                        {
                            this.ai[3] = 0.0f;
                            this.ai[0] = -1f;
                            this.netUpdate = true;
                            this.netSpam = 0;
                        }
                        this.alpha = (int)this.ai[3];
                    }
                }
                else
                {
                    this.TargetClosest(true);
                    Vector2 vector2 = new Vector2(this.Center.X, this.Center.Y);
                    float num1 = Main.player[this.target].Center.X - vector2.X;
                    float num2 = Main.player[this.target].Center.Y - vector2.Y;
                    float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    float num4 = 1f;
                    if ((double)num3 < (double)num4)
                    {
                        this.velocity.X = num1;
                        this.velocity.Y = num2;
                    }
                    else
                    {
                        float num5 = num4 / num3;
                        this.velocity.X = num1 * num5;
                        this.velocity.Y = num2 * num5;
                    }
                    if ((double)this.ai[0] == 0.0)
                    {
                        if (Main.netMode == 1)
                            return;
                        int num5 = 0;
                        for (int index = 0; index < 200; ++index)
                        {
                            if (Main.npc[index].active && Main.npc[index].type == 267)
                                ++num5;
                        }
                        if (num5 == 0)
                        {
                            this.ai[0] = -1f;
                            this.localAI[1] = 0.0f;
                            this.alpha = 0;
                            this.netUpdate = true;
                        }
                        ++this.localAI[1];
                        if ((double)this.localAI[1] < (double)(120 + Main.rand.Next(300)))
                            return;
                        this.localAI[1] = 0.0f;
                        this.TargetClosest(true);
                        int num6 = 0;
                        do
                        {
                            ++num6;
                            int num7 = (int)Main.player[this.target].Center.X / 16;
                            int num8 = (int)Main.player[this.target].Center.Y / 16;
                            int i = num7 + Main.rand.Next(-50, 51);
                            int j = num8 + Main.rand.Next(-50, 51);
                            if (!WorldGen.SolidTile(i, j) && Collision.CanHit(new Vector2((float)(i * 16), (float)(j * 16)), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                            {
                                this.ai[0] = 1f;
                                this.ai[1] = (float)i;
                                this.ai[2] = (float)j;
                                this.netUpdate = true;
                                break;
                            }
                        }
                        while (num6 <= 100);
                    }
                    else if ((double)this.ai[0] == 1.0)
                    {
                        this.alpha += 5;
                        if (this.alpha < (int)byte.MaxValue)
                            return;
                        Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 8);
                        this.alpha = (int)byte.MaxValue;
                        this.position.X = this.ai[1] * 16f - (float)(this.width / 2);
                        this.position.Y = this.ai[2] * 16f - (float)(this.height / 2);
                        this.ai[0] = 2f;
                    }
                    else
                    {
                        if ((double)this.ai[0] != 2.0)
                            return;
                        this.alpha -= 5;
                        if (this.alpha > 0)
                            return;
                        this.alpha = 0;
                        this.ai[0] = 0.0f;
                    }
                }
            }
            else if (this.aiStyle == 55)
            {
                if (NPC.crimsonBoss < 0)
                {
                    this.active = false;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 0.0)
                {
                    Vector2 vector2 = new Vector2(this.Center.X, this.Center.Y);
                    float num1 = Main.npc[NPC.crimsonBoss].Center.X - vector2.X;
                    float num2 = Main.npc[NPC.crimsonBoss].Center.Y - vector2.Y;
                    float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    if ((double)num3 > 90.0)
                    {
                        float num4 = 8f / num3;
                        float num5 = num1 * num4;
                        float num6 = num2 * num4;
                        this.velocity.X = (float)(((double)this.velocity.X * 15.0 + (double)num5) / 16.0);
                        this.velocity.Y = (float)(((double)this.velocity.Y * 15.0 + (double)num6) / 16.0);
                    }
                    else
                    {
                        if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < 8.0)
                        {
                            this.velocity.Y *= 1.05f;
                            this.velocity.X *= 1.05f;
                        }
                        if (Main.netMode == 1 || (!Main.expertMode || Main.rand.Next(100) != 0) && Main.rand.Next(200) != 0)
                            return;
                        this.TargetClosest(true);
                        vector2 = new Vector2(this.Center.X, this.Center.Y);
                        float num4 = Main.player[this.target].Center.X - vector2.X;
                        float num5 = Main.player[this.target].Center.Y - vector2.Y;
                        float num6 = 8f / (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                        this.velocity.X = num4 * num6;
                        this.velocity.Y = num5 * num6;
                        this.ai[0] = 1f;
                        this.netUpdate = true;
                    }
                }
                else
                {
                    if (Main.expertMode)
                    {
                        Vector2 vector2 = Main.player[this.target].Center - this.Center;
                        vector2.Normalize();
                        this.velocity = (this.velocity * 99f + vector2 * 9f) / 100f;
                    }
                    Vector2 vector2_1 = new Vector2(this.Center.X, this.Center.Y);
                    float num1 = Main.npc[NPC.crimsonBoss].Center.X - vector2_1.X;
                    float num2 = Main.npc[NPC.crimsonBoss].Center.Y - vector2_1.Y;
                    if (Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2) <= 700.0 && !this.justHit)
                        return;
                    this.ai[0] = 0.0f;
                }
            }
            else if (this.aiStyle == 56)
            {
                this.TargetClosest(true);
                Vector2 vector2 = new Vector2(this.Center.X, this.Center.Y);
                float num1 = Main.player[this.target].Center.X - vector2.X;
                float num2 = Main.player[this.target].Center.Y - vector2.Y;
                float num3 = 12f / (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                float num4 = num1 * num3;
                float num5 = num2 * num3;
                this.velocity.X = (float)(((double)this.velocity.X * 100.0 + (double)num4) / 101.0);
                this.velocity.Y = (float)(((double)this.velocity.Y * 100.0 + (double)num5) / 101.0);
                this.rotation = (float)Math.Atan2((double)num5, (double)num4) - 1.57f;
                int index = Dust.NewDust(this.position, this.width, this.height, 180, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index].velocity *= 0.1f;
                Main.dust[index].scale = 1.3f;
                Main.dust[index].noGravity = true;
            }
            else if (this.aiStyle == 57)
            {
                float num1 = 2f;
                this.noGravity = true;
                this.noTileCollide = true;
                if (!Main.dayTime)
                    this.TargetClosest(true);
                bool flag1 = false;
                if ((double)this.life < (double)this.lifeMax * 0.75)
                    num1 = 3f;
                if ((double)this.life < (double)this.lifeMax * 0.5)
                    num1 = 4f;
                if (Main.dayTime)
                {
                    if (this.timeLeft > 10)
                        this.timeLeft = 10;
                    num1 = 8f;
                }
                else if ((double)this.ai[0] == 0.0)
                {
                    ++this.ai[1];
                    if ((double)this.life < (double)this.lifeMax * 0.5)
                        ++this.ai[1];
                    if ((double)this.life < (double)this.lifeMax * 0.25)
                        ++this.ai[1];
                    if ((double)this.ai[1] >= 300.0 && Main.netMode != 1)
                    {
                        this.ai[1] = 0.0f;
                        this.ai[0] = (double)this.life >= (double)this.lifeMax * 0.25 || this.type == 344 ? (float)Main.rand.Next(1, 3) : (float)Main.rand.Next(3, 5);
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    if (this.type == 344)
                    {
                        flag1 = true;
                        ++this.ai[1];
                        if ((double)this.ai[1] % 5.0 == 0.0)
                        {
                            Vector2 vector2 = new Vector2(this.position.X + 20f + (float)Main.rand.Next(this.width - 40), this.position.Y + 20f + (float)Main.rand.Next(this.height - 40));
                            float num2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                            float num3 = Main.player[this.target].position.Y - vector2.Y;
                            float num4 = num2 + (float)Main.rand.Next(-50, 51);
                            float num5 = num3 + (float)Main.rand.Next(-50, 51) - Math.Abs(num4) * ((float)Main.rand.Next(0, 21) * 0.01f);
                            float num6 = 12.5f / (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                            float num7 = num4 * num6;
                            float num8 = num5 * num6;
                            float SpeedX = num7 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.0199999995529652);
                            float SpeedY = num8 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.0199999995529652);
                            Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, 345, 43, 0.0f, Main.myPlayer, (float)Main.rand.Next(0, 31), 0.0f);
                        }
                        if ((double)this.ai[1] >= 180.0)
                        {
                            this.ai[1] = 0.0f;
                            this.ai[0] = 0.0f;
                        }
                    }
                    else
                    {
                        flag1 = true;
                        ++this.ai[1];
                        if ((double)this.ai[1] % 15.0 == 0.0)
                        {
                            Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, (float)((double)this.position.Y + (double)this.height * 0.5 + 30.0));
                            float num2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                            float num3 = Main.player[this.target].position.Y - vector2.Y;
                            float num4 = 10f / (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                            float num5 = num2 * num4;
                            float num6 = num3 * num4;
                            float SpeedX = num5 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.00999999977648258);
                            float SpeedY = num6 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.00999999977648258);
                            Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, 325, 50, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        }
                        if ((double)this.ai[1] >= 120.0)
                        {
                            this.ai[1] = 0.0f;
                            this.ai[0] = 0.0f;
                        }
                    }
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    if (this.type == 344)
                    {
                        flag1 = true;
                        ++this.ai[1];
                        if ((double)this.ai[1] > 60.0 && (double)this.ai[1] < 240.0 && (double)this.ai[1] % 15.0 == 0.0)
                        {
                            float num2 = 4.5f;
                            Vector2 vector2 = new Vector2(this.position.X + 20f + (float)Main.rand.Next(this.width - 40), this.position.Y + 60f + (float)Main.rand.Next(this.height - 80));
                            float num3 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                            float num4 = Main.player[this.target].position.Y - vector2.Y - Math.Abs(num3) * 0.3f;
                            float num5 = num2 + Math.Abs(num3) * 0.004f;
                            float num6 = num3 + (float)Main.rand.Next(-50, 51);
                            float num7 = num4 - (float)Main.rand.Next(50, 201);
                            float num8 = (float)Math.Sqrt((double)num6 * (double)num6 + (double)num7 * (double)num7);
                            float num9 = num5 / num8;
                            float num10 = num6 * num9;
                            float num11 = num7 * num9;
                            float SpeedX = num10 * (float)(1.0 + (double)Main.rand.Next(-30, 31) * 0.00999999977648258);
                            float SpeedY = num11 * (float)(1.0 + (double)Main.rand.Next(-30, 31) * 0.00999999977648258);
                            Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, 346, 57, 0.0f, Main.myPlayer, 0.0f, (float)Main.rand.Next(2));
                        }
                        if ((double)this.ai[1] >= 300.0)
                        {
                            this.ai[1] = 0.0f;
                            this.ai[0] = 0.0f;
                        }
                    }
                    else
                    {
                        flag1 = true;
                        ++this.ai[1];
                        if ((double)this.ai[1] > 60.0 && (double)this.ai[1] < 240.0 && (double)this.ai[1] % 8.0 == 0.0)
                        {
                            float num2 = 10f;
                            Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, (float)((double)this.position.Y + (double)this.height * 0.5 + 30.0));
                            float num3 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                            float num4 = Main.player[this.target].position.Y - vector2.Y - Math.Abs(num3) * 0.3f;
                            float num5 = num2 + Math.Abs(num3) * 0.004f;
                            if ((double)num5 > 14.0)
                                num5 = 14f;
                            float num6 = num3 + (float)Main.rand.Next(-50, 51);
                            float num7 = num4 - (float)Main.rand.Next(50, 201);
                            float num8 = (float)Math.Sqrt((double)num6 * (double)num6 + (double)num7 * (double)num7);
                            float num9 = num5 / num8;
                            float num10 = num6 * num9;
                            float num11 = num7 * num9;
                            float SpeedX = num10 * (float)(1.0 + (double)Main.rand.Next(-30, 31) * 0.00999999977648258);
                            float SpeedY = num11 * (float)(1.0 + (double)Main.rand.Next(-30, 31) * 0.00999999977648258);
                            Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Main.rand.Next(326, 329), 40, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        }
                        if ((double)this.ai[1] >= 300.0)
                        {
                            this.ai[1] = 0.0f;
                            this.ai[0] = 0.0f;
                        }
                    }
                }
                else if ((double)this.ai[0] == 3.0)
                {
                    num1 = 4f;
                    ++this.ai[1];
                    if ((double)this.ai[1] % 30.0 == 0.0)
                    {
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, (float)((double)this.position.Y + (double)this.height * 0.5 + 30.0));
                        float num2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                        float num3 = Main.player[this.target].position.Y - vector2.Y;
                        float num4 = 16f / (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                        float num5 = num2 * num4;
                        float num6 = num3 * num4;
                        float SpeedX = num5 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * (1.0 / 1000.0));
                        float SpeedY = num6 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * (1.0 / 1000.0));
                        Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, 325, 75, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                    if ((double)this.ai[1] >= 120.0)
                    {
                        this.ai[1] = 0.0f;
                        this.ai[0] = 0.0f;
                    }
                }
                else if ((double)this.ai[0] == 4.0)
                {
                    num1 = 4f;
                    ++this.ai[1];
                    if ((double)this.ai[1] % 10.0 == 0.0)
                    {
                        float num2 = 12f;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, (float)((double)this.position.Y + (double)this.height * 0.5 + 30.0));
                        float num3 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                        float num4 = Main.player[this.target].position.Y - vector2.Y - Math.Abs(num3) * 0.2f;
                        float num5 = num2 + Math.Abs(num3) * (1.0f / 500.0f);
                        if ((double)num5 > 16.0)
                            num5 = 16f;
                        float num6 = num3 + (float)Main.rand.Next(-50, 51);
                        float num7 = num4 - (float)Main.rand.Next(50, 201);
                        float num8 = (float)Math.Sqrt((double)num6 * (double)num6 + (double)num7 * (double)num7);
                        float num9 = num5 / num8;
                        float num10 = num6 * num9;
                        float num11 = num7 * num9;
                        float SpeedX = num10 * (float)(1.0 + (double)Main.rand.Next(-30, 31) * 0.00499999988824129);
                        float SpeedY = num11 * (float)(1.0 + (double)Main.rand.Next(-30, 31) * 0.00499999988824129);
                        Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Main.rand.Next(326, 329), 50, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                    if ((double)this.ai[1] >= 240.0)
                    {
                        this.ai[1] = 0.0f;
                        this.ai[0] = 0.0f;
                    }
                }
                if ((double)Math.Abs(this.Center.X - Main.player[this.target].Center.X) < 50.0)
                    flag1 = true;
                if (flag1)
                {
                    this.velocity.X *= 0.9f;
                    if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                        this.velocity.X = 0.0f;
                }
                else
                {
                    if (this.direction > 0)
                        this.velocity.X = (float)(((double)this.velocity.X * 20.0 + (double)num1) / 21.0);
                    if (this.direction < 0)
                        this.velocity.X = (float)(((double)this.velocity.X * 20.0 - (double)num1) / 21.0);
                }
                int Width = 80;
                int Height = 20;
                Vector2 Position = new Vector2(this.Center.X - (float)(Width / 2), this.position.Y + (float)this.height - (float)Height);
                bool flag2 = false;
                if ((double)this.position.X < (double)Main.player[this.target].position.X && (double)this.position.X + (double)this.width > (double)Main.player[this.target].position.X + (double)Main.player[this.target].width && (double)this.position.Y + (double)this.height < (double)Main.player[this.target].position.Y + (double)Main.player[this.target].height - 16.0)
                    flag2 = true;
                if (flag2)
                    this.velocity.Y += 0.5f;
                else if (Collision.SolidCollision(Position, Width, Height))
                {
                    if ((double)this.velocity.Y > 0.0)
                        this.velocity.Y = 0.0f;
                    if ((double)this.velocity.Y > -0.2)
                        this.velocity.Y -= 0.025f;
                    else
                        this.velocity.Y -= 0.2f;
                    if ((double)this.velocity.Y < -4.0)
                        this.velocity.Y = -4f;
                }
                else
                {
                    if ((double)this.velocity.Y < 0.0)
                        this.velocity.Y = 0.0f;
                    if ((double)this.velocity.Y < 0.1)
                        this.velocity.Y += 0.025f;
                    else
                        this.velocity.Y += 0.5f;
                }
                if ((double)this.velocity.Y <= 10.0)
                    return;
                this.velocity.Y = 10f;
            }
            else if (this.aiStyle == 58)
            {
                ++this.localAI[0];
                if ((double)this.localAI[0] > 6.0)
                {
                    this.localAI[0] = 0.0f;
                    ++this.localAI[1];
                    if ((double)this.localAI[1] > 4.0)
                        this.localAI[1] = 0.0f;
                }
                if (Main.netMode != 1)
                {
                    ++this.localAI[2];
                    if ((double)this.localAI[2] > 300.0)
                    {
                        this.ai[3] = (float)Main.rand.Next(3);
                        this.localAI[2] = 0.0f;
                    }
                    else if ((double)this.ai[3] == 0.0 && (double)this.localAI[2] % 30.0 == 0.0 && (double)this.localAI[2] > 30.0)
                    {
                        float num1 = 5f;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, (float)((double)this.position.Y + (double)this.height * 0.5 + 30.0));
                        if (!WorldGen.SolidTile((int)vector2.X / 16, (int)vector2.Y / 16))
                        {
                            float num2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                            float num3 = Main.player[this.target].position.Y - vector2.Y;
                            float num4 = num2 + (float)Main.rand.Next(-50, 51);
                            float num5 = (num3 + (float)Main.rand.Next(50, 201)) * 0.2f;
                            float num6 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                            float num7 = num1 / num6;
                            float num8 = num4 * num7;
                            float num9 = num5 * num7;
                            float SpeedX = num8 * (float)(1.0 + (double)Main.rand.Next(-30, 31) * 0.00999999977648258);
                            float SpeedY = num9 * (float)(1.0 + (double)Main.rand.Next(-30, 31) * 0.00999999977648258);
                            Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Main.rand.Next(326, 329), 40, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        }
                    }
                }
                if ((double)this.ai[0] == 0.0 && Main.netMode != 1)
                {
                    this.TargetClosest(true);
                    this.ai[0] = 1f;
                    int index1 = NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)this.position.Y + this.height / 2, 328, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    Main.npc[index1].ai[0] = -1f;
                    Main.npc[index1].ai[1] = (float)this.whoAmI;
                    Main.npc[index1].target = this.target;
                    Main.npc[index1].netUpdate = true;
                    int index2 = NPC.NewNPC((int)((double)this.position.X + (double)(this.width / 2)), (int)this.position.Y + this.height / 2, 328, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    Main.npc[index2].ai[0] = 1f;
                    Main.npc[index2].ai[1] = (float)this.whoAmI;
                    Main.npc[index2].ai[3] = 150f;
                    Main.npc[index2].target = this.target;
                    Main.npc[index2].netUpdate = true;
                }
                if (Main.player[this.target].dead || (double)Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000.0 || (double)Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000.0)
                {
                    this.TargetClosest(true);
                    if (Main.player[this.target].dead || (double)Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000.0 || (double)Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000.0)
                        this.ai[1] = 2f;
                }
                if (Main.dayTime)
                {
                    this.velocity.Y += 0.3f;
                    this.velocity.X *= 0.9f;
                }
                else if ((double)this.ai[1] == 0.0)
                {
                    ++this.ai[2];
                    if ((double)this.ai[2] >= 300.0)
                    {
                        if ((double)this.ai[3] != 1.0)
                        {
                            this.ai[1] = 0.0f;
                            this.ai[2] = 0.0f;
                        }
                        else
                        {
                            this.ai[2] = 0.0f;
                            this.ai[1] = 1f;
                            this.TargetClosest(true);
                            this.netUpdate = true;
                        }
                    }
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num2 = (float)((double)Main.player[this.target].position.Y + (double)(Main.player[this.target].height / 2) - 200.0) - vector2.Y;
                    float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    float num4 = 6f;
                    if ((double)this.ai[3] == 1.0)
                    {
                        if ((double)num3 > 900.0)
                            num4 = 12f;
                        else if ((double)num3 > 600.0)
                            num4 = 10f;
                        else if ((double)num3 > 300.0)
                            num4 = 8f;
                    }
                    if ((double)num3 > 50.0)
                    {
                        float num5 = num4 / num3;
                        this.velocity.X = (float)(((double)this.velocity.X * 14.0 + (double)num1 * (double)num5) / 15.0);
                        this.velocity.Y = (float)(((double)this.velocity.Y * 14.0 + (double)num2 * (double)num5) / 15.0);
                    }
                }
                else if ((double)this.ai[1] == 1.0)
                {
                    ++this.ai[2];
                    if ((double)this.ai[2] >= 600.0 || (double)this.ai[3] != 1.0)
                    {
                        this.ai[2] = 0.0f;
                        this.ai[1] = 0.0f;
                    }
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num2 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num3 = 16f / (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    this.velocity.X = (float)(((double)this.velocity.X * 49.0 + (double)num1 * (double)num3) / 50.0);
                    this.velocity.Y = (float)(((double)this.velocity.Y * 49.0 + (double)num2 * (double)num3) / 50.0);
                }
                else if ((double)this.ai[1] == 2.0)
                {
                    this.ai[1] = 3f;
                    this.velocity.Y += 0.1f;
                    if ((double)this.velocity.Y < 0.0)
                        this.velocity.Y *= 0.95f;
                    this.velocity.X *= 0.95f;
                    if (this.timeLeft > 500)
                        this.timeLeft = 500;
                }
                this.rotation = this.velocity.X * -0.02f;
            }
            else if (this.aiStyle == 59)
            {
                this.spriteDirection = -(int)this.ai[0];
                if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 58)
                {
                    this.ai[2] += 10f;
                    if ((double)this.ai[2] > 50.0 || Main.netMode != 2)
                    {
                        this.life = -1;
                        this.HitEffect(0, 10.0);
                        this.active = false;
                    }
                }
                if (Main.netMode != 1 && (double)Main.npc[(int)this.ai[1]].ai[3] == 2.0)
                {
                    ++this.localAI[1];
                    if ((double)this.localAI[1] > 90.0)
                    {
                        this.localAI[1] = 0.0f;
                        float num1 = 0.01f;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, (float)((double)this.position.Y + (double)this.height * 0.5 + 30.0));
                        float num2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                        float num3 = Main.player[this.target].position.Y - vector2.Y;
                        float num4 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                        float num5 = num1 / num4;
                        Projectile.NewProjectile(this.Center.X, this.Center.Y, num2 * num5, num3 * num5, 329, 60, 0.0f, Main.myPlayer, this.rotation, (float)this.spriteDirection);
                    }
                }
                if (Main.dayTime)
                {
                    this.velocity.Y += 0.3f;
                    this.velocity.X *= 0.9f;
                }
                else if ((double)this.ai[2] == 0.0 || (double)this.ai[2] == 3.0)
                {
                    if ((double)Main.npc[(int)this.ai[1]].ai[1] == 3.0 && this.timeLeft > 10)
                        this.timeLeft = 10;
                    ++this.ai[3];
                    if ((double)this.ai[3] >= 180.0)
                    {
                        ++this.ai[2];
                        this.ai[3] = 0.0f;
                        this.netUpdate = true;
                    }
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = (float)(((double)Main.player[this.target].Center.X + (double)Main.npc[(int)this.ai[1]].Center.X) / 2.0);
                    float num2 = (float)(((double)Main.player[this.target].Center.Y + (double)Main.npc[(int)this.ai[1]].Center.Y) / 2.0);
                    float num3 = num1 + (-170f * this.ai[0] - vector2.X);
                    float num4 = num2 + (90f - vector2.Y);
                    if ((double)(Math.Abs(Main.player[this.target].Center.X - Main.npc[(int)this.ai[1]].Center.X) + Math.Abs(Main.player[this.target].Center.Y - Main.npc[(int)this.ai[1]].Center.Y)) > 700.0)
                    {
                        num3 = Main.npc[(int)this.ai[1]].Center.X - 170f * this.ai[0] - vector2.X;
                        num4 = Main.npc[(int)this.ai[1]].Center.Y + 90f - vector2.Y;
                    }
                    float num5 = (float)Math.Sqrt((double)num3 * (double)num3 + (double)num4 * (double)num4);
                    float num6 = 6f;
                    if ((double)num5 > 1000.0)
                        num6 = 21f;
                    else if ((double)num5 > 800.0)
                        num6 = 18f;
                    else if ((double)num5 > 600.0)
                        num6 = 15f;
                    else if ((double)num5 > 400.0)
                        num6 = 12f;
                    else if ((double)num5 > 200.0)
                        num6 = 9f;
                    if ((double)this.ai[0] < 0.0 && (double)this.Center.X > (double)Main.npc[(int)this.ai[1]].Center.X)
                        num3 -= 4f;
                    if ((double)this.ai[0] > 0.0 && (double)this.Center.X < (double)Main.npc[(int)this.ai[1]].Center.X)
                        num3 += 4f;
                    float num7 = num6 / num5;
                    this.velocity.X = (float)(((double)this.velocity.X * 14.0 + (double)num3 * (double)num7) / 15.0);
                    this.velocity.Y = (float)(((double)this.velocity.Y * 14.0 + (double)num4 * (double)num7) / 15.0);
                    if (Math.Sqrt((double)num3 * (double)num3 + (double)num4 * (double)num4) <= 20.0)
                        return;
                    this.rotation = (float)Math.Atan2((double)num4, (double)num3) + 1.57f;
                }
                else if ((double)this.ai[2] == 1.0)
                {
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = (float)((double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0]) - vector2.X;
                    float num2 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2.Y;
                    float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    this.rotation = (float)Math.Atan2((double)num2, (double)num1) + 1.57f;
                    this.velocity.X *= 0.95f;
                    this.velocity.Y -= 0.3f;
                    if ((double)this.velocity.Y < -14.0)
                        this.velocity.Y = -14f;
                    if ((double)this.position.Y >= (double)Main.npc[(int)this.ai[1]].position.Y - 200.0)
                        return;
                    this.TargetClosest(true);
                    this.ai[2] = 2f;
                    vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num4 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num5 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num6 = 18f / (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                    this.velocity.X = num4 * num6;
                    this.velocity.Y = num5 * num6;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[2] == 2.0)
                {
                    float num = Math.Abs(this.Center.X - Main.npc[(int)this.ai[1]].Center.X) + Math.Abs(this.Center.Y - Main.npc[(int)this.ai[1]].Center.Y);
                    if ((double)this.position.Y <= (double)Main.player[this.target].position.Y && (double)this.velocity.Y >= 0.0 && (double)num <= 800.0)
                        return;
                    this.ai[2] = 3f;
                }
                else if ((double)this.ai[2] == 4.0)
                {
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num1 = (float)((double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 200.0 * (double)this.ai[0]) - vector2.X;
                    float num2 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2.Y;
                    float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    this.rotation = (float)Math.Atan2((double)num2, (double)num1) + 1.57f;
                    this.velocity.Y *= 0.95f;
                    this.velocity.X += (float)(0.300000011920929 * -(double)this.ai[0]);
                    if ((double)this.velocity.X < -14.0)
                        this.velocity.X = -14f;
                    if ((double)this.velocity.X > 14.0)
                        this.velocity.X = 14f;
                    if ((double)this.position.X + (double)(this.width / 2) >= (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) - 500.0 && (double)this.position.X + (double)(this.width / 2) <= (double)Main.npc[(int)this.ai[1]].position.X + (double)(Main.npc[(int)this.ai[1]].width / 2) + 500.0)
                        return;
                    this.TargetClosest(true);
                    this.ai[2] = 5f;
                    vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num4 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2.X;
                    float num5 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2.Y;
                    float num6 = 17f / (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                    this.velocity.X = num4 * num6;
                    this.velocity.Y = num5 * num6;
                    this.netUpdate = true;
                }
                else
                {
                    if ((double)this.ai[2] != 5.0)
                        return;
                    float num = Math.Abs(this.Center.X - Main.npc[(int)this.ai[1]].Center.X) + Math.Abs(this.Center.Y - Main.npc[(int)this.ai[1]].Center.Y);
                    if (((double)this.velocity.X <= 0.0 || (double)this.position.X + (double)(this.width / 2) <= (double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2)) && ((double)this.velocity.X >= 0.0 || (double)this.position.X + (double)(this.width / 2) >= (double)Main.player[this.target].position.X + (double)(Main.player[this.target].width / 2)) && (double)num <= 800.0)
                        return;
                    this.ai[2] = 0.0f;
                }
            }
            else if (this.aiStyle == 60)
            {
                if (Main.dayTime)
                {
                    if ((double)this.velocity.X > 0.0)
                        this.velocity.X += 0.25f;
                    else
                        this.velocity.X -= 0.25f;
                    this.velocity.Y -= 0.1f;
                    this.rotation = this.velocity.X * 0.05f;
                }
                else if ((double)this.ai[0] == 0.0)
                {
                    if ((double)this.ai[2] == 0.0)
                    {
                        this.TargetClosest(true);
                        this.ai[2] = (double)this.Center.X >= (double)Main.player[this.target].Center.X ? -1f : 1f;
                    }
                    this.TargetClosest(true);
                    int num1 = 800;
                    float num2 = Math.Abs(this.Center.X - Main.player[this.target].Center.X);
                    if ((double)this.Center.X < (double)Main.player[this.target].Center.X && (double)this.ai[2] < 0.0 && (double)num2 > (double)num1)
                        this.ai[2] = 0.0f;
                    if ((double)this.Center.X > (double)Main.player[this.target].Center.X && (double)this.ai[2] > 0.0 && (double)num2 > (double)num1)
                        this.ai[2] = 0.0f;
                    float num3 = 0.45f;
                    float num4 = 7f;
                    if ((double)this.life < (double)this.lifeMax * 0.75)
                    {
                        num3 = 0.55f;
                        num4 = 8f;
                    }
                    if ((double)this.life < (double)this.lifeMax * 0.5)
                    {
                        num3 = 0.7f;
                        num4 = 10f;
                    }
                    if ((double)this.life < (double)this.lifeMax * 0.25)
                    {
                        num3 = 0.8f;
                        num4 = 11f;
                    }
                    this.velocity.X += this.ai[2] * num3;
                    if ((double)this.velocity.X > (double)num4)
                        this.velocity.X = num4;
                    if ((double)this.velocity.X < -(double)num4)
                        this.velocity.X = -num4;
                    float num5 = Main.player[this.target].position.Y - (this.position.Y + (float)this.height);
                    if ((double)num5 < 150.0)
                        this.velocity.Y -= 0.2f;
                    if ((double)num5 > 200.0)
                        this.velocity.Y += 0.2f;
                    if ((double)this.velocity.Y > 8.0)
                        this.velocity.Y = 8f;
                    if ((double)this.velocity.Y < -8.0)
                        this.velocity.Y = -8f;
                    this.rotation = this.velocity.X * 0.05f;
                    if (((double)num2 < 500.0 || (double)this.ai[3] < 0.0) && (double)this.position.Y < (double)Main.player[this.target].position.Y)
                    {
                        ++this.ai[3];
                        int num6 = 13;
                        if ((double)this.life < (double)this.lifeMax * 0.75)
                            num6 = 12;
                        if ((double)this.life < (double)this.lifeMax * 0.5)
                            num6 = 11;
                        if ((double)this.life < (double)this.lifeMax * 0.25)
                            num6 = 10;
                        int num7 = num6 + 1;
                        if ((double)this.ai[3] > (double)num7)
                            this.ai[3] = (float)-num7;
                        if ((double)this.ai[3] == 0.0 && Main.netMode != 1)
                        {
                            Vector2 vector2 = new Vector2(this.Center.X, this.Center.Y);
                            vector2.X += this.velocity.X * 7f;
                            float num8 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                            float num9 = Main.player[this.target].Center.Y - vector2.Y;
                            float num10 = (float)Math.Sqrt((double)num8 * (double)num8 + (double)num9 * (double)num9);
                            float num11 = 6f;
                            if ((double)this.life < (double)this.lifeMax * 0.75)
                                num11 = 7f;
                            if ((double)this.life < (double)this.lifeMax * 0.5)
                                num11 = 8f;
                            if ((double)this.life < (double)this.lifeMax * 0.25)
                                num11 = 9f;
                            float num12 = num11 / num10;
                            float SpeedX = num8 * num12;
                            float SpeedY = num9 * num12;
                            Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, 348, 42, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        }
                    }
                    else if ((double)this.ai[3] < 0.0)
                        ++this.ai[3];
                    if (Main.netMode != 1)
                    {
                        this.ai[1] += (float)Main.rand.Next(1, 4);
                        if ((double)this.ai[1] > 800.0 && (double)num2 < 600.0)
                            this.ai[0] = -1f;
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    this.TargetClosest(true);
                    float num1 = 0.15f;
                    float num2 = 7f;
                    if ((double)this.life < (double)this.lifeMax * 0.75)
                    {
                        num1 = 0.17f;
                        num2 = 8f;
                    }
                    if ((double)this.life < (double)this.lifeMax * 0.5)
                    {
                        num1 = 0.2f;
                        num2 = 9f;
                    }
                    if ((double)this.life < (double)this.lifeMax * 0.25)
                    {
                        num1 = 0.25f;
                        num2 = 10f;
                    }
                    float num3 = num1 - 0.05f;
                    float num4 = num2 - 1f;
                    if ((double)this.Center.X < (double)Main.player[this.target].Center.X)
                    {
                        this.velocity.X += num3;
                        if ((double)this.velocity.X < 0.0)
                            this.velocity.X *= 0.98f;
                    }
                    if ((double)this.Center.X > (double)Main.player[this.target].Center.X)
                    {
                        this.velocity.X -= num3;
                        if ((double)this.velocity.X > 0.0)
                            this.velocity.X *= 0.98f;
                    }
                    if ((double)this.velocity.X > (double)num4 || (double)this.velocity.X < -(double)num4)
                        this.velocity.X *= 0.95f;
                    float num5 = Main.player[this.target].position.Y - (this.position.Y + (float)this.height);
                    if ((double)num5 < 180.0)
                        this.velocity.Y -= 0.1f;
                    if ((double)num5 > 200.0)
                        this.velocity.Y += 0.1f;
                    if ((double)this.velocity.Y > 6.0)
                        this.velocity.Y = 6f;
                    if ((double)this.velocity.Y < -6.0)
                        this.velocity.Y = -6f;
                    this.rotation = this.velocity.X * 0.01f;
                    if (Main.netMode != 1)
                    {
                        ++this.ai[3];
                        int num6 = 15;
                        if ((double)this.life < (double)this.lifeMax * 0.75)
                            num6 = 14;
                        if ((double)this.life < (double)this.lifeMax * 0.5)
                            num6 = 12;
                        if ((double)this.life < (double)this.lifeMax * 0.25)
                            num6 = 10;
                        if ((double)this.life < (double)this.lifeMax * 0.1)
                            num6 = 8;
                        if ((double)this.ai[3] >= (double)(num6 + 3))
                        {
                            this.ai[3] = 0.0f;
                            Vector2 vector2 = new Vector2(this.Center.X, (float)((double)this.position.Y + (double)this.height - 14.0));
                            if (!WorldGen.SolidTile((int)((double)vector2.X / 16.0), (int)((double)vector2.Y / 16.0)))
                            {
                                float num7 = this.velocity.Y;
                                if ((double)num7 < 0.0)
                                    num7 = 0.0f;
                                float SpeedY = num7 + 3f;
                                float SpeedX = this.velocity.X * 0.25f;
                                Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, 349, 37, 0.0f, Main.myPlayer, (float)Main.rand.Next(5), 0.0f);
                            }
                        }
                    }
                    if (Main.netMode != 1)
                    {
                        this.ai[1] += (float)Main.rand.Next(1, 4);
                        if ((double)this.ai[1] > 600.0)
                            this.ai[0] = -1f;
                    }
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    this.TargetClosest(true);
                    Vector2 vector2_1 = new Vector2(this.Center.X, this.Center.Y - 20f);
                    float num1 = (float)Main.rand.Next(-1000, 1001);
                    float num2 = (float)Main.rand.Next(-1000, 1001);
                    float num3 = (float)Math.Sqrt((double)num1 * (double)num1 + (double)num2 * (double)num2);
                    float num4 = 15f;
                    NPC npc = this;
                    Vector2 vector2_2 = npc.velocity * 0.95f;
                    npc.velocity = vector2_2;
                    float num5 = num4 / num3;
                    float SpeedX = num1 * num5;
                    float SpeedY = num2 * num5;
                    this.rotation += 0.2f;
                    vector2_1.X += SpeedX * 4f;
                    vector2_1.Y += SpeedY * 4f;
                    ++this.ai[3];
                    int num6 = 7;
                    if ((double)this.life < (double)this.lifeMax * 0.75)
                        --num6;
                    if ((double)this.life < (double)this.lifeMax * 0.5)
                        num6 -= 2;
                    if ((double)this.life < (double)this.lifeMax * 0.25)
                        num6 -= 3;
                    if ((double)this.life < (double)this.lifeMax * 0.1)
                        num6 -= 4;
                    if ((double)this.ai[3] > (double)num6)
                    {
                        this.ai[3] = 0.0f;
                        Projectile.NewProjectile(vector2_1.X, vector2_1.Y, SpeedX, SpeedY, 349, 35, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                    if (Main.netMode != 1)
                    {
                        this.ai[1] += (float)Main.rand.Next(1, 4);
                        if ((double)this.ai[1] > 500.0)
                            this.ai[0] = -1f;
                    }
                }
                if ((double)this.ai[0] != -1.0)
                    return;
                int num = Main.rand.Next(3);
                this.TargetClosest(true);
                if ((double)Math.Abs(this.Center.X - Main.player[this.target].Center.X) > 1000.0)
                    num = 0;
                this.ai[0] = (float)num;
                this.ai[1] = 0.0f;
                this.ai[2] = 0.0f;
                this.ai[3] = 0.0f;
            }
            else if (this.aiStyle == 61)
            {
                float num1 = 2f;
                this.noGravity = true;
                this.noTileCollide = true;
                if (!Main.dayTime)
                    this.TargetClosest(true);
                bool flag1 = false;
                if ((double)this.life < (double)this.lifeMax * 0.75)
                    num1 = 3f;
                if ((double)this.life < (double)this.lifeMax * 0.5)
                    num1 = 4f;
                if ((double)this.life < (double)this.lifeMax * 0.25)
                    num1 = 5f;
                if (Main.dayTime)
                {
                    if (this.timeLeft > 10)
                        this.timeLeft = 10;
                    num1 = 8f;
                    if ((double)this.velocity.X == 0.0)
                        this.velocity.X = 0.1f;
                }
                else if ((double)this.ai[0] == 0.0)
                {
                    ++this.ai[1];
                    if ((double)this.ai[1] >= 300.0 && Main.netMode != 1)
                    {
                        this.TargetClosest(true);
                        this.ai[1] = 0.0f;
                        this.ai[0] = 1f;
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    ++this.ai[1];
                    flag1 = true;
                    int num2 = 16;
                    if ((double)this.life < (double)this.lifeMax * 0.25)
                        num2 = 8;
                    else if ((double)this.life < (double)this.lifeMax * 0.5)
                        num2 = 11;
                    else if ((double)this.life < (double)this.lifeMax * 0.75)
                        num2 = 14;
                    if ((double)this.ai[1] % (double)num2 == 0.0)
                    {
                        Vector2 vector2 = new Vector2(this.Center.X + (float)(this.direction * 50), this.Center.Y + (float)Main.rand.Next(15, 36));
                        float num3 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                        float num4 = Main.player[this.target].Center.Y - vector2.Y;
                        float num5 = num3 + (float)Main.rand.Next(-40, 41);
                        float num6 = num4 + (float)Main.rand.Next(-40, 41);
                        float num7 = 15f / (float)Math.Sqrt((double)num5 * (double)num5 + (double)num6 * (double)num6);
                        float num8 = num5 * num7;
                        float num9 = num6 * num7;
                        float SpeedX = num8 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.0149999996647239);
                        float SpeedY = num9 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.0149999996647239);
                        Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, 180, 36, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                    if ((double)this.ai[1] > 240.0)
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                    }
                }
                if (Main.netMode != 1)
                {
                    int maxValue1 = 600;
                    int maxValue2 = 1200;
                    int maxValue3 = 2700;
                    if ((double)this.life < (double)this.lifeMax * 0.25)
                    {
                        maxValue1 = (int)((double)maxValue1 * 0.5);
                        maxValue2 = (int)((double)maxValue2 * 0.5);
                        maxValue3 = (int)((double)maxValue3 * 0.5);
                    }
                    else if ((double)this.life < (double)this.lifeMax * 0.5)
                    {
                        maxValue1 = (int)((double)maxValue1 * 0.75);
                        maxValue2 = (int)((double)maxValue2 * 0.75);
                        maxValue3 = (int)((double)maxValue3 * 0.75);
                    }
                    else if ((double)this.life < (double)this.lifeMax * 0.75)
                    {
                        maxValue1 = (int)((double)maxValue1 * 0.9);
                        maxValue2 = (int)((double)maxValue2 * 0.9);
                        maxValue3 = (int)((double)maxValue3 * 0.9);
                    }
                    if (Main.rand.Next(maxValue1) == 0)
                    {
                        Vector2 vector2 = new Vector2(this.Center.X - (float)(this.direction * 24), this.Center.Y - 64f);
                        float num2 = (float)(Main.rand.Next(1, 100) * this.direction);
                        float num3 = 1f;
                        float num4 = 1f / (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                        float SpeedX = num2 * num4;
                        float SpeedY = num3 * num4;
                        Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, 352, 80, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                    if (Main.rand.Next(maxValue2) == 0)
                        this.localAI[1] = 1f;
                    if ((double)this.localAI[1] >= 1.0)
                    {
                        ++this.localAI[1];
                        if ((double)this.localAI[1] % 12.0 == 0.0)
                        {
                            Vector2 vector2 = new Vector2(this.Center.X - (float)(this.direction * 24), this.Center.Y - 64f);
                            float num2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                            float num3 = Main.player[this.target].Center.Y - vector2.Y;
                            float num4 = num2 + (float)Main.rand.Next(-50, 51);
                            float num5 = num3 + (float)Main.rand.Next(-50, 51);
                            float num6 = 12.5f / (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                            float num7 = num4 * num6;
                            float num8 = num5 * num6;
                            float SpeedX = num7 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.0149999996647239);
                            float SpeedY = num8 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.0149999996647239);
                            Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, 350, 42, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        }
                        if ((double)this.localAI[1] >= 100.0)
                            this.localAI[1] = 0.0f;
                    }
                    if (Main.rand.Next(maxValue3) == 0)
                        this.localAI[2] = 2f;
                    if ((double)this.localAI[2] > 0.0)
                    {
                        ++this.localAI[2];
                        if ((double)this.localAI[2] % 9.0 == 0.0)
                        {
                            Vector2 vector2 = new Vector2(this.Center.X - (float)(this.direction * 24), this.Center.Y - 64f);
                            float num2 = (float)Main.rand.Next(-100, 101);
                            float num3 = -300f;
                            float num4 = 11f / (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                            float num5 = num2 * num4;
                            float num6 = num3 * num4;
                            float SpeedX = num5 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.00999999977648258);
                            float SpeedY = num6 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.00999999977648258);
                            Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, 351, 50, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        }
                        if ((double)this.localAI[2] >= 100.0)
                            this.localAI[2] = 0.0f;
                    }
                }
                if ((double)Math.Abs(this.Center.X - Main.player[this.target].Center.X) < 50.0)
                    flag1 = true;
                if (flag1)
                {
                    this.velocity.X *= 0.9f;
                    if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                        this.velocity.X = 0.0f;
                }
                else
                {
                    if (this.direction > 0)
                        this.velocity.X = (float)(((double)this.velocity.X * 20.0 + (double)num1) / 21.0);
                    if (this.direction < 0)
                        this.velocity.X = (float)(((double)this.velocity.X * 20.0 - (double)num1) / 21.0);
                }
                int Width = 80;
                int Height = 20;
                Vector2 Position = new Vector2(this.Center.X - (float)(Width / 2), this.position.Y + (float)this.height - (float)Height);
                bool flag2 = false;
                if ((double)this.position.X < (double)Main.player[this.target].position.X && (double)this.position.X + (double)this.width > (double)Main.player[this.target].position.X + (double)Main.player[this.target].width && (double)this.position.Y + (double)this.height < (double)Main.player[this.target].position.Y + (double)Main.player[this.target].height - 16.0)
                    flag2 = true;
                if (flag2)
                    this.velocity.Y += 0.5f;
                else if (Collision.SolidCollision(Position, Width, Height))
                {
                    if ((double)this.velocity.Y > 0.0)
                        this.velocity.Y = 0.0f;
                    if ((double)this.velocity.Y > -0.2)
                        this.velocity.Y -= 0.025f;
                    else
                        this.velocity.Y -= 0.2f;
                    if ((double)this.velocity.Y < -4.0)
                        this.velocity.Y = -4f;
                }
                else
                {
                    if ((double)this.velocity.Y < 0.0)
                        this.velocity.Y = 0.0f;
                    if ((double)this.velocity.Y < 0.1)
                        this.velocity.Y += 0.025f;
                    else
                        this.velocity.Y += 0.5f;
                }
                if ((double)this.velocity.Y <= 10.0)
                    return;
                this.velocity.Y = 10f;
            }
            else if (this.aiStyle == 62)
            {
                this.TargetClosest(true);
                this.rotation = (float)((double)Math.Abs(this.velocity.X) * (double)this.direction * 0.100000001490116);
                this.spriteDirection = this.direction;
                float num1 = 7f;
                Vector2 vector2_1 = new Vector2(this.Center.X + (float)(this.direction * 20), this.Center.Y + 6f);
                float num2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_1.X;
                float num3 = Main.player[this.target].position.Y - vector2_1.Y;
                float num4 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                float num5 = num1 / num4;
                float num6 = num2 * num5;
                float num7 = num3 * num5;
                bool flag = Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1);
                if (Main.dayTime)
                {
                    int num8 = 60;
                    this.velocity.X = (this.velocity.X * (float)(num8 - 1) - num6) / (float)num8;
                    this.velocity.Y = (this.velocity.Y * (float)(num8 - 1) - num7) / (float)num8;
                    if (this.timeLeft <= 10)
                        return;
                    this.timeLeft = 10;
                }
                else if ((double)num4 > 600.0 || !flag)
                {
                    int num8 = 60;
                    this.velocity.X = (this.velocity.X * (float)(num8 - 1) + num6) / (float)num8;
                    this.velocity.Y = (this.velocity.Y * (float)(num8 - 1) + num7) / (float)num8;
                }
                else
                {
                    NPC npc = this;
                    Vector2 vector2_2 = npc.velocity * 0.98f;
                    npc.velocity = vector2_2;
                    if ((double)Math.Abs(this.velocity.X) >= 1.0 || (double)Math.Abs(this.velocity.Y) >= 1.0 || Main.netMode == 1)
                        return;
                    ++this.localAI[0];
                    if ((double)this.localAI[0] < 15.0)
                        return;
                    this.localAI[0] = 0.0f;
                    float num8 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2_1.X;
                    float num9 = Main.player[this.target].Center.Y - vector2_1.Y;
                    float num10 = num8 + (float)Main.rand.Next(-35, 36);
                    float num11 = num9 + (float)Main.rand.Next(-35, 36);
                    float num12 = num10 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.0149999996647239);
                    float num13 = num11 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.0149999996647239);
                    float num14 = 10f / (float)Math.Sqrt((double)num12 * (double)num12 + (double)num13 * (double)num13);
                    float num15 = num12 * num14;
                    float num16 = num13 * num14;
                    float SpeedX = num15 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.0125000001862645);
                    float SpeedY = num16 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.0125000001862645);
                    Projectile.NewProjectile(vector2_1.X, vector2_1.Y, SpeedX, SpeedY, 180, 32, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                }
            }
            else if (this.aiStyle == 63)
            {
                this.TargetClosest(true);
                float num1 = 11f;
                Vector2 vector2 = new Vector2(this.Center.X + (float)(this.direction * 20), this.Center.Y + 6f);
                float num2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
                float num3 = Main.player[this.target].Center.Y - vector2.Y;
                float num4 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num3 * (double)num3);
                float num5 = num1 / num4;
                float num6 = num2 * num5;
                float num7 = num3 * num5;
                if (Main.dayTime)
                {
                    num6 = -num6;
                    num7 = -num7;
                }
                --this.ai[0];
                if ((double)num4 < 200.0 || (double)this.ai[0] > 0.0)
                {
                    if ((double)num4 < 200.0)
                        this.ai[0] = 20f;
                    if ((double)this.velocity.X < 0.0)
                        this.direction = -1;
                    else
                        this.direction = 1;
                    this.rotation += (float)this.direction * 0.3f;
                }
                else
                {
                    this.velocity.X = (float)(((double)this.velocity.X * 50.0 + (double)num6) / 51.0);
                    this.velocity.Y = (float)(((double)this.velocity.Y * 50.0 + (double)num7) / 51.0);
                    if ((double)num4 < 350.0)
                    {
                        this.velocity.X = (float)(((double)this.velocity.X * 10.0 + (double)num6) / 11.0);
                        this.velocity.Y = (float)(((double)this.velocity.Y * 10.0 + (double)num7) / 11.0);
                    }
                    if ((double)num4 < 300.0)
                    {
                        this.velocity.X = (float)(((double)this.velocity.X * 7.0 + (double)num6) / 8.0);
                        this.velocity.Y = (float)(((double)this.velocity.Y * 7.0 + (double)num7) / 8.0);
                    }
                    this.rotation = this.velocity.X * 0.15f;
                }
            }
            else if (this.aiStyle == 64)
            {
                float num1 = this.ai[0];
                float num2 = this.ai[1];
                if (Main.netMode != 1)
                {
                    --this.localAI[0];
                    if ((double)this.ai[3] == 0.0)
                        this.ai[3] = (float)Main.rand.Next(75, 111) * 0.01f;
                    if ((double)this.localAI[0] <= 0.0)
                    {
                        this.TargetClosest(true);
                        this.localAI[0] = (float)Main.rand.Next(60, 180);
                        float num3 = Math.Abs(this.Center.X - Main.player[this.target].Center.X);
                        if ((double)num3 > 700.0 && (double)this.localAI[3] == 0.0)
                        {
                            float num4 = (float)Main.rand.Next(50, 151) * 0.01f;
                            if ((double)num3 > 1000.0)
                                num4 = (float)Main.rand.Next(150, 201) * 0.01f;
                            else if ((double)num3 > 850.0)
                                num4 = (float)Main.rand.Next(100, 151) * 0.01f;
                            int num5 = this.direction * Main.rand.Next(100, 251);
                            int num6 = Main.rand.Next(-50, 51);
                            if ((double)this.position.Y > (double)Main.player[this.target].position.Y - 100.0)
                                num6 -= Main.rand.Next(100, 251);
                            float num7 = num4 / (float)Math.Sqrt((double)(num5 * num5 + num6 * num6));
                            num1 = (float)num5 * num7;
                            num2 = (float)num6 * num7;
                        }
                        else
                        {
                            this.localAI[3] = 1f;
                            float num4 = (float)Main.rand.Next(5, 151) * 0.01f;
                            int num5 = Main.rand.Next(-100, 101);
                            int num6 = Main.rand.Next(-100, 101);
                            float num7 = num4 / (float)Math.Sqrt((double)(num5 * num5 + num6 * num6));
                            num1 = (float)num5 * num7;
                            num2 = (float)num6 * num7;
                        }
                        this.netUpdate = true;
                    }
                }
                this.scale = this.ai[3];
                if ((double)this.localAI[2] > 0.0)
                {
                    int i = (int)this.Center.X / 16;
                    int j = (int)this.Center.Y / 16;
                    if ((double)this.localAI[2] > 3.0)
                    {
                        if (this.type == 358)
                            Lighting.AddLight(i, j, 0.10125f * this.scale, 0.21375f * this.scale, 0.225f * this.scale);
                        else
                            Lighting.AddLight(i, j, 0.1095f * this.scale, 0.15f * this.scale, 0.0615f * this.scale);
                    }
                    --this.localAI[2];
                }
                else if ((double)this.localAI[1] > 0.0)
                {
                    --this.localAI[1];
                }
                else
                {
                    this.localAI[1] = (float)Main.rand.Next(30, 180);
                    if (!Main.dayTime || (double)this.position.Y / 16.0 > Main.worldSurface + 10.0)
                        this.localAI[2] = (float)Main.rand.Next(10, 30);
                }
                int num8 = 80;
                this.velocity.X = (this.velocity.X * (float)(num8 - 1) + num1) / (float)num8;
                this.velocity.Y = (this.velocity.Y * (float)(num8 - 1) + num2) / (float)num8;
                if ((double)this.velocity.Y > 0.0)
                {
                    int num3 = 4;
                    int index1 = (int)this.Center.X / 16;
                    int num4 = (int)this.Center.Y / 16;
                    for (int index2 = num4; index2 < num4 + num3; ++index2)
                    {
                        if (Main.tile[index1, index2] != null && (Main.tile[index1, index2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2].type] || (int)Main.tile[index1, index2].liquid > 0))
                        {
                            num2 *= -1f;
                            if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y *= 0.9f;
                        }
                    }
                }
                if ((double)this.velocity.Y < 0.0)
                {
                    int num3 = 30;
                    bool flag = false;
                    int index1 = (int)this.Center.X / 16;
                    int num4 = (int)this.Center.Y / 16;
                    for (int index2 = num4; index2 < num4 + num3; ++index2)
                    {
                        if (Main.tile[index1, index2] != null && Main.tile[index1, index2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2].type])
                            flag = true;
                    }
                    if (!flag)
                    {
                        num2 *= -1f;
                        if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y *= 0.9f;
                    }
                }
                if (this.collideX)
                {
                    num1 = (double)this.velocity.X >= 0.0 ? -Math.Abs(num1) : Math.Abs(num1);
                    this.velocity.X *= -0.2f;
                }
                if ((double)this.velocity.X < 0.0)
                    this.direction = -1;
                if ((double)this.velocity.X > 0.0)
                    this.direction = 1;
                this.ai[0] = num1;
                this.ai[1] = num2;
            }
            else if (this.aiStyle == 65)
            {
                float num1 = this.ai[0];
                float num2 = this.ai[1];
                if (Main.netMode != 1)
                {
                    if ((double)this.ai[2] == 0.0)
                    {
                        int num3 = 0;
                        int num4 = 4;
                        int num5 = 6;
                        int num6 = 3;
                        int num7 = 7;
                        int num8 = 2;
                        int num9 = 1;
                        int num10 = 5;
                        int num11 = Main.rand.Next(100);
                        this.ai[2] = (float)(1 + (num11 != 0 ? (num11 >= 3 ? (num11 >= 9 ? (num11 >= 19 ? (num11 >= 34 ? (num11 >= 53 ? (num11 >= 75 ? num3 : num4) : num5) : num6) : num7) : num8) : num9) : num10));
                    }
                    if ((double)this.ai[3] == 0.0)
                        this.ai[3] = (float)Main.rand.Next(75, 111) * 0.01f;
                    --this.localAI[0];
                    if ((double)this.localAI[0] <= 0.0)
                    {
                        this.TargetClosest(true);
                        this.localAI[0] = (float)Main.rand.Next(90, 240);
                        float num3 = Math.Abs(this.Center.X - Main.player[this.target].Center.X);
                        if ((double)num3 > 700.0 && (double)this.localAI[3] == 0.0)
                        {
                            float num4 = (float)Main.rand.Next(50, 151) * 0.01f;
                            if ((double)num3 > 1000.0)
                                num4 = (float)Main.rand.Next(150, 201) * 0.01f;
                            else if ((double)num3 > 850.0)
                                num4 = (float)Main.rand.Next(100, 151) * 0.01f;
                            int num5 = this.direction * Main.rand.Next(100, 251);
                            int num6 = Main.rand.Next(-50, 51);
                            if ((double)this.position.Y > (double)Main.player[this.target].position.Y - 100.0)
                                num6 -= Main.rand.Next(100, 251);
                            float num7 = num4 / (float)Math.Sqrt((double)(num5 * num5 + num6 * num6));
                            num1 = (float)num5 * num7;
                            num2 = (float)num6 * num7;
                        }
                        else
                        {
                            this.localAI[3] = 1f;
                            float num4 = (float)Main.rand.Next(26, 301) * 0.01f;
                            int num5 = Main.rand.Next(-100, 101);
                            int num6 = Main.rand.Next(-100, 101);
                            float num7 = num4 / (float)Math.Sqrt((double)(num5 * num5 + num6 * num6));
                            num1 = (float)num5 * num7;
                            num2 = (float)num6 * num7;
                        }
                        this.netUpdate = true;
                    }
                }
                this.scale = this.ai[3];
                int num12 = 60;
                this.velocity.X = (this.velocity.X * (float)(num12 - 1) + num1) / (float)num12;
                this.velocity.Y = (this.velocity.Y * (float)(num12 - 1) + num2) / (float)num12;
                if ((double)this.velocity.Y > 0.0)
                {
                    int num3 = 3;
                    int index1 = (int)this.Center.X / 16;
                    int num4 = (int)this.Center.Y / 16;
                    for (int index2 = num4; index2 < num4 + num3; ++index2)
                    {
                        if (Main.tile[index1, index2] != null && (Main.tile[index1, index2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2].type] || (int)Main.tile[index1, index2].liquid > 0))
                        {
                            num2 *= -1f;
                            if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y *= 0.9f;
                        }
                    }
                }
                if ((double)this.velocity.Y < 0.0)
                {
                    int num3 = 30;
                    bool flag = false;
                    int index1 = (int)this.Center.X / 16;
                    int num4 = (int)this.Center.Y / 16;
                    for (int index2 = num4; index2 < num4 + num3; ++index2)
                    {
                        if (Main.tile[index1, index2] != null && Main.tile[index1, index2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2].type])
                            flag = true;
                    }
                    if (!flag)
                    {
                        num2 *= -1f;
                        if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y *= 0.9f;
                    }
                }
                if (this.collideX)
                {
                    num1 = (double)this.velocity.X >= 0.0 ? -Math.Abs(num1) : Math.Abs(num1);
                    this.velocity.X *= -0.2f;
                }
                if ((double)this.velocity.X < 0.0)
                    this.direction = -1;
                if ((double)this.velocity.X > 0.0)
                    this.direction = 1;
                this.ai[0] = num1;
                this.ai[1] = num2;
                if (this.type != 356)
                    return;
                this.catchItem = (short)(1994.0 + (double)this.ai[2] - 1.0);
            }
            else if (this.aiStyle == 66)
            {
                if (this.type == 484)
                {
                    float num = (float)Main.rand.Next(90, 111) * 0.01f * (float)(((double)Main.essScale + 0.5) / 2.0);
                    Lighting.AddLight((int)(((double)this.position.X + (double)(this.width / 2)) / 16.0), (int)(((double)this.position.Y + (double)(this.height / 2)) / 16.0), 0.3f * num, 0.1f * num, 0.25f * num);
                }
                if (this.type == 357 || this.type == 448 || this.type >= 484 && this.type <= 487)
                {
                    if ((double)this.localAI[2] < 90.0)
                        ++this.localAI[2];
                    else
                        this.friendly = false;
                }
                if ((double)this.velocity.Y == 0.0)
                {
                    if ((double)this.ai[0] == 1.0)
                    {
                        if (this.direction == 0)
                            this.TargetClosest(true);
                        if (this.collideX)
                            this.direction *= -1;
                        float num = 0.2f;
                        if (this.type == 485)
                            num = 0.25f;
                        if (this.type == 486)
                            num = 0.325f;
                        if (this.type == 487)
                            num = 0.4f;
                        this.velocity.X = num * (float)this.direction;
                        if (this.type == 374)
                            this.velocity.X *= 3f;
                    }
                    else
                        this.velocity.X = 0.0f;
                    if (Main.netMode != 1)
                    {
                        --this.localAI[1];
                        if ((double)this.localAI[1] <= 0.0)
                        {
                            if ((double)this.ai[0] == 1.0)
                            {
                                this.ai[0] = 0.0f;
                                this.localAI[1] = (float)Main.rand.Next(300, 900);
                            }
                            else
                            {
                                this.ai[0] = 1f;
                                this.localAI[1] = (float)Main.rand.Next(600, 1800);
                            }
                            this.netUpdate = true;
                        }
                    }
                }
                if (this.type != 374)
                    return;
                this.spriteDirection = this.direction;
                bool flag = false;
                for (int index = 0; index < (int)byte.MaxValue; ++index)
                {
                    Player player = Main.player[index];
                    if (player.active && !player.dead && (double)Vector2.Distance(player.Center, this.Center) <= 160.0)
                    {
                        flag = true;
                        break;
                    }
                }
                int num1 = 90;
                if (flag && (double)this.ai[1] < (double)num1)
                    ++this.ai[1];
                if ((double)this.ai[1] != (double)num1 || Main.netMode == 1)
                    return;
                this.position.Y += 16f;
                this.Transform(375);
                this.netUpdate = true;
            }
            else if (this.aiStyle == 67)
            {
                if (this.type == 359)
                {
                    if ((double)this.ai[3] != 0.0)
                    {
                        this.scale = this.ai[3];
                        int num1 = (int)(12.0 * (double)this.scale);
                        int num2 = (int)(12.0 * (double)this.scale);
                        if (num1 != this.width)
                        {
                            this.position.X = (float)((double)this.position.X + (double)(this.width / 2) - (double)num1 - 2.0);
                            this.width = num1;
                        }
                        if (num2 != this.height)
                        {
                            this.position.Y = this.position.Y + (float)this.height - (float)num2;
                            this.height = num2;
                        }
                    }
                    if ((double)this.ai[3] == 0.0 && Main.netMode != 1)
                    {
                        this.ai[3] = (float)Main.rand.Next(80, 111) * 0.01f;
                        this.netUpdate = true;
                    }
                }
                if (this.type == 360)
                    Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.1f, 0.2f, 0.7f);
                float num3 = 0.3f;
                if (this.type == 360)
                    num3 = 0.6f;
                if ((double)this.ai[0] == 0.0)
                {
                    this.TargetClosest(true);
                    this.directionY = 1;
                    this.ai[0] = 1f;
                    if (this.direction > 0)
                        this.spriteDirection = 1;
                }
                bool flag = false;
                if (Main.netMode != 1)
                {
                    if ((double)this.ai[2] == 0.0 && Main.rand.Next(7200) == 0)
                    {
                        this.ai[2] = 2f;
                        this.netUpdate = true;
                    }
                    if (!this.collideX && !this.collideY)
                    {
                        ++this.localAI[3];
                        if ((double)this.localAI[3] > 5.0)
                        {
                            this.ai[2] = 2f;
                            this.netUpdate = true;
                        }
                    }
                    else
                        this.localAI[3] = 0.0f;
                }
                if ((double)this.ai[2] > 0.0)
                {
                    this.ai[1] = 0.0f;
                    this.ai[0] = 1f;
                    this.directionY = 1;
                    if ((double)this.velocity.Y > (double)num3)
                        this.rotation += (float)this.direction * 0.1f;
                    else
                        this.rotation = 0.0f;
                    this.spriteDirection = this.direction;
                    this.velocity.X = num3 * (float)this.direction;
                    this.noGravity = false;
                    int index1 = (int)((double)this.Center.X + (double)(this.width / 2 * -this.direction)) / 16;
                    int index2 = (int)((double)this.position.Y + (double)this.height + 8.0) / 16;
                    if (Main.tile[index1, index2] != null && !Main.tile[index1, index2].topSlope() && this.collideY)
                        --this.ai[2];
                    int index3 = (int)((double)this.position.Y + (double)this.height - 4.0) / 16;
                    int index4 = (int)((double)this.Center.X + (double)(this.width / 2 * this.direction)) / 16;
                    if (Main.tile[index4, index3] != null && Main.tile[index4, index3].bottomSlope())
                        this.direction *= -1;
                    if (this.collideX && (double)this.velocity.Y == 0.0)
                    {
                        flag = true;
                        this.ai[2] = 0.0f;
                        this.directionY = -1;
                        this.ai[1] = 1f;
                    }
                    if ((double)this.velocity.Y == 0.0)
                    {
                        if ((double)this.localAI[1] == (double)this.position.X)
                        {
                            ++this.localAI[2];
                            if ((double)this.localAI[2] > 10.0)
                            {
                                this.direction = 1;
                                this.velocity.X = (float)this.direction * num3;
                                this.localAI[2] = 0.0f;
                            }
                        }
                        else
                        {
                            this.localAI[2] = 0.0f;
                            this.localAI[1] = this.position.X;
                        }
                    }
                }
                if ((double)this.ai[2] != 0.0)
                    return;
                this.noGravity = true;
                if ((double)this.ai[1] == 0.0)
                {
                    if (this.collideY)
                        this.ai[0] = 2f;
                    if (!this.collideY && (double)this.ai[0] == 2.0)
                    {
                        this.direction = -this.direction;
                        this.ai[1] = 1f;
                        this.ai[0] = 1f;
                    }
                    if (this.collideX)
                    {
                        this.directionY = -this.directionY;
                        this.ai[1] = 1f;
                    }
                }
                else
                {
                    if (this.collideX)
                        this.ai[0] = 2f;
                    if (!this.collideX && (double)this.ai[0] == 2.0)
                    {
                        this.directionY = -this.directionY;
                        this.ai[1] = 0.0f;
                        this.ai[0] = 1f;
                    }
                    if (this.collideY)
                    {
                        this.direction = -this.direction;
                        this.ai[1] = 0.0f;
                    }
                }
                if (!flag)
                {
                    float num1 = this.rotation;
                    if (this.directionY < 0)
                    {
                        if (this.direction < 0)
                        {
                            if (this.collideX)
                            {
                                this.rotation = 1.57f;
                                this.spriteDirection = -1;
                            }
                            else if (this.collideY)
                            {
                                this.rotation = 3.14f;
                                this.spriteDirection = 1;
                            }
                        }
                        else if (this.collideY)
                        {
                            this.rotation = 3.14f;
                            this.spriteDirection = -1;
                        }
                        else if (this.collideX)
                        {
                            this.rotation = 4.71f;
                            this.spriteDirection = 1;
                        }
                    }
                    else if (this.direction < 0)
                    {
                        if (this.collideY)
                        {
                            this.rotation = 0.0f;
                            this.spriteDirection = -1;
                        }
                        else if (this.collideX)
                        {
                            this.rotation = 1.57f;
                            this.spriteDirection = 1;
                        }
                    }
                    else if (this.collideX)
                    {
                        this.rotation = 4.71f;
                        this.spriteDirection = -1;
                    }
                    else if (this.collideY)
                    {
                        this.rotation = 0.0f;
                        this.spriteDirection = 1;
                    }
                    float num2 = this.rotation;
                    this.rotation = num1;
                    if ((double)this.rotation > 6.28)
                        this.rotation -= 6.28f;
                    if ((double)this.rotation < 0.0)
                        this.rotation += 6.28f;
                    float num4 = Math.Abs(this.rotation - num2);
                    float num5 = 0.1f;
                    if ((double)this.rotation > (double)num2)
                    {
                        if ((double)num4 > 3.14)
                        {
                            this.rotation += num5;
                        }
                        else
                        {
                            this.rotation -= num5;
                            if ((double)this.rotation < (double)num2)
                                this.rotation = num2;
                        }
                    }
                    if ((double)this.rotation < (double)num2)
                    {
                        if ((double)num4 > 3.14)
                        {
                            this.rotation -= num5;
                        }
                        else
                        {
                            this.rotation += num5;
                            if ((double)this.rotation > (double)num2)
                                this.rotation = num2;
                        }
                    }
                }
                this.velocity.X = num3 * (float)this.direction;
                this.velocity.Y = num3 * (float)this.directionY;
            }
            else if (this.aiStyle == 68)
            {
                this.noGravity = true;
                if ((double)this.ai[0] == 0.0)
                {
                    this.noGravity = false;
                    int num1 = this.direction;
                    int num2 = this.target;
                    this.TargetClosest(true);
                    if (num2 >= 0 && num1 != 0)
                        this.direction = num1;
                    if (this.wet)
                    {
                        this.velocity.X = (float)(((double)this.velocity.X * 19.0 + 2.0 * (double)this.direction) / 20.0);
                        int i = (int)((double)this.Center.X + (double)((this.width / 2 + 8) * this.direction)) / 16;
                        int j1 = (int)((double)this.Center.Y / 16.0);
                        int j2 = (int)((double)this.position.Y / 16.0);
                        int j3 = (int)(((double)this.position.Y + (double)this.height) / 16.0);
                        if (Main.tile[i, j1] == null)
                            Main.tile[i, j1] = new Tile();
                        if (Main.tile[i, j3] == null)
                            Main.tile[i, j3] = new Tile();
                        if (WorldGen.SolidTile(i, j1) || WorldGen.SolidTile(i, j2) || (WorldGen.SolidTile(i, j3) || (int)Main.tile[i, j3].liquid == 0))
                            this.direction *= -1;
                        this.spriteDirection = this.direction;
                        if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y *= 0.5f;
                        this.noGravity = true;
                        int index1 = (int)((double)this.Center.X / 16.0);
                        int index2 = (int)((double)this.Center.Y / 16.0);
                        float num3 = this.position.Y + (float)this.height;
                        if (Main.tile[index1, index2 - 1] == null)
                            Main.tile[index1, index2 - 1] = new Tile();
                        if (Main.tile[index1, index2] == null)
                            Main.tile[index1, index2] = new Tile();
                        if (Main.tile[index1, index2 + 1] == null)
                            Main.tile[index1, index2 + 1] = new Tile();
                        if ((int)Main.tile[index1, index2 - 1].liquid > 0)
                            num3 = (float)(index2 * 16) - (float)((int)Main.tile[index1, index2 - 1].liquid / 16);
                        else if ((int)Main.tile[index1, index2].liquid > 0)
                            num3 = (float)((index2 + 1) * 16) - (float)((int)Main.tile[index1, index2].liquid / 16);
                        else if ((int)Main.tile[index1, index2 + 1].liquid > 0)
                            num3 = (float)((index2 + 2) * 16) - (float)((int)Main.tile[index1, index2 + 1].liquid / 16);
                        float num4 = num3 - 6f;
                        if ((double)this.Center.Y > (double)num4)
                        {
                            this.velocity.Y -= 0.1f;
                            if ((double)this.velocity.Y < -8.0)
                                this.velocity.Y = -8f;
                            if ((double)this.Center.Y + (double)this.velocity.Y < (double)num4)
                                this.velocity.Y = num4 - this.Center.Y;
                        }
                        else
                            this.velocity.Y = num4 - this.Center.Y;
                    }
                    if (Main.netMode == 1)
                        return;
                    if (!this.wet)
                    {
                        this.ai[0] = 1f;
                        this.netUpdate = true;
                        this.direction = -this.direction;
                    }
                    else
                    {
                        if (!new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200).Intersects(new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height)) && this.life >= this.lifeMax)
                            return;
                        this.ai[0] = 1f;
                        this.velocity.Y -= 6f;
                        this.netUpdate = true;
                        this.direction = -this.direction;
                    }
                }
                else
                {
                    if (Main.player[this.target].dead)
                        return;
                    bool flag1 = false;
                    ++this.ai[1];
                    if ((double)this.ai[1] >= 300.0)
                        flag1 = true;
                    if (flag1)
                    {
                        if ((double)this.velocity.Y == 0.0 || this.collideY || this.wet)
                        {
                            this.velocity.X = 0.0f;
                            this.velocity.Y = 0.0f;
                            this.ai[0] = 0.0f;
                            this.ai[1] = 0.0f;
                            if (Main.netMode == 1)
                                return;
                            if ((this.type == 363 || this.type == 365) && !this.wet)
                            {
                                int num = this.direction;
                                this.Transform(this.type - 1);
                                this.TargetClosest(true);
                                this.direction = num;
                                this.ai[0] = 0.0f;
                                this.ai[1] = (float)(200 + Main.rand.Next(200));
                            }
                            this.netUpdate = true;
                        }
                        else
                        {
                            this.velocity.X *= 0.98f;
                            this.velocity.Y += 0.1f;
                            if ((double)this.velocity.Y <= 2.0)
                                return;
                            this.velocity.Y = 2f;
                        }
                    }
                    else
                    {
                        if (this.collideX)
                        {
                            this.direction *= -1;
                            this.velocity.X = this.oldVelocity.X * -0.5f;
                            if (this.direction == -1 && (double)this.velocity.X > 0.0 && (double)this.velocity.X < 2.0)
                                this.velocity.X = 2f;
                            if (this.direction == 1 && (double)this.velocity.X < 0.0 && (double)this.velocity.X > -2.0)
                                this.velocity.X = -2f;
                        }
                        if (this.collideY)
                        {
                            this.velocity.Y = this.oldVelocity.Y * -0.5f;
                            if ((double)this.velocity.Y > 0.0 && (double)this.velocity.Y < 1.0)
                                this.velocity.Y = 1f;
                            if ((double)this.velocity.Y < 0.0 && (double)this.velocity.Y > -1.0)
                                this.velocity.Y = -1f;
                        }
                        if (this.direction == -1 && (double)this.velocity.X > -3.0)
                        {
                            this.velocity.X -= 0.1f;
                            if ((double)this.velocity.X > 3.0)
                                this.velocity.X -= 0.1f;
                            else if ((double)this.velocity.X > 0.0)
                                this.velocity.X -= 0.05f;
                            if ((double)this.velocity.X < -3.0)
                                this.velocity.X = -3f;
                        }
                        else if (this.direction == 1 && (double)this.velocity.X < 3.0)
                        {
                            this.velocity.X += 0.1f;
                            if ((double)this.velocity.X < -3.0)
                                this.velocity.X += 0.1f;
                            else if ((double)this.velocity.X < 0.0)
                                this.velocity.X += 0.05f;
                            if ((double)this.velocity.X > 3.0)
                                this.velocity.X = 3f;
                        }
                        int index1 = (int)(((double)this.position.X + (double)(this.width / 2)) / 16.0) + this.direction;
                        int num1 = (int)(((double)this.position.Y + (double)this.height) / 16.0);
                        bool flag2 = true;
                        int num2 = 15;
                        bool flag3 = false;
                        for (int index2 = num1; index2 < num1 + num2; ++index2)
                        {
                            if (Main.tile[index1, index2] == null)
                                Main.tile[index1, index2] = new Tile();
                            if (Main.tile[index1, index2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2].type] || (int)Main.tile[index1, index2].liquid > 0)
                            {
                                if (index2 < num1 + 5)
                                    flag3 = true;
                                flag2 = false;
                                break;
                            }
                        }
                        if (flag2)
                            this.velocity.Y += 0.1f;
                        else
                            this.velocity.Y -= 0.1f;
                        if (flag3)
                            this.velocity.Y -= 0.2f;
                        if ((double)this.velocity.Y > 3.0)
                            this.velocity.Y = 3f;
                        if ((double)this.velocity.Y >= -4.0)
                            return;
                        this.velocity.Y = -4f;
                    }
                }
            }
            else if (this.aiStyle == 69)
            {
                bool expertMode = Main.expertMode;
                float num1 = expertMode ? 0.6f * Main.damageMultiplier : 1f;
                bool flag1 = (double)this.life <= (double)this.lifeMax * 0.5;
                bool flag2 = expertMode && (double)this.life <= (double)this.lifeMax * 0.15;
                bool flag3 = (double)this.ai[0] > 4.0;
                bool flag4 = (double)this.ai[0] > 9.0;
                bool flag5 = (double)this.ai[3] < 10.0;
                if (flag4)
                {
                    this.damage = (int)((double)this.defDamage * 1.10000002384186 * (double)num1);
                    this.defense = 0;
                }
                else if (flag3)
                {
                    this.damage = (int)((double)this.defDamage * 1.20000004768372 * (double)num1);
                    this.defense = (int)((double)this.defDefense * 0.800000011920929);
                }
                else
                {
                    this.damage = this.defDamage;
                    this.defense = this.defDefense;
                }
                int num2 = expertMode ? 40 : 60;
                float moveSpeed = expertMode ? 0.55f : 0.45f;
                float num3 = expertMode ? 8.5f : 7.5f;
                if (flag4)
                {
                    moveSpeed = 0.7f;
                    num3 = 12f;
                    num2 = 30;
                }
                else if (flag3 && flag5)
                {
                    moveSpeed = expertMode ? 0.6f : 0.5f;
                    num3 = expertMode ? 10f : 8f;
                    num2 = expertMode ? 40 : 20;
                }
                else if (flag5 && !flag3 && !flag4)
                    num2 = 30;
                int num4 = expertMode ? 28 : 30;
                float num5 = expertMode ? 17f : 16f;
                if (flag4)
                {
                    num4 = 25;
                    num5 = 27f;
                }
                else if (flag5 && flag3)
                {
                    num4 = expertMode ? 27 : 30;
                    if (expertMode)
                        num5 = 21f;
                }
                int num6 = 80;
                int num7 = 4;
                float num8 = 0.3f;
                float num9 = 5f;
                int num10 = 90;
                int num11 = 180;
                int num12 = 180;
                int num13 = 30;
                int num14 = 120;
                int num15 = 4;
                float num16 = 6f;
                float num17 = 20f;
                float num18 = 6.283185f / (float)(num14 / 2);
                int num19 = 75;
                Vector2 vector2_1 = this.Center;
                Player player = Main.player[this.target];
                if (this.target < 0 || this.target == (int)byte.MaxValue || (player.dead || !player.active))
                {
                    this.TargetClosest(true);
                    player = Main.player[this.target];
                    this.netUpdate = true;
                }
                if (player.dead || (double)Vector2.Distance(player.Center, vector2_1) > 2400.0)
                {
                    this.velocity.Y -= 0.4f;
                    if (this.timeLeft > 10)
                        this.timeLeft = 10;
                    this.ai[0] = (double)this.ai[0] <= 4.0 ? 0.0f : 5f;
                    this.ai[2] = 0.0f;
                }
                if ((double)player.position.Y < 800.0 || (double)player.position.Y > Main.worldSurface * 16.0 || (double)player.position.X > 6400.0 && (double)player.position.X < (double)(Main.maxTilesX * 16 - 6400))
                {
                    num2 = 20;
                    this.damage = this.defDamage * 2;
                    this.defense = this.defDefense * 2;
                    this.ai[3] = 0.0f;
                    num5 += 6f;
                }
                if ((double)this.localAI[0] == 0.0)
                {
                    this.localAI[0] = 1f;
                    this.alpha = (int)byte.MaxValue;
                    this.rotation = 0.0f;
                    if (Main.netMode != 1)
                    {
                        this.ai[0] = -1f;
                        this.netUpdate = true;
                    }
                }
                float num20 = (float)Math.Atan2((double)player.Center.Y - (double)vector2_1.Y, (double)player.Center.X - (double)vector2_1.X);
                if (this.spriteDirection == 1)
                    num20 += 3.141593f;
                if ((double)num20 < 0.0)
                    num20 += 6.283185f;
                if ((double)num20 > 6.28318548202515)
                    num20 -= 6.283185f;
                if ((double)this.ai[0] == -1.0)
                    num20 = 0.0f;
                if ((double)this.ai[0] == 3.0)
                    num20 = 0.0f;
                if ((double)this.ai[0] == 4.0)
                    num20 = 0.0f;
                if ((double)this.ai[0] == 8.0)
                    num20 = 0.0f;
                float num21 = 0.04f;
                if ((double)this.ai[0] == 1.0 || (double)this.ai[0] == 6.0)
                    num21 = 0.0f;
                if ((double)this.ai[0] == 7.0)
                    num21 = 0.0f;
                if ((double)this.ai[0] == 3.0)
                    num21 = 0.01f;
                if ((double)this.ai[0] == 4.0)
                    num21 = 0.01f;
                if ((double)this.ai[0] == 8.0)
                    num21 = 0.01f;
                if ((double)this.rotation < (double)num20)
                {
                    if ((double)num20 - (double)this.rotation > Math.PI)
                        this.rotation -= num21;
                    else
                        this.rotation += num21;
                }
                if ((double)this.rotation > (double)num20)
                {
                    if ((double)this.rotation - (double)num20 > Math.PI)
                        this.rotation += num21;
                    else
                        this.rotation -= num21;
                }
                if ((double)this.rotation > (double)num20 - (double)num21 && (double)this.rotation < (double)num20 + (double)num21)
                    this.rotation = num20;
                if ((double)this.rotation < 0.0)
                    this.rotation += 6.283185f;
                if ((double)this.rotation > 6.28318548202515)
                    this.rotation -= 6.283185f;
                if ((double)this.rotation > (double)num20 - (double)num21 && (double)this.rotation < (double)num20 + (double)num21)
                    this.rotation = num20;
                if ((double)this.ai[0] != -1.0 && (double)this.ai[0] < 9.0)
                {
                    if (Collision.SolidCollision(this.position, this.width, this.height))
                        this.alpha += 15;
                    else
                        this.alpha -= 15;
                    if (this.alpha < 0)
                        this.alpha = 0;
                    if (this.alpha > 150)
                        this.alpha = 150;
                }
                if ((double)this.ai[0] == -1.0)
                {
                    NPC npc = this;
                    Vector2 vector2_2 = npc.velocity * 0.98f;
                    npc.velocity = vector2_2;
                    int num22 = Math.Sign(player.Center.X - vector2_1.X);
                    if (num22 != 0)
                    {
                        this.direction = num22;
                        this.spriteDirection = -this.direction;
                    }
                    if ((double)this.ai[2] > 20.0)
                    {
                        this.velocity.Y = -2f;
                        this.alpha -= 5;
                        if (Collision.SolidCollision(this.position, this.width, this.height))
                            this.alpha += 15;
                        if (this.alpha < 0)
                            this.alpha = 0;
                        if (this.alpha > 150)
                            this.alpha = 150;
                    }
                    if ((double)this.ai[2] == (double)(num10 - 30))
                    {
                        int num23 = 36;
                        for (int index1 = 0; index1 < num23; ++index1)
                        {
                            Vector2 vector2_3 = Utils.RotatedBy(Vector2.Normalize(this.velocity) * new Vector2((float)this.width / 2f, (float)this.height) * 0.75f * 0.5f, (double)(index1 - (num23 / 2 - 1)) * 6.28318548202515 / (double)num23, new Vector2()) + this.Center;
                            Vector2 vector2_4 = vector2_3 - this.Center;
                            int index2 = Dust.NewDust(vector2_3 + vector2_4, 0, 0, 172, vector2_4.X * 2f, vector2_4.Y * 2f, 100, new Color(), 1.4f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].noLight = true;
                            Main.dust[index2].velocity = Vector2.Normalize(vector2_4) * 3f;
                        }
                        Main.PlaySound(29, (int)vector2_1.X, (int)vector2_1.Y, 20);
                    }
                    ++this.ai[2];
                    if ((double)this.ai[2] < (double)num19)
                        return;
                    this.ai[0] = 0.0f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 0.0 && !player.dead)
                {
                    if ((double)this.ai[1] == 0.0)
                        this.ai[1] = (float)(300 * Math.Sign((vector2_1 - player.Center).X));
                    Vector2 vector2_2 = Vector2.Normalize(player.Center + new Vector2(this.ai[1], -200f) - vector2_1 - this.velocity) * num3;
                    if ((double)this.velocity.X < (double)vector2_2.X)
                    {
                        this.velocity.X += moveSpeed;
                        if ((double)this.velocity.X < 0.0 && (double)vector2_2.X > 0.0)
                            this.velocity.X += moveSpeed;
                    }
                    else if ((double)this.velocity.X > (double)vector2_2.X)
                    {
                        this.velocity.X -= moveSpeed;
                        if ((double)this.velocity.X > 0.0 && (double)vector2_2.X < 0.0)
                            this.velocity.X -= moveSpeed;
                    }
                    if ((double)this.velocity.Y < (double)vector2_2.Y)
                    {
                        this.velocity.Y += moveSpeed;
                        if ((double)this.velocity.Y < 0.0 && (double)vector2_2.Y > 0.0)
                            this.velocity.Y += moveSpeed;
                    }
                    else if ((double)this.velocity.Y > (double)vector2_2.Y)
                    {
                        this.velocity.Y -= moveSpeed;
                        if ((double)this.velocity.Y > 0.0 && (double)vector2_2.Y < 0.0)
                            this.velocity.Y -= moveSpeed;
                    }
                    int num22 = Math.Sign(player.Center.X - vector2_1.X);
                    if (num22 != 0)
                    {
                        if ((double)this.ai[2] == 0.0 && num22 != this.direction)
                            this.rotation += 3.141593f;
                        this.direction = num22;
                        if (this.spriteDirection != -this.direction)
                            this.rotation += 3.141593f;
                        this.spriteDirection = -this.direction;
                    }
                    ++this.ai[2];
                    if ((double)this.ai[2] < (double)num2)
                        return;
                    int num23 = 0;
                    switch ((int)this.ai[3])
                    {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                            num23 = 1;
                            break;
                        case 10:
                            this.ai[3] = 1f;
                            num23 = 2;
                            break;
                        case 11:
                            this.ai[3] = 0.0f;
                            num23 = 3;
                            break;
                    }
                    if (flag1)
                        num23 = 4;
                    if (num23 == 1)
                    {
                        this.ai[0] = 1f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.velocity = Vector2.Normalize(player.Center - vector2_1) * num5;
                        this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                        if (num22 != 0)
                        {
                            this.direction = num22;
                            if (this.spriteDirection == 1)
                                this.rotation += 3.141593f;
                            this.spriteDirection = -this.direction;
                        }
                    }
                    else if (num23 == 2)
                    {
                        this.ai[0] = 2f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                    }
                    else if (num23 == 3)
                    {
                        this.ai[0] = 3f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                    }
                    else if (num23 == 4)
                    {
                        this.ai[0] = 4f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                    }
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    int num22 = 7;
                    for (int index1 = 0; index1 < num22; ++index1)
                    {
                        Vector2 vector2_2 = Utils.RotatedBy(Vector2.Normalize(this.velocity) * new Vector2((float)(this.width + 50) / 2f, (float)this.height) * 0.75f, (double)(index1 - (num22 / 2 - 1)) * Math.PI / (double)num22, new Vector2()) + vector2_1;
                        Vector2 vector2_3 = Utils.ToRotationVector2((float)(Main.rand.NextDouble() * 3.14159274101257) - 1.570796f) * (float)Main.rand.Next(3, 8);
                        int index2 = Dust.NewDust(vector2_2 + vector2_3, 0, 0, 172, vector2_3.X * 2f, vector2_3.Y * 2f, 100, new Color(), 1.4f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].noLight = true;
                        Main.dust[index2].velocity /= 4f;
                        Main.dust[index2].velocity -= this.velocity;
                    }
                    ++this.ai[2];
                    if ((double)this.ai[2] < (double)num4)
                        return;
                    this.ai[0] = 0.0f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] += 2f;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    if ((double)this.ai[1] == 0.0)
                        this.ai[1] = (float)(300 * Math.Sign((vector2_1 - player.Center).X));
                    Vector2 vector2_2 = Vector2.Normalize(player.Center + new Vector2(this.ai[1], -200f) - vector2_1 - this.velocity) * num9;
                    if ((double)this.velocity.X < (double)vector2_2.X)
                    {
                        this.velocity.X += num8;
                        if ((double)this.velocity.X < 0.0 && (double)vector2_2.X > 0.0)
                            this.velocity.X += num8;
                    }
                    else if ((double)this.velocity.X > (double)vector2_2.X)
                    {
                        this.velocity.X -= num8;
                        if ((double)this.velocity.X > 0.0 && (double)vector2_2.X < 0.0)
                            this.velocity.X -= num8;
                    }
                    if ((double)this.velocity.Y < (double)vector2_2.Y)
                    {
                        this.velocity.Y += num8;
                        if ((double)this.velocity.Y < 0.0 && (double)vector2_2.Y > 0.0)
                            this.velocity.Y += num8;
                    }
                    else if ((double)this.velocity.Y > (double)vector2_2.Y)
                    {
                        this.velocity.Y -= num8;
                        if ((double)this.velocity.Y > 0.0 && (double)vector2_2.Y < 0.0)
                            this.velocity.Y -= num8;
                    }
                    if ((double)this.ai[2] == 0.0)
                        Main.PlaySound(29, (int)vector2_1.X, (int)vector2_1.Y, 20);
                    if ((double)this.ai[2] % (double)num7 == 0.0)
                    {
                        Main.PlaySound(4, (int)this.Center.X, (int)this.Center.Y, 19);
                        if (Main.netMode != 1)
                        {
                            Vector2 vector2_3 = Vector2.Normalize(player.Center - vector2_1) * (float)(this.width + 20) / 2f + vector2_1;
                            NPC.NewNPC((int)vector2_3.X, (int)vector2_3.Y + 45, 371, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        }
                    }
                    int num22 = Math.Sign(player.Center.X - vector2_1.X);
                    if (num22 != 0)
                    {
                        this.direction = num22;
                        if (this.spriteDirection != -this.direction)
                            this.rotation += 3.141593f;
                        this.spriteDirection = -this.direction;
                    }
                    ++this.ai[2];
                    if ((double)this.ai[2] < (double)num6)
                        return;
                    this.ai[0] = 0.0f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 3.0)
                {
                    NPC npc = this;
                    Vector2 vector2_2 = npc.velocity * 0.98f;
                    npc.velocity = vector2_2;
                    this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0.0f, 0.02f);
                    if ((double)this.ai[2] == (double)(num10 - 30))
                        Main.PlaySound(29, (int)vector2_1.X, (int)vector2_1.Y, 9);
                    if (Main.netMode != 1 && (double)this.ai[2] == (double)(num10 - 30))
                    {
                        Vector2 vector2_3 = Utils.ToRotationVector2(this.rotation) * Vector2.UnitX * (float)this.direction * (float)(this.width + 20) / 2f + vector2_1;
                        Projectile.NewProjectile(vector2_3.X, vector2_3.Y, (float)(this.direction * 2), 8f, 385, 0, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        Projectile.NewProjectile(vector2_3.X, vector2_3.Y, (float)(-this.direction * 2), 8f, 385, 0, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                    ++this.ai[2];
                    if ((double)this.ai[2] < (double)num10)
                        return;
                    this.ai[0] = 0.0f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 4.0)
                {
                    NPC npc = this;
                    Vector2 vector2_2 = npc.velocity * 0.98f;
                    npc.velocity = vector2_2;
                    this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0.0f, 0.02f);
                    if ((double)this.ai[2] == (double)(num11 - 60))
                        Main.PlaySound(29, (int)vector2_1.X, (int)vector2_1.Y, 20);
                    ++this.ai[2];
                    if ((double)this.ai[2] < (double)num11)
                        return;
                    this.ai[0] = 5f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 5.0 && !player.dead)
                {
                    if ((double)this.ai[1] == 0.0)
                        this.ai[1] = (float)(300 * Math.Sign((vector2_1 - player.Center).X));
                    Vector2 vector2_2 = Vector2.Normalize(player.Center + new Vector2(this.ai[1], -200f) - vector2_1 - this.velocity) * num3;
                    if ((double)this.velocity.X < (double)vector2_2.X)
                    {
                        this.velocity.X += moveSpeed;
                        if ((double)this.velocity.X < 0.0 && (double)vector2_2.X > 0.0)
                            this.velocity.X += moveSpeed;
                    }
                    else if ((double)this.velocity.X > (double)vector2_2.X)
                    {
                        this.velocity.X -= moveSpeed;
                        if ((double)this.velocity.X > 0.0 && (double)vector2_2.X < 0.0)
                            this.velocity.X -= moveSpeed;
                    }
                    if ((double)this.velocity.Y < (double)vector2_2.Y)
                    {
                        this.velocity.Y += moveSpeed;
                        if ((double)this.velocity.Y < 0.0 && (double)vector2_2.Y > 0.0)
                            this.velocity.Y += moveSpeed;
                    }
                    else if ((double)this.velocity.Y > (double)vector2_2.Y)
                    {
                        this.velocity.Y -= moveSpeed;
                        if ((double)this.velocity.Y > 0.0 && (double)vector2_2.Y < 0.0)
                            this.velocity.Y -= moveSpeed;
                    }
                    int num22 = Math.Sign(player.Center.X - vector2_1.X);
                    if (num22 != 0)
                    {
                        if ((double)this.ai[2] == 0.0 && num22 != this.direction)
                            this.rotation += 3.141593f;
                        this.direction = num22;
                        if (this.spriteDirection != -this.direction)
                            this.rotation += 3.141593f;
                        this.spriteDirection = -this.direction;
                    }
                    ++this.ai[2];
                    if ((double)this.ai[2] < (double)num2)
                        return;
                    int num23 = 0;
                    switch ((int)this.ai[3])
                    {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            num23 = 1;
                            break;
                        case 6:
                            this.ai[3] = 1f;
                            num23 = 2;
                            break;
                        case 7:
                            this.ai[3] = 0.0f;
                            num23 = 3;
                            break;
                    }
                    if (flag2)
                        num23 = 4;
                    if (num23 == 1)
                    {
                        this.ai[0] = 6f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.velocity = Vector2.Normalize(player.Center - vector2_1) * num5;
                        this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                        if (num22 != 0)
                        {
                            this.direction = num22;
                            if (this.spriteDirection == 1)
                                this.rotation += 3.141593f;
                            this.spriteDirection = -this.direction;
                        }
                    }
                    else if (num23 == 2)
                    {
                        this.velocity = Vector2.Normalize(player.Center - vector2_1) * num17;
                        this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                        if (num22 != 0)
                        {
                            this.direction = num22;
                            if (this.spriteDirection == 1)
                                this.rotation += 3.141593f;
                            this.spriteDirection = -this.direction;
                        }
                        this.ai[0] = 7f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                    }
                    else if (num23 == 3)
                    {
                        this.ai[0] = 8f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                    }
                    else if (num23 == 4)
                    {
                        this.ai[0] = 9f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                    }
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 6.0)
                {
                    int num22 = 7;
                    for (int index1 = 0; index1 < num22; ++index1)
                    {
                        Vector2 vector2_2 = Utils.RotatedBy(Vector2.Normalize(this.velocity) * new Vector2((float)(this.width + 50) / 2f, (float)this.height) * 0.75f, (double)(index1 - (num22 / 2 - 1)) * Math.PI / (double)num22, new Vector2()) + vector2_1;
                        Vector2 vector2_3 = Utils.ToRotationVector2((float)(Main.rand.NextDouble() * 3.14159274101257) - 1.570796f) * (float)Main.rand.Next(3, 8);
                        int index2 = Dust.NewDust(vector2_2 + vector2_3, 0, 0, 172, vector2_3.X * 2f, vector2_3.Y * 2f, 100, new Color(), 1.4f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].noLight = true;
                        Main.dust[index2].velocity /= 4f;
                        Main.dust[index2].velocity -= this.velocity;
                    }
                    ++this.ai[2];
                    if ((double)this.ai[2] < (double)num4)
                        return;
                    this.ai[0] = 5f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] += 2f;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 7.0)
                {
                    if ((double)this.ai[2] == 0.0)
                        Main.PlaySound(29, (int)vector2_1.X, (int)vector2_1.Y, 20);
                    if ((double)this.ai[2] % (double)num15 == 0.0)
                    {
                        Main.PlaySound(4, (int)this.Center.X, (int)this.Center.Y, 19);
                        if (Main.netMode != 1)
                        {
                            Vector2 vector2_2 = Vector2.Normalize(this.velocity) * (float)(this.width + 20) / 2f + vector2_1;
                            int index = NPC.NewNPC((int)vector2_2.X, (int)vector2_2.Y + 45, 371, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            Main.npc[index].target = this.target;
                            Main.npc[index].velocity = Utils.RotatedBy(Vector2.Normalize(this.velocity), 1.57079637050629 * (double)this.direction, new Vector2()) * num16;
                            Main.npc[index].netUpdate = true;
                            Main.npc[index].ai[3] = (float)Main.rand.Next(80, 121) / 100f;
                        }
                    }
                    this.velocity = Utils.RotatedBy(this.velocity, -(double)num18 * (double)this.direction, new Vector2());
                    this.rotation -= num18 * (float)this.direction;
                    ++this.ai[2];
                    if ((double)this.ai[2] < (double)num14)
                        return;
                    this.ai[0] = 5f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 8.0)
                {
                    NPC npc = this;
                    Vector2 vector2_2 = npc.velocity * 0.98f;
                    npc.velocity = vector2_2;
                    this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0.0f, 0.02f);
                    if ((double)this.ai[2] == (double)(num10 - 30))
                        Main.PlaySound(29, (int)vector2_1.X, (int)vector2_1.Y, 20);
                    if (Main.netMode != 1 && (double)this.ai[2] == (double)(num10 - 30))
                        Projectile.NewProjectile(vector2_1.X, vector2_1.Y, 0.0f, 0.0f, 385, 0, 0.0f, Main.myPlayer, 1f, (float)(this.target + 1));
                    ++this.ai[2];
                    if ((double)this.ai[2] < (double)num10)
                        return;
                    this.ai[0] = 5f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 9.0)
                {
                    if ((double)this.ai[2] < (double)(num12 - 90))
                    {
                        if (Collision.SolidCollision(this.position, this.width, this.height))
                            this.alpha += 15;
                        else
                            this.alpha -= 15;
                        if (this.alpha < 0)
                            this.alpha = 0;
                        if (this.alpha > 150)
                            this.alpha = 150;
                    }
                    else if (this.alpha < (int)byte.MaxValue)
                    {
                        this.alpha += 4;
                        if (this.alpha > (int)byte.MaxValue)
                            this.alpha = (int)byte.MaxValue;
                    }
                    NPC npc = this;
                    Vector2 vector2_2 = npc.velocity * 0.98f;
                    npc.velocity = vector2_2;
                    this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0.0f, 0.02f);
                    if ((double)this.ai[2] == (double)(num12 - 60))
                        Main.PlaySound(29, (int)vector2_1.X, (int)vector2_1.Y, 20);
                    ++this.ai[2];
                    if ((double)this.ai[2] < (double)num12)
                        return;
                    this.ai[0] = 10f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 10.0 && !player.dead)
                {
                    this.dontTakeDamage = false;
                    this.chaseable = false;
                    if (this.alpha < (int)byte.MaxValue)
                    {
                        this.alpha += 25;
                        if (this.alpha > (int)byte.MaxValue)
                            this.alpha = (int)byte.MaxValue;
                    }
                    if ((double)this.ai[1] == 0.0)
                        this.ai[1] = (float)(360 * Math.Sign((vector2_1 - player.Center).X));
                    this.SimpleFlyMovement(Vector2.Normalize(player.Center + new Vector2(this.ai[1], -200f) - vector2_1 - this.velocity) * num3, moveSpeed);
                    int num22 = Math.Sign(player.Center.X - vector2_1.X);
                    if (num22 != 0)
                    {
                        if ((double)this.ai[2] == 0.0 && num22 != this.direction)
                        {
                            this.rotation += 3.141593f;
                            for (int index = 0; index < this.oldPos.Length; ++index)
                                this.oldPos[index] = Vector2.Zero;
                        }
                        this.direction = num22;
                        if (this.spriteDirection != -this.direction)
                            this.rotation += 3.141593f;
                        this.spriteDirection = -this.direction;
                    }
                    ++this.ai[2];
                    if ((double)this.ai[2] < (double)num2)
                        return;
                    int num23 = 0;
                    switch ((int)this.ai[3])
                    {
                        case 0:
                        case 2:
                        case 3:
                        case 5:
                        case 6:
                        case 7:
                            num23 = 1;
                            break;
                        case 1:
                        case 4:
                        case 8:
                            num23 = 2;
                            break;
                    }
                    if (num23 == 1)
                    {
                        this.ai[0] = 11f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.velocity = Vector2.Normalize(player.Center - vector2_1) * num5;
                        this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                        if (num22 != 0)
                        {
                            this.direction = num22;
                            if (this.spriteDirection == 1)
                                this.rotation += 3.141593f;
                            this.spriteDirection = -this.direction;
                        }
                    }
                    else if (num23 == 2)
                    {
                        this.ai[0] = 12f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                    }
                    else if (num23 == 3)
                    {
                        this.ai[0] = 13f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                    }
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 11.0)
                {
                    this.dontTakeDamage = false;
                    this.chaseable = true;
                    this.alpha -= 25;
                    if (this.alpha < 0)
                        this.alpha = 0;
                    int num22 = 7;
                    for (int index1 = 0; index1 < num22; ++index1)
                    {
                        Vector2 vector2_2 = Utils.RotatedBy(Vector2.Normalize(this.velocity) * new Vector2((float)(this.width + 50) / 2f, (float)this.height) * 0.75f, (double)(index1 - (num22 / 2 - 1)) * Math.PI / (double)num22, new Vector2()) + vector2_1;
                        Vector2 vector2_3 = Utils.ToRotationVector2((float)(Main.rand.NextDouble() * 3.14159274101257) - 1.570796f) * (float)Main.rand.Next(3, 8);
                        int index2 = Dust.NewDust(vector2_2 + vector2_3, 0, 0, 172, vector2_3.X * 2f, vector2_3.Y * 2f, 100, new Color(), 1.4f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].noLight = true;
                        Main.dust[index2].velocity /= 4f;
                        Main.dust[index2].velocity -= this.velocity;
                    }
                    ++this.ai[2];
                    if ((double)this.ai[2] < (double)num4)
                        return;
                    this.ai[0] = 10f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    ++this.ai[3];
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 12.0)
                {
                    this.dontTakeDamage = true;
                    this.chaseable = false;
                    if (this.alpha < (int)byte.MaxValue)
                    {
                        this.alpha += 17;
                        if (this.alpha > (int)byte.MaxValue)
                            this.alpha = (int)byte.MaxValue;
                    }
                    NPC npc = this;
                    Vector2 vector2_2 = npc.velocity * 0.98f;
                    npc.velocity = vector2_2;
                    this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0.0f, 0.02f);
                    if ((double)this.ai[2] == (double)(num13 / 2))
                        Main.PlaySound(29, (int)vector2_1.X, (int)vector2_1.Y, 20);
                    if (Main.netMode != 1 && (double)this.ai[2] == (double)(num13 / 2))
                    {
                        if ((double)this.ai[1] == 0.0)
                            this.ai[1] = (float)(300 * Math.Sign((vector2_1 - player.Center).X));
                        vector2_1 = this.Center = player.Center + new Vector2(-this.ai[1], -200f);
                        int num22 = Math.Sign(player.Center.X - vector2_1.X);
                        if (num22 != 0)
                        {
                            if ((double)this.ai[2] == 0.0 && num22 != this.direction)
                            {
                                this.rotation += 3.141593f;
                                for (int index = 0; index < this.oldPos.Length; ++index)
                                    this.oldPos[index] = Vector2.Zero;
                            }
                            this.direction = num22;
                            if (this.spriteDirection != -this.direction)
                                this.rotation += 3.141593f;
                            this.spriteDirection = -this.direction;
                        }
                    }
                    ++this.ai[2];
                    if ((double)this.ai[2] < (double)num13)
                        return;
                    this.ai[0] = 10f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    ++this.ai[3];
                    if ((double)this.ai[3] >= 9.0)
                        this.ai[3] = 0.0f;
                    this.netUpdate = true;
                }
                else
                {
                    if ((double)this.ai[0] != 13.0)
                        return;
                    if ((double)this.ai[2] == 0.0)
                        Main.PlaySound(29, (int)vector2_1.X, (int)vector2_1.Y, 20);
                    this.velocity = Utils.RotatedBy(this.velocity, -(double)num18 * (double)this.direction, new Vector2());
                    this.rotation -= num18 * (float)this.direction;
                    ++this.ai[2];
                    if ((double)this.ai[2] < (double)num14)
                        return;
                    this.ai[0] = 10f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    ++this.ai[3];
                    this.netUpdate = true;
                }
            }
            else if (this.aiStyle == 70)
            {
                if (this.target == (int)byte.MaxValue)
                {
                    this.TargetClosest(true);
                    this.ai[3] = (float)Main.rand.Next(80, 121) / 100f;
                    float num = (float)Main.rand.Next(165, 265) / 15f;
                    this.velocity = Vector2.Normalize(Main.player[this.target].Center - this.Center + new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101))) * num;
                    this.netUpdate = true;
                }
                this.velocity = (this.velocity * 40f + Vector2.Normalize(Main.player[this.target].Center - this.Center) * 20f) / 41f;
                this.scale = this.ai[3];
                this.alpha -= 30;
                if (this.alpha < 50)
                    this.alpha = 50;
                this.alpha = 50;
                this.velocity.X = (float)(((double)this.velocity.X * 50.0 + (double)Main.windSpeed * 2.0 + (double)Main.rand.Next(-10, 11) * 0.100000001490116) / 51.0);
                this.velocity.Y = (float)(((double)this.velocity.Y * 50.0 - 0.25 + (double)Main.rand.Next(-10, 11) * 0.200000002980232) / 51.0);
                if ((double)this.velocity.Y > 0.0)
                    this.velocity.Y -= 0.04f;
                if ((double)this.ai[0] == 0.0)
                {
                    int num = 40;
                    Rectangle rect = this.getRect();
                    rect.X -= num + this.width / 2;
                    rect.Y -= num + this.height / 2;
                    rect.Width += num * 2;
                    rect.Height += num * 2;
                    for (int index = 0; index < (int)byte.MaxValue; ++index)
                    {
                        Player player = Main.player[index];
                        if (player.active && !player.dead && rect.Intersects(player.getRect()))
                        {
                            this.ai[0] = 1f;
                            this.ai[1] = 4f;
                            this.netUpdate = true;
                            break;
                        }
                    }
                }
                if ((double)this.ai[0] == 0.0)
                {
                    ++this.ai[1];
                    if ((double)this.ai[1] >= 150.0)
                    {
                        this.ai[0] = 1f;
                        this.ai[1] = 4f;
                    }
                }
                if ((double)this.ai[0] == 1.0)
                {
                    --this.ai[1];
                    if ((double)this.ai[1] <= 0.0)
                    {
                        this.life = 0;
                        this.HitEffect(0, 10.0);
                        this.active = false;
                        return;
                    }
                }
                if (!this.justHit && (double)this.ai[0] != 1.0)
                    return;
                this.dontTakeDamage = true;
                this.position = this.Center;
                this.width = this.height = 100;
                this.position = new Vector2(this.position.X - (float)(this.width / 2), this.position.Y - (float)(this.height / 2));
                if (this.timeLeft <= 3)
                    return;
                this.timeLeft = 3;
            }
            else if (this.aiStyle == 71)
            {
                this.noTileCollide = true;
                int num1 = 90;
                if (this.target < 0 || this.target == (int)byte.MaxValue || Main.player[this.target].dead)
                {
                    this.TargetClosest(false);
                    this.direction = 1;
                    this.netUpdate = true;
                }
                if ((double)this.ai[0] == 0.0)
                {
                    ++this.ai[1];
                    int num2 = this.type;
                    this.noGravity = true;
                    this.dontTakeDamage = true;
                    this.velocity.Y = this.ai[3];
                    if (this.type == 373)
                    {
                        float num3 = 0.1047198f;
                        float num4 = this.ai[2];
                        this.position.X -= (float)(Math.Cos((double)num3 * (double)this.localAI[1]) - 0.5) * num4 * (float)-this.direction;
                        ++this.localAI[1];
                        this.position.X += (float)(Math.Cos((double)num3 * (double)this.localAI[1]) - 0.5) * num4 * (float)-this.direction;
                        if (Math.Abs(Math.Cos((double)num3 * (double)this.localAI[1]) - 0.5) > 0.25)
                            this.spriteDirection = Math.Cos((double)num3 * (double)this.localAI[1]) - 0.5 >= 0.0 ? -1 : 1;
                        this.rotation = (float)((double)this.velocity.Y * (double)this.spriteDirection * 0.100000001490116);
                        if ((double)this.rotation < -0.2)
                            this.rotation = -0.2f;
                        if ((double)this.rotation > 0.2)
                            this.rotation = 0.2f;
                        this.alpha -= 6;
                        if (this.alpha < 0)
                            this.alpha = 0;
                    }
                    if ((double)this.ai[1] < (double)num1)
                        return;
                    this.ai[0] = 1f;
                    this.ai[1] = 0.0f;
                    if (!Collision.SolidCollision(this.position, this.width, this.height))
                        this.ai[1] = 1f;
                    Main.PlaySound(4, (int)this.Center.X, (int)this.Center.Y, 19);
                    this.TargetClosest(true);
                    this.spriteDirection = this.direction;
                    Vector2 vector2 = Main.player[this.target].Center - this.Center;
                    vector2.Normalize();
                    this.velocity = vector2 * 16f;
                    this.rotation = Utils.ToRotation(this.velocity);
                    if (this.direction == -1)
                        this.rotation = this.rotation + 3.141593f;
                    this.netUpdate = true;
                }
                else
                {
                    if ((double)this.ai[0] != 1.0)
                        return;
                    this.noGravity = true;
                    if (!Collision.SolidCollision(this.position, this.width, this.height))
                    {
                        if ((double)this.ai[1] < 1.0)
                            this.ai[1] = 1f;
                    }
                    else
                    {
                        this.alpha -= 15;
                        if (this.alpha < 150)
                            this.alpha = 150;
                    }
                    if ((double)this.ai[1] >= 1.0)
                    {
                        this.alpha -= 60;
                        if (this.alpha < 0)
                            this.alpha = 0;
                        this.dontTakeDamage = false;
                        ++this.ai[1];
                        if (Collision.SolidCollision(this.position, this.width, this.height))
                        {
                            Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, this.soundKilled);
                            this.life = 0;
                            this.HitEffect(0, 10.0);
                            this.active = false;
                            return;
                        }
                    }
                    if ((double)this.ai[1] >= 60.0)
                        this.noGravity = false;
                    this.rotation = Utils.ToRotation(this.velocity);
                    if (this.direction != -1)
                        return;
                    this.rotation = this.rotation + 3.141593f;
                }
            }
            else if (this.aiStyle == 72)
            {
                if (this.type != 384)
                    return;
                int index = (int)this.ai[0];
                if (Main.npc[index].active && Main.npc[index].type == 383)
                {
                    this.velocity = Vector2.Zero;
                    this.position = Main.npc[index].Center;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)(this.height / 2);
                    this.gfxOffY = Main.npc[index].gfxOffY;
                    Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.1f, 0.5f, 0.7f);
                }
                else
                {
                    this.life = 0;
                    this.HitEffect(0, 10.0);
                    this.active = false;
                }
            }
            else if (this.aiStyle == 73)
            {
                this.TargetClosest(false);
                this.spriteDirection = this.direction;
                this.velocity.X *= 0.93f;
                if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                    this.velocity.X = 0.0f;
                if (this.type == 387)
                {
                    float num1 = 120f;
                    float num2 = 60f;
                    if ((double)this.ai[1] < (double)num1)
                    {
                        ++this.ai[1];
                        this.alpha = (double)this.ai[1] <= 60.0 ? (int)byte.MaxValue : (int)((1.0 - ((double)this.ai[1] - (double)num2) / ((double)num1 - (double)num2)) * (double)byte.MaxValue);
                        this.dontTakeDamage = true;
                        this.frameCounter = 0.0;
                        this.frame.Y = 0;
                        float num3 = this.ai[1] / num2;
                        Vector2 spinningpoint = new Vector2(0.0f, -30f);
                        spinningpoint = Utils.RotatedBy(spinningpoint, (double)num3 * 1.5 * 6.28318548202515, new Vector2()) * new Vector2(1f, 0.4f);
                        for (int index1 = 0; index1 < 4; ++index1)
                        {
                            Vector2 vector2 = Vector2.Zero;
                            float num4 = 1f;
                            if (index1 == 0)
                            {
                                vector2 = Vector2.UnitY * -15f;
                                num4 = 0.15f;
                            }
                            if (index1 == 1)
                            {
                                vector2 = Vector2.UnitY * -5f;
                                num4 = 0.3f;
                            }
                            if (index1 == 2)
                            {
                                vector2 = Vector2.UnitY * 5f;
                                num4 = 0.6f;
                            }
                            if (index1 == 3)
                            {
                                vector2 = Vector2.UnitY * 20f;
                                num4 = 0.45f;
                            }
                            int index2 = Dust.NewDust(this.Center, 0, 0, 226, 0.0f, 0.0f, 100, new Color(), 0.5f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].position = this.Center + spinningpoint * num4 + vector2;
                            Main.dust[index2].velocity = Vector2.Zero;
                            spinningpoint *= -1f;
                            int index3 = Dust.NewDust(this.Center, 0, 0, 226, 0.0f, 0.0f, 100, new Color(), 0.5f);
                            Main.dust[index3].noGravity = true;
                            Main.dust[index3].position = this.Center + spinningpoint * num4 + vector2;
                            Main.dust[index3].velocity = Vector2.Zero;
                        }
                        Lighting.AddLight((int)this.Center.X / 16, (int)((double)this.Center.Y - 10.0) / 16, 0.1f * num3, 0.5f * num3, 0.7f * num3);
                        return;
                    }
                    Lighting.AddLight((int)this.Center.X / 16, (int)((double)this.Center.Y - 10.0) / 16, 0.1f, 0.5f, 0.7f);
                    this.dontTakeDamage = false;
                }
                if ((double)this.ai[0] < 60.0)
                    ++this.ai[0];
                if (this.justHit)
                    this.ai[0] = -30f;
                if ((double)this.ai[0] != 60.0)
                    return;
                this.ai[0] = -120f;
                Vector2 center = Main.player[this.target].Center;
                Vector2 vector2_1 = this.Center - Vector2.UnitY * 10f;
                Vector2 vector2_2 = center - vector2_1;
                vector2_2.X += (float)Main.rand.Next(-100, 101);
                vector2_2.Y += (float)Main.rand.Next(-100, 101);
                vector2_2.X *= (float)Main.rand.Next(70, 131) * 0.01f;
                vector2_2.Y *= (float)Main.rand.Next(70, 131) * 0.01f;
                vector2_2.Normalize();
                if (float.IsNaN(vector2_2.X) || float.IsNaN(vector2_2.Y))
                    vector2_2 = -Vector2.UnitY;
                vector2_2 *= 14f;
                int Damage = 35;
                if (Main.expertMode && this.type >= 381 && this.type <= 392)
                    Damage = (int)((double)Damage * 0.8);
                Projectile.NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 435, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
            }
            else if (this.aiStyle == 74)
            {
                this.TargetClosest(false);
                this.rotation = Utils.ToRotation(this.velocity);
                if (Math.Sign(this.velocity.X) != 0)
                    this.spriteDirection = -Math.Sign(this.velocity.X);
                if ((double)this.rotation < -1.57079637050629)
                    this.rotation += 3.141593f;
                if ((double)this.rotation > 1.57079637050629)
                    this.rotation -= 3.141593f;
                if (this.type == 418)
                    this.spriteDirection = Math.Sign(this.velocity.X);
                float num1 = 0.4f;
                float num2 = 10f;
                float num3 = 200f;
                float num4 = 750f;
                float num5 = 30f;
                float num6 = 30f;
                float num7 = 0.95f;
                int num8 = 50;
                float num9 = 14f;
                float num10 = 30f;
                float num11 = 100f;
                float num12 = 20f;
                float num13 = 0.0f;
                float num14 = 7f;
                bool flag1 = true;
                if (this.type == 418)
                {
                    num1 = 0.3f;
                    num2 = 8f;
                    num3 = 300f;
                    num4 = 800f;
                    num5 = 60f;
                    num6 = 5f;
                    num7 = 0.8f;
                    num8 = 0;
                    num9 = 10f;
                    num10 = 30f;
                    num11 = 150f;
                    num12 = 60f;
                    num13 = 0.3333333f;
                    num14 = 8f;
                    flag1 = false;
                }
                float num15 = num13 * num12;
                if (Main.expertMode)
                    num1 *= Main.expertKnockBack;
                if (this.type == 388 && (double)this.ai[0] != 3.0)
                {
                    int index = Dust.NewDust(this.position, this.width, this.height, 226, 0.0f, 0.0f, 100, new Color(), 0.5f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity = this.velocity / 5f;
                    Vector2 spinningpoint = new Vector2(-10f, 10f);
                    if (this.spriteDirection == 1)
                        spinningpoint.X *= -1f;
                    spinningpoint = Utils.RotatedBy(spinningpoint, (double)this.rotation, new Vector2());
                    Main.dust[index].position = this.Center + spinningpoint;
                }
                if (this.type == 418)
                {
                    int num16 = (double)this.ai[0] == 2.0 ? 2 : 1;
                    int num17 = (double)this.ai[0] == 2.0 ? 30 : 20;
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        if (Main.rand.Next(3) < num16)
                        {
                            int index2 = Dust.NewDust(this.Center - new Vector2((float)num17), num17 * 2, num17 * 2, 6, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, new Color(), 1.5f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity *= 0.2f;
                            Main.dust[index2].fadeIn = 1f;
                        }
                    }
                }
                if ((double)this.ai[0] == 0.0)
                {
                    this.knockBackResist = num1;
                    float num16 = num2;
                    Vector2 center = this.Center;
                    Vector2 v = Main.player[this.target].Center - center;
                    Vector2 vector2_1 = v - Vector2.UnitY * num3;
                    float num17 = v.Length();
                    v = Vector2.Normalize(v) * num16;
                    Vector2 vector2_2 = Vector2.Normalize(vector2_1) * num16;
                    bool flag2 = Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1);
                    float num18 = 8f;
                    bool flag3 = flag2 && (double)Utils.ToRotation(v) > 3.14159274101257 / (double)num18 && (double)Utils.ToRotation(v) < 3.14159274101257 - 3.14159274101257 / (double)num18;
                    if ((double)num17 > (double)num4 || !flag3)
                    {
                        this.velocity.X = (this.velocity.X * (num5 - 1f) + vector2_2.X) / num5;
                        this.velocity.Y = (this.velocity.Y * (num5 - 1f) + vector2_2.Y) / num5;
                    }
                    else
                    {
                        this.ai[0] = 1f;
                        this.ai[2] = v.X;
                        this.ai[3] = v.Y;
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    this.knockBackResist = 0.0f;
                    NPC npc = this;
                    Vector2 vector2_1 = npc.velocity * num7;
                    npc.velocity = vector2_1;
                    ++this.ai[1];
                    if ((double)this.ai[1] >= (double)num6)
                    {
                        this.ai[0] = 2f;
                        this.ai[1] = 0.0f;
                        this.netUpdate = true;
                        Vector2 vector2_2 = new Vector2(this.ai[2], this.ai[3]) + new Vector2((float)Main.rand.Next(-num8, num8 + 1), (float)Main.rand.Next(-num8, num8 + 1)) * 0.04f;
                        vector2_2.Normalize();
                        this.velocity = vector2_2 * num9;
                    }
                    if (this.type == 388 && Main.rand.Next(4) == 0)
                    {
                        int index = Dust.NewDust(this.position, this.width, this.height, 226, 0.0f, 0.0f, 100, new Color(), 0.5f);
                        Main.dust[index].noGravity = true;
                        Main.dust[index].velocity *= 2f;
                        Main.dust[index].velocity = Main.dust[index].velocity / 2f + Vector2.Normalize(Main.dust[index].position - this.Center);
                    }
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    this.knockBackResist = 0.0f;
                    float num16 = num10;
                    ++this.ai[1];
                    bool flag2 = (double)Vector2.Distance(this.Center, Main.player[this.target].Center) > (double)num11 && (double)this.Center.Y > (double)Main.player[this.target].Center.Y;
                    if ((double)this.ai[1] >= (double)num16 && flag2 || (double)this.velocity.Length() < (double)num14)
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.ai[3] = 0.0f;
                        NPC npc = this;
                        Vector2 vector2 = npc.velocity / 2f;
                        npc.velocity = vector2;
                        this.netUpdate = true;
                        if (this.type == 418)
                        {
                            this.ai[1] = 45f;
                            this.ai[0] = 4f;
                        }
                    }
                    else
                    {
                        Vector2 center = this.Center;
                        Vector2 vec = Main.player[this.target].Center - center;
                        vec.Normalize();
                        if (Utils.HasNaNs(vec))
                            vec = new Vector2((float)this.direction, 0.0f);
                        this.velocity = (this.velocity * (num12 - 1f) + vec * (this.velocity.Length() + num15)) / num12;
                    }
                    if (flag1 && Collision.SolidCollision(this.position, this.width, this.height))
                    {
                        this.ai[0] = 3f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.ai[3] = 0.0f;
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[0] == 4.0)
                {
                    this.ai[1] -= 3f;
                    if ((double)this.ai[1] <= 0.0)
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                        this.netUpdate = true;
                    }
                    NPC npc = this;
                    Vector2 vector2 = npc.velocity * 0.95f;
                    npc.velocity = vector2;
                }
                if (flag1 && (double)this.ai[0] != 3.0 && (double)Vector2.Distance(this.Center, Main.player[this.target].Center) < 64.0)
                {
                    this.ai[0] = 3f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                    this.netUpdate = true;
                }
                if ((double)this.ai[0] != 3.0)
                    return;
                this.position = this.Center;
                this.width = this.height = 192;
                this.position.X -= (float)(this.width / 2);
                this.position.Y -= (float)(this.height / 2);
                this.velocity = Vector2.Zero;
                this.damage = (int)(80.0 * (double)Main.damageMultiplier);
                this.alpha = (int)byte.MaxValue;
                Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.2f, 0.7f, 1.1f);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].velocity *= 1.4f;
                    Main.dust[index2].position = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f) * ((float)Main.rand.NextDouble() * 96f) + this.Center;
                }
                for (int index1 = 0; index1 < 40; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 226, 0.0f, 0.0f, 100, new Color(), 0.5f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 2f;
                    Main.dust[index2].position = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f) * ((float)Main.rand.NextDouble() * 96f) + this.Center;
                    Main.dust[index2].velocity = Main.dust[index2].velocity / 2f + Vector2.Normalize(Main.dust[index2].position - this.Center);
                    if (Main.rand.Next(2) == 0)
                    {
                        int index3 = Dust.NewDust(this.position, this.width, this.height, 226, 0.0f, 0.0f, 100, new Color(), 0.9f);
                        Main.dust[index3].noGravity = true;
                        Main.dust[index3].velocity *= 1.2f;
                        Main.dust[index3].position = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f) * ((float)Main.rand.NextDouble() * 96f) + this.Center;
                        Main.dust[index3].velocity = Main.dust[index3].velocity / 2f + Vector2.Normalize(Main.dust[index3].position - this.Center);
                    }
                    if (Main.rand.Next(4) == 0)
                    {
                        int index3 = Dust.NewDust(this.position, this.width, this.height, 226, 0.0f, 0.0f, 100, new Color(), 0.7f);
                        Main.dust[index3].velocity *= 1.2f;
                        Main.dust[index3].position = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f) * ((float)Main.rand.NextDouble() * 96f) + this.Center;
                        Main.dust[index3].velocity = Main.dust[index3].velocity / 2f + Vector2.Normalize(Main.dust[index3].position - this.Center);
                    }
                }
                ++this.ai[1];
                if ((double)this.ai[1] < 3.0)
                    return;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                this.life = 0;
                this.HitEffect(0, 10.0);
                this.active = false;
            }
            else if (this.aiStyle == 75)
            {
                int index1 = -1;
                Vector2 spinningpoint1 = Vector2.Zero;
                int num1 = 0;
                if (this.type == 390)
                {
                    if ((double)this.localAI[0] == 0.0 && Main.netMode != 1)
                    {
                        this.localAI[0] = 1f;
                        this.ai[0] = (float)NPC.NewNPC((int)this.Center.X, (int)this.Center.Y, 391, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        this.netUpdate = true;
                    }
                    int index2 = (int)this.ai[0];
                    if (Main.npc[index2].active && Main.npc[index2].type == 391)
                    {
                        if (this.timeLeft < 60)
                            this.timeLeft = 60;
                        index1 = index2;
                        spinningpoint1 = Vector2.UnitY * -14f;
                    }
                }
                if (this.type == 416)
                {
                    if ((double)this.localAI[0] == 0.0 && Main.netMode != 1)
                    {
                        this.localAI[0] = 1f;
                        this.ai[0] = (float)NPC.NewNPC((int)this.Center.X, (int)this.Center.Y, 415, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        this.netUpdate = true;
                    }
                    int index2 = (int)this.ai[0];
                    if (Main.npc[index2].active && Main.npc[index2].type == 415)
                    {
                        if (this.timeLeft < 60)
                            this.timeLeft = 60;
                        index1 = index2;
                        spinningpoint1 = new Vector2((float)(-Main.npc[index2].spriteDirection * 10), -30f);
                    }
                }
                else if (this.type == 392)
                {
                    int index2 = (int)this.ai[0];
                    if (Main.npc[index2].active && Main.npc[index2].type == 395)
                    {
                        if (this.timeLeft < 60)
                            this.timeLeft = 60;
                        index1 = index2;
                        Vector2 spinningpoint2 = Vector2.UnitY * 2f * Main.npc[index2].scale;
                        float num2 = Main.npc[index2].rotation;
                        spinningpoint1 = Utils.RotatedBy(spinningpoint2, (double)num2, new Vector2());
                        this.rotation = num2;
                        if (Main.netMode != 1)
                        {
                            bool flag = true;
                            if ((double)Main.npc[index2].ai[0] >= 1.0 || (double)Main.npc[index2].ai[0] < 0.0)
                                flag = false;
                            if (flag)
                            {
                                for (int index3 = 0; index3 < 2; ++index3)
                                {
                                    if (Main.npc[(int)this.localAI[index3]].active && Main.npc[(int)this.localAI[index3]].type == 393)
                                        flag = false;
                                }
                                for (int index3 = 2; index3 < 4; ++index3)
                                {
                                    if (Main.npc[(int)this.localAI[index3]].active && Main.npc[(int)this.localAI[index3]].type == 394)
                                        flag = false;
                                }
                            }
                            if (flag)
                            {
                                Main.npc[index2].ai[0] = 1f;
                                Main.npc[index2].ai[1] = 0.0f;
                                Main.npc[index2].ai[2] = 0.0f;
                                Main.npc[index2].ai[3] = 0.0f;
                                Main.npc[index2].netUpdate = true;
                            }
                        }
                    }
                }
                else if (this.type == 393)
                {
                    int index2 = (int)this.ai[0];
                    if (Main.npc[index2].active && Main.npc[index2].type == 395)
                    {
                        if (this.timeLeft < 60)
                            this.timeLeft = 60;
                        index1 = index2;
                        Vector2 spinningpoint2 = (Vector2.UnitY * 29f + ((double)this.ai[1] == 1.0 ? Vector2.UnitX : -Vector2.UnitX) * 60f) * Main.npc[index2].scale;
                        float num2 = Main.npc[index2].rotation;
                        spinningpoint1 = Utils.RotatedBy(spinningpoint2, (double)num2, new Vector2());
                        this.rotation = num2;
                    }
                }
                else if (this.type == 394)
                {
                    int index2 = (int)this.ai[0];
                    if (Main.npc[index2].active && Main.npc[index2].type == 395)
                    {
                        if (this.timeLeft < 60)
                            this.timeLeft = 60;
                        index1 = index2;
                        Vector2 spinningpoint2 = (Vector2.UnitY * -13f + ((double)this.ai[1] == 1.0 ? Vector2.UnitX : -Vector2.UnitX) * 49f) * Main.npc[index2].scale;
                        float num2 = Main.npc[index2].rotation;
                        spinningpoint1 = Utils.RotatedBy(spinningpoint2, (double)num2, new Vector2());
                        this.rotation = num2;
                        num1 = (double)this.ai[1] == 1.0 ? 1 : -1;
                    }
                }
                else if (this.type == 492)
                {
                    int index2 = (int)this.ai[0];
                    if (Main.npc[index2].active && Main.npc[index2].type == 491)
                    {
                        if (this.timeLeft < 60)
                            this.timeLeft = 60;
                        index1 = index2;
                        spinningpoint1 = new Vector2((float)((68.0 * (double)this.ai[1] - 122.0) * (Main.npc[index2].spriteDirection == 1 ? -1.0 : 1.0)), -6f);
                        spinningpoint1 *= Main.npc[index2].scale;
                        float num2 = Main.npc[index2].rotation;
                        spinningpoint1 = Utils.RotatedBy(spinningpoint1, (double)num2, new Vector2());
                        this.rotation = num2;
                    }
                }
                if (index1 != -1)
                {
                    NPC npc1 = Main.npc[index1];
                    this.velocity = Vector2.Zero;
                    this.position = npc1.Center;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)(this.height / 2);
                    NPC npc2 = this;
                    Vector2 vector2_1 = npc2.position + spinningpoint1;
                    npc2.position = vector2_1;
                    this.gfxOffY = npc1.gfxOffY;
                    this.direction = npc1.direction;
                    this.spriteDirection = num1 != 0 ? num1 : npc1.spriteDirection;
                    if (this.type == 390)
                    {
                        this.timeLeft = npc1.timeLeft;
                        this.velocity = npc1.velocity;
                        this.target = npc1.target;
                        if ((double)this.ai[1] < 60.0)
                            ++this.ai[1];
                        if (this.justHit)
                            this.ai[1] = -30f;
                        int Type = 438;
                        int Damage = 30;
                        float num2 = 7f;
                        if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                        {
                            Vector2 vector2_2 = Main.player[this.target].Center - this.Center;
                            Vector2 vector2_3 = Vector2.Normalize(vector2_2);
                            float num3 = vector2_2.Length();
                            float num4 = 700f;
                            if (this.type == 214)
                                num4 = 550f;
                            if (this.type == 215)
                                num4 = 800f;
                            if ((double)num3 < (double)num4)
                            {
                                if ((double)this.ai[1] == 60.0 && Math.Sign(vector2_2.X) == this.direction)
                                {
                                    this.ai[1] = -60f;
                                    Vector2 center = Main.player[this.target].Center;
                                    Vector2 vector2_4 = this.Center - Vector2.UnitY * 4f;
                                    Vector2 vector2_5 = center - vector2_4;
                                    vector2_5.X += (float)Main.rand.Next(-50, 51);
                                    vector2_5.Y += (float)Main.rand.Next(-50, 51);
                                    vector2_5.X *= (float)Main.rand.Next(80, 121) * 0.01f;
                                    vector2_5.Y *= (float)Main.rand.Next(80, 121) * 0.01f;
                                    vector2_5.Normalize();
                                    if (float.IsNaN(vector2_5.X) || float.IsNaN(vector2_5.Y))
                                        vector2_5 = -Vector2.UnitY;
                                    vector2_5 *= num2;
                                    Projectile.NewProjectile(vector2_4.X, vector2_4.Y, vector2_5.X, vector2_5.Y, Type, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                    this.netUpdate = true;
                                }
                                else
                                {
                                    float num5 = this.ai[2];
                                    this.velocity.X *= 0.5f;
                                    this.ai[2] = 3f;
                                    this.ai[2] = (double)Math.Abs(vector2_3.Y) <= (double)Math.Abs(vector2_3.X) * 2.0 ? ((double)Math.Abs(vector2_3.X) <= (double)Math.Abs(vector2_3.Y) * 2.0 ? ((double)vector2_3.Y <= 0.0 ? 4f : 2f) : 3f) : ((double)vector2_3.Y <= 0.0 ? 5f : 1f);
                                    if ((double)this.ai[2] != (double)num5)
                                        this.netUpdate = true;
                                }
                            }
                        }
                    }
                    if (this.type == 492)
                    {
                        this.timeLeft = npc1.timeLeft;
                        this.velocity = npc1.velocity;
                        if ((double)this.ai[3] < 240.0)
                            ++this.ai[3];
                        if ((double)this.ai[3] == 2.0)
                            this.TargetClosest(false);
                        if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                        {
                            Vector2.Normalize(Main.player[this.target].Center - this.Center);
                            if ((double)this.ai[3] >= 240.0)
                            {
                                this.ai[3] = 0.0f;
                                Vector2 center1 = Main.player[this.target].Center;
                                Vector2 center2 = this.Center;
                                Vector2 vector2_2 = Vector2.Normalize(center1 - center2);
                                if (float.IsNaN(vector2_2.X) || float.IsNaN(vector2_2.Y))
                                    vector2_2 = Vector2.UnitY;
                                Vector2 vector2_3 = vector2_2 * 14f + Vector2.UnitY * -5f;
                                if (Main.netMode != 1)
                                    Projectile.NewProjectile(center2.X, center2.Y, vector2_3.X, vector2_3.Y, 240, 30, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                this.netUpdate = true;
                            }
                            else
                            {
                                float num2 = this.ai[2];
                                float[] numArray = new float[8];
                                for (int index2 = 0; index2 < numArray.Length; ++index2)
                                    numArray[index2] = Vector2.Distance(this.Center + Utils.RotatedBy(Vector2.UnitY, (double)index2 * -0.785398185253143, new Vector2()) * 50f, Main.player[this.target].Center);
                                int index3 = 0;
                                for (int index2 = 1; index2 < numArray.Length; ++index2)
                                {
                                    if ((double)numArray[index3] > (double)numArray[index2])
                                        index3 = index2;
                                }
                                this.ai[2] = (float)(index3 + 1);
                                if (this.spriteDirection == 1)
                                    this.ai[2] = 9f - this.ai[2];
                                if ((double)this.ai[2] != (double)num2)
                                    this.netUpdate = true;
                            }
                        }
                        else
                        {
                            if ((double)this.ai[2] != 0.0)
                                this.netUpdate = true;
                            this.ai[2] = 0.0f;
                        }
                    }
                    if (this.type == 394)
                    {
                        this.timeLeft = npc1.timeLeft;
                        int Damage = 50;
                        if (Main.expertMode)
                            Damage = 37;
                        this.ai[3] = npc1.ai[3];
                        float num2 = 440f;
                        float num3 = 140f;
                        if ((double)this.ai[3] >= (double)num2 && (double)this.ai[3] < (double)num2 + (double)num3 && (double)(this.ai[3] - num2) % 20.0 == 0.0)
                        {
                            if (Main.netMode != 1)
                            {
                                Vector2 vector2_2 = Utils.RotatedBy((float)num1 * Vector2.UnitX, (Main.rand.NextDouble() - 0.5) * 0.785398185253143, new Vector2()) * 8f;
                                Vector2 vector2_3 = (float)num1 * Vector2.UnitX * 36f + this.Center + Vector2.UnitY * 8f;
                                Projectile.NewProjectile(vector2_3.X, vector2_3.Y, vector2_2.X, vector2_2.Y, 448, Damage, 0.0f, Main.myPlayer, 0.0f, 20f);
                            }
                            Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 39);
                        }
                    }
                    if (this.type == 393)
                    {
                        this.timeLeft = npc1.timeLeft;
                        int Damage = 35;
                        if (Main.expertMode)
                            Damage = 30;
                        this.ai[3] = npc1.ai[3];
                        float num2 = 280f;
                        float num3 = 140f;
                        bool flag = (double)this.ai[3] >= (double)num2 && (double)this.ai[3] < (double)num2 + (double)num3;
                        if (!flag)
                        {
                            this.TargetClosest(false);
                            Vector2 v = Main.player[this.target].Center - this.Center;
                            if ((double)v.Y < 0.0)
                                v.Y = 0.0f;
                            v.Normalize();
                            if (float.IsNaN(v.X) || float.IsNaN(v.Y))
                                v = Vector2.UnitY;
                            this.ai[2] = Utils.ToRotation(v);
                        }
                        if (flag && (double)(this.ai[3] - num2) % 6.0 == 0.0)
                        {
                            if (Main.netMode != 1)
                            {
                                Vector2 vector2_2 = Utils.RotatedBy(Utils.ToRotationVector2(this.ai[2]), (Main.rand.NextDouble() - 0.5) * 0.785398185253143 / 3.0, new Vector2()) * 16f;
                                Vector2 vector2_3 = this.Center + vector2_2 * 1f;
                                Projectile.NewProjectile(vector2_3.X, vector2_3.Y, vector2_2.X, vector2_2.Y, 449, Damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            }
                            Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 12);
                        }
                    }
                    if (this.type != 392)
                        return;
                    this.timeLeft = npc1.timeLeft;
                    int Damage1 = 70;
                    if (Main.expertMode)
                        Damage1 = 50;
                    this.ai[3] = npc1.ai[3];
                    float num6 = 20f;
                    float num7 = 240f;
                    if ((double)this.ai[3] >= (double)num6 && (double)this.ai[3] < (double)num6 + (double)num7 && (double)npc1.ai[0] == 0.0 && (double)(this.ai[3] - num6) == 0.0)
                    {
                        if (Main.netMode != 1)
                        {
                            Vector2 center = this.Center;
                            Projectile.NewProjectile(center.X, center.Y, 0.0f, 0.0f, 447, Damage1, 0.0f, Main.myPlayer, (float)(this.whoAmI + 1), 0.0f);
                        }
                        Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 12);
                    }
                    bool flag1 = false;
                    int maxValue1 = 1000;
                    int maxValue2 = 1000;
                    int Type1 = 450;
                    int Damage2 = 30;
                    if (Main.expertMode)
                        Damage2 = 25;
                    if ((double)npc1.ai[0] == 2.0)
                    {
                        flag1 = true;
                        maxValue2 = 120;
                        maxValue1 = 120;
                    }
                    if (!flag1)
                    {
                        float num2 = 280f;
                        float num3 = 120f;
                        flag1 = flag1 || (double)this.ai[3] >= (double)num2 && (double)this.ai[3] < (double)num2 + (double)num3;
                        if (flag1)
                        {
                            maxValue2 = 90;
                            maxValue1 = 60;
                        }
                    }
                    if (!flag1)
                    {
                        float num2 = 440f;
                        float num3 = 140f;
                        flag1 = flag1 || (double)this.ai[3] >= (double)num2 && (double)this.ai[3] < (double)num2 + (double)num3;
                        if (flag1)
                        {
                            maxValue2 = 60;
                            maxValue1 = 90;
                        }
                    }
                    bool flag2 = true;
                    bool flag3 = true;
                    bool flag4 = true;
                    bool flag5 = true;
                    if (Main.npc[(int)this.localAI[0]].active && Main.npc[(int)this.localAI[0]].type == 393)
                        flag2 = false;
                    if (Main.npc[(int)this.localAI[1]].active && Main.npc[(int)this.localAI[1]].type == 393)
                        flag3 = false;
                    if (Main.npc[(int)this.localAI[2]].active && Main.npc[(int)this.localAI[2]].type == 394)
                        flag4 = false;
                    if (Main.npc[(int)this.localAI[3]].active && Main.npc[(int)this.localAI[3]].type == 394)
                        flag5 = false;
                    if (flag1)
                    {
                        if (flag2 && Main.rand.Next(maxValue1) == 0)
                        {
                            if (Main.netMode != 1)
                            {
                                Vector2 vector2_2 = Utils.RotatedBy(new Vector2((float)(-1.0 * Main.rand.NextDouble() * 3.0), 1f), (Main.rand.NextDouble() - 0.5) * 0.785398185253143, new Vector2()) * 3f;
                                Vector2 vector2_3 = -1f * Vector2.UnitX * (float)Main.rand.Next(50, 70) + this.Center + Vector2.UnitY * (float)Main.rand.Next(30, 45);
                                Projectile.NewProjectile(vector2_3.X, vector2_3.Y, vector2_2.X, vector2_2.Y, Type1, Damage2, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            }
                            Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 39);
                        }
                        if (flag3 && Main.rand.Next(maxValue1) == 0)
                        {
                            if (Main.netMode != 1)
                            {
                                Vector2 vector2_2 = Utils.RotatedBy(new Vector2((float)(1.0 * Main.rand.NextDouble() * 3.0), 1f), (Main.rand.NextDouble() - 0.5) * 0.785398185253143, new Vector2()) * 3f;
                                Vector2 vector2_3 = 1f * Vector2.UnitX * (float)Main.rand.Next(50, 70) + this.Center + Vector2.UnitY * (float)Main.rand.Next(30, 45);
                                Projectile.NewProjectile(vector2_3.X, vector2_3.Y, vector2_2.X, vector2_2.Y, Type1, Damage2, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            }
                            Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 39);
                        }
                    }
                    if (flag1)
                    {
                        if (flag4 && Main.rand.Next(maxValue2) == 0)
                        {
                            if (Main.netMode != 1)
                            {
                                Vector2 vector2_2 = Utils.RotatedBy(new Vector2((float)(-1.0 * Main.rand.NextDouble() * 2.0), -1f), (Main.rand.NextDouble() - 0.5) * 0.785398185253143, new Vector2()) * 3f;
                                Vector2 vector2_3 = -1f * Vector2.UnitX * (float)Main.rand.Next(30, 60) + this.Center + Vector2.UnitY * (float)Main.rand.Next(-30, -10);
                                Projectile.NewProjectile(vector2_3.X, vector2_3.Y, vector2_2.X, vector2_2.Y, Type1, Damage2, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            }
                            Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 39);
                        }
                        if (flag5 && Main.rand.Next(maxValue2) == 0)
                        {
                            if (Main.netMode != 1)
                            {
                                Vector2 vector2_2 = Utils.RotatedBy(new Vector2((float)(1.0 * Main.rand.NextDouble() * 2.0), -1f), (Main.rand.NextDouble() - 0.5) * 0.785398185253143, new Vector2()) * 3f;
                                Vector2 vector2_3 = 1f * Vector2.UnitX * (float)Main.rand.Next(30, 60) + this.Center + Vector2.UnitY * (float)Main.rand.Next(-30, -10);
                                Projectile.NewProjectile(vector2_3.X, vector2_3.Y, vector2_2.X, vector2_2.Y, Type1, Damage2, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            }
                            Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 39);
                        }
                    }
                    if (flag2 && Main.rand.Next(8) == 0)
                    {
                        int index2 = Dust.NewDust(-1f * Vector2.UnitX * (float)Main.rand.Next(50, 70) + this.Center + Vector2.UnitY * (float)Main.rand.Next(15, 30), 4, 16, Main.rand.Next(4) != 0 ? 31 : 228, 0.0f, 0.0f, 100, new Color(), 1.2f);
                        Main.dust[index2].velocity = Utils.RotatedBy(new Vector2((float)(-1.0 * Main.rand.NextDouble() * 3.0), 1f), (Main.rand.NextDouble() - 0.5) * 0.785398185253143, new Vector2());
                        Main.dust[index2].velocity *= 0.5f;
                        Main.dust[index2].velocity.Y = -Math.Abs(Main.dust[index2].velocity.Y);
                    }
                    if (flag3 && Main.rand.Next(8) == 0)
                    {
                        int index2 = Dust.NewDust(Vector2.UnitX * (float)Main.rand.Next(50, 70) + this.Center + Vector2.UnitY * (float)Main.rand.Next(15, 30), 4, 16, Main.rand.Next(4) != 0 ? 31 : 228, 0.0f, 0.0f, 100, new Color(), 1.2f);
                        Main.dust[index2].velocity = Utils.RotatedBy(new Vector2((float)Main.rand.NextDouble() * 3f, 1f), (Main.rand.NextDouble() - 0.5) * 0.785398185253143, new Vector2());
                        Main.dust[index2].velocity *= 0.5f;
                        Main.dust[index2].velocity.Y = -Math.Abs(Main.dust[index2].velocity.Y);
                    }
                    if (flag4 && Main.rand.Next(8) == 0)
                    {
                        int index2 = Dust.NewDust(-1f * Vector2.UnitX * (float)Main.rand.Next(30, 60) + this.Center + Vector2.UnitY * (float)Main.rand.Next(-30, -10), 4, 16, Main.rand.Next(4) != 0 ? 31 : 228, 0.0f, 0.0f, 100, new Color(), 1.2f);
                        Main.dust[index2].velocity = Utils.RotatedBy(new Vector2((float)(-1.0 * Main.rand.NextDouble() * 2.0), 1f), (Main.rand.NextDouble() - 0.5) * 0.785398185253143, new Vector2());
                        Main.dust[index2].velocity *= 0.5f;
                        Main.dust[index2].velocity.Y = -Math.Abs(Main.dust[index2].velocity.Y);
                    }
                    if (!flag5 || Main.rand.Next(8) != 0)
                        return;
                    int index4 = Dust.NewDust(Vector2.UnitX * (float)Main.rand.Next(30, 60) + this.Center + Vector2.UnitY * (float)Main.rand.Next(-30, -10), 4, 16, Main.rand.Next(4) != 0 ? 31 : 228, 0.0f, 0.0f, 100, new Color(), 1.2f);
                    Main.dust[index4].velocity = Utils.RotatedBy(new Vector2((float)Main.rand.NextDouble() * 2f, 1f), (Main.rand.NextDouble() - 0.5) * 0.785398185253143, new Vector2());
                    Main.dust[index4].velocity *= 0.5f;
                    Main.dust[index4].velocity.Y = -Math.Abs(Main.dust[index4].velocity.Y);
                }
                else if (this.type == 390)
                    this.Transform(382);
                else if (this.type == 416)
                {
                    this.Transform(518);
                }
                else
                {
                    this.life = 0;
                    this.HitEffect(0, 10.0);
                    this.active = false;
                }
            }
            else if (this.aiStyle == 76)
            {
                if ((double)this.localAI[3] == 0.0 && Main.netMode != 1 && this.type == 395)
                {
                    this.localAI[3] = 1f;
                    int[] numArray = new int[4];
                    int num = 0;
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        int index2 = NPC.NewNPC((int)this.Center.X + index1 * 300 - 150, (int)this.Center.Y, 393, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        Main.npc[index2].ai[1] = (float)index1;
                        Main.npc[index2].netUpdate = true;
                        numArray[num++] = index2;
                    }
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        int index2 = NPC.NewNPC((int)this.Center.X + index1 * 300 - 150, (int)this.Center.Y, 394, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        Main.npc[index2].ai[1] = (float)index1;
                        Main.npc[index2].netUpdate = true;
                        numArray[num++] = index2;
                    }
                    int index3 = NPC.NewNPC((int)this.Center.X, (int)this.Center.Y, 392, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    Main.npc[index3].ai[0] = (float)this.whoAmI;
                    Main.npc[index3].netUpdate = true;
                    for (int index1 = 0; index1 < 4; ++index1)
                        Main.npc[numArray[index1]].ai[0] = (float)this.whoAmI;
                    for (int index1 = 0; index1 < 4; ++index1)
                        Main.npc[index3].localAI[index1] = (float)numArray[index1];
                }
                Vector2 center1 = this.Center;
                Player player = Main.player[this.target];
                if (this.target < 0 || this.target == (int)byte.MaxValue || (player.dead || !player.active))
                {
                    this.TargetClosest(true);
                    player = Main.player[this.target];
                    this.netUpdate = true;
                }
                if ((player.dead || (double)Vector2.Distance(player.Center, center1) > 3200.0) && (double)this.ai[0] != 1.0)
                {
                    if ((double)this.ai[0] == 0.0)
                        this.ai[0] = -1f;
                    if ((double)this.ai[0] == 2.0)
                        this.ai[0] = -2f;
                    this.netUpdate = true;
                }
                if ((double)this.ai[0] == -1.0 || (double)this.ai[0] == -2.0)
                {
                    this.velocity.Y -= 0.4f;
                    if (this.timeLeft > 10)
                        this.timeLeft = 10;
                    if (player.dead)
                        return;
                    this.timeLeft = 300;
                    if ((double)this.ai[0] == -2.0)
                        this.ai[0] = 2f;
                    if ((double)this.ai[0] == 0.0)
                        this.ai[0] = 0.0f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 0.0)
                {
                    int num1 = 0;
                    if ((double)this.ai[3] >= 580.0)
                        num1 = 0;
                    else if ((double)this.ai[3] >= 440.0)
                        num1 = 5;
                    else if ((double)this.ai[3] >= 420.0)
                        num1 = 4;
                    else if ((double)this.ai[3] >= 280.0)
                        num1 = 3;
                    else if ((double)this.ai[3] >= 260.0)
                        num1 = 2;
                    else if ((double)this.ai[3] >= 20.0)
                        num1 = 1;
                    ++this.ai[3];
                    if ((double)this.ai[3] >= 600.0)
                        this.ai[3] = 0.0f;
                    int num2 = num1;
                    if ((double)this.ai[3] >= 580.0)
                        num1 = 0;
                    else if ((double)this.ai[3] >= 440.0)
                        num1 = 5;
                    else if ((double)this.ai[3] >= 420.0)
                        num1 = 4;
                    else if ((double)this.ai[3] >= 280.0)
                        num1 = 3;
                    else if ((double)this.ai[3] >= 260.0)
                        num1 = 2;
                    else if ((double)this.ai[3] >= 20.0)
                        num1 = 1;
                    if (num1 != num2)
                    {
                        if (num1 == 0)
                            this.ai[2] = 0.0f;
                        if (num1 == 1)
                            this.ai[2] = Math.Sign((player.Center - center1).X) == 1 ? 1f : -1f;
                        if (num1 == 2)
                            this.ai[2] = 0.0f;
                        this.netUpdate = true;
                    }
                    if (num1 == 0)
                    {
                        if ((double)this.ai[2] == 0.0)
                            this.ai[2] = (float)(-600 * Math.Sign((center1 - player.Center).X));
                        Vector2 vector2 = player.Center + new Vector2(this.ai[2], -250f) - center1;
                        if ((double)vector2.Length() < 50.0)
                        {
                            this.ai[3] = 19f;
                        }
                        else
                        {
                            vector2.Normalize();
                            this.velocity = Vector2.Lerp(this.velocity, vector2 * 16f, 0.1f);
                        }
                    }
                    if (num1 == 1)
                    {
                        int index1 = (int)this.Center.X / 16;
                        int index2 = (int)((double)this.position.Y + (double)this.height) / 16;
                        int num3 = 0;
                        if (Main.tile[index1, index2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2].type] && !Main.tileSolidTop[(int)Main.tile[index1, index2].type])
                        {
                            num3 = 1;
                        }
                        else
                        {
                            for (; num3 < 150 && index2 + num3 < Main.maxTilesY; ++num3)
                            {
                                int index3 = index2 + num3;
                                if (Main.tile[index1, index3].nactive() && Main.tileSolid[(int)Main.tile[index1, index3].type] && !Main.tileSolidTop[(int)Main.tile[index1, index3].type])
                                {
                                    --num3;
                                    break;
                                }
                            }
                        }
                        float num4 = (float)(num3 * 16);
                        float num5 = 250f;
                        if ((double)num4 < (double)num5)
                        {
                            float num6 = -4f;
                            if (-(double)num6 > (double)num4)
                                num6 = -num4;
                            this.velocity.Y = MathHelper.Lerp(this.velocity.Y, num6, 0.05f);
                        }
                        else
                            this.velocity.Y *= 0.95f;
                        this.velocity.X = 3.5f * this.ai[2];
                    }
                    if (num1 == 2)
                    {
                        if ((double)this.ai[2] == 0.0)
                            this.ai[2] = (float)(300 * Math.Sign((center1 - player.Center).X));
                        Vector2 vector2 = player.Center + new Vector2(this.ai[2], -170f) - center1;
                        int index1 = (int)this.Center.X / 16;
                        int index2 = (int)((double)this.position.Y + (double)this.height) / 16;
                        int num3 = 0;
                        if (Main.tile[index1, index2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2].type] && !Main.tileSolidTop[(int)Main.tile[index1, index2].type])
                        {
                            num3 = 1;
                        }
                        else
                        {
                            for (; num3 < 150 && index2 + num3 < Main.maxTilesY; ++num3)
                            {
                                int index3 = index2 + num3;
                                if (Main.tile[index1, index3].nactive() && Main.tileSolid[(int)Main.tile[index1, index3].type] && !Main.tileSolidTop[(int)Main.tile[index1, index3].type])
                                {
                                    --num3;
                                    break;
                                }
                            }
                        }
                        float num4 = (float)(num3 * 16);
                        float num5 = 170f;
                        if ((double)num4 < (double)num5)
                            vector2.Y -= num5 - num4;
                        if ((double)vector2.Length() < 70.0)
                        {
                            this.ai[3] = 279f;
                        }
                        else
                        {
                            vector2.Normalize();
                            this.velocity = Vector2.Lerp(this.velocity, vector2 * 20f, 0.1f);
                        }
                    }
                    else if (num1 == 3)
                    {
                        float num3 = 0.85f;
                        int index1 = (int)this.Center.X / 16;
                        int index2 = (int)((double)this.position.Y + (double)this.height) / 16;
                        int num4 = 0;
                        if (Main.tile[index1, index2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2].type] && !Main.tileSolidTop[(int)Main.tile[index1, index2].type])
                        {
                            num4 = 1;
                        }
                        else
                        {
                            for (; num4 < 150 && index2 + num4 < Main.maxTilesY; ++num4)
                            {
                                int index3 = index2 + num4;
                                if (Main.tile[index1, index3].nactive() && Main.tileSolid[(int)Main.tile[index1, index3].type] && !Main.tileSolidTop[(int)Main.tile[index1, index3].type])
                                {
                                    --num4;
                                    break;
                                }
                            }
                        }
                        float num5 = (float)(num4 * 16);
                        float num6 = 170f;
                        if ((double)num5 < (double)num6)
                        {
                            float num7 = -4f;
                            if (-(double)num7 > (double)num5)
                                num7 = -num5;
                            this.velocity.Y = MathHelper.Lerp(this.velocity.Y, num7, 0.05f);
                        }
                        else
                            this.velocity.Y *= num3;
                        this.velocity.X *= num3;
                    }
                    if (num1 == 4)
                    {
                        Vector2 vector2 = player.Center + new Vector2(0.0f, -250f) - center1;
                        if ((double)vector2.Length() < 50.0)
                        {
                            this.ai[3] = 439f;
                        }
                        else
                        {
                            vector2.Normalize();
                            this.velocity = Vector2.Lerp(this.velocity, vector2 * 16f, 0.1f);
                        }
                    }
                    else
                    {
                        if (num1 != 5)
                            return;
                        NPC npc = this;
                        Vector2 vector2 = npc.velocity * 0.85f;
                        npc.velocity = vector2;
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    this.dontTakeDamage = false;
                    NPC npc = this;
                    Vector2 vector2 = npc.velocity * 0.96f;
                    npc.velocity = vector2;
                    float num = 150f;
                    ++this.ai[1];
                    if ((double)this.ai[1] >= (double)num)
                    {
                        this.ai[0] = 2f;
                        this.ai[1] = 0.0f;
                        this.rotation = 0.0f;
                        this.netUpdate = true;
                    }
                    else if ((double)this.ai[1] < 40.0)
                        this.rotation = Utils.RotatedBy(Vector2.UnitY, (double)this.ai[1] / 40.0 * 6.28318548202515, new Vector2()).Y * 0.2f;
                    else if ((double)this.ai[1] < 80.0)
                        this.rotation = Utils.RotatedBy(Vector2.UnitY, (double)this.ai[1] / 20.0 * 6.28318548202515, new Vector2()).Y * 0.3f;
                    else if ((double)this.ai[1] < 120.0)
                        this.rotation = Utils.RotatedBy(Vector2.UnitY, (double)this.ai[1] / 10.0 * 6.28318548202515, new Vector2()).Y * 0.4f;
                    else
                        this.rotation = (float)(((double)this.ai[1] - 120.0) / 30.0 * 6.28318548202515);
                }
                else
                {
                    if ((double)this.ai[0] != 2.0)
                        return;
                    int Damage = 100;
                    float num1 = 3600f;
                    float num2 = 120f;
                    float num3 = 60f;
                    int num4 = 0;
                    if ((double)this.ai[3] % (double)num2 >= (double)num3)
                        num4 = 1;
                    int num5 = num4;
                    int num6 = 0;
                    ++this.ai[3];
                    if ((double)this.ai[3] % (double)num2 >= (double)num3)
                        num6 = 1;
                    if (num6 != num5)
                    {
                        if (num6 == 1)
                        {
                            this.ai[2] = Math.Sign((player.Center - center1).X) == 1 ? 1f : -1f;
                            if (Main.netMode != 1)
                            {
                                Vector2 center2 = this.Center;
                                Projectile.NewProjectile(center2.X, center2.Y, 0.0f, 0.0f, 447, Damage, 0.0f, Main.myPlayer, (float)(this.whoAmI + 1), 0.0f);
                            }
                            Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 12);
                        }
                        this.netUpdate = true;
                    }
                    if ((double)this.ai[3] >= (double)num1)
                    {
                        this.ai[0] = 2f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.ai[3] = 0.0f;
                        this.netUpdate = true;
                    }
                    else if (num6 == 0)
                    {
                        Vector2 vector2 = player.Center + new Vector2(this.ai[2] * 350f, -250f) - center1;
                        vector2.Normalize();
                        this.velocity = Vector2.Lerp(this.velocity, vector2 * 16f, 0.1f);
                    }
                    else
                    {
                        int index1 = (int)this.Center.X / 16;
                        int index2 = (int)((double)this.position.Y + (double)this.height) / 16;
                        int num7 = 0;
                        if (Main.tile[index1, index2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2].type] && !Main.tileSolidTop[(int)Main.tile[index1, index2].type])
                        {
                            num7 = 1;
                        }
                        else
                        {
                            for (; num7 < 150 && index2 + num7 < Main.maxTilesY; ++num7)
                            {
                                int index3 = index2 + num7;
                                if (Main.tile[index1, index3].nactive() && Main.tileSolid[(int)Main.tile[index1, index3].type] && !Main.tileSolidTop[(int)Main.tile[index1, index3].type])
                                {
                                    --num7;
                                    break;
                                }
                            }
                        }
                        float num8 = (float)(num7 * 16);
                        float num9 = 250f;
                        if ((double)num8 < (double)num9)
                        {
                            float num10 = -4f;
                            if (-(double)num10 > (double)num8)
                                num10 = -num8;
                            this.velocity.Y = MathHelper.Lerp(this.velocity.Y, num10, 0.05f);
                        }
                        else
                            this.velocity.Y *= 0.95f;
                        this.velocity.X = 8f * this.ai[2];
                    }
                    this.rotation = 0.0f;
                }
            }
            else if (this.aiStyle == 77)
            {
                if ((double)this.ai[0] != -1.0 && (double)this.ai[0] != 2.0 && Main.rand.Next(200) == 0)
                    Main.PlaySound(29, (int)this.Center.X, (int)this.Center.Y, Main.rand.Next(93, 100));
                if ((double)this.localAI[3] == 0.0)
                {
                    this.netUpdate = true;
                    this.localAI[3] = 1f;
                    this.ai[0] = -1f;
                }
                if ((double)this.ai[0] == -1.0)
                {
                    this.dontTakeDamage = true;
                    ++this.ai[1];
                    if ((double)this.ai[1] == 30.0)
                        Main.PlaySound(29, (int)this.Center.X, (int)this.Center.Y, 92);
                    if ((double)this.ai[1] < 60.0)
                        MoonlordDeathDrama.RequestLight(this.ai[1] / 30f, this.Center);
                    if ((double)this.ai[1] == 60.0)
                    {
                        this.ai[1] = 0.0f;
                        this.ai[0] = 0.0f;
                        if (Main.netMode != 1 && this.type == 398)
                        {
                            this.ai[2] = (float)Main.rand.Next(3);
                            this.ai[2] = 0.0f;
                            this.netUpdate = true;
                            int[] numArray1 = new int[3];
                            int num1 = 0;
                            for (int index1 = 0; index1 < 2; ++index1)
                            {
                                int index2 = NPC.NewNPC((int)this.Center.X + index1 * 800 - 400, (int)this.Center.Y - 100, 397, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                Main.npc[index2].ai[2] = (float)index1;
                                Main.npc[index2].netUpdate = true;
                                numArray1[num1++] = index2;
                            }
                            int index3 = NPC.NewNPC((int)this.Center.X, (int)this.Center.Y - 400, 396, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            Main.npc[index3].netUpdate = true;
                            int[] numArray2 = numArray1;
                            int index4 = num1;
                            int num2 = 1;
                            int num3 = index4 + num2;
                            int num4 = index3;
                            numArray2[index4] = num4;
                            for (int index1 = 0; index1 < 3; ++index1)
                                Main.npc[numArray1[index1]].ai[3] = (float)this.whoAmI;
                            for (int index1 = 0; index1 < 3; ++index1)
                                this.localAI[index1] = (float)numArray1[index1];
                        }
                    }
                }
                if ((double)this.ai[0] == 0.0)
                {
                    this.dontTakeDamage = true;
                    this.TargetClosest(false);
                    Vector2 vector2_1 = Main.player[this.target].Center - this.Center + new Vector2(0.0f, 130f);
                    if ((double)vector2_1.Length() > 20.0)
                    {
                        Vector2 desiredVelocity = Vector2.Normalize(vector2_1 - this.velocity) * 8f;
                        Vector2 vector2_2 = this.velocity;
                        this.SimpleFlyMovement(desiredVelocity, 0.5f);
                        this.velocity = Vector2.Lerp(this.velocity, vector2_2, 0.5f);
                    }
                    if (Main.netMode != 1)
                    {
                        bool flag1 = false;
                        if ((double)this.localAI[0] < 0.0 || (double)this.localAI[1] < 0.0 || (double)this.localAI[2] < 0.0)
                            flag1 = true;
                        else if (!Main.npc[(int)this.localAI[0]].active || Main.npc[(int)this.localAI[0]].type != 397)
                            flag1 = true;
                        else if (!Main.npc[(int)this.localAI[1]].active || Main.npc[(int)this.localAI[1]].type != 397)
                            flag1 = true;
                        else if (!Main.npc[(int)this.localAI[2]].active || Main.npc[(int)this.localAI[2]].type != 396)
                            flag1 = true;
                        if (flag1)
                        {
                            this.life = 0;
                            this.HitEffect(0, 10.0);
                            this.active = false;
                        }
                        bool flag2 = true;
                        if ((double)Main.npc[(int)this.localAI[0]].ai[0] != -2.0)
                            flag2 = false;
                        if ((double)Main.npc[(int)this.localAI[1]].ai[0] != -2.0)
                            flag2 = false;
                        if ((double)Main.npc[(int)this.localAI[2]].ai[0] != -2.0)
                            flag2 = false;
                        if (flag2)
                        {
                            this.ai[0] = 1f;
                            this.dontTakeDamage = false;
                            this.netUpdate = true;
                        }
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    this.dontTakeDamage = false;
                    this.TargetClosest(false);
                    Vector2 vector2_1 = Main.player[this.target].Center - this.Center + new Vector2(0.0f, 130f);
                    if ((double)vector2_1.Length() > 20.0)
                    {
                        Vector2 desiredVelocity = Vector2.Normalize(vector2_1 - this.velocity) * 8f;
                        Vector2 vector2_2 = this.velocity;
                        this.SimpleFlyMovement(desiredVelocity, 0.5f);
                        this.velocity = Vector2.Lerp(this.velocity, vector2_2, 0.5f);
                    }
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    this.dontTakeDamage = true;
                    this.velocity = Vector2.Lerp(this.velocity, new Vector2((float)this.direction, -0.5f), 0.98f);
                    ++this.ai[1];
                    if ((double)this.ai[1] < 60.0)
                        MoonlordDeathDrama.RequestLight(this.ai[1] / 60f, this.Center);
                    if ((double)this.ai[1] == 60.0)
                    {
                        for (int index = 0; index < 1000; ++index)
                        {
                            Projectile projectile = Main.projectile[index];
                            if (projectile.active && (projectile.type == 456 || projectile.type == 462 || (projectile.type == 455 || projectile.type == 452) || projectile.type == 454))
                                projectile.Kill();
                        }
                        for (int index = 0; index < 200; ++index)
                        {
                            NPC npc = Main.npc[index];
                            if (npc.active && npc.type == 400)
                            {
                                npc.HitEffect(0, 9999.0);
                                npc.active = false;
                            }
                        }
                    }
                    if ((double)this.ai[1] % 3.0 == 0.0 && (double)this.ai[1] < 580.0 && (double)this.ai[1] > 60.0)
                    {
                        Vector2 vector2_1 = Utils.RandomVector2(Main.rand, -1f, 1f);
                        if (vector2_1 != Vector2.Zero)
                            vector2_1.Normalize();
                        vector2_1 *= (float)(20.0 + (double)Utils.NextFloat(Main.rand) * 400.0);
                        bool flag1 = true;
                        Vector2 vector2_2 = this.Center + vector2_1;
                        Point point1 = Utils.ToTileCoordinates(vector2_2);
                        if (!WorldGen.InWorld(point1.X, point1.Y, 0))
                            flag1 = false;
                        if (flag1 && WorldGen.SolidTile(point1.X, point1.Y))
                            flag1 = false;
                        float num1 = (float)Main.rand.Next(6, 19);
                        float num2 = 6.283185f / num1;
                        float num3 = 6.283185f * Utils.NextFloat(Main.rand);
                        float num4 = (float)(1.0 + (double)Utils.NextFloat(Main.rand) * 2.0);
                        float num5 = 1f + Utils.NextFloat(Main.rand);
                        float num6 = 0.4f + Utils.NextFloat(Main.rand);
                        int Type = Utils.SelectRandom<int>(Main.rand, 31, 229);
                        if (flag1)
                        {
                            MoonlordDeathDrama.AddExplosion(vector2_2);
                            for (float num7 = 0.0f; (double)num7 < (double)num1 * 2.0; ++num7)
                            {
                                Dust dust = Main.dust[Dust.NewDust(vector2_2, 0, 0, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                                dust.noGravity = true;
                                dust.position = vector2_2;
                                dust.velocity = Utils.RotatedBy(Vector2.UnitY, (double)num3 + (double)num2 * (double)num7, new Vector2()) * num4 * (float)((double)Utils.NextFloat(Main.rand) * 1.60000002384186 + 1.60000002384186);
                                dust.fadeIn = num6;
                                dust.scale = num5;
                            }
                        }
                        for (float num7 = 0.0f; (double)num7 < (double)this.ai[1] / 60.0; ++num7)
                        {
                            Vector2 vector2_3 = Utils.RandomVector2(Main.rand, -1f, 1f);
                            if (vector2_3 != Vector2.Zero)
                                vector2_3.Normalize();
                            vector2_3 *= (float)(20.0 + (double)Utils.NextFloat(Main.rand) * 800.0);
                            Vector2 vector2_4 = this.Center + vector2_3;
                            Point point2 = Utils.ToTileCoordinates(vector2_4);
                            bool flag2 = true;
                            if (!WorldGen.InWorld(point2.X, point2.Y, 0))
                                flag2 = false;
                            if (flag2 && WorldGen.SolidTile(point2.X, point2.Y))
                                flag2 = false;
                            if (flag2)
                            {
                                Dust dust = Main.dust[Dust.NewDust(vector2_4, 0, 0, Type, 0.0f, 0.0f, 0, new Color(), 1f)];
                                dust.noGravity = true;
                                dust.position = vector2_4;
                                dust.velocity = -Vector2.UnitY * num4 * (float)((double)Utils.NextFloat(Main.rand) * 0.899999976158142 + 1.60000002384186);
                                dust.fadeIn = num6;
                                dust.scale = num5;
                            }
                        }
                    }
                    if ((double)this.ai[1] % 15.0 == 0.0 && (double)this.ai[1] < 480.0 && ((double)this.ai[1] >= 90.0 && Main.netMode != 1))
                    {
                        Vector2 vector2_1 = Utils.RandomVector2(Main.rand, -1f, 1f);
                        if (vector2_1 != Vector2.Zero)
                            vector2_1.Normalize();
                        vector2_1 *= (float)(20.0 + (double)Utils.NextFloat(Main.rand) * 400.0);
                        bool flag = true;
                        Vector2 vec = this.Center + vector2_1;
                        Point point = Utils.ToTileCoordinates(vec);
                        if (!WorldGen.InWorld(point.X, point.Y, 0))
                            flag = false;
                        if (flag && WorldGen.SolidTile(point.X, point.Y))
                            flag = false;
                        if (flag)
                        {
                            float num = (float)Utils.ToDirectionInt(Main.rand.Next(4) < 2) * (float)(0.392699092626572 + 0.785398185253143 * (double)Utils.NextFloat(Main.rand));
                            Vector2 vector2_2 = Utils.RotatedBy(new Vector2(0.0f, (float)(-(double)Utils.NextFloat(Main.rand) * 0.5 - 0.5)), (double)num, new Vector2()) * 6f;
                            Projectile.NewProjectile(vec.X, vec.Y, vector2_2.X, vector2_2.Y, 622, 0, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        }
                    }
                    if ((double)this.ai[1] == 1.0)
                        Main.PlaySound(4, (int)this.Center.X, (int)this.Center.Y, 61);
                    if ((double)this.ai[1] >= 480.0)
                        MoonlordDeathDrama.RequestLight((float)(((double)this.ai[1] - 480.0) / 120.0), this.Center);
                    if ((double)this.ai[1] >= 600.0)
                    {
                        this.life = 0;
                        this.HitEffect(0, 1337.0);
                        this.checkDead();
                        return;
                    }
                }
                else if ((double)this.ai[0] == 3.0)
                {
                    this.dontTakeDamage = true;
                    this.velocity = Vector2.Lerp(this.velocity, new Vector2((float)this.direction, -0.5f), 0.98f);
                    ++this.ai[1];
                    if ((double)this.ai[1] < 60.0)
                        MoonlordDeathDrama.RequestLight(this.ai[1] / 40f, this.Center);
                    if ((double)this.ai[1] == 40.0)
                    {
                        for (int number = 0; number < 1000; ++number)
                        {
                            Projectile projectile = Main.projectile[number];
                            if (projectile.active && (projectile.type == 456 || projectile.type == 462 || (projectile.type == 455 || projectile.type == 452) || projectile.type == 454))
                            {
                                projectile.active = false;
                                NetMessage.SendData(27, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                            }
                        }
                        for (int index = 0; index < 200; ++index)
                        {
                            NPC npc = Main.npc[index];
                            if (npc.active && npc.type == 400)
                            {
                                npc.active = false;
                                if (Main.netMode != 1)
                                    NetMessage.SendData(23, -1, -1, "", npc.whoAmI, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                            }
                        }
                        for (int index = 0; index < 500; ++index)
                        {
                            Gore gore = Main.gore[index];
                            if (gore.active && gore.type >= 619 && gore.type <= 622)
                                gore.active = false;
                        }
                    }
                    if ((double)this.ai[1] == 60.0)
                    {
                        for (int index = 0; index < 200; ++index)
                        {
                            NPC npc = Main.npc[index];
                            if (npc.active && (npc.type == 400 || npc.type == 397 || npc.type == 396))
                            {
                                npc.active = false;
                                if (Main.netMode != 1)
                                    NetMessage.SendData(23, -1, -1, "", npc.whoAmI, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                            }
                        }
                        this.active = false;
                        NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                        NPC.LunarApocalypseIsUp = false;
                        if (Main.netMode != 2)
                            return;
                        NetMessage.SendData(7, -1, -1, "", 0, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                        return;
                    }
                }
                bool flag3 = false;
                if (Main.player[this.target].active && !Main.player[this.target].dead)
                    flag3 = true;
                if (!flag3)
                {
                    for (int index = 0; index < (int)byte.MaxValue; ++index)
                    {
                        if (Main.player[index].active && !Main.player[index].dead)
                        {
                            flag3 = true;
                            break;
                        }
                    }
                }
                if (flag3)
                    return;
                this.ai[0] = 3f;
                this.netUpdate = true;
            }
            else if (this.aiStyle == 78)
            {
                NPC.InitializeMoonLordAttacks();
                if (!Main.npc[(int)this.ai[3]].active || Main.npc[(int)this.ai[3]].type != 398)
                {
                    this.life = 0;
                    this.HitEffect(0, 10.0);
                    this.active = false;
                }
                bool flag1 = (double)this.ai[2] == 0.0;
                float num1 = (float)-Utils.ToDirectionInt(flag1);
                this.spriteDirection = (int)num1;
                this.dontTakeDamage = this.frameCounter >= 21.0;
                Vector2 vector2_1 = new Vector2(30f, 66f);
                float num2 = 0.0f;
                float num3 = 0.0f;
                bool flag2 = true;
                int num4 = 0;
                if ((double)this.ai[0] != -2.0)
                {
                    float num5 = this.ai[0];
                    ++this.ai[1];
                    int index1 = (int)Main.npc[(int)this.ai[3]].ai[2];
                    int index2 = flag1 ? 0 : 1;
                    int index3 = 0;
                    int num6 = 0;
                    for (; index3 < 5; ++index3)
                    {
                        num3 = (float)NPC.MoonLordAttacksArray[index1, index2, 1, index3];
                        if ((double)num3 + (double)num6 <= (double)this.ai[1])
                            num6 += (int)num3;
                        else
                            break;
                    }
                    if (index3 == 5)
                    {
                        index3 = 0;
                        this.ai[1] = 0.0f;
                        num3 = (float)NPC.MoonLordAttacksArray[index1, index2, 1, index3];
                        num6 = 0;
                    }
                    this.ai[0] = (float)NPC.MoonLordAttacksArray[index1, index2, 0, index3];
                    num2 = (float)((int)this.ai[1] - num6);
                    if ((double)this.ai[0] != (double)num5)
                        this.netUpdate = true;
                }
                if ((double)this.ai[0] == -2.0)
                {
                    this.damage = 80;
                    num4 = 0;
                    this.dontTakeDamage = true;
                    ++this.ai[1];
                    if ((double)this.ai[1] >= 32.0)
                        this.ai[1] = 0.0f;
                    if ((double)this.ai[1] < 0.0)
                        this.ai[1] = 0.0f;
                    Vector2 vector2_2 = Main.npc[(int)this.ai[3]].Center + new Vector2(350f * num1, -100f) - this.Center;
                    if ((double)vector2_2.Length() > 20.0)
                    {
                        vector2_2.Normalize();
                        Vector2 desiredVelocity = vector2_2 * 6f;
                        Vector2 vector2_3 = this.velocity;
                        if (desiredVelocity != Vector2.Zero)
                            this.SimpleFlyMovement(desiredVelocity, 0.3f);
                        this.velocity = Vector2.Lerp(vector2_3, this.velocity, 0.5f);
                    }
                }
                else if ((double)this.ai[0] == 0.0)
                {
                    num4 = 3;
                    this.localAI[1] -= 0.05f;
                    if ((double)this.localAI[1] < 0.0)
                        this.localAI[1] = 0.0f;
                    Vector2 vector2_2 = Main.npc[(int)this.ai[3]].Center + new Vector2(350f * num1, -100f) - this.Center;
                    if ((double)vector2_2.Length() > 20.0)
                    {
                        vector2_2.Normalize();
                        Vector2 desiredVelocity = vector2_2 * 6f;
                        Vector2 vector2_3 = this.velocity;
                        if (desiredVelocity != Vector2.Zero)
                            this.SimpleFlyMovement(desiredVelocity, 0.3f);
                        this.velocity = Vector2.Lerp(vector2_3, this.velocity, 0.5f);
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    num4 = 0;
                    int num5 = 7;
                    int num6 = 4;
                    if ((double)num2 >= (double)(num5 * num6 * 2))
                    {
                        this.localAI[1] -= 0.07f;
                        if ((double)this.localAI[1] < 0.0)
                            this.localAI[1] = 0.0f;
                    }
                    else if ((double)num2 >= (double)(num5 * num6))
                    {
                        this.localAI[1] += 0.05f;
                        if ((double)this.localAI[1] > 0.75)
                            this.localAI[1] = 0.75f;
                        float num7 = (float)(6.28318548202515 * ((double)num2 % (double)(num5 * num6)) / (double)(num5 * num6) - 1.57079637050629);
                        this.localAI[0] = Utils.ToRotation(new Vector2((float)Math.Cos((double)num7) * vector2_1.X, (float)Math.Sin((double)num7) * vector2_1.Y));
                        if ((double)num2 % (double)num6 == 0.0)
                        {
                            Vector2 vector2_2 = new Vector2((float)(1.0 * -(double)num1), 3f);
                            Vector2 vector2_3 = Utils.Vector2FromElipse(Utils.ToRotationVector2(this.localAI[0]), vector2_1 * this.localAI[1]);
                            Vector2 vector2_4 = this.Center + Vector2.Normalize(vector2_3) * vector2_1.Length() * 0.4f + vector2_2;
                            Vector2 vector2_5 = Vector2.Normalize(vector2_3) * 8f;
                            float ai1 = (float)((6.28318548202515 * Main.rand.NextDouble() - 3.14159274101257) / 30.0 + Math.PI / 180.0 * (double)num1);
                            Projectile.NewProjectile(vector2_4.X, vector2_4.Y, vector2_5.X, vector2_5.Y, 452, 30, 0.0f, Main.myPlayer, 0.0f, ai1);
                        }
                    }
                    else
                    {
                        this.localAI[1] += 0.02f;
                        if ((double)this.localAI[1] > 0.75)
                            this.localAI[1] = 0.75f;
                        float num7 = (float)(6.28318548202515 * ((double)num2 % (double)(num5 * num6)) / (double)(num5 * num6) - 1.57079637050629);
                        this.localAI[0] = Utils.ToRotation(new Vector2((float)Math.Cos((double)num7) * vector2_1.X, (float)Math.Sin((double)num7) * vector2_1.Y));
                    }
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    this.localAI[1] -= 0.05f;
                    if ((double)this.localAI[1] < 0.0)
                        this.localAI[1] = 0.0f;
                    Vector2 center = Main.npc[(int)this.ai[3]].Center;
                    Vector2 vector2_2 = new Vector2(220f * num1, -60f) + center + new Vector2(num1 * 100f, -50f);
                    Vector2 vector2_3 = new Vector2(400f * num1, -60f);
                    if ((double)num2 < 30.0)
                    {
                        Vector2 vector2_4 = vector2_2 - this.Center;
                        if (vector2_4 != Vector2.Zero)
                        {
                            Vector2 vector2_5 = vector2_4;
                            vector2_5.Normalize();
                            this.velocity = Vector2.SmoothStep(this.velocity, vector2_5 * Math.Min(8f, vector2_4.Length()), 0.2f);
                        }
                    }
                    else if ((double)num2 < 210.0)
                    {
                        num4 = 1;
                        int num5 = (int)num2 - 30;
                        if (num5 % 30 == 0 && Main.netMode != 1)
                        {
                            Vector2 vector2_4 = new Vector2(5f * num1, -8f);
                            int num6 = num5 / 30;
                            vector2_4.X += (float)(((double)num6 - 3.5) * (double)num1 * 3.0);
                            vector2_4.Y += (float)(((double)num6 - 4.5) * 1.0);
                            vector2_4 *= 1.2f;
                            Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2_4.X, vector2_4.Y, 454, 50, 1f, Main.myPlayer, 0.0f, (float)this.whoAmI);
                        }
                        Vector2 vector2_5 = Vector2.SmoothStep(vector2_2, vector2_2 + vector2_3, (float)(((double)num2 - 30.0) / 180.0)) - this.Center;
                        if (vector2_5 != Vector2.Zero)
                        {
                            Vector2 vector2_4 = vector2_5;
                            vector2_4.Normalize();
                            this.velocity = Vector2.Lerp(this.velocity, vector2_4 * Math.Min(20f, vector2_5.Length()), 0.5f);
                        }
                    }
                    else if ((double)num2 < 282.0)
                    {
                        num4 = 0;
                        NPC npc = this;
                        Vector2 vector2_4 = npc.velocity * 0.9f;
                        npc.velocity = vector2_4;
                    }
                    else if ((double)num2 < 287.0)
                    {
                        num4 = 1;
                        NPC npc = this;
                        Vector2 vector2_4 = npc.velocity * 0.9f;
                        npc.velocity = vector2_4;
                    }
                    else if ((double)num2 < 292.0)
                    {
                        num4 = 2;
                        NPC npc = this;
                        Vector2 vector2_4 = npc.velocity * 0.9f;
                        npc.velocity = vector2_4;
                    }
                    else if ((double)num2 < 300.0)
                    {
                        num4 = 3;
                        if ((double)num2 == 292.0 && Main.netMode != 1)
                        {
                            int index1 = (int)Player.FindClosest(this.position, this.width, this.height);
                            Vector2 vector2_4 = Vector2.Normalize(Main.player[index1].Center - this.Center + Vector2.UnitY * -350f);
                            if (float.IsNaN(vector2_4.X) || float.IsNaN(vector2_4.Y))
                                vector2_4 = Vector2.UnitY;
                            vector2_4 *= 12f;
                            for (int index2 = 0; index2 < 1000; ++index2)
                            {
                                Projectile projectile = Main.projectile[index2];
                                if (projectile.active && projectile.type == 454 && ((double)projectile.ai[1] == (double)this.whoAmI && (double)projectile.ai[0] != -1.0))
                                {
                                    projectile.ai[0] = -1f;
                                    projectile.velocity = vector2_4;
                                    projectile.netUpdate = true;
                                }
                            }
                        }
                        Vector2 vector2_5 = Vector2.SmoothStep(vector2_2, vector2_2 + vector2_3, (float)(1.0 - ((double)num2 - 270.0) / 30.0)) - this.Center;
                        if (vector2_5 != Vector2.Zero)
                        {
                            Vector2 vector2_4 = vector2_5;
                            vector2_4.Normalize();
                            this.velocity = Vector2.Lerp(this.velocity, vector2_4 * Math.Min(14f, vector2_5.Length()), 0.1f);
                        }
                    }
                    else
                    {
                        num4 = 3;
                        Vector2 vector2_4 = vector2_2 - this.Center;
                        if (vector2_4 != Vector2.Zero)
                        {
                            Vector2 vector2_5 = vector2_4;
                            vector2_5.Normalize();
                            this.velocity = Vector2.SmoothStep(this.velocity, vector2_5 * Math.Min(8f, vector2_4.Length()), 0.2f);
                        }
                    }
                }
                else if ((double)this.ai[0] == 3.0)
                {
                    if ((double)num2 == 0.0)
                    {
                        this.TargetClosest(false);
                        this.netUpdate = true;
                    }
                    Vector2 v = Main.player[this.target].Center + Main.player[this.target].velocity * 20f - this.Center;
                    this.localAI[0] = Utils.AngleLerp(this.localAI[0], Utils.ToRotation(v), 0.5f);
                    this.localAI[1] += 0.05f;
                    if ((double)this.localAI[1] > 1.0)
                        this.localAI[1] = 1f;
                    if ((double)num2 == (double)num3 - 35.0)
                        Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 6);
                    if (((double)num2 == (double)num3 - 14.0 || (double)num2 == (double)num3 - 7.0 || (double)num2 == (double)num3) && Main.netMode != 1)
                    {
                        Vector2 vector2_2 = Utils.Vector2FromElipse(Utils.ToRotationVector2(this.localAI[0]), vector2_1 * this.localAI[1]);
                        Vector2 vector2_3 = Vector2.Normalize(v) * 8f;
                        Projectile.NewProjectile(this.Center.X + vector2_2.X, this.Center.Y + vector2_2.Y, vector2_3.X, vector2_3.Y, 462, 30, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                }
                if (flag2)
                {
                    Vector2 center = Main.npc[(int)this.ai[3]].Center;
                    Vector2 min = new Vector2(220f * num1, -60f) + center + new Vector2(num1 * 110f, -150f);
                    Vector2 max = min + new Vector2(num1 * 370f, 150f);
                    if ((double)min.X > (double)max.X)
                        Utils.Swap<float>(ref min.X, ref max.X);
                    if ((double)min.Y > (double)max.Y)
                        Utils.Swap<float>(ref min.Y, ref max.Y);
                    Vector2 vector2_2 = Vector2.Clamp(this.Center + this.velocity, min, max);
                    if (vector2_2 != this.Center + this.velocity)
                        this.Center = vector2_2 - this.velocity;
                }
                int num8 = num4 * 7;
                if ((double)num8 > this.frameCounter)
                    ++this.frameCounter;
                if ((double)num8 < this.frameCounter)
                    --this.frameCounter;
                if (this.frameCounter < 0.0)
                    this.frameCounter = 0.0;
                if (this.frameCounter > 21.0)
                    this.frameCounter = 21.0;
                int num9 = 0;
                if (flag1)
                    num9 = 0;
                if (num9 == 0)
                    return;
                if (num9 == 1)
                {
                    if ((double)this.ai[0] == 0.0)
                    {
                        if ((double)++this.ai[1] >= 20.0)
                        {
                            this.ai[1] = 0.0f;
                            this.ai[0] = 1f;
                            this.netUpdate = true;
                        }
                        this.velocity = Vector2.UnitX * 4f;
                    }
                    else if ((double)this.ai[0] == 1.0)
                    {
                        if ((double)++this.ai[1] >= 20.0)
                        {
                            this.ai[1] = 0.0f;
                            this.ai[0] = 2f;
                            this.netUpdate = true;
                        }
                        this.velocity = Vector2.UnitX * -4f;
                    }
                    else if ((double)this.ai[0] == 2.0 || (double)this.ai[0] == 4.0)
                    {
                        if ((double)++this.ai[1] >= 20.0)
                        {
                            this.ai[1] = 0.0f;
                            ++this.ai[0];
                            this.netUpdate = true;
                        }
                        this.velocity = Vector2.UnitY * -4f * (flag1 ? 1f : -1f);
                    }
                    else
                    {
                        if ((double)this.ai[0] != 3.0 && (double)this.ai[0] != 5.0)
                            return;
                        if ((double)++this.ai[1] >= 20.0)
                        {
                            this.ai[1] = 0.0f;
                            ++this.ai[0];
                            if ((double)this.ai[0] == 6.0)
                                this.ai[0] = 0.0f;
                            this.netUpdate = true;
                        }
                        this.velocity = Vector2.UnitY * 4f * (flag1 ? 1f : -1f);
                    }
                }
                else if (num9 == 2)
                {
                    Vector2 vector2_2 = new Vector2(30f, 66f);
                    this.TargetClosest(false);
                    Vector2 v = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - this.Center;
                    float num5 = v.Length() / 200f;
                    if ((double)num5 > 1.0)
                        num5 = 1f;
                    float num6 = (1f - num5) * 2f;
                    if ((double)num6 > 1.0)
                        num6 = 1f;
                    this.localAI[0] = Utils.ToRotation(v);
                    this.localAI[1] = num6;
                    this.localAI[1] = 1f;
                }
                else if (num9 == 3)
                {
                    int num5 = 7;
                    int num6 = 4;
                    ++this.ai[1];
                    if ((double)this.ai[1] >= (double)(num5 * num6 * 10))
                        this.ai[1] = 0.0f;
                    else if ((double)this.ai[1] >= (double)(num5 * num6))
                    {
                        this.localAI[1] -= 0.07f;
                        if ((double)this.localAI[1] >= 0.0)
                            return;
                        this.localAI[1] = 0.0f;
                    }
                    else
                    {
                        this.localAI[1] += 0.05f;
                        if ((double)this.localAI[1] > 0.75)
                            this.localAI[1] = 0.75f;
                        float num7 = (float)(6.28318548202515 * ((double)this.ai[1] % (double)(num5 * num6)) / (double)(num5 * num6) - 1.57079637050629);
                        this.localAI[0] = Utils.ToRotation(new Vector2((float)Math.Cos((double)num7) * vector2_1.X, (float)Math.Sin((double)num7) * vector2_1.Y));
                        if ((double)this.ai[1] % (double)num6 != 0.0)
                            return;
                        Vector2 vector2_2 = new Vector2((float)(1.0 * -(double)num1), 3f);
                        Vector2 vector2_3 = Utils.Vector2FromElipse(Utils.ToRotationVector2(this.localAI[0]), vector2_1 * this.localAI[1]);
                        Vector2 vector2_4 = this.Center + Vector2.Normalize(vector2_3) * vector2_1.Length() * 0.4f + vector2_2;
                        Vector2 vector2_5 = Vector2.Normalize(vector2_3) * 8f;
                        float ai1 = (float)((6.28318548202515 * Main.rand.NextDouble() - 3.14159274101257) / 30.0 + Math.PI / 180.0 * (double)num1);
                        Projectile.NewProjectile(vector2_4.X, vector2_4.Y, vector2_5.X, vector2_5.Y, 452, 5, 0.0f, Main.myPlayer, 0.0f, ai1);
                    }
                }
                else if (num9 == 4)
                {
                    Vector2 center = Main.npc[(int)this.ai[3]].Center;
                    Vector2 vector2_2 = new Vector2(220f * num1, -60f) + center + new Vector2(num1 * 100f, -50f);
                    Vector2 vector2_3 = new Vector2(400f * num1, -60f);
                    ++this.ai[1];
                    if ((double)this.ai[1] < 30.0)
                    {
                        Vector2 vector2_4 = vector2_2 - this.Center;
                        if (!(vector2_4 != Vector2.Zero))
                            return;
                        Vector2 vector2_5 = vector2_4;
                        vector2_5.Normalize();
                        this.velocity = Vector2.SmoothStep(this.velocity, vector2_5 * Math.Min(8f, vector2_4.Length()), 0.2f);
                    }
                    else if ((double)this.ai[1] < 210.0)
                    {
                        int num5 = (int)this.ai[1] - 30;
                        if (num5 % 30 == 0 && Main.netMode != 1)
                        {
                            Vector2 vector2_4 = new Vector2(5f * num1, -8f);
                            int num6 = num5 / 30;
                            vector2_4.X += (float)(((double)num6 - 3.5) * (double)num1 * 3.0);
                            vector2_4.Y += (float)(((double)num6 - 4.5) * 1.0);
                            vector2_4 *= 1.2f;
                            Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2_4.X, vector2_4.Y, 454, 1, 1f, Main.myPlayer, 0.0f, (float)this.whoAmI);
                        }
                        Vector2 vector2_5 = Vector2.SmoothStep(vector2_2, vector2_2 + vector2_3, (float)(((double)this.ai[1] - 30.0) / 180.0)) - this.Center;
                        if (!(vector2_5 != Vector2.Zero))
                            return;
                        Vector2 vector2_6 = vector2_5;
                        vector2_6.Normalize();
                        this.velocity = Vector2.Lerp(this.velocity, vector2_6 * Math.Min(4f, vector2_5.Length()), 0.1f);
                    }
                    else if ((double)this.ai[1] < 270.0)
                    {
                        NPC npc = this;
                        Vector2 vector2_4 = npc.velocity * 0.9f;
                        npc.velocity = vector2_4;
                    }
                    else if ((double)this.ai[1] < 300.0)
                    {
                        if ((double)this.ai[1] == 270.0 && Main.netMode != 1)
                        {
                            int index1 = (int)Player.FindClosest(this.position, this.width, this.height);
                            Vector2 vector2_4 = Vector2.Normalize(Main.player[index1].Center - this.Center + Vector2.UnitY * -350f);
                            if (float.IsNaN(vector2_4.X) || float.IsNaN(vector2_4.Y))
                                vector2_4 = Vector2.UnitY;
                            vector2_4 *= 12f;
                            for (int index2 = 0; index2 < 1000; ++index2)
                            {
                                Projectile projectile = Main.projectile[index2];
                                if (projectile.active && projectile.type == 454 && ((double)projectile.ai[1] == (double)this.whoAmI && (double)projectile.ai[0] != -1.0))
                                {
                                    projectile.ai[0] = -1f;
                                    projectile.velocity = vector2_4;
                                    projectile.netUpdate = true;
                                }
                            }
                        }
                        Vector2 vector2_5 = Vector2.SmoothStep(vector2_2, vector2_2 + vector2_3, (float)(1.0 - ((double)this.ai[1] - 270.0) / 30.0)) - this.Center;
                        if (!(vector2_5 != Vector2.Zero))
                            return;
                        Vector2 vector2_6 = vector2_5;
                        vector2_6.Normalize();
                        this.velocity = Vector2.Lerp(this.velocity, vector2_6 * Math.Min(14f, vector2_5.Length()), 0.1f);
                    }
                    else
                        this.ai[1] = 0.0f;
                }
                else
                {
                    if (num9 != 5)
                        return;
                    this.dontTakeDamage = true;
                    ++this.ai[1];
                    if ((double)this.ai[1] < 40.0)
                        return;
                    this.ai[1] = 0.0f;
                }
            }
            else if (this.aiStyle == 79)
            {
                if (!Main.npc[(int)this.ai[3]].active || Main.npc[(int)this.ai[3]].type != 398)
                {
                    this.life = 0;
                    this.HitEffect(0, 10.0);
                    this.active = false;
                }
                this.dontTakeDamage = (double)this.localAI[3] >= 15.0;
                this.velocity = Vector2.Zero;
                this.Center = Main.npc[(int)this.ai[3]].Center + new Vector2(0.0f, -400f);
                Vector2 vector2_1 = new Vector2(27f, 59f);
                float num1 = 0.0f;
                float num2 = 0.0f;
                int num3 = 0;
                int num4 = 0;
                if ((double)this.ai[0] >= 0.0)
                {
                    float num5 = this.ai[0];
                    ++this.ai[1];
                    int index1 = (int)Main.npc[(int)this.ai[3]].ai[2];
                    int index2 = 2;
                    int index3 = 0;
                    int num6 = 0;
                    for (; index3 < 5; ++index3)
                    {
                        num2 = (float)NPC.MoonLordAttacksArray[index1, index2, 1, index3];
                        if ((double)num2 + (double)num6 <= (double)this.ai[1])
                            num6 += (int)num2;
                        else
                            break;
                    }
                    if (index3 == 5)
                    {
                        index3 = 0;
                        this.ai[1] = 0.0f;
                        num2 = (float)NPC.MoonLordAttacksArray[index1, index2, 1, index3];
                        num6 = 0;
                    }
                    this.ai[0] = (float)NPC.MoonLordAttacksArray[index1, index2, 0, index3];
                    num1 = (float)((int)this.ai[1] - num6);
                    if ((double)this.ai[0] != (double)num5)
                        this.netUpdate = true;
                }
                if ((double)this.ai[0] == -3.0)
                {
                    this.damage = 0;
                    this.dontTakeDamage = true;
                    this.rotation = MathHelper.Lerp(this.rotation, 0.2617994f, 0.07f);
                    ++this.ai[1];
                    if ((double)this.ai[1] >= 32.0)
                        this.ai[1] = 0.0f;
                    if ((double)this.ai[1] < 0.0)
                        this.ai[1] = 0.0f;
                    if ((double)this.localAI[2] < 14.0)
                        ++this.localAI[2];
                }
                else if ((double)this.ai[0] == -2.0)
                {
                    if ((double)Main.npc[(int)this.ai[3]].ai[0] == 2.0)
                    {
                        this.ai[0] = -3f;
                        return;
                    }
                    this.damage = 80;
                    this.dontTakeDamage = true;
                    ++this.ai[1];
                    if ((double)this.ai[1] >= 32.0)
                        this.ai[1] = 0.0f;
                    if ((double)this.ai[1] < 0.0)
                        this.ai[1] = 0.0f;
                    ++this.ai[2];
                    if ((double)this.ai[2] >= 555.0)
                        this.ai[2] = 0.0f;
                    if ((double)this.ai[2] >= 120.0)
                    {
                        num1 = this.ai[2] - 120f;
                        num2 = 555f;
                        num3 = 2;
                        Vector2 vector2_2 = new Vector2(0.0f, 216f);
                        if ((double)num1 == 0.0 && Main.netMode != 1)
                        {
                            Vector2 vector2_3 = this.Center + vector2_2;
                            for (int index = 0; index < (int)byte.MaxValue; ++index)
                            {
                                Player player = Main.player[index];
                                if (player.active && !player.dead && (double)Vector2.Distance(player.Center, vector2_3) <= 3000.0)
                                {
                                    Vector2 vector2_4 = Main.player[this.target].Center - vector2_3;
                                    if (vector2_4 != Vector2.Zero)
                                        vector2_4.Normalize();
                                    Projectile.NewProjectile(vector2_3.X, vector2_3.Y, vector2_4.X, vector2_4.Y, 456, 0, 0.0f, Main.myPlayer, (float)(this.whoAmI + 1), (float)index);
                                }
                            }
                        }
                        if (((double)num1 == 120.0 || (double)num1 == 180.0 || (double)num1 == 240.0) && Main.netMode != 1)
                        {
                            for (int index1 = 0; index1 < 1000; ++index1)
                            {
                                Projectile projectile = Main.projectile[index1];
                                if (projectile.active && projectile.type == 456 && Main.player[(int)projectile.ai[1]].HasBuff(145) != -1)
                                {
                                    Vector2 center = Main.player[this.target].Center;
                                    int index2 = NPC.NewNPC((int)center.X, (int)center.Y, 401, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    Main.npc[index2].netUpdate = true;
                                    Main.npc[index2].ai[0] = (float)(this.whoAmI + 1);
                                    Main.npc[index2].ai[1] = (float)index1;
                                }
                            }
                        }
                    }
                }
                else if ((double)this.ai[0] == 0.0)
                {
                    num4 = 3;
                    this.TargetClosest(false);
                    Vector2 v = Main.player[this.target].Center - this.Center - new Vector2(0.0f, -22f);
                    float num5 = v.Length() / 500f;
                    if ((double)num5 > 1.0)
                        num5 = 1f;
                    float num6 = (1f - num5) * 2f;
                    if ((double)num6 > 1.0)
                        num6 = 1f;
                    this.localAI[0] = Utils.ToRotation(v);
                    this.localAI[1] = num6;
                    this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
                }
                if ((double)this.ai[0] == 1.0)
                {
                    if ((double)num1 < 180.0)
                    {
                        this.localAI[1] -= 0.05f;
                        if ((double)this.localAI[1] < 0.0)
                            this.localAI[1] = 0.0f;
                        if ((double)num1 >= 60.0)
                        {
                            Vector2 center = this.Center;
                            int num5 = 0;
                            if ((double)num1 >= 120.0)
                                num5 = 1;
                            for (int index1 = 0; index1 < 1 + num5; ++index1)
                            {
                                int Type = 229;
                                float num6 = 0.8f;
                                if (index1 % 2 == 1)
                                {
                                    Type = 229;
                                    num6 = 1.65f;
                                }
                                Vector2 vector2_2 = center + Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f) * vector2_1 / 2f;
                                int index2 = Dust.NewDust(vector2_2 - Vector2.One * 8f, 16, 16, Type, this.velocity.X / 2f, this.velocity.Y / 2f, 0, new Color(), 1f);
                                Main.dust[index2].velocity = Vector2.Normalize(center - vector2_2) * 3.5f * (float)(10.0 - (double)num5 * 2.0) / 10f;
                                Main.dust[index2].noGravity = true;
                                Main.dust[index2].scale = num6;
                                Main.dust[index2].customData = (object)this;
                            }
                        }
                    }
                    else if ((double)num1 < (double)num2 - 15.0)
                    {
                        if ((double)num1 == 180.0 && Main.netMode != 1)
                        {
                            this.TargetClosest(false);
                            Vector2 spinningpoint = Main.player[this.target].Center - this.Center;
                            spinningpoint.Normalize();
                            float num5 = -1f;
                            if ((double)spinningpoint.X < 0.0)
                                num5 = 1f;
                            Vector2 v = Utils.RotatedBy(spinningpoint, -(double)num5 * 6.28318548202515 / 6.0, new Vector2());
                            Projectile.NewProjectile(this.Center.X, this.Center.Y, v.X, v.Y, 455, 75, 0.0f, Main.myPlayer, (float)((double)num5 * 6.28318548202515 / 540.0), (float)this.whoAmI);
                            this.ai[2] = (Utils.ToRotation(v) + 9.424778f) * num5;
                            this.netUpdate = true;
                        }
                        this.localAI[1] += 0.05f;
                        if ((double)this.localAI[1] > 1.0)
                            this.localAI[1] = 1f;
                        float num6 = (float)Utils.ToDirectionInt((double)this.ai[2] >= 0.0);
                        float num7 = this.ai[2];
                        if ((double)num7 < 0.0)
                            num7 *= -1f;
                        float num8 = num7 - 9.424778f + (float)((double)num6 * 6.28318548202515 / 540.0);
                        this.localAI[0] = num8;
                        this.ai[2] = (num8 + 9.424778f) * num6;
                    }
                    else
                    {
                        this.localAI[1] -= 0.07f;
                        if ((double)this.localAI[1] < 0.0)
                            this.localAI[1] = 0.0f;
                        num4 = 3;
                    }
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    num3 = 2;
                    num4 = 3;
                    Vector2 vector2_2 = new Vector2(0.0f, 216f);
                    if ((double)num1 == 0.0 && Main.netMode != 1)
                    {
                        Vector2 vector2_3 = this.Center + vector2_2;
                        for (int index = 0; index < (int)byte.MaxValue; ++index)
                        {
                            Player player = Main.player[index];
                            if (player.active && !player.dead && (double)Vector2.Distance(player.Center, vector2_3) <= 3000.0)
                            {
                                Vector2 vector2_4 = Main.player[this.target].Center - vector2_3;
                                if (vector2_4 != Vector2.Zero)
                                    vector2_4.Normalize();
                                Projectile.NewProjectile(vector2_3.X, vector2_3.Y, vector2_4.X, vector2_4.Y, 456, 0, 0.0f, Main.myPlayer, (float)(this.whoAmI + 1), (float)index);
                            }
                        }
                    }
                    if (((double)num1 == 120.0 || (double)num1 == 180.0 || (double)num1 == 240.0) && Main.netMode != 1)
                    {
                        for (int index1 = 0; index1 < 1000; ++index1)
                        {
                            Projectile projectile = Main.projectile[index1];
                            if (projectile.active && projectile.type == 456 && Main.player[(int)projectile.ai[1]].HasBuff(145) != -1)
                            {
                                Vector2 center = Main.player[this.target].Center;
                                int index2 = NPC.NewNPC((int)center.X, (int)center.Y, 401, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                Main.npc[index2].netUpdate = true;
                                Main.npc[index2].ai[0] = (float)(this.whoAmI + 1);
                                Main.npc[index2].ai[1] = (float)index1;
                            }
                        }
                    }
                }
                else if ((double)this.ai[0] == 3.0)
                {
                    if ((double)num1 == 0.0)
                    {
                        this.TargetClosest(false);
                        this.netUpdate = true;
                    }
                    Vector2 v = Main.player[this.target].Center + Main.player[this.target].velocity * 20f - this.Center;
                    this.localAI[0] = Utils.AngleLerp(this.localAI[0], Utils.ToRotation(v), 0.5f);
                    this.localAI[1] += 0.05f;
                    if ((double)this.localAI[1] > 1.0)
                        this.localAI[1] = 1f;
                    if ((double)num1 == (double)num2 - 35.0)
                        Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 6);
                    if (((double)num1 == (double)num2 - 14.0 || (double)num1 == (double)num2 - 7.0 || (double)num1 == (double)num2) && Main.netMode != 1)
                    {
                        Vector2 vector2_2 = Utils.Vector2FromElipse(Utils.ToRotationVector2(this.localAI[0]), vector2_1 * this.localAI[1]);
                        Vector2 vector2_3 = Vector2.Normalize(v) * 8f;
                        Projectile.NewProjectile(this.Center.X + vector2_2.X, this.Center.Y + vector2_2.Y, vector2_3.X, vector2_3.Y, 462, 30, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                }
                int num9 = num3 * 7;
                if ((double)num9 > (double)this.localAI[2])
                    ++this.localAI[2];
                if ((double)num9 < (double)this.localAI[2])
                    --this.localAI[2];
                if ((double)this.localAI[2] < 0.0)
                    this.localAI[2] = 0.0f;
                if ((double)this.localAI[2] > 14.0)
                    this.localAI[2] = 14f;
                int num10 = num4 * 5;
                if ((double)num10 > (double)this.localAI[3])
                    ++this.localAI[3];
                if ((double)num10 < (double)this.localAI[3])
                    --this.localAI[3];
                if ((double)this.localAI[3] < 0.0)
                    this.localAI[2] = 0.0f;
                if ((double)this.localAI[3] > 15.0)
                    this.localAI[2] = 15f;
                int num11 = 0;
                if (num11 == 1)
                {
                    Vector2 vector2_2 = new Vector2(27f, 59f);
                    this.TargetClosest(false);
                    Vector2 v = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - this.Center;
                    float num5 = v.Length() / 200f;
                    if ((double)num5 > 1.0)
                        num5 = 1f;
                    float num6 = (1f - num5) * 2f;
                    if ((double)num6 > 1.0)
                        num6 = 1f;
                    this.localAI[0] = Utils.ToRotation(v);
                    this.localAI[1] = num6;
                    this.localAI[1] = 1f;
                }
                if (num11 == 2)
                {
                    Vector2 vector234 = new Vector2(27f, 59f);
                    float num1689 = 6.28318548f * ((float)Main.time % 600f) / 600f;
                    this.localAI[0] = new Vector2((float)Math.Cos((double)num1689) * vector234.X, (float)Math.Sin((double)num1689) * vector234.Y).ToRotation();
                    this.localAI[1] = 0.75f;
                    if (this.ai[1] == 0f)
                    {
                        Vector2 vector235 = num1689.ToRotationVector2();
                        vector235 = Vector2.One;
                        Projectile.NewProjectile(base.Center.X, base.Center.Y, vector235.X, vector235.Y, 455, 1, 0f, Main.myPlayer, 0.0104719754f, (float)this.whoAmI);
                    }
                    this.ai[1] += 1f;
                    if (this.ai[1] >= 600f)
                        this.ai[1] = 0f;
                }
                if (num11 == 3)
                {
                    Vector2 vector2_2 = new Vector2(0.0f, 216f);
                    if ((double)this.ai[1] == 0.0)
                    {
                        this.TargetClosest(false);
                        Vector2 vector2_3 = Main.player[this.target].Center - this.Center;
                        vector2_3.Normalize();
                        Projectile.NewProjectile(this.Center.X + vector2_2.X, this.Center.Y + vector2_2.Y, vector2_3.X, vector2_3.Y, 456, 0, 0.0f, Main.myPlayer, (float)(this.whoAmI + 1), (float)this.target);
                    }
                    ++this.ai[1];
                    if ((double)this.ai[1] >= 600.0)
                        this.ai[1] = 0.0f;
                }
                if (num11 != 4)
                    return;
                Vector2 vector2_5 = new Vector2(27f, 59f);
                this.TargetClosest(false);
                Vector2 v1 = Main.player[this.target].Center + Main.player[this.target].velocity * 20f - this.Center;
                this.localAI[0] = Utils.AngleLerp(this.localAI[0], Utils.ToRotation(v1), 0.5f);
                this.localAI[1] = 1f;
                ++this.ai[1];
                if ((double)this.ai[1] == 55.0)
                    Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 6);
                if ((double)this.ai[1] == 76.0 || (double)this.ai[1] == 83.0 || (double)this.ai[1] == 90.0)
                {
                    vector2_1 = new Vector2(27f, 59f);
                    Vector2 vector2_2 = Utils.Vector2FromElipse(Utils.ToRotationVector2(this.localAI[0]), vector2_1 * this.localAI[1]);
                    Vector2 vector2_3 = Vector2.Normalize(v1) * 8f;
                    Projectile.NewProjectile(this.Center.X + vector2_2.X, this.Center.Y + vector2_2.Y, vector2_3.X, vector2_3.Y, 462, 5, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                }
                if ((double)this.ai[1] < 90.0)
                    return;
                this.ai[1] = 0.0f;
            }
            else if (this.aiStyle == 80)
            {
                if ((double)this.ai[0] == 0.0)
                {
                    if (this.collideX)
                        this.direction = 1 - this.direction;
                    this.velocity.X = (float)(3.0 * (this.direction == 0 ? -1.0 : 1.0));
                    Point point = Utils.ToTileCoordinates(this.Center);
                    int num = 30;
                    for (int index = 0; index < 30; ++index)
                    {
                        if (WorldGen.SolidTile(point.X, point.Y + index))
                        {
                            num = index;
                            break;
                        }
                    }
                    if (num < 15)
                        this.velocity.Y = Math.Max(this.velocity.Y - 0.05f, -3.5f);
                    else if (num < 20)
                        this.velocity.Y *= 0.95f;
                    else
                        this.velocity.Y = Math.Min(this.velocity.Y + 0.05f, 1.5f);
                    float distanceToPlayer;
                    if (this.FindClosestPlayer(out distanceToPlayer) == -1)
                        return;
                    if ((double)distanceToPlayer < 352.0)
                    {
                        this.ai[0] = 1f;
                        this.ai[1] = 0.0f;
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    ++this.ai[1];
                    NPC npc = this;
                    Vector2 vector2 = npc.velocity * 0.95f;
                    npc.velocity = vector2;
                    if ((double)this.ai[1] >= 60.0)
                    {
                        this.ai[1] = 0.0f;
                        this.ai[0] = 2f;
                        int closestPlayer = this.FindClosestPlayer();
                        this.ai[3] = closestPlayer == -1 ? 1f : ((double)Main.player[closestPlayer].Center.X > (double)this.Center.X ? -1f : 1f);
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    this.noTileCollide = true;
                    ++this.ai[1];
                    this.velocity.Y = Math.Max(this.velocity.Y - 0.1f, -10f);
                    this.velocity.X = Math.Min(this.velocity.X + this.ai[3] * 0.05f, 4f);
                    if ((double)this.position.Y < (double)-this.height || (double)this.ai[1] >= 180.0)
                    {
                        Main.StartInvasion(4);
                        this.active = false;
                        this.ai[0] = 3f;
                        this.netUpdate = true;
                    }
                }
                Color color = Color.SkyBlue;
                Vector3 vector3 = color.ToVector3();
                if ((double)this.ai[0] == 2.0)
                {
                    color = Color.Red;
                    vector3 = color.ToVector3();
                }
                Lighting.AddLight(this.Center, vector3 * 0.65f);
            }
            else if (this.aiStyle == 81)
            {
                if (Main.rand.Next(420) == 0)
                    Main.PlaySound(29, (int)this.Center.X, (int)this.Center.Y, Main.rand.Next(100, 101));
                Vector2 vector2_1 = new Vector2(30f);
                if (!Main.npc[(int)this.ai[3]].active || Main.npc[(int)this.ai[3]].type != 398)
                {
                    this.life = 0;
                    this.HitEffect(0, 10.0);
                    this.active = false;
                }
                float num1 = 0.0f;
                float num2 = this.ai[0];
                ++this.ai[1];
                int index1 = 0;
                int num3 = 0;
                for (; index1 < 10; ++index1)
                {
                    num1 = (float)NPC.MoonLordAttacksArray2[1, index1];
                    if ((double)num1 + (double)num3 <= (double)this.ai[1])
                        num3 += (int)num1;
                    else
                        break;
                }
                if (index1 == 10)
                {
                    index1 = 0;
                    this.ai[1] = 0.0f;
                    num1 = (float)NPC.MoonLordAttacksArray2[1, index1];
                    num3 = 0;
                }
                this.ai[0] = (float)NPC.MoonLordAttacksArray2[0, index1];
                float num4 = (float)((int)this.ai[1] - num3);
                if ((double)this.ai[0] != (double)num2)
                    this.netUpdate = true;
                if ((double)this.ai[0] == -1.0)
                {
                    ++this.ai[1];
                    if ((double)this.ai[1] > 180.0)
                        this.ai[1] = 0.0f;
                    float num5;
                    if ((double)this.ai[1] < 60.0)
                    {
                        num5 = 0.75f;
                        this.localAI[0] = 0.0f;
                        this.localAI[1] = (float)Math.Sin((double)this.ai[1] * 6.28318548202515 / 15.0) * 0.35f;
                        if ((double)this.localAI[1] < 0.0)
                            this.localAI[0] = 3.141593f;
                    }
                    else if ((double)this.ai[1] < 120.0)
                    {
                        num5 = 1f;
                        if ((double)this.localAI[1] < 0.5)
                            this.localAI[1] += 0.025f;
                        this.localAI[0] += 0.2094395f;
                    }
                    else
                    {
                        num5 = 1.15f;
                        this.localAI[1] -= 0.05f;
                        if ((double)this.localAI[1] < 0.0)
                            this.localAI[1] = 0.0f;
                    }
                    this.localAI[2] = MathHelper.Lerp(this.localAI[2], num5, 0.3f);
                }
                if ((double)this.ai[0] == 0.0)
                {
                    this.TargetClosest(false);
                    this.localAI[0] = Utils.AngleLerp(this.localAI[0], Utils.ToRotation(Main.player[this.target].Center + Main.player[this.target].velocity * 20f - this.Center), 0.5f);
                    this.localAI[1] += 0.05f;
                    if ((double)this.localAI[1] > 0.699999988079071)
                        this.localAI[1] = 0.7f;
                    this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
                    float num5 = 24f;
                    Vector2 center = this.Center;
                    Vector2 vector2_2 = Vector2.Normalize(Main.player[this.target].Center - center - Vector2.UnitY * 200f) * num5;
                    int num6 = 30;
                    this.velocity.X = (this.velocity.X * (float)(num6 - 1) + vector2_2.X) / (float)num6;
                    this.velocity.Y = (this.velocity.Y * (float)(num6 - 1) + vector2_2.Y) / (float)num6;
                    float num7 = 0.25f;
                    for (int index2 = 0; index2 < 200; ++index2)
                    {
                        if (index2 != this.whoAmI && Main.npc[index2].active && (Main.npc[index2].type == 400 && (double)Vector2.Distance(this.Center, Main.npc[index2].Center) < 150.0))
                        {
                            if ((double)this.position.X < (double)Main.npc[index2].position.X)
                                this.velocity.X -= num7;
                            else
                                this.velocity.X += num7;
                            if ((double)this.position.Y < (double)Main.npc[index2].position.Y)
                                this.velocity.Y -= num7;
                            else
                                this.velocity.Y += num7;
                        }
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    if ((double)num4 == 0.0)
                    {
                        this.TargetClosest(false);
                        this.netUpdate = true;
                    }
                    NPC npc = this;
                    Vector2 vector2_2 = npc.velocity * 0.95f;
                    npc.velocity = vector2_2;
                    if ((double)this.velocity.Length() < 1.0)
                        this.velocity = Vector2.Zero;
                    Vector2 v = Main.player[this.target].Center + Main.player[this.target].velocity * 20f - this.Center;
                    this.localAI[0] = Utils.AngleLerp(this.localAI[0], Utils.ToRotation(v), 0.5f);
                    this.localAI[1] += 0.05f;
                    if ((double)this.localAI[1] > 1.0)
                        this.localAI[1] = 1f;
                    this.localAI[2] = (double)num4 >= 20.0 ? MathHelper.Lerp(this.localAI[2], 0.4f, 0.2f) : MathHelper.Lerp(this.localAI[2], 1.1f, 0.2f);
                    if ((double)num4 == (double)num1 - 35.0)
                        Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 6);
                    if ((double)num4 != (double)num1 - 14.0 && (double)num4 != (double)num1 - 7.0 && (double)num4 != (double)num1 || Main.netMode == 1)
                        return;
                    Vector2 vector2_3 = Utils.Vector2FromElipse(Utils.ToRotationVector2(this.localAI[0]), vector2_1 * this.localAI[1]);
                    Vector2 vector2_4 = Vector2.Normalize(v) * 8f;
                    Projectile.NewProjectile(this.Center.X + vector2_3.X, this.Center.Y + vector2_3.Y, vector2_4.X, vector2_4.Y, 462, 35, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    if ((double)num4 < 15.0)
                    {
                        this.localAI[1] -= 0.07f;
                        if ((double)this.localAI[1] < 0.0)
                            this.localAI[1] = 0.0f;
                        this.localAI[2] = MathHelper.Lerp(this.localAI[2], 0.4f, 0.2f);
                        NPC npc = this;
                        Vector2 vector2_2 = npc.velocity * 0.8f;
                        npc.velocity = vector2_2;
                        if ((double)this.velocity.Length() >= 1.0)
                            return;
                        this.velocity = Vector2.Zero;
                    }
                    else if ((double)num4 < 75.0)
                    {
                        float num5 = (float)(((double)num4 - 15.0) / 10.0);
                        int num6 = 0;
                        int num7 = 0;
                        switch ((int)num5)
                        {
                            case 0:
                                num6 = 0;
                                num7 = 2;
                                break;
                            case 1:
                                num6 = 2;
                                num7 = 5;
                                break;
                            case 2:
                                num6 = 5;
                                num7 = 3;
                                break;
                            case 3:
                                num6 = 3;
                                num7 = 1;
                                break;
                            case 4:
                                num6 = 1;
                                num7 = 4;
                                break;
                            case 5:
                                num6 = 4;
                                num7 = 0;
                                break;
                        }
                        Vector2 spinningpoint = Vector2.UnitY * -30f;
                        Vector2 v = Vector2.Lerp(Utils.RotatedBy(spinningpoint, (double)num6 * 6.28318548202515 / 6.0, new Vector2()), Utils.RotatedBy(spinningpoint, (double)num7 * 6.28318548202515 / 6.0, new Vector2()), num5 - (float)(int)num5);
                        float num8 = v.Length() / 30f;
                        this.localAI[0] = Utils.ToRotation(v);
                        this.localAI[1] = MathHelper.Lerp(this.localAI[1], num8, 0.5f);
                        for (int index2 = 0; index2 < 2; ++index2)
                        {
                            int index3 = Dust.NewDust(this.Center + v - Vector2.One * 4f, 0, 0, 229, 0.0f, 0.0f, 0, new Color(), 1f);
                            Main.dust[index3].velocity += v / 15f;
                            Main.dust[index3].noGravity = true;
                        }
                        if (((double)num4 - 15.0) % 10.0 != 0.0 || Main.netMode == 1)
                            return;
                        Vector2 vec = Vector2.Normalize(v);
                        if (Utils.HasNaNs(vec))
                            vec = Vector2.UnitY * -1f;
                        Vector2 vector2_2 = vec * 4f;
                        Projectile.NewProjectile(this.Center.X + v.X, this.Center.Y + v.Y, vector2_2.X, vector2_2.Y, 454, 55, 0.0f, Main.myPlayer, 30f, (float)this.whoAmI);
                    }
                    else if ((double)num4 < 105.0)
                    {
                        this.localAI[0] = Utils.AngleLerp(this.localAI[0], this.ai[2] - 1.570796f, 0.2f);
                        this.localAI[2] = MathHelper.Lerp(this.localAI[2], 0.75f, 0.2f);
                        if ((double)num4 == 75.0)
                        {
                            this.TargetClosest(false);
                            this.netUpdate = true;
                            this.velocity = Vector2.UnitY * -7f;
                            for (int index2 = 0; index2 < 1000; ++index2)
                            {
                                Projectile projectile1 = Main.projectile[index2];
                                if (projectile1.active && projectile1.type == 454 && ((double)projectile1.ai[1] == (double)this.whoAmI && (double)projectile1.ai[0] != -1.0))
                                {
                                    Projectile projectile2 = projectile1;
                                    Vector2 vector2_2 = projectile2.velocity + this.velocity;
                                    projectile2.velocity = vector2_2;
                                    projectile1.netUpdate = true;
                                }
                            }
                        }
                        this.velocity.Y *= 0.96f;
                        this.ai[2] = Utils.ToRotation(Main.player[this.target].Center - this.Center) + 1.570796f;
                        this.rotation = Utils.AngleTowards(this.rotation, this.ai[2], 0.1047198f);
                    }
                    else if ((double)num4 < 120.0)
                    {
                        Main.PlaySound(29, (int)this.Center.X, (int)this.Center.Y, 102);
                        if ((double)num4 == 105.0)
                            this.netUpdate = true;
                        Vector2 vector2_2 = Utils.ToRotationVector2(this.ai[2] - 1.570796f) * 12f;
                        this.velocity = vector2_2 * 2f;
                        for (int index2 = 0; index2 < 1000; ++index2)
                        {
                            Projectile projectile = Main.projectile[index2];
                            if (projectile.active && projectile.type == 454 && ((double)projectile.ai[1] == (double)this.whoAmI && (double)projectile.ai[0] != -1.0))
                            {
                                projectile.ai[0] = -1f;
                                projectile.velocity = vector2_2;
                                projectile.netUpdate = true;
                            }
                        }
                    }
                    else
                    {
                        NPC npc = this;
                        Vector2 vector2_2 = npc.velocity * 0.92f;
                        npc.velocity = vector2_2;
                        this.rotation = Utils.AngleLerp(this.rotation, 0.0f, 0.2f);
                    }
                }
                else if ((double)this.ai[0] == 3.0)
                {
                    if ((double)num4 < 15.0)
                    {
                        this.localAI[1] -= 0.07f;
                        if ((double)this.localAI[1] < 0.0)
                            this.localAI[1] = 0.0f;
                        this.localAI[2] = MathHelper.Lerp(this.localAI[2], 0.4f, 0.2f);
                        NPC npc = this;
                        Vector2 vector2_2 = npc.velocity * 0.9f;
                        npc.velocity = vector2_2;
                        if ((double)this.velocity.Length() >= 1.0)
                            return;
                        this.velocity = Vector2.Zero;
                    }
                    else if ((double)num4 < 45.0)
                    {
                        this.localAI[0] = 0.0f;
                        this.localAI[1] = (float)Math.Sin(((double)num4 - 15.0) * 6.28318548202515 / 15.0) * 0.5f;
                        if ((double)this.localAI[1] >= 0.0)
                            return;
                        this.localAI[0] = 3.141593f;
                    }
                    else if ((double)num4 < 185.0)
                    {
                        if ((double)num4 == 45.0)
                        {
                            this.ai[2] = (float)((double)Utils.ToDirectionInt(Main.rand.Next(2) == 0) * 6.28318548202515 / 40.0);
                            this.netUpdate = true;
                        }
                        if (((double)num4 - 15.0 - 30.0) % 40.0 == 0.0)
                            this.ai[2] *= 0.95f;
                        this.localAI[0] += this.ai[2];
                        this.localAI[1] += 0.05f;
                        if ((double)this.localAI[1] > 1.0)
                            this.localAI[1] = 1f;
                        Vector2 vector2_2 = Utils.ToRotationVector2(this.localAI[0]) * vector2_1 * this.localAI[1];
                        float num5 = MathHelper.Lerp(8f, 20f, (float)(((double)num4 - 15.0 - 30.0) / 140.0));
                        this.velocity = Vector2.Normalize(vector2_2) * num5;
                        this.rotation = Utils.AngleLerp(this.rotation, Utils.ToRotation(this.velocity) + 1.570796f, 0.2f);
                        if (((double)num4 - 15.0 - 30.0) % 10.0 != 0.0 || Main.netMode == 1)
                            return;
                        Vector2 vector2_3 = this.Center + Vector2.Normalize(vector2_2) * vector2_1.Length() * 0.4f;
                        Vector2 vector2_4 = Vector2.Normalize(vector2_2) * 8f;
                        float ai1 = (float)((6.28318548202515 * Main.rand.NextDouble() - 3.14159274101257) / 30.0 + Math.PI / 180.0 * (double)this.ai[2]);
                        Projectile.NewProjectile(vector2_3.X, vector2_3.Y, vector2_4.X, vector2_4.Y, 452, 35, 0.0f, Main.myPlayer, 0.0f, ai1);
                    }
                    else
                    {
                        NPC npc = this;
                        Vector2 vector2_2 = npc.velocity * 0.88f;
                        npc.velocity = vector2_2;
                        this.rotation = Utils.AngleLerp(this.rotation, 0.0f, 0.2f);
                        this.localAI[1] -= 0.07f;
                        if ((double)this.localAI[1] < 0.0)
                            this.localAI[1] = 0.0f;
                        this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
                    }
                }
                else
                {
                    if ((double)this.ai[0] != 4.0)
                        return;
                    if ((double)num4 == 0.0)
                    {
                        this.TargetClosest(false);
                        this.netUpdate = true;
                    }
                    if ((double)num4 < 180.0)
                    {
                        this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
                        this.localAI[1] -= 0.05f;
                        if ((double)this.localAI[1] < 0.0)
                            this.localAI[1] = 0.0f;
                        NPC npc = this;
                        Vector2 vector2_2 = npc.velocity * 0.95f;
                        npc.velocity = vector2_2;
                        if ((double)this.velocity.Length() < 1.0)
                            this.velocity = Vector2.Zero;
                        if ((double)num4 < 60.0)
                            return;
                        Vector2 center = this.Center;
                        int num5 = 0;
                        if ((double)num4 >= 120.0)
                            num5 = 1;
                        for (int index2 = 0; index2 < 1 + num5; ++index2)
                        {
                            int Type = 229;
                            float num6 = 0.8f;
                            if (index2 % 2 == 1)
                            {
                                Type = 229;
                                num6 = 1.65f;
                            }
                            Vector2 vector2_3 = center + Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f) * vector2_1 / 2f;
                            int index3 = Dust.NewDust(vector2_3 - Vector2.One * 8f, 16, 16, Type, this.velocity.X / 2f, this.velocity.Y / 2f, 0, new Color(), 1f);
                            Main.dust[index3].velocity = Vector2.Normalize(center - vector2_3) * 3.5f * (float)(10.0 - (double)num5 * 2.0) / 10f;
                            Main.dust[index3].noGravity = true;
                            Main.dust[index3].scale = num6;
                            Main.dust[index3].customData = (object)this;
                        }
                    }
                    else if ((double)num4 < (double)num1 - 15.0)
                    {
                        if ((double)num4 == 180.0 && Main.netMode != 1)
                        {
                            this.TargetClosest(false);
                            Vector2 spinningpoint = Main.player[this.target].Center - this.Center;
                            spinningpoint.Normalize();
                            float num5 = -1f;
                            if ((double)spinningpoint.X < 0.0)
                                num5 = 1f;
                            Vector2 v = Utils.RotatedBy(spinningpoint, -(double)num5 * 6.28318548202515 / 6.0, new Vector2());
                            Projectile.NewProjectile(this.Center.X, this.Center.Y, v.X, v.Y, 455, 50, 0.0f, Main.myPlayer, (float)((double)num5 * 6.28318548202515 / 540.0), (float)this.whoAmI);
                            this.ai[2] = (Utils.ToRotation(v) + 9.424778f) * num5;
                            this.netUpdate = true;
                        }
                        this.localAI[1] += 0.05f;
                        if ((double)this.localAI[1] > 1.0)
                            this.localAI[1] = 1f;
                        float num6 = (float)Utils.ToDirectionInt((double)this.ai[2] >= 0.0);
                        float num7 = this.ai[2];
                        if ((double)num7 < 0.0)
                            num7 *= -1f;
                        float num8 = num7 - 9.424778f + (float)((double)num6 * 6.28318548202515 / 540.0);
                        this.localAI[0] = num8;
                        this.ai[2] = (num8 + 9.424778f) * num6;
                    }
                    else
                    {
                        this.localAI[1] -= 0.07f;
                        if ((double)this.localAI[1] >= 0.0)
                            return;
                        this.localAI[1] = 0.0f;
                    }
                }
            }
            else if (this.aiStyle == 82)
            {
                float num1 = 90f;
                Vector2 vector2 = new Vector2(0.0f, 216f);
                int index1 = (int)Math.Abs(this.ai[0]) - 1;
                int index2 = (int)this.ai[1];
                if (!Main.npc[index1].active || Main.npc[index1].type != 396)
                {
                    this.life = 0;
                    this.HitEffect(0, 10.0);
                    this.active = false;
                }
                else
                {
                    ++this.ai[2];
                    if ((double)this.ai[2] >= (double)num1)
                    {
                        if (Main.netMode != 1)
                        {
                            int index3 = (int)Main.npc[index1].ai[3];
                            int index4 = -1;
                            int index5 = -1;
                            int index6 = index1;
                            for (int index7 = 0; index7 < 200; ++index7)
                            {
                                if (Main.npc[index7].active && (double)Main.npc[index7].ai[3] == (double)index3)
                                {
                                    if (index4 == -1 && Main.npc[index7].type == 397 && (double)Main.npc[index7].ai[2] == 0.0)
                                        index4 = index7;
                                    if (index5 == -1 && Main.npc[index7].type == 397 && (double)Main.npc[index7].ai[2] == 1.0)
                                        index5 = index7;
                                    if (index4 != -1 && index5 != -1 && index6 != -1)
                                        break;
                                }
                            }
                            int num2 = 1000;
                            int num3 = Main.npc[index3].lifeMax - Main.npc[index3].life;
                            int num4 = Main.npc[index4].lifeMax - Main.npc[index4].life;
                            int num5 = Main.npc[index5].lifeMax - Main.npc[index5].life;
                            int num6 = Main.npc[index6].lifeMax - Main.npc[index6].life;
                            if (num6 > 0 && num2 > 0)
                            {
                                int num7 = num6 - num2;
                                if (num7 > 0)
                                    num7 = 0;
                                int healAmount = num2 + num7;
                                num2 -= healAmount;
                                Main.npc[index6].life += healAmount;
                                NPC.HealEffect(Utils.CenteredRectangle(Main.npc[index6].Center, new Vector2(50f)), healAmount, true);
                            }
                            if (num3 > 0 && num2 > 0)
                            {
                                int num7 = num3 - num2;
                                if (num7 > 0)
                                    num7 = 0;
                                int healAmount = num2 + num7;
                                num2 -= healAmount;
                                Main.npc[index3].life += healAmount;
                                NPC.HealEffect(Utils.CenteredRectangle(Main.npc[index3].Center, new Vector2(50f)), healAmount, true);
                            }
                            if (num4 > 0 && num2 > 0)
                            {
                                int num7 = num4 - num2;
                                if (num7 > 0)
                                    num7 = 0;
                                int healAmount = num2 + num7;
                                num2 -= healAmount;
                                Main.npc[index4].life += healAmount;
                                NPC.HealEffect(Utils.CenteredRectangle(Main.npc[index4].Center, new Vector2(50f)), healAmount, true);
                            }
                            if (num5 > 0 && num2 > 0)
                            {
                                int num7 = num5 - num2;
                                if (num7 > 0)
                                    num7 = 0;
                                int healAmount = num2 + num7;
                                int num8 = num2 - healAmount;
                                Main.npc[index5].life += healAmount;
                                NPC.HealEffect(Utils.CenteredRectangle(Main.npc[index5].Center, new Vector2(50f)), healAmount, true);
                            }
                        }
                        this.life = 0;
                        this.HitEffect(0, 10.0);
                        this.active = false;
                    }
                    else
                    {
                        this.velocity = Vector2.Zero;
                        this.Center = Vector2.Lerp(Main.projectile[index2].Center, Main.npc[(int)Math.Abs(this.ai[0]) - 1].Center + vector2, this.ai[2] / num1);
                        Vector2 spinningpoint1 = Vector2.UnitY * (float)-this.height / 2f;
                        for (int index3 = 0; index3 < 6; ++index3)
                        {
                            int index4 = Dust.NewDust(this.Center - Vector2.One * 4f + Utils.RotatedBy(spinningpoint1, (double)index3 * 6.28318548202515 / 6.0, new Vector2()), 0, 0, 229, 0.0f, 0.0f, 0, new Color(), 1f);
                            Main.dust[index4].velocity = -Vector2.UnitY;
                            Main.dust[index4].noGravity = true;
                            Main.dust[index4].scale = 0.7f;
                            Main.dust[index4].customData = (object)this;
                        }
                        Vector2 spinningpoint2 = Vector2.UnitY * (float)-this.height / 6f;
                        for (int index3 = 0; index3 < 3; ++index3)
                        {
                            int index4 = Dust.NewDust(this.Center - Vector2.One * 4f + Utils.RotatedBy(spinningpoint2, (double)index3 * 6.28318548202515 / 6.0, new Vector2()), 0, 0, 229, 0.0f, -2f, 0, new Color(), 1f);
                            Main.dust[index4].noGravity = true;
                            Main.dust[index4].scale = 1.5f;
                            Main.dust[index4].customData = (object)this;
                        }
                    }
                }
            }
            else if (this.aiStyle == 83)
            {
                if (this.type == 437)
                {
                    if ((double)this.localAI[3] == 0.0 && Main.netMode != 1)
                    {
                        this.localAI[3] = 1f;
                        this.netUpdate = true;
                        Point[] spawnPoints = (Point[])null;
                        if (!CultistRitual.CheckFloor(this.Center, out spawnPoints))
                        {
                            this.life = 0;
                            this.HitEffect(0, 10.0);
                            this.active = false;
                            return;
                        }
                        int num1 = 0;
                        int num2 = 1;
                        for (int index1 = 0; index1 < 4; ++index1)
                        {
                            bool flag = index1 == 1 || index1 == 2;
                            int Type = !flag ? 379 : 438;
                            int index2 = NPC.NewNPC(spawnPoints[index1].X * 16 + 8, spawnPoints[index1].Y * 16 - 48, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            if (flag)
                            {
                                this.localAI[num2++] = (float)(index2 + 1);
                                Main.npc[index2].ai[3] = (float)-(this.whoAmI + 1);
                            }
                            else
                            {
                                this.ai[num1++] = (float)(index2 + 1);
                                Main.npc[index2].ai[3] = (float)-(this.whoAmI + 1);
                            }
                            Main.npc[index2].netUpdate = true;
                        }
                    }
                    if ((double)this.localAI[0] == 1.0 && Main.netMode != 1)
                    {
                        this.localAI[0] = 2f;
                        for (int index = 0; index < 2; ++index)
                        {
                            Main.npc[(int)this.localAI[index + 1] - 1].ai[1] = 1f;
                            Main.npc[(int)this.localAI[index + 1] - 1].netUpdate = true;
                            Main.npc[(int)this.ai[index] - 1].ai[3] = 0.0f;
                            Main.npc[(int)this.ai[index] - 1].TargetClosest(true);
                            Main.npc[(int)this.ai[index] - 1].netUpdate = true;
                        }
                    }
                    if ((double)this.ai[0] != -1.0 && Main.netMode != 1)
                    {
                        bool flag = true;
                        for (int index = 0; index < 2; ++index)
                        {
                            if (Main.npc[(int)this.localAI[index + 1] - 1].active && Main.npc[(int)this.localAI[index + 1] - 1].type == 438)
                                flag = false;
                            if (Main.npc[(int)this.ai[index] - 1].active && Main.npc[(int)this.ai[index] - 1].type == 379)
                                flag = false;
                        }
                        if (flag)
                        {
                            this.ai[0] = -1f;
                            this.ai[1] = 0.0f;
                            this.ai[3] = 0.0f;
                            int num1 = (int)this.Center.X / 16 + 11 * Utils.ToDirectionInt(Main.rand.Next(2) == 0);
                            int num2 = 0;
                            for (int index = -5; index < 12; ++index)
                            {
                                int i = num1;
                                int j = (int)this.Center.Y / 16 + index;
                                if (WorldGen.SolidTile(i, j) && !Collision.SolidTiles(i - 1, i + 1, j - 3, j - 1))
                                {
                                    num2 = j;
                                    break;
                                }
                                if (index == 11)
                                    num2 = j;
                            }
                            int index1 = NPC.NewNPC(num1 * 16 + 10, num2 * 16 - 2, 439, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            Main.npc[index1].direction = Main.npc[index1].spriteDirection = Math.Sign((float)((double)this.Center.X - (double)(num1 * 16) - 10.0));
                            this.ai[2] = (float)index1;
                            this.netUpdate = true;
                            CultistRitual.TabletDestroyed();
                        }
                    }
                    if ((double)this.ai[0] == -1.0)
                    {
                        ++this.ai[3];
                        if ((double)this.ai[3] > 300.0)
                        {
                            this.life = 0;
                            this.HitEffect(0, 9999.0);
                            this.active = false;
                            if (Main.netMode != 1)
                            {
                                for (int index = 0; index < 6; ++index)
                                {
                                    float num = (float)(3.0 + (double)Utils.NextFloat(Main.rand) * 6.0);
                                    Vector2 vector2_1 = Utils.RotatedByRandom(Vector2.UnitY, 6.28318548202515);
                                    Vector2 vector2_2 = this.Center + vector2_1 * 30f;
                                    Projectile.NewProjectile(vector2_2.X, vector2_2.Y, vector2_1.X * num, vector2_1.Y * num, 526, 0, 0.0f, Main.myPlayer, Main.npc[(int)this.ai[2]].Center.X, Main.npc[(int)this.ai[2]].Center.Y);
                                }
                                for (int index = 0; index < 20; ++index)
                                {
                                    if (Main.rand.Next(2) != 0)
                                    {
                                        float num = (float)(3.0 + (double)Utils.NextFloat(Main.rand) * 6.0);
                                        Vector2 vector2_1 = Utils.RotatedByRandom(Vector2.UnitY, 6.28318548202515);
                                        Vector2 vector2_2 = this.Center + vector2_1 * 30f;
                                        Vector2 vector2_3 = this.Center + vector2_1 * (float)((double)Utils.NextFloat(Main.rand) * 45.0 + 45.0) + Vector2.UnitY * 20f;
                                        Projectile.NewProjectile(vector2_2.X, vector2_2.Y, vector2_1.X * num, -20f, 526, 0, 0.0f, Main.myPlayer, vector2_3.X, vector2_3.Y);
                                    }
                                }
                            }
                        }
                        else if ((double)this.ai[3] % 10.0 == 1.0 && (double)this.ai[3] > 120.0 && Main.netMode != 1)
                        {
                            float num = (float)(3.0 + (double)Utils.NextFloat(Main.rand) * 6.0);
                            Vector2 vector2_1 = Utils.RotatedByRandom(Vector2.UnitY, 6.28318548202515);
                            Vector2 vector2_2 = this.Center + vector2_1 * 25f;
                            Projectile.NewProjectile(vector2_2.X, vector2_2.Y, vector2_1.X * num, vector2_1.Y * num, 526, 0, 0.0f, Main.myPlayer, Main.npc[(int)this.ai[2]].Center.X, Main.npc[(int)this.ai[2]].Center.Y);
                        }
                    }
                }
                if (this.type == 438)
                {
                    this.velocity.X *= 0.93f;
                    if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                        this.velocity.X = 0.0f;
                    int index = (int)(-(double)this.ai[3] - 1.0);
                    if (index == -1)
                    {
                        this.life = 0;
                        this.HitEffect(0, 10.0);
                        this.active = false;
                        return;
                    }
                    int num = Math.Sign(Main.npc[index].Center.X - this.Center.X);
                    if (num != this.direction)
                    {
                        this.velocity.X = 0.0f;
                        this.direction = this.spriteDirection = num;
                        this.netUpdate = true;
                    }
                    if (this.justHit && Main.netMode != 1 && (double)Main.npc[index].localAI[0] == 0.0)
                        Main.npc[index].localAI[0] = 1f;
                }
                if (this.type != 437)
                    return;
                Lighting.AddLight(this.Center, 0.8f, 0.75f, 0.55f);
            }
            else if (this.aiStyle == 84)
            {
                if ((double)this.ai[0] != -1.0 && Main.rand.Next(1000) == 0)
                    Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(88, 92));
                bool expertMode = Main.expertMode;
                bool flag1 = this.life <= this.lifeMax / 2;
                int num1 = 120;
                int Damage1 = 35;
                if (expertMode)
                {
                    num1 = 90;
                    Damage1 = 25;
                }
                int num2 = 18;
                int num3 = 3;
                int Damage2 = 30;
                if (expertMode)
                {
                    num2 = 12;
                    num3 = 4;
                    Damage2 = 20;
                }
                int num4 = 80;
                int Damage3 = 45;
                if (expertMode)
                {
                    num4 = 40;
                    Damage3 = 30;
                }
                int num5 = 20;
                int num6 = 2;
                if (expertMode)
                {
                    num5 = 30;
                    num6 = 2;
                }
                int num7 = 20;
                int num8 = 3;
                bool flag2 = this.type == 439;
                bool flag3 = false;
                bool flag4 = false;
                if (flag1)
                    this.defense = (int)((double)this.defDefense * 0.649999976158142);
                if (!flag2)
                {
                    if ((double)this.ai[3] < 0.0 || !Main.npc[(int)this.ai[3]].active || Main.npc[(int)this.ai[3]].type != 439)
                    {
                        this.life = 0;
                        this.HitEffect(0, 10.0);
                        this.active = false;
                        return;
                    }
                    this.ai[0] = Main.npc[(int)this.ai[3]].ai[0];
                    this.ai[1] = Main.npc[(int)this.ai[3]].ai[1];
                    if ((double)this.ai[0] == 5.0)
                    {
                        if (this.justHit)
                        {
                            this.life = 0;
                            this.HitEffect(0, 10.0);
                            this.active = false;
                            NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                            NPC npc = Main.npc[(int)this.ai[3]];
                            npc.ai[0] = 6f;
                            npc.ai[1] = 0.0f;
                            npc.netUpdate = true;
                        }
                    }
                    else
                    {
                        flag3 = true;
                        flag4 = true;
                    }
                }
                else if ((double)this.ai[0] == 5.0 && (double)this.ai[1] >= 120.0 && ((double)this.ai[1] < 420.0 && this.justHit))
                {
                    this.ai[0] = 0.0f;
                    this.ai[1] = 0.0f;
                    ++this.ai[3];
                    this.velocity = Vector2.Zero;
                    this.netUpdate = true;
                    List<int> list = new List<int>();
                    for (int index = 0; index < 200; ++index)
                    {
                        if (Main.npc[index].active && Main.npc[index].type == 440 && (double)Main.npc[index].ai[3] == (double)this.whoAmI)
                            list.Add(index);
                    }
                    int num9 = 10;
                    if (Main.expertMode)
                        num9 = 3;
                    foreach (int number in list)
                    {
                        NPC npc = Main.npc[number];
                        if ((double)npc.localAI[1] == (double)this.localAI[1] && num9 > 0)
                        {
                            --num9;
                            npc.life = 0;
                            npc.HitEffect(0, 10.0);
                            npc.active = false;
                            NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                        }
                        else if (num9 > 0)
                        {
                            --num9;
                            npc.life = 0;
                            npc.HitEffect(0, 10.0);
                            npc.active = false;
                        }
                    }
                    Main.projectile[(int)this.ai[2]].ai[1] = -1f;
                    Main.projectile[(int)this.ai[2]].netUpdate = true;
                }
                Vector2 center1 = this.Center;
                Player player = Main.player[this.target];
                if (this.target < 0 || this.target == (int)byte.MaxValue || (player.dead || !player.active))
                {
                    this.TargetClosest(false);
                    player = Main.player[this.target];
                    this.netUpdate = true;
                }
                if (player.dead || (double)Vector2.Distance(player.Center, center1) > 5600.0)
                {
                    this.life = 0;
                    this.HitEffect(0, 10.0);
                    this.active = false;
                    NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0.0f, 0.0f, 0, 0, 0);
                    new List<int>()
          {
            this.whoAmI
          };
                    for (int index = 0; index < 200; ++index)
                    {
                        if (Main.npc[index].active && Main.npc[index].type == 440 && (double)Main.npc[index].ai[3] == (double)this.whoAmI)
                        {
                            Main.npc[index].life = 0;
                            Main.npc[index].HitEffect(0, 10.0);
                            Main.npc[index].active = false;
                            NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0.0f, 0.0f, 0, 0, 0);
                        }
                    }
                }
                float num10 = this.ai[3];
                if ((double)this.localAI[0] == 0.0)
                {
                    Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 89);
                    this.localAI[0] = 1f;
                    this.alpha = (int)byte.MaxValue;
                    this.rotation = 0.0f;
                    if (Main.netMode != 1)
                    {
                        this.ai[0] = -1f;
                        this.netUpdate = true;
                    }
                }
                if ((double)this.ai[0] == -1.0)
                {
                    this.alpha -= 5;
                    if (this.alpha < 0)
                        this.alpha = 0;
                    ++this.ai[1];
                    if ((double)this.ai[1] >= 420.0)
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                        this.netUpdate = true;
                    }
                    else if ((double)this.ai[1] > 360.0)
                    {
                        NPC npc = this;
                        Vector2 vector2 = npc.velocity * 0.95f;
                        npc.velocity = vector2;
                        if ((double)this.localAI[2] != 13.0)
                            Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 105);
                        this.localAI[2] = 13f;
                    }
                    else if ((double)this.ai[1] > 300.0)
                    {
                        this.velocity = -Vector2.UnitY;
                        this.localAI[2] = 10f;
                    }
                    else
                        this.localAI[2] = (double)this.ai[1] <= 120.0 ? 0.0f : 1f;
                    flag3 = true;
                    flag4 = true;
                }
                if ((double)this.ai[0] == 0.0)
                {
                    if ((double)this.ai[1] == 0.0)
                        this.TargetClosest(false);
                    this.localAI[2] = 10f;
                    int num9 = Math.Sign(player.Center.X - center1.X);
                    if (num9 != 0)
                        this.direction = this.spriteDirection = num9;
                    ++this.ai[1];
                    if ((double)this.ai[1] >= 40.0 && flag2)
                    {
                        int num11 = 0;
                        if (flag1)
                        {
                            switch ((int)this.ai[3])
                            {
                                case 0:
                                    num11 = 0;
                                    break;
                                case 1:
                                    num11 = 1;
                                    break;
                                case 2:
                                    num11 = 0;
                                    break;
                                case 3:
                                    num11 = 5;
                                    break;
                                case 4:
                                    num11 = 0;
                                    break;
                                case 5:
                                    num11 = 3;
                                    break;
                                case 6:
                                    num11 = 0;
                                    break;
                                case 7:
                                    num11 = 5;
                                    break;
                                case 8:
                                    num11 = 0;
                                    break;
                                case 9:
                                    num11 = 2;
                                    break;
                                case 10:
                                    num11 = 0;
                                    break;
                                case 11:
                                    num11 = 3;
                                    break;
                                case 12:
                                    num11 = 0;
                                    break;
                                case 13:
                                    num11 = 4;
                                    this.ai[3] = -1f;
                                    break;
                                default:
                                    this.ai[3] = -1f;
                                    break;
                            }
                        }
                        else
                        {
                            switch ((int)this.ai[3])
                            {
                                case 0:
                                    num11 = 0;
                                    break;
                                case 1:
                                    num11 = 1;
                                    break;
                                case 2:
                                    num11 = 0;
                                    break;
                                case 3:
                                    num11 = 2;
                                    break;
                                case 4:
                                    num11 = 0;
                                    break;
                                case 5:
                                    num11 = 3;
                                    break;
                                case 6:
                                    num11 = 0;
                                    break;
                                case 7:
                                    num11 = 1;
                                    break;
                                case 8:
                                    num11 = 0;
                                    break;
                                case 9:
                                    num11 = 2;
                                    break;
                                case 10:
                                    num11 = 0;
                                    break;
                                case 11:
                                    num11 = 4;
                                    this.ai[3] = -1f;
                                    break;
                                default:
                                    this.ai[3] = -1f;
                                    break;
                            }
                        }
                        int maxValue = 6;
                        if (this.life < this.lifeMax / 3)
                            maxValue = 4;
                        if (this.life < this.lifeMax / 4)
                            maxValue = 3;
                        if (expertMode && flag1 && (Main.rand.Next(maxValue) == 0 && num11 != 0) && (num11 != 4 && num11 != 5 && NPC.CountNPCS(523) < 10))
                            num11 = 6;
                        if (num11 == 0)
                        {
                            float num12 = (float)Math.Ceiling((double)(player.Center + new Vector2(0.0f, -100f) - center1).Length() / 50.0);
                            if ((double)num12 == 0.0)
                                num12 = 1f;
                            List<int> list = new List<int>();
                            int num13 = 0;
                            list.Add(this.whoAmI);
                            for (int index = 0; index < 200; ++index)
                            {
                                if (Main.npc[index].active && Main.npc[index].type == 440 && (double)Main.npc[index].ai[3] == (double)this.whoAmI)
                                    list.Add(index);
                            }
                            bool flag5 = list.Count % 2 == 0;
                            foreach (int index in list)
                            {
                                NPC npc1 = Main.npc[index];
                                Vector2 center2 = npc1.Center;
                                float num14 = (float)((double)((num13 + Utils.ToInt(flag5) + 1) / 2) * 6.28318548202515 * 0.400000005960464) / (float)list.Count;
                                if (num13 % 2 == 1)
                                    num14 *= -1f;
                                if (list.Count == 1)
                                    num14 = 0.0f;
                                Vector2 vector2_1 = Utils.RotatedBy(new Vector2(0.0f, -1f), (double)num14, new Vector2()) * new Vector2(300f, 200f);
                                Vector2 vector2_2 = player.Center + vector2_1 - center2;
                                npc1.ai[0] = 1f;
                                npc1.ai[1] = num12 * 2f;
                                npc1.velocity = vector2_2 / num12;
                                if (this.whoAmI >= npc1.whoAmI)
                                {
                                    NPC npc2 = npc1;
                                    Vector2 vector2_3 = npc2.position - npc1.velocity;
                                    npc2.position = vector2_3;
                                }
                                npc1.netUpdate = true;
                                ++num13;
                            }
                        }
                        if (num11 == 1)
                        {
                            this.ai[0] = 3f;
                            this.ai[1] = 0.0f;
                        }
                        else if (num11 == 2)
                        {
                            this.ai[0] = 2f;
                            this.ai[1] = 0.0f;
                        }
                        else if (num11 == 3)
                        {
                            this.ai[0] = 4f;
                            this.ai[1] = 0.0f;
                        }
                        else if (num11 == 4)
                        {
                            this.ai[0] = 5f;
                            this.ai[1] = 0.0f;
                        }
                        if (num11 == 5)
                        {
                            this.ai[0] = 7f;
                            this.ai[1] = 0.0f;
                        }
                        if (num11 == 6)
                        {
                            this.ai[0] = 8f;
                            this.ai[1] = 0.0f;
                        }
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    flag3 = true;
                    this.localAI[2] = 10f;
                    if ((double)(int)this.ai[1] % 2.0 != 0.0 && (double)this.ai[1] != 1.0)
                    {
                        NPC npc = this;
                        Vector2 vector2 = npc.position - this.velocity;
                        npc.position = vector2;
                    }
                    --this.ai[1];
                    if ((double)this.ai[1] <= 0.0)
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                        ++this.ai[3];
                        this.velocity = Vector2.Zero;
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    this.localAI[2] = 11f;
                    Vector2 vec1 = Vector2.Normalize(player.Center - center1);
                    if (Utils.HasNaNs(vec1))
                        vec1 = new Vector2((float)this.direction, 0.0f);
                    if ((double)this.ai[1] >= 4.0 && flag2 && (int)((double)this.ai[1] - 4.0) % num1 == 0)
                    {
                        List<int> list = new List<int>();
                        for (int index = 0; index < 200; ++index)
                        {
                            if (Main.npc[index].active && Main.npc[index].type == 440 && (double)Main.npc[index].ai[3] == (double)this.whoAmI)
                                list.Add(index);
                        }
                        foreach (int index1 in list)
                        {
                            NPC npc = Main.npc[index1];
                            Vector2 center2 = npc.Center;
                            int num9 = Math.Sign(player.Center.X - center2.X);
                            if (num9 != 0)
                                npc.direction = npc.spriteDirection = num9;
                            if (Main.netMode != 1)
                            {
                                Vector2 vec2 = Vector2.Normalize(player.Center - center2 + player.velocity * 20f);
                                if (Utils.HasNaNs(vec2))
                                    vec2 = new Vector2((float)this.direction, 0.0f);
                                Vector2 vector2_1 = center2 + new Vector2((float)(this.direction * 30), 12f);
                                for (int index2 = 0; index2 < 1; ++index2)
                                {
                                    Vector2 vector2_2 = Utils.RotatedByRandom(vec2 * (float)(6.0 + Main.rand.NextDouble() * 4.0), 0.523598790168762);
                                    Projectile.NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 468, 18, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                }
                            }
                        }
                        if (Main.netMode != 1)
                        {
                            Vector2 vec2 = Vector2.Normalize(player.Center - center1 + player.velocity * 20f);
                            if (Utils.HasNaNs(vec2))
                                vec2 = new Vector2((float)this.direction, 0.0f);
                            Vector2 vector2_1 = this.Center + new Vector2((float)(this.direction * 30), 12f);
                            for (int index = 0; index < 1; ++index)
                            {
                                Vector2 vector2_2 = vec2 * 4f;
                                Projectile.NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 464, Damage1, 0.0f, Main.myPlayer, 0.0f, 1f);
                            }
                        }
                    }
                    ++this.ai[1];
                    if ((double)this.ai[1] >= (double)(4 + num1))
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                        ++this.ai[3];
                        this.velocity = Vector2.Zero;
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[0] == 3.0)
                {
                    this.localAI[2] = 11f;
                    Vector2 vec1 = Vector2.Normalize(player.Center - center1);
                    if (Utils.HasNaNs(vec1))
                        vec1 = new Vector2((float)this.direction, 0.0f);
                    if ((double)this.ai[1] >= 4.0 && flag2 && (int)((double)this.ai[1] - 4.0) % num2 == 0)
                    {
                        if ((int)((double)this.ai[1] - 4.0) / num2 == 2)
                        {
                            List<int> list = new List<int>();
                            for (int index = 0; index < 200; ++index)
                            {
                                if (Main.npc[index].active && Main.npc[index].type == 440 && (double)Main.npc[index].ai[3] == (double)this.whoAmI)
                                    list.Add(index);
                            }
                            foreach (int index1 in list)
                            {
                                NPC npc = Main.npc[index1];
                                Vector2 center2 = npc.Center;
                                int num9 = Math.Sign(player.Center.X - center2.X);
                                if (num9 != 0)
                                    npc.direction = npc.spriteDirection = num9;
                                if (Main.netMode != 1)
                                {
                                    Vector2 vec2 = Vector2.Normalize(player.Center - center2 + player.velocity * 20f);
                                    if (Utils.HasNaNs(vec2))
                                        vec2 = new Vector2((float)this.direction, 0.0f);
                                    Vector2 vector2_1 = center2 + new Vector2((float)(this.direction * 30), 12f);
                                    for (int index2 = 0; index2 < 1; ++index2)
                                    {
                                        Vector2 vector2_2 = Utils.RotatedByRandom(vec2 * (float)(6.0 + Main.rand.NextDouble() * 4.0), 0.523598790168762);
                                        Projectile.NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 468, 18, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                    }
                                }
                            }
                        }
                        int num11 = Math.Sign(player.Center.X - center1.X);
                        if (num11 != 0)
                            this.direction = this.spriteDirection = num11;
                        if (Main.netMode != 1)
                        {
                            Vector2 vec2 = Vector2.Normalize(player.Center - center1 + player.velocity * 20f);
                            if (Utils.HasNaNs(vec2))
                                vec2 = new Vector2((float)this.direction, 0.0f);
                            Vector2 vector2_1 = this.Center + new Vector2((float)(this.direction * 30), 12f);
                            for (int index = 0; index < 1; ++index)
                            {
                                Vector2 vector2_2 = Utils.RotatedByRandom(vec2 * (float)(6.0 + Main.rand.NextDouble() * 4.0), 0.523598790168762);
                                Projectile.NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 467, Damage2, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                            }
                        }
                    }
                    ++this.ai[1];
                    if ((double)this.ai[1] >= (double)(4 + num2 * num3))
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                        ++this.ai[3];
                        this.velocity = Vector2.Zero;
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[0] == 4.0)
                {
                    this.localAI[2] = !flag2 ? 11f : 12f;
                    if ((double)this.ai[1] == 20.0 && flag2)
                    {
                        List<int> list = new List<int>();
                        for (int index = 0; index < 200; ++index)
                        {
                            if (Main.npc[index].active && Main.npc[index].type == 440 && (double)Main.npc[index].ai[3] == (double)this.whoAmI)
                                list.Add(index);
                        }
                        foreach (int index1 in list)
                        {
                            NPC npc = Main.npc[index1];
                            Vector2 center2 = npc.Center;
                            int num9 = Math.Sign(player.Center.X - center2.X);
                            if (num9 != 0)
                                npc.direction = npc.spriteDirection = num9;
                            if (Main.netMode != 1)
                            {
                                Vector2 vec = Vector2.Normalize(player.Center - center2 + player.velocity * 20f);
                                if (Utils.HasNaNs(vec))
                                    vec = new Vector2((float)this.direction, 0.0f);
                                Vector2 vector2_1 = center2 + new Vector2((float)(this.direction * 30), 12f);
                                for (int index2 = 0; index2 < 1; ++index2)
                                {
                                    Vector2 vector2_2 = Utils.RotatedByRandom(vec * (float)(6.0 + Main.rand.NextDouble() * 4.0), 0.523598790168762);
                                    Projectile.NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 468, 18, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                }
                            }
                        }
                        if ((int)((double)this.ai[1] - 20.0) % num4 == 0)
                            Projectile.NewProjectile(this.Center.X, this.Center.Y - 100f, 0.0f, 0.0f, 465, Damage3, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    }
                    ++this.ai[1];
                    if ((double)this.ai[1] >= (double)(20 + num4))
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                        ++this.ai[3];
                        this.velocity = Vector2.Zero;
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[0] == 5.0)
                {
                    this.localAI[2] = 10f;
                    Vector2 vec = Vector2.Normalize(player.Center - center1);
                    if (Utils.HasNaNs(vec))
                        vec = new Vector2((float)this.direction, 0.0f);
                    if ((double)this.ai[1] >= 0.0 && (double)this.ai[1] < 30.0)
                    {
                        flag3 = true;
                        flag4 = true;
                        this.alpha = (int)(((double)this.ai[1] - 0.0) / 30.0 * (double)byte.MaxValue);
                    }
                    else if ((double)this.ai[1] >= 30.0 && (double)this.ai[1] < 90.0)
                    {
                        if ((double)this.ai[1] == 30.0 && Main.netMode != 1 && flag2)
                        {
                            ++this.localAI[1];
                            Vector2 spinningpoint = new Vector2(180f, 0.0f);
                            List<int> list = new List<int>();
                            for (int index = 0; index < 200; ++index)
                            {
                                if (Main.npc[index].active && Main.npc[index].type == 440 && (double)Main.npc[index].ai[3] == (double)this.whoAmI)
                                    list.Add(index);
                            }
                            int num9 = 6 - list.Count;
                            if (num9 > 2)
                                num9 = 2;
                            int length = list.Count + num9 + 1;
                            float[] numArray = new float[length];
                            for (int index = 0; index < numArray.Length; ++index)
                                numArray[index] = Vector2.Distance(this.Center + Utils.RotatedBy(spinningpoint, (double)index * 6.28318548202515 / (double)length - 1.57079637050629, new Vector2()), player.Center);
                            int index1 = 0;
                            for (int index2 = 1; index2 < numArray.Length; ++index2)
                            {
                                if ((double)numArray[index1] > (double)numArray[index2])
                                    index1 = index2;
                            }
                            int num11 = index1 >= length / 2 ? index1 - length / 2 : index1 + length / 2;
                            int num12 = num9;
                            for (int index2 = 0; index2 < numArray.Length; ++index2)
                            {
                                if (num11 != index2)
                                {
                                    Vector2 vector2 = this.Center + Utils.RotatedBy(spinningpoint, (double)index2 * 6.28318548202515 / (double)length - 1.57079637050629, new Vector2());
                                    if (num12-- > 0)
                                    {
                                        int index3 = NPC.NewNPC((int)vector2.X, (int)vector2.Y + this.height / 2, 440, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        Main.npc[index3].ai[3] = (float)this.whoAmI;
                                        Main.npc[index3].netUpdate = true;
                                        Main.npc[index3].localAI[1] = this.localAI[1];
                                    }
                                    else
                                    {
                                        int number = list[-num12 - 1];
                                        Main.npc[number].Center = vector2;
                                        NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                                    }
                                }
                            }
                            this.ai[2] = (float)Projectile.NewProjectile(this.Center.X, this.Center.Y, 0.0f, 0.0f, 490, 0, 0.0f, Main.myPlayer, 0.0f, (float)this.whoAmI);
                            NPC npc = this;
                            Vector2 vector2_1 = npc.Center + Utils.RotatedBy(spinningpoint, (double)num11 * 6.28318548202515 / (double)length - 1.57079637050629, new Vector2());
                            npc.Center = vector2_1;
                            this.netUpdate = true;
                            list.Clear();
                        }
                        flag3 = true;
                        flag4 = true;
                        this.alpha = (int)byte.MaxValue;
                        if (flag2)
                        {
                            Vector2 vector2 = Main.projectile[(int)this.ai[2]].Center - this.Center;
                            if (vector2 == Vector2.Zero)
                                vector2 = -Vector2.UnitY;
                            vector2.Normalize();
                            this.localAI[2] = (double)Math.Abs(vector2.Y) >= 0.769999980926514 ? ((double)vector2.Y >= 0.0 ? 10f : 12f) : 11f;
                            int num9 = Math.Sign(vector2.X);
                            if (num9 != 0)
                                this.direction = this.spriteDirection = num9;
                        }
                        else
                        {
                            Vector2 vector2 = Main.projectile[(int)Main.npc[(int)this.ai[3]].ai[2]].Center - this.Center;
                            if (vector2 == Vector2.Zero)
                                vector2 = -Vector2.UnitY;
                            vector2.Normalize();
                            this.localAI[2] = (double)Math.Abs(vector2.Y) >= 0.769999980926514 ? ((double)vector2.Y >= 0.0 ? 10f : 12f) : 11f;
                            int num9 = Math.Sign(vector2.X);
                            if (num9 != 0)
                                this.direction = this.spriteDirection = num9;
                        }
                    }
                    else if ((double)this.ai[1] >= 90.0 && (double)this.ai[1] < 120.0)
                    {
                        flag3 = true;
                        flag4 = true;
                        this.alpha = (int)byte.MaxValue - (int)(((double)this.ai[1] - 90.0) / 30.0 * (double)byte.MaxValue);
                    }
                    else if ((double)this.ai[1] >= 120.0 && (double)this.ai[1] < 420.0)
                    {
                        flag4 = true;
                        this.alpha = 0;
                        if (flag2)
                        {
                            Vector2 vector2 = Main.projectile[(int)this.ai[2]].Center - this.Center;
                            if (vector2 == Vector2.Zero)
                                vector2 = -Vector2.UnitY;
                            vector2.Normalize();
                            this.localAI[2] = (double)Math.Abs(vector2.Y) >= 0.769999980926514 ? ((double)vector2.Y >= 0.0 ? 10f : 12f) : 11f;
                            int num9 = Math.Sign(vector2.X);
                            if (num9 != 0)
                                this.direction = this.spriteDirection = num9;
                        }
                        else
                        {
                            Vector2 vector2 = Main.projectile[(int)Main.npc[(int)this.ai[3]].ai[2]].Center - this.Center;
                            if (vector2 == Vector2.Zero)
                                vector2 = -Vector2.UnitY;
                            vector2.Normalize();
                            this.localAI[2] = (double)Math.Abs(vector2.Y) >= 0.769999980926514 ? ((double)vector2.Y >= 0.0 ? 10f : 12f) : 11f;
                            int num9 = Math.Sign(vector2.X);
                            if (num9 != 0)
                                this.direction = this.spriteDirection = num9;
                        }
                    }
                    ++this.ai[1];
                    if ((double)this.ai[1] >= 420.0)
                    {
                        flag4 = true;
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                        ++this.ai[3];
                        this.velocity = Vector2.Zero;
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[0] == 6.0)
                {
                    this.localAI[2] = 13f;
                    ++this.ai[1];
                    if ((double)this.ai[1] >= 120.0)
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                        ++this.ai[3];
                        this.velocity = Vector2.Zero;
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[0] == 7.0)
                {
                    this.localAI[2] = 11f;
                    Vector2 vec1 = Vector2.Normalize(player.Center - center1);
                    if (Utils.HasNaNs(vec1))
                        vec1 = new Vector2((float)this.direction, 0.0f);
                    if ((double)this.ai[1] >= 4.0 && flag2 && (int)((double)this.ai[1] - 4.0) % num5 == 0)
                    {
                        if ((int)((double)this.ai[1] - 4.0) / num5 == 2)
                        {
                            List<int> list = new List<int>();
                            for (int index = 0; index < 200; ++index)
                            {
                                if (Main.npc[index].active && Main.npc[index].type == 440 && (double)Main.npc[index].ai[3] == (double)this.whoAmI)
                                    list.Add(index);
                            }
                            foreach (int index1 in list)
                            {
                                NPC npc = Main.npc[index1];
                                Vector2 center2 = npc.Center;
                                int num9 = Math.Sign(player.Center.X - center2.X);
                                if (num9 != 0)
                                    npc.direction = npc.spriteDirection = num9;
                                if (Main.netMode != 1)
                                {
                                    Vector2 vec2 = Vector2.Normalize(player.Center - center2 + player.velocity * 20f);
                                    if (Utils.HasNaNs(vec2))
                                        vec2 = new Vector2((float)this.direction, 0.0f);
                                    Vector2 vector2_1 = center2 + new Vector2((float)(this.direction * 30), 12f);
                                    for (int index2 = 0; (double)index2 < 5.0; ++index2)
                                    {
                                        Vector2 vector2_2 = Utils.RotatedByRandom(vec2 * (float)(6.0 + Main.rand.NextDouble() * 4.0), 1.25663709640503);
                                        Projectile.NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 468, 18, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                    }
                                }
                            }
                        }
                        int num11 = Math.Sign(player.Center.X - center1.X);
                        if (num11 != 0)
                            this.direction = this.spriteDirection = num11;
                        if (Main.netMode != 1)
                        {
                            Vector2 vec2 = Vector2.Normalize(player.Center - center1 + player.velocity * 20f);
                            if (Utils.HasNaNs(vec2))
                                vec2 = new Vector2((float)this.direction, 0.0f);
                            Vector2 vector2_1 = this.Center + new Vector2((float)(this.direction * 30), 12f);
                            float num9 = 8f;
                            float num12 = 0.2513274f;
                            for (int index1 = 0; (double)index1 < 5.0; ++index1)
                            {
                                Vector2 vector2_2 = Utils.RotatedBy(vec2 * num9, (double)num12 * (double)index1 - (1.25663709640503 - (double)num12) / 2.0, new Vector2());
                                float ai1 = (float)(((double)Utils.NextFloat(Main.rand) - 0.5) * 0.300000011920929 * 6.28318548202515 / 60.0);
                                int index2 = NPC.NewNPC((int)vector2_1.X, (int)vector2_1.Y + 7, 522, 0, 0.0f, ai1, vector2_2.X, vector2_2.Y, (int)byte.MaxValue);
                                Main.npc[index2].velocity = vector2_2;
                            }
                        }
                    }
                    ++this.ai[1];
                    if ((double)this.ai[1] >= (double)(4 + num5 * num6))
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                        ++this.ai[3];
                        this.velocity = Vector2.Zero;
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[0] == 8.0)
                {
                    this.localAI[2] = 13f;
                    if ((double)this.ai[1] >= 4.0 && flag2 && (int)((double)this.ai[1] - 4.0) % num7 == 0)
                    {
                        List<int> list = new List<int>();
                        for (int index = 0; index < 200; ++index)
                        {
                            if (Main.npc[index].active && Main.npc[index].type == 440 && (double)Main.npc[index].ai[3] == (double)this.whoAmI)
                                list.Add(index);
                        }
                        int num9 = list.Count + 1;
                        if (num9 > 3)
                            num9 = 3;
                        int num11 = Math.Sign(player.Center.X - center1.X);
                        if (num11 != 0)
                            this.direction = this.spriteDirection = num11;
                        if (Main.netMode != 1)
                        {
                            for (int index1 = 0; index1 < num9; ++index1)
                            {
                                Point point1 = Utils.ToTileCoordinates(this.Center);
                                Point point2 = Utils.ToTileCoordinates(Main.player[this.target].Center);
                                Vector2 vector2 = Main.player[this.target].Center - this.Center;
                                int num12 = 20;
                                int num13 = 3;
                                int num14 = 7;
                                int num15 = 2;
                                int num16 = 0;
                                bool flag5 = false;
                                if ((double)vector2.Length() > 2000.0)
                                    flag5 = true;
                                while (!flag5 && num16 < 100)
                                {
                                    ++num16;
                                    int index2 = Main.rand.Next(point2.X - num12, point2.X + num12 + 1);
                                    int index3 = Main.rand.Next(point2.Y - num12, point2.Y + num12 + 1);
                                    if ((index3 < point2.Y - num14 || index3 > point2.Y + num14 || (index2 < point2.X - num14 || index2 > point2.X + num14)) && (index3 < point1.Y - num13 || index3 > point1.Y + num13 || (index2 < point1.X - num13 || index2 > point1.X + num13)) && !Main.tile[index2, index3].nactive())
                                    {
                                        bool flag6 = true;
                                        if (flag6 && Collision.SolidTiles(index2 - num15, index2 + num15, index3 - num15, index3 + num15))
                                            flag6 = false;
                                        if (flag6)
                                        {
                                            NPC.NewNPC(index2 * 16 + 8, index3 * 16 + 8, 523, 0, (float)this.whoAmI, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    ++this.ai[1];
                    if ((double)this.ai[1] >= (double)(4 + num7 * num8))
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                        ++this.ai[3];
                        this.velocity = Vector2.Zero;
                        this.netUpdate = true;
                    }
                }
                if (!flag2)
                    this.ai[3] = num10;
                this.dontTakeDamage = flag3;
                this.chaseable = !flag4;
            }
            else if (this.aiStyle == 85)
            {
                this.noTileCollide = false;
                if ((double)this.ai[0] == 0.0)
                {
                    this.TargetClosest(true);
                    if (Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                    {
                        this.ai[0] = 1f;
                    }
                    else
                    {
                        Vector2 vector2_1 = Main.player[this.target].Center - this.Center;
                        vector2_1.Y -= (float)(Main.player[this.target].height / 4);
                        if ((double)vector2_1.Length() > 800.0)
                        {
                            this.ai[0] = 2f;
                        }
                        else
                        {
                            Vector2 center1 = this.Center;
                            center1.X = Main.player[this.target].Center.X;
                            Vector2 vector2_2 = center1 - this.Center;
                            if ((double)vector2_2.Length() > 8.0 && Collision.CanHit(this.Center, 1, 1, center1, 1, 1))
                            {
                                this.ai[0] = 3f;
                                this.ai[1] = center1.X;
                                this.ai[2] = center1.Y;
                                Vector2 center2 = this.Center;
                                center2.Y = Main.player[this.target].Center.Y;
                                if ((double)vector2_2.Length() > 8.0 && Collision.CanHit(this.Center, 1, 1, center2, 1, 1) && Collision.CanHit(center2, 1, 1, Main.player[this.target].position, 1, 1))
                                {
                                    this.ai[0] = 3f;
                                    this.ai[1] = center2.X;
                                    this.ai[2] = center2.Y;
                                }
                            }
                            else
                            {
                                Vector2 center2 = this.Center;
                                center2.Y = Main.player[this.target].Center.Y;
                                if ((double)(center2 - this.Center).Length() > 8.0 && Collision.CanHit(this.Center, 1, 1, center2, 1, 1))
                                {
                                    this.ai[0] = 3f;
                                    this.ai[1] = center2.X;
                                    this.ai[2] = center2.Y;
                                }
                            }
                            if ((double)this.ai[0] == 0.0)
                            {
                                this.localAI[0] = 0.0f;
                                vector2_1.Normalize();
                                vector2_1 *= 0.5f;
                                NPC npc = this;
                                Vector2 vector2_3 = npc.velocity + vector2_1;
                                npc.velocity = vector2_3;
                                this.ai[0] = 4f;
                                this.ai[1] = 0.0f;
                            }
                        }
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    this.rotation += (float)this.direction * 0.3f;
                    Vector2 vector2_1 = Main.player[this.target].Center - this.Center;
                    if (this.type == 421)
                        vector2_1 = Main.player[this.target].Top - this.Center;
                    float num1 = vector2_1.Length();
                    float num2 = 5.5f + num1 / 100f;
                    int num3 = 50;
                    vector2_1.Normalize();
                    Vector2 vector2_2 = vector2_1 * num2;
                    this.velocity = (this.velocity * (float)(num3 - 1) + vector2_2) / (float)num3;
                    if (!Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                    }
                    if (this.type == 421 && (double)num1 < 40.0 && (Main.player[this.target].active && !Main.player[this.target].dead))
                    {
                        bool flag = true;
                        for (int index = 0; index < 200; ++index)
                        {
                            NPC npc = Main.npc[index];
                            if (npc.active && npc.type == this.type && ((double)npc.ai[0] == 5.0 && npc.target == this.target))
                            {
                                flag = false;
                                break;
                            }
                        }
                        if (flag)
                        {
                            this.Center = Main.player[this.target].Top;
                            this.velocity = Vector2.Zero;
                            this.ai[0] = 5f;
                            this.ai[1] = 0.0f;
                            this.netUpdate = true;
                        }
                    }
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    this.rotation = this.velocity.X * 0.1f;
                    this.noTileCollide = true;
                    Vector2 vector2_1 = Main.player[this.target].Center - this.Center;
                    float num1 = vector2_1.Length();
                    float num2 = 3f;
                    int num3 = 3;
                    vector2_1.Normalize();
                    Vector2 vector2_2 = vector2_1 * num2;
                    this.velocity = (this.velocity * (float)(num3 - 1) + vector2_2) / (float)num3;
                    if ((double)num1 < 600.0 && !Collision.SolidCollision(this.position, this.width, this.height))
                        this.ai[0] = 0.0f;
                }
                else if ((double)this.ai[0] == 3.0)
                {
                    this.rotation = this.velocity.X * 0.1f;
                    Vector2 vector2 = new Vector2(this.ai[1], this.ai[2]) - this.Center;
                    float num1 = vector2.Length();
                    float num2 = 2f;
                    float num3 = 3f;
                    vector2.Normalize();
                    vector2 *= num2;
                    this.velocity = (this.velocity * (num3 - 1f) + vector2) / num3;
                    if (this.collideX || this.collideY)
                    {
                        this.ai[0] = 4f;
                        this.ai[1] = 0.0f;
                    }
                    if ((double)num1 < (double)num2 || (double)num1 > 800.0 || Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                        this.ai[0] = 0.0f;
                }
                else if ((double)this.ai[0] == 4.0)
                {
                    this.rotation = this.velocity.X * 0.1f;
                    if (this.collideX)
                        this.velocity.X *= -0.8f;
                    if (this.collideY)
                        this.velocity.Y *= -0.8f;
                    if ((double)this.velocity.X == 0.0 && (double)this.velocity.Y == 0.0)
                    {
                        Vector2 vector2 = Main.player[this.target].Center - this.Center;
                        vector2.Y -= (float)(Main.player[this.target].height / 4);
                        vector2.Normalize();
                        this.velocity = vector2 * 0.1f;
                    }
                    float num1 = 2f;
                    float num2 = 20f;
                    Vector2 vector2_1 = this.velocity;
                    vector2_1.Normalize();
                    Vector2 vector2_2 = vector2_1 * num1;
                    this.velocity = (this.velocity * (num2 - 1f) + vector2_2) / num2;
                    ++this.ai[1];
                    if ((double)this.ai[1] > 180.0)
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                    }
                    if (Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                        this.ai[0] = 0.0f;
                    ++this.localAI[0];
                    if ((double)this.localAI[0] >= 5.0 && !Collision.SolidCollision(this.position - new Vector2(10f, 10f), this.width + 20, this.height + 20))
                    {
                        this.localAI[0] = 0.0f;
                        Vector2 center1 = this.Center;
                        center1.X = Main.player[this.target].Center.X;
                        if (Collision.CanHit(this.Center, 1, 1, center1, 1, 1) && Collision.CanHit(this.Center, 1, 1, center1, 1, 1) && Collision.CanHit(Main.player[this.target].Center, 1, 1, center1, 1, 1))
                        {
                            this.ai[0] = 3f;
                            this.ai[1] = center1.X;
                            this.ai[2] = center1.Y;
                        }
                        else
                        {
                            Vector2 center2 = this.Center;
                            center2.Y = Main.player[this.target].Center.Y;
                            if (Collision.CanHit(this.Center, 1, 1, center2, 1, 1) && Collision.CanHit(Main.player[this.target].Center, 1, 1, center2, 1, 1))
                            {
                                this.ai[0] = 3f;
                                this.ai[1] = center2.X;
                                this.ai[2] = center2.Y;
                            }
                        }
                    }
                }
                else if ((double)this.ai[0] == 5.0)
                {
                    Player player = Main.player[this.target];
                    if (!player.active || player.dead)
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                        this.netUpdate = true;
                    }
                    else
                    {
                        this.Center = ((double)player.gravDir == 1.0 ? player.Top : player.Bottom) + new Vector2((float)(player.direction * 4), 0.0f);
                        this.gfxOffY = player.gfxOffY;
                        this.velocity = Vector2.Zero;
                        player.AddBuff(163, 59, true);
                    }
                }
                if (this.type == 405)
                {
                    this.rotation = 0.0f;
                    for (int index = 0; index < 200; ++index)
                    {
                        if (index != this.whoAmI && Main.npc[index].active && (Main.npc[index].type == this.type && (double)Math.Abs(this.position.X - Main.npc[index].position.X) + (double)Math.Abs(this.position.Y - Main.npc[index].position.Y) < (double)this.width))
                        {
                            if ((double)this.position.X < (double)Main.npc[index].position.X)
                                this.velocity.X -= 0.05f;
                            else
                                this.velocity.X += 0.05f;
                            if ((double)this.position.Y < (double)Main.npc[index].position.Y)
                                this.velocity.Y -= 0.05f;
                            else
                                this.velocity.Y += 0.05f;
                        }
                    }
                }
                else
                {
                    if (this.type != 421)
                        return;
                    this.hide = (double)this.ai[0] == 5.0;
                    this.rotation = this.velocity.X * 0.1f;
                    for (int index = 0; index < 200; ++index)
                    {
                        if (index != this.whoAmI && Main.npc[index].active && (Main.npc[index].type == this.type && (double)Math.Abs(this.position.X - Main.npc[index].position.X) + (double)Math.Abs(this.position.Y - Main.npc[index].position.Y) < (double)this.width))
                        {
                            if ((double)this.position.X < (double)Main.npc[index].position.X)
                                this.velocity.X -= 0.05f;
                            else
                                this.velocity.X += 0.05f;
                            if ((double)this.position.Y < (double)Main.npc[index].position.Y)
                                this.velocity.Y -= 0.05f;
                            else
                                this.velocity.Y += 0.05f;
                        }
                    }
                }
            }
            else if (this.aiStyle == 86)
            {
                if (this.alpha > 0)
                {
                    this.alpha -= 30;
                    if (this.alpha < 0)
                        this.alpha = 0;
                }
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0.0f;
                for (int index = 0; index < 200; ++index)
                {
                    if (index != this.whoAmI && Main.npc[index].active && Main.npc[index].type == this.type)
                    {
                        Vector2 vector2_1 = Main.npc[index].Center - this.Center;
                        if ((double)vector2_1.Length() < 50.0)
                        {
                            vector2_1.Normalize();
                            if ((double)vector2_1.X == 0.0 && (double)vector2_1.Y == 0.0)
                                vector2_1.X = index <= this.whoAmI ? -1f : 1f;
                            vector2_1 *= 0.4f;
                            NPC npc1 = this;
                            Vector2 vector2_2 = npc1.velocity - vector2_1;
                            npc1.velocity = vector2_2;
                            NPC npc2 = Main.npc[index];
                            Vector2 vector2_3 = npc2.velocity + vector2_1;
                            npc2.velocity = vector2_3;
                        }
                    }
                }
                if (this.type == 472)
                {
                    float num1 = 120f;
                    if ((double)this.localAI[0] < (double)num1)
                    {
                        if ((double)this.localAI[0] == 0.0)
                        {
                            Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 8);
                            this.TargetClosest(true);
                            if (this.direction > 0)
                                this.velocity.X += 2f;
                            else
                                this.velocity.X -= 2f;
                            for (int index1 = 0; index1 < 20; ++index1)
                            {
                                Vector2 center = this.Center;
                                center.Y -= 18f;
                                Vector2 vector2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                                vector2.Normalize();
                                vector2 *= (float)Main.rand.Next(0, 100) * 0.1f;
                                Vector2 Position = center + vector2;
                                vector2.Normalize();
                                vector2 *= (float)Main.rand.Next(50, 90) * 0.2f;
                                int index2 = Dust.NewDust(Position, 1, 1, 27, 0.0f, 0.0f, 0, new Color(), 1f);
                                Main.dust[index2].velocity = -vector2 * 0.3f;
                                Main.dust[index2].alpha = 100;
                                if (Main.rand.Next(2) == 0)
                                {
                                    Main.dust[index2].noGravity = true;
                                    Main.dust[index2].scale += 0.3f;
                                }
                            }
                        }
                        ++this.localAI[0];
                        float num2 = (float)(1.0 - (double)this.localAI[0] / (double)num1) * 20f;
                        for (int index1 = 0; (double)index1 < (double)num2; ++index1)
                        {
                            if (Main.rand.Next(5) == 0)
                            {
                                int index2 = Dust.NewDust(this.position, this.width, this.height, 27, 0.0f, 0.0f, 0, new Color(), 1f);
                                Main.dust[index2].alpha = 100;
                                Main.dust[index2].velocity *= 0.3f;
                                Main.dust[index2].velocity += this.velocity * 0.75f;
                                Main.dust[index2].noGravity = true;
                            }
                        }
                    }
                }
                if (this.type == 521 && (double)this.localAI[0] < 120.0)
                {
                    if ((double)this.localAI[0] == 0.0)
                    {
                        Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 8);
                        this.TargetClosest(true);
                        if (this.direction > 0)
                            this.velocity.X += 2f;
                        else
                            this.velocity.X -= 2f;
                    }
                    ++this.localAI[0];
                    int num = 10;
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        int index2 = Dust.NewDust(this.position - new Vector2((float)num), this.width + num * 2, this.height + num * 2, 228, 0.0f, 0.0f, 100, new Color(), 2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].noLight = true;
                    }
                }
                if ((double)this.ai[0] == 0.0)
                {
                    this.TargetClosest(true);
                    this.ai[0] = 1f;
                    this.ai[1] = (float)this.direction;
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    this.TargetClosest(true);
                    float num1 = 0.3f;
                    float num2 = 7f;
                    float num3 = 4f;
                    float num4 = 660f;
                    float num5 = 4f;
                    if (this.type == 521)
                    {
                        num1 = 0.7f;
                        num2 = 14f;
                        num4 = 500f;
                        num3 = 6f;
                        num5 = 3f;
                    }
                    this.velocity.X += this.ai[1] * num1;
                    if ((double)this.velocity.X > (double)num2)
                        this.velocity.X = num2;
                    if ((double)this.velocity.X < -(double)num2)
                        this.velocity.X = -num2;
                    float num6 = Main.player[this.target].Center.Y - this.Center.Y;
                    if ((double)Math.Abs(num6) > (double)num3)
                        num5 = 15f;
                    if ((double)num6 > (double)num3)
                        num6 = num3;
                    else if ((double)num6 < -(double)num3)
                        num6 = -num3;
                    this.velocity.Y = (this.velocity.Y * (num5 - 1f) + num6) / num5;
                    if ((double)this.ai[1] > 0.0 && (double)Main.player[this.target].Center.X - (double)this.Center.X < -(double)num4 || (double)this.ai[1] < 0.0 && (double)Main.player[this.target].Center.X - (double)this.Center.X > (double)num4)
                    {
                        this.ai[0] = 2f;
                        this.ai[1] = 0.0f;
                        this.ai[1] = (double)this.Center.Y + 20.0 <= (double)Main.player[this.target].Center.Y ? 1f : -1f;
                    }
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    float num1 = 0.4f;
                    float num2 = 0.95f;
                    float num3 = 5f;
                    if (this.type == 521)
                    {
                        num1 = 0.3f;
                        num3 = 7f;
                        num2 = 0.9f;
                    }
                    this.velocity.Y += this.ai[1] * num1;
                    if ((double)this.velocity.Length() > (double)num3)
                    {
                        NPC npc = this;
                        Vector2 vector2 = npc.velocity * num2;
                        npc.velocity = vector2;
                    }
                    if ((double)this.velocity.X > -1.0 && (double)this.velocity.X < 1.0)
                    {
                        this.TargetClosest(true);
                        this.ai[0] = 3f;
                        this.ai[1] = (float)this.direction;
                    }
                }
                else if ((double)this.ai[0] == 3.0)
                {
                    float num1 = 0.4f;
                    float num2 = 0.2f;
                    float num3 = 5f;
                    float num4 = 0.95f;
                    if (this.type == 521)
                    {
                        num1 = 0.6f;
                        num2 = 0.3f;
                        num3 = 7f;
                        num4 = 0.9f;
                    }
                    this.velocity.X += this.ai[1] * num1;
                    if ((double)this.Center.Y > (double)Main.player[this.target].Center.Y)
                        this.velocity.Y -= num2;
                    else
                        this.velocity.Y += num2;
                    if ((double)this.velocity.Length() > (double)num3)
                    {
                        NPC npc = this;
                        Vector2 vector2 = npc.velocity * num4;
                        npc.velocity = vector2;
                    }
                    if ((double)this.velocity.Y > -1.0 && (double)this.velocity.Y < 1.0)
                    {
                        this.TargetClosest(true);
                        this.ai[0] = 0.0f;
                        this.ai[1] = (float)this.direction;
                    }
                }
                if (this.type != 521)
                    return;
                int num7 = 10;
                for (int index1 = 0; index1 < 1; ++index1)
                {
                    int index2 = Dust.NewDust(this.position - new Vector2((float)num7), this.width + num7 * 2, this.height + num7 * 2, 228, 0.0f, 0.0f, 100, new Color(), 2f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].noLight = true;
                }
            }
            else if (this.aiStyle == 87)
            {
                this.knockBackResist = 0.2f * Main.knockBackMultiplier;
                this.dontTakeDamage = false;
                this.noTileCollide = false;
                this.noGravity = false;
                this.reflectingProjectiles = false;
                if ((double)this.ai[0] != 7.0 && Main.player[this.target].dead)
                {
                    this.TargetClosest(true);
                    if (Main.player[this.target].dead)
                    {
                        this.ai[0] = 7f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.ai[3] = 0.0f;
                    }
                }
                if ((double)this.ai[0] == 0.0)
                {
                    this.TargetClosest(true);
                    if ((double)this.velocity.X == 0.0 && (double)this.velocity.Y <= 100.0 && (!this.justHit && (double)(Main.player[this.target].Center - this.Center).Length() >= 80.0))
                        return;
                    this.ai[0] = 1f;
                    this.ai[1] = 0.0f;
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    ++this.ai[1];
                    if ((double)this.ai[1] <= 36.0)
                        return;
                    this.ai[0] = 2f;
                    this.ai[1] = 0.0f;
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    if ((double)(Main.player[this.target].Center - this.Center).Length() > 600.0)
                    {
                        this.ai[0] = 5f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.ai[3] = 0.0f;
                    }
                    if ((double)this.velocity.Y == 0.0)
                    {
                        this.TargetClosest(true);
                        this.velocity.X *= 0.85f;
                        ++this.ai[1];
                        float num1 = (float)(15.0 + 30.0 * ((double)this.life / (double)this.lifeMax));
                        float num2 = (float)(3.0 + 4.0 * (1.0 - (double)this.life / (double)this.lifeMax));
                        float num3 = 4f;
                        if (!Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                            num3 += 2f;
                        if ((double)this.ai[1] > (double)num1)
                        {
                            ++this.ai[3];
                            if ((double)this.ai[3] >= 3.0)
                            {
                                this.ai[3] = 0.0f;
                                num3 *= 2f;
                                num2 /= 2f;
                            }
                            this.ai[1] = 0.0f;
                            this.velocity.Y -= num3;
                            this.velocity.X = num2 * (float)this.direction;
                        }
                    }
                    else
                    {
                        this.knockBackResist = 0.0f;
                        this.velocity.X *= 0.99f;
                        if (this.direction < 0 && (double)this.velocity.X > -1.0)
                            this.velocity.X = -1f;
                        if (this.direction > 0 && (double)this.velocity.X < 1.0)
                            this.velocity.X = 1f;
                    }
                    ++this.ai[2];
                    if ((double)this.ai[2] <= 210.0 || (double)this.velocity.Y != 0.0 || Main.netMode == 1)
                        return;
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            this.ai[0] = 3f;
                            break;
                        case 1:
                            this.ai[0] = 4f;
                            this.noTileCollide = true;
                            this.velocity.Y = -8f;
                            break;
                        case 2:
                            this.ai[0] = 6f;
                            break;
                        default:
                            this.ai[0] = 2f;
                            break;
                    }
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                }
                else if ((double)this.ai[0] == 3.0)
                {
                    this.velocity.X *= 0.85f;
                    this.dontTakeDamage = true;
                    ++this.ai[1];
                    if ((double)this.ai[1] >= 180.0)
                    {
                        this.ai[0] = 2f;
                        this.ai[1] = 0.0f;
                    }
                    if (!Main.expertMode)
                        return;
                    this.ReflectProjectiles(this.Hitbox);
                    this.reflectingProjectiles = true;
                }
                else if ((double)this.ai[0] == 4.0)
                {
                    this.noTileCollide = true;
                    this.noGravity = true;
                    this.knockBackResist = 0.0f;
                    if ((double)this.velocity.X < 0.0)
                        this.direction = -1;
                    else
                        this.direction = 1;
                    this.spriteDirection = this.direction;
                    this.TargetClosest(true);
                    Vector2 center = Main.player[this.target].Center;
                    center.Y -= 350f;
                    Vector2 vector2_1 = center - this.Center;
                    if ((double)this.ai[2] == 1.0)
                    {
                        ++this.ai[1];
                        Vector2 vector2_2 = Main.player[this.target].Center - this.Center;
                        vector2_2.Normalize();
                        Vector2 vector2_3 = vector2_2 * 8f;
                        this.velocity = (this.velocity * 4f + vector2_3) / 5f;
                        if ((double)this.ai[1] <= 6.0)
                            return;
                        this.ai[1] = 0.0f;
                        this.ai[0] = 4.1f;
                        this.ai[2] = 0.0f;
                        this.velocity = vector2_3;
                    }
                    else if ((double)Math.Abs(this.Center.X - Main.player[this.target].Center.X) < 40.0 && (double)this.Center.Y < (double)Main.player[this.target].Center.Y - 300.0)
                    {
                        this.ai[1] = 0.0f;
                        this.ai[2] = 1f;
                    }
                    else
                    {
                        vector2_1.Normalize();
                        this.velocity = (this.velocity * 5f + vector2_1 * 12f) / 6f;
                    }
                }
                else if ((double)this.ai[0] == 4.09999990463257)
                {
                    this.knockBackResist = 0.0f;
                    if ((double)this.ai[2] == 0.0 && Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1) && !Collision.SolidCollision(this.position, this.width, this.height))
                        this.ai[2] = 1f;
                    if ((double)this.position.Y + (double)this.height >= (double)Main.player[this.target].position.Y || (double)this.velocity.Y <= 0.0)
                    {
                        ++this.ai[1];
                        if ((double)this.ai[1] > 10.0)
                        {
                            this.ai[0] = 2f;
                            this.ai[1] = 0.0f;
                            this.ai[2] = 0.0f;
                            this.ai[3] = 0.0f;
                            if (Collision.SolidCollision(this.position, this.width, this.height))
                                this.ai[0] = 5f;
                        }
                    }
                    else if ((double)this.ai[2] == 0.0)
                    {
                        this.noTileCollide = true;
                        this.noGravity = true;
                        this.knockBackResist = 0.0f;
                    }
                    this.velocity.Y += 0.2f;
                    if ((double)this.velocity.Y <= 16.0)
                        return;
                    this.velocity.Y = 16f;
                }
                else if ((double)this.ai[0] == 5.0)
                {
                    if ((double)this.velocity.X > 0.0)
                        this.direction = 1;
                    else
                        this.direction = -1;
                    this.spriteDirection = this.direction;
                    this.noTileCollide = true;
                    this.noGravity = true;
                    this.knockBackResist = 0.0f;
                    Vector2 vector2 = Main.player[this.target].Center - this.Center;
                    vector2.Y -= 4f;
                    if ((double)vector2.Length() < 200.0 && !Collision.SolidCollision(this.position, this.width, this.height))
                    {
                        this.ai[0] = 2f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.ai[3] = 0.0f;
                    }
                    if ((double)vector2.Length() > 10.0)
                    {
                        vector2.Normalize();
                        vector2 *= 10f;
                    }
                    this.velocity = (this.velocity * 4f + vector2) / 5f;
                }
                else if ((double)this.ai[0] == 6.0)
                {
                    this.knockBackResist = 0.0f;
                    if ((double)this.velocity.Y == 0.0)
                    {
                        this.TargetClosest(true);
                        this.velocity.X *= 0.8f;
                        ++this.ai[1];
                        if ((double)this.ai[1] > 5.0)
                        {
                            this.ai[1] = 0.0f;
                            this.velocity.Y -= 4f;
                            if ((double)Main.player[this.target].position.Y + (double)Main.player[this.target].height < (double)this.Center.Y)
                                this.velocity.Y -= 1.25f;
                            if ((double)Main.player[this.target].position.Y + (double)Main.player[this.target].height < (double)this.Center.Y - 40.0)
                                this.velocity.Y -= 1.5f;
                            if ((double)Main.player[this.target].position.Y + (double)Main.player[this.target].height < (double)this.Center.Y - 80.0)
                                this.velocity.Y -= 1.75f;
                            if ((double)Main.player[this.target].position.Y + (double)Main.player[this.target].height < (double)this.Center.Y - 120.0)
                                this.velocity.Y -= 2f;
                            if ((double)Main.player[this.target].position.Y + (double)Main.player[this.target].height < (double)this.Center.Y - 160.0)
                                this.velocity.Y -= 2.25f;
                            if ((double)Main.player[this.target].position.Y + (double)Main.player[this.target].height < (double)this.Center.Y - 200.0)
                                this.velocity.Y -= 2.5f;
                            if (!Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                                this.velocity.Y -= 2f;
                            this.velocity.X = (float)(12 * this.direction);
                            ++this.ai[2];
                        }
                    }
                    else
                    {
                        this.velocity.X *= 0.98f;
                        if (this.direction < 0 && (double)this.velocity.X > -8.0)
                            this.velocity.X = -8f;
                        if (this.direction > 0 && (double)this.velocity.X < 8.0)
                            this.velocity.X = 8f;
                    }
                    if ((double)this.ai[2] < 3.0 || (double)this.velocity.Y != 0.0)
                        return;
                    this.ai[0] = 2f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                }
                else
                {
                    if ((double)this.ai[0] != 7.0)
                        return;
                    this.damage = 0;
                    this.life = this.lifeMax;
                    this.defense = 9999;
                    this.noTileCollide = true;
                    this.alpha += 7;
                    if (this.alpha > (int)byte.MaxValue)
                        this.alpha = (int)byte.MaxValue;
                    this.velocity.X *= 0.98f;
                }
            }
            else if (this.aiStyle == 88)
            {
                int num1 = 7;
                this.noTileCollide = false;
                this.noGravity = true;
                this.knockBackResist = 0.2f * Main.expertKnockBack;
                this.damage = this.defDamage;
                if (!Main.eclipse)
                    this.ai[0] = -1f;
                else if (this.target < 0 || Main.player[this.target].dead || !Main.player[this.target].active)
                {
                    this.TargetClosest(true);
                    Vector2 vector2 = Main.player[this.target].Center - this.Center;
                    if (Main.player[this.target].dead || (double)vector2.Length() > 3000.0)
                        this.ai[0] = -1f;
                }
                else if ((double)this.ai[0] > 1.0 && (double)(Main.player[this.target].Center - this.Center).Length() > 1000.0)
                    this.ai[0] = 1f;
                if ((double)this.ai[0] == -1.0)
                {
                    this.velocity = (this.velocity * 9f + new Vector2(0.0f, -8f)) / 10f;
                    this.noTileCollide = true;
                    this.dontTakeDamage = true;
                }
                else if ((double)this.ai[0] == 0.0)
                {
                    this.TargetClosest(true);
                    if ((double)this.Center.X < (double)Main.player[this.target].Center.X - 2.0)
                        this.direction = 1;
                    if ((double)this.Center.X > (double)Main.player[this.target].Center.X + 2.0)
                        this.direction = -1;
                    this.spriteDirection = this.direction;
                    this.rotation = (float)(((double)this.rotation * 9.0 + (double)this.velocity.X * 0.100000001490116) / 10.0);
                    if (this.collideX)
                    {
                        this.velocity.X *= (float)(-(double)this.oldVelocity.X * 0.5);
                        if ((double)this.velocity.X > 4.0)
                            this.velocity.X = 4f;
                        if ((double)this.velocity.X < -4.0)
                            this.velocity.X = -4f;
                    }
                    if (this.collideY)
                    {
                        this.velocity.Y *= (float)(-(double)this.oldVelocity.Y * 0.5);
                        if ((double)this.velocity.Y > 4.0)
                            this.velocity.Y = 4f;
                        if ((double)this.velocity.Y < -4.0)
                            this.velocity.Y = -4f;
                    }
                    Vector2 vector2_1 = Main.player[this.target].Center - this.Center;
                    vector2_1.Y -= 200f;
                    if ((double)vector2_1.Length() > 800.0)
                    {
                        this.ai[0] = 1f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.ai[3] = 0.0f;
                    }
                    else if ((double)vector2_1.Length() > 80.0)
                    {
                        float num2 = 6f;
                        float num3 = 30f;
                        vector2_1.Normalize();
                        vector2_1 *= num2;
                        this.velocity = (this.velocity * (num3 - 1f) + vector2_1) / num3;
                    }
                    else if ((double)this.velocity.Length() > 2.0)
                    {
                        NPC npc = this;
                        Vector2 vector2_2 = npc.velocity * 0.95f;
                        npc.velocity = vector2_2;
                    }
                    else if ((double)this.velocity.Length() < 1.0)
                    {
                        NPC npc = this;
                        Vector2 vector2_2 = npc.velocity * 1.05f;
                        npc.velocity = vector2_2;
                    }
                    ++this.ai[1];
                    if (this.justHit)
                        this.ai[1] += (float)Main.rand.Next(10, 30);
                    if ((double)this.ai[1] < 180.0 || Main.netMode == 1)
                        return;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                    this.netUpdate = true;
                    while ((double)this.ai[0] == 0.0)
                    {
                        int num2 = Main.rand.Next(3);
                        if (num2 == 0 && Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                            this.ai[0] = 2f;
                        else if (num2 == 1)
                            this.ai[0] = 3f;
                        else if (num2 == 2 && NPC.CountNPCS(478) + NPC.CountNPCS(479) < num1)
                            this.ai[0] = 4f;
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    this.collideX = false;
                    this.collideY = false;
                    this.noTileCollide = true;
                    this.knockBackResist = 0.0f;
                    if (this.target < 0 || !Main.player[this.target].active || Main.player[this.target].dead)
                        this.TargetClosest(true);
                    if ((double)this.velocity.X < 0.0)
                        this.direction = -1;
                    else if ((double)this.velocity.X > 0.0)
                        this.direction = 1;
                    this.spriteDirection = this.direction;
                    this.rotation = (float)(((double)this.rotation * 9.0 + (double)this.velocity.X * 0.0799999982118607) / 10.0);
                    Vector2 vector2_1 = Main.player[this.target].Center - this.Center;
                    if ((double)vector2_1.Length() < 300.0 && !Collision.SolidCollision(this.position, this.width, this.height))
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.ai[3] = 0.0f;
                    }
                    float num2 = (float)(7.0 + (double)vector2_1.Length() / 100.0);
                    float num3 = 25f;
                    vector2_1.Normalize();
                    Vector2 vector2_2 = vector2_1 * num2;
                    this.velocity = (this.velocity * (num3 - 1f) + vector2_2) / num3;
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    this.damage = (int)((double)this.defDamage * 0.5);
                    this.knockBackResist = 0.0f;
                    if (this.target < 0 || !Main.player[this.target].active || Main.player[this.target].dead)
                    {
                        this.TargetClosest(true);
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                        this.ai[2] = 0.0f;
                        this.ai[3] = 0.0f;
                    }
                    if ((double)Main.player[this.target].Center.X - 10.0 < (double)this.Center.X)
                        this.direction = -1;
                    else if ((double)Main.player[this.target].Center.X + 10.0 > (double)this.Center.X)
                        this.direction = 1;
                    this.spriteDirection = this.direction;
                    this.rotation = (float)(((double)this.rotation * 4.0 + (double)this.velocity.X * 0.100000001490116) / 5.0);
                    if (this.collideX)
                    {
                        this.velocity.X *= (float)(-(double)this.oldVelocity.X * 0.5);
                        if ((double)this.velocity.X > 4.0)
                            this.velocity.X = 4f;
                        if ((double)this.velocity.X < -4.0)
                            this.velocity.X = -4f;
                    }
                    if (this.collideY)
                    {
                        this.velocity.Y *= (float)(-(double)this.oldVelocity.Y * 0.5);
                        if ((double)this.velocity.Y > 4.0)
                            this.velocity.Y = 4f;
                        if ((double)this.velocity.Y < -4.0)
                            this.velocity.Y = -4f;
                    }
                    Vector2 vector2_1 = Main.player[this.target].Center - this.Center;
                    vector2_1.Y -= 20f;
                    this.ai[2] += 0.02222222f;
                    if (Main.expertMode)
                        this.ai[2] += 0.01666667f;
                    float num2 = (float)(4.0 + (double)this.ai[2] + (double)vector2_1.Length() / 120.0);
                    float num3 = 20f;
                    vector2_1.Normalize();
                    Vector2 vector2_2 = vector2_1 * num2;
                    this.velocity = (this.velocity * (num3 - 1f) + vector2_2) / num3;
                    ++this.ai[1];
                    if ((double)this.ai[1] <= 240.0 && Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                        return;
                    this.ai[0] = 0.0f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                }
                else if ((double)this.ai[0] == 3.0)
                {
                    this.knockBackResist = 0.0f;
                    this.noTileCollide = true;
                    if ((double)this.velocity.X < 0.0)
                        this.direction = -1;
                    else
                        this.direction = 1;
                    this.spriteDirection = this.direction;
                    this.rotation = (float)(((double)this.rotation * 4.0 + (double)this.velocity.X * 0.0700000002980232) / 5.0);
                    Vector2 vector2_1 = Main.player[this.target].Center - this.Center;
                    vector2_1.Y -= 12f;
                    if ((double)this.Center.X > (double)Main.player[this.target].Center.X)
                        vector2_1.X += 400f;
                    else
                        vector2_1.X -= 400f;
                    if ((double)Math.Abs(this.Center.X - Main.player[this.target].Center.X) > 350.0 && (double)Math.Abs(this.Center.Y - Main.player[this.target].Center.Y) < 20.0)
                    {
                        this.ai[0] = 3.1f;
                        this.ai[1] = 0.0f;
                    }
                    this.ai[1] += 0.03333334f;
                    float num2 = 8f + this.ai[1];
                    float num3 = 4f;
                    vector2_1.Normalize();
                    Vector2 vector2_2 = vector2_1 * num2;
                    this.velocity = (this.velocity * (num3 - 1f) + vector2_2) / num3;
                }
                else if ((double)this.ai[0] == 3.09999990463257)
                {
                    this.knockBackResist = 0.0f;
                    this.noTileCollide = true;
                    this.rotation = (float)(((double)this.rotation * 4.0 + (double)this.velocity.X * 0.0700000002980232) / 5.0);
                    Vector2 vector2 = Main.player[this.target].Center - this.Center;
                    vector2.Y -= 12f;
                    float num2 = 16f;
                    float num3 = 8f;
                    vector2.Normalize();
                    vector2 *= num2;
                    this.velocity = (this.velocity * (num3 - 1f) + vector2) / num3;
                    if ((double)this.velocity.X < 0.0)
                        this.direction = -1;
                    else
                        this.direction = 1;
                    this.spriteDirection = this.direction;
                    ++this.ai[1];
                    if ((double)this.ai[1] <= 10.0)
                        return;
                    this.velocity = vector2;
                    if ((double)this.velocity.X < 0.0)
                        this.direction = -1;
                    else
                        this.direction = 1;
                    this.ai[0] = 3.2f;
                    this.ai[1] = 0.0f;
                    this.ai[1] = (float)this.direction;
                }
                else if ((double)this.ai[0] == 3.20000004768372)
                {
                    this.damage = (int)((double)this.defDamage * 1.3);
                    this.collideX = false;
                    this.collideY = false;
                    this.knockBackResist = 0.0f;
                    this.noTileCollide = true;
                    this.ai[2] += 0.03333334f;
                    this.velocity.X = (16f + this.ai[2]) * this.ai[1];
                    if ((double)this.ai[1] > 0.0 && (double)this.Center.X > (double)Main.player[this.target].Center.X + 260.0 || (double)this.ai[1] < 0.0 && (double)this.Center.X < (double)Main.player[this.target].Center.X - 260.0)
                    {
                        if (!Collision.SolidCollision(this.position, this.width, this.height))
                        {
                            this.ai[0] = 0.0f;
                            this.ai[1] = 0.0f;
                            this.ai[2] = 0.0f;
                            this.ai[3] = 0.0f;
                        }
                        else if ((double)Math.Abs(this.Center.X - Main.player[this.target].Center.X) > 800.0)
                        {
                            this.ai[0] = 1f;
                            this.ai[1] = 0.0f;
                            this.ai[2] = 0.0f;
                            this.ai[3] = 0.0f;
                        }
                    }
                    this.rotation = (float)(((double)this.rotation * 4.0 + (double)this.velocity.X * 0.0700000002980232) / 5.0);
                }
                else if ((double)this.ai[0] == 4.0)
                {
                    this.ai[0] = 0.0f;
                    this.TargetClosest(true);
                    if (Main.netMode != 1)
                    {
                        this.ai[1] = -1f;
                        this.ai[2] = -1f;
                        for (int index = 0; index < 1000; ++index)
                        {
                            int num2 = (int)Main.player[this.target].Center.X / 16;
                            int num3 = (int)Main.player[this.target].Center.Y / 16;
                            int num4 = 30 + index / 50;
                            int num5 = 20 + index / 75;
                            int i = num2 + Main.rand.Next(-num4, num4 + 1);
                            int j = num3 + Main.rand.Next(-num5, num5 + 1);
                            if (!WorldGen.SolidTile(i, j))
                            {
                                while (!WorldGen.SolidTile(i, j) && (double)j < Main.worldSurface)
                                    ++j;
                                if ((double)(new Vector2((float)(i * 16 + 8), (float)(j * 16 + 8)) - Main.player[this.target].Center).Length() < 600.0)
                                {
                                    this.ai[0] = 4.1f;
                                    this.ai[1] = (float)i;
                                    this.ai[2] = (float)j;
                                    break;
                                }
                            }
                        }
                    }
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 4.09999990463257)
                {
                    if ((double)this.velocity.X < -2.0)
                        this.direction = -1;
                    else if ((double)this.velocity.X > 2.0)
                        this.direction = 1;
                    this.spriteDirection = this.direction;
                    this.rotation = (float)(((double)this.rotation * 9.0 + (double)this.velocity.X * 0.100000001490116) / 10.0);
                    this.noTileCollide = true;
                    Vector2 vector2 = new Vector2((float)((int)this.ai[1] * 16 + 8), (float)((int)this.ai[2] * 16 - 20)) - this.Center;
                    float num2 = (float)(6.0 + (double)vector2.Length() / 150.0);
                    if ((double)num2 > 10.0)
                        num2 = 10f;
                    float num3 = 10f;
                    if ((double)vector2.Length() < 10.0)
                        this.ai[0] = 4.2f;
                    vector2.Normalize();
                    vector2 *= num2;
                    this.velocity = (this.velocity * (num3 - 1f) + vector2) / num3;
                }
                else
                {
                    if ((double)this.ai[0] != 4.19999980926514)
                        return;
                    this.rotation = (float)(((double)this.rotation * 9.0 + (double)this.velocity.X * 0.100000001490116) / 10.0);
                    this.knockBackResist = 0.0f;
                    this.noTileCollide = true;
                    int num2 = (int)this.ai[1];
                    int num3 = (int)this.ai[2];
                    Vector2 vector2 = new Vector2((float)(num2 * 16 + 8), (float)(num3 * 16 - 20)) - this.Center;
                    float num4 = 4f;
                    float num5 = 2f;
                    if (Main.netMode != 1 && (double)vector2.Length() < 4.0)
                    {
                        int num6 = 70;
                        if (Main.expertMode)
                            num6 = (int)((double)num6 * 0.75);
                        ++this.ai[3];
                        if ((double)this.ai[3] == (double)num6)
                            NPC.NewNPC(num2 * 16 + 8, num3 * 16, 478, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        else if ((double)this.ai[3] == (double)(num6 * 2))
                        {
                            this.ai[0] = 0.0f;
                            this.ai[1] = 0.0f;
                            this.ai[2] = 0.0f;
                            this.ai[3] = 0.0f;
                            if (NPC.CountNPCS(478) + NPC.CountNPCS(479) < num1 && Main.rand.Next(3) != 0)
                                this.ai[0] = 4f;
                            else if (Collision.SolidCollision(this.position, this.width, this.height))
                                this.ai[0] = 1f;
                        }
                    }
                    if ((double)vector2.Length() > (double)num4)
                    {
                        vector2.Normalize();
                        vector2 *= num4;
                    }
                    this.velocity = (this.velocity * (num5 - 1f) + vector2) / num5;
                }
            }
            else if (this.aiStyle == 89)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    this.velocity.X *= 0.9f;
                    this.rotation += this.velocity.X * 0.02f;
                }
                else
                {
                    this.velocity.X *= 0.99f;
                    this.rotation += this.velocity.X * 0.04f;
                }
                int num1 = 900;
                if (Main.expertMode)
                    num1 = 600;
                if (this.justHit)
                {
                    this.ai[0] -= (float)Main.rand.Next(10, 21);
                    if (!Main.expertMode)
                        this.ai[0] -= (float)Main.rand.Next(10, 21);
                }
                ++this.ai[0];
                if ((double)this.ai[0] >= (double)num1)
                    this.Transform(479);
                if (Main.netMode == 1 || (double)this.velocity.Y != 0.0 || ((double)Math.Abs(this.velocity.X) >= 0.2 || (double)this.ai[0] < (double)num1 * 0.75))
                    return;
                float num2 = (this.ai[0] - (float)num1 * 0.75f) / ((float)num1 * 0.25f);
                if ((double)Main.rand.Next(-10, 120) >= (double)num2 * 100.0)
                    return;
                this.velocity.Y -= (float)Main.rand.Next(20, 40) * 0.025f;
                this.velocity.X += (float)Main.rand.Next(-20, 20) * 0.025f;
                NPC npc = this;
                Vector2 vector2 = npc.velocity * (float)(1.0 + (double)num2 * 2.0);
                npc.velocity = vector2;
                this.netUpdate = true;
            }
            else if (this.aiStyle == 90)
            {
                this.noTileCollide = false;
                this.knockBackResist = 0.4f * Main.knockBackMultiplier;
                this.noGravity = true;
                this.rotation = (float)(((double)this.rotation * 9.0 + (double)this.velocity.X * 0.100000001490116) / 10.0);
                if (!Main.eclipse)
                {
                    if (this.timeLeft > 5)
                        this.timeLeft = 5;
                    this.velocity.Y -= 0.2f;
                    if ((double)this.velocity.Y < -8.0)
                        this.velocity.Y = -8f;
                    this.noTileCollide = true;
                }
                else
                {
                    if ((double)this.ai[0] == 0.0 || (double)this.ai[0] == 1.0)
                    {
                        for (int index = 0; index < 200; ++index)
                        {
                            if (index != this.whoAmI && Main.npc[index].active && Main.npc[index].type == this.type)
                            {
                                Vector2 vector2_1 = Main.npc[index].Center - this.Center;
                                if ((double)vector2_1.Length() < (double)(this.width + this.height))
                                {
                                    vector2_1.Normalize();
                                    Vector2 vector2_2 = vector2_1 * -0.1f;
                                    NPC npc1 = this;
                                    Vector2 vector2_3 = npc1.velocity + vector2_2;
                                    npc1.velocity = vector2_3;
                                    NPC npc2 = Main.npc[index];
                                    Vector2 vector2_4 = npc2.velocity - vector2_2;
                                    npc2.velocity = vector2_4;
                                }
                            }
                        }
                    }
                    if (this.target < 0 || Main.player[this.target].dead || !Main.player[this.target].active)
                    {
                        this.TargetClosest(true);
                        Vector2 vector2 = Main.player[this.target].Center - this.Center;
                        if (Main.player[this.target].dead || (double)vector2.Length() > 3000.0)
                            this.ai[0] = -1f;
                    }
                    else if ((double)this.ai[0] > 1.0 && (double)(Main.player[this.target].Center - this.Center).Length() > 1000.0)
                        this.ai[0] = 1f;
                    if ((double)this.ai[0] == -1.0)
                    {
                        this.velocity = (this.velocity * 9f + new Vector2(0.0f, -8f)) / 10f;
                        this.noTileCollide = true;
                        this.dontTakeDamage = true;
                    }
                    else if ((double)this.ai[0] == 0.0)
                    {
                        this.TargetClosest(true);
                        this.spriteDirection = this.direction;
                        if (this.collideX)
                        {
                            this.velocity.X *= (float)(-(double)this.oldVelocity.X * 0.5);
                            if ((double)this.velocity.X > 4.0)
                                this.velocity.X = 4f;
                            if ((double)this.velocity.X < -4.0)
                                this.velocity.X = -4f;
                        }
                        if (this.collideY)
                        {
                            this.velocity.Y *= (float)(-(double)this.oldVelocity.Y * 0.5);
                            if ((double)this.velocity.Y > 4.0)
                                this.velocity.Y = 4f;
                            if ((double)this.velocity.Y < -4.0)
                                this.velocity.Y = -4f;
                        }
                        Vector2 vector2_1 = Main.player[this.target].Center - this.Center;
                        if ((double)vector2_1.Length() > 800.0)
                        {
                            this.ai[0] = 1f;
                            this.ai[1] = 0.0f;
                            this.ai[2] = 0.0f;
                            this.ai[3] = 0.0f;
                        }
                        else if ((double)vector2_1.Length() > 200.0)
                        {
                            float num1 = (float)(5.5 + (double)vector2_1.Length() / 100.0 + (double)this.ai[1] / 15.0);
                            float num2 = 40f;
                            vector2_1.Normalize();
                            Vector2 vector2_2 = vector2_1 * num1;
                            this.velocity = (this.velocity * (num2 - 1f) + vector2_2) / num2;
                        }
                        else if ((double)this.velocity.Length() > 2.0)
                        {
                            NPC npc = this;
                            Vector2 vector2_2 = npc.velocity * 0.95f;
                            npc.velocity = vector2_2;
                        }
                        else if ((double)this.velocity.Length() < 1.0)
                        {
                            NPC npc = this;
                            Vector2 vector2_2 = npc.velocity * 1.05f;
                            npc.velocity = vector2_2;
                        }
                        ++this.ai[1];
                        if ((double)this.ai[1] < 90.0)
                            return;
                        this.ai[1] = 0.0f;
                        this.ai[0] = 2f;
                    }
                    else if ((double)this.ai[0] == 1.0)
                    {
                        this.collideX = false;
                        this.collideY = false;
                        this.noTileCollide = true;
                        this.knockBackResist = 0.0f;
                        if (this.target < 0 || !Main.player[this.target].active || Main.player[this.target].dead)
                            this.TargetClosest(true);
                        if ((double)this.velocity.X < 0.0)
                            this.direction = -1;
                        else if ((double)this.velocity.X > 0.0)
                            this.direction = 1;
                        this.spriteDirection = this.direction;
                        this.rotation = (float)(((double)this.rotation * 9.0 + (double)this.velocity.X * 0.0799999982118607) / 10.0);
                        Vector2 vector2_1 = Main.player[this.target].Center - this.Center;
                        if ((double)vector2_1.Length() < 300.0 && !Collision.SolidCollision(this.position, this.width, this.height))
                        {
                            this.ai[0] = 0.0f;
                            this.ai[1] = 0.0f;
                            this.ai[2] = 0.0f;
                            this.ai[3] = 0.0f;
                        }
                        this.ai[2] += 0.01666667f;
                        float num1 = (float)(5.5 + (double)this.ai[2] + (double)vector2_1.Length() / 150.0);
                        float num2 = 35f;
                        vector2_1.Normalize();
                        Vector2 vector2_2 = vector2_1 * num1;
                        this.velocity = (this.velocity * (num2 - 1f) + vector2_2) / num2;
                    }
                    else if ((double)this.ai[0] == 2.0)
                    {
                        if ((double)this.velocity.X < 0.0)
                            this.direction = -1;
                        else if ((double)this.velocity.X > 0.0)
                            this.direction = 1;
                        this.spriteDirection = this.direction;
                        this.rotation = (float)(((double)this.rotation * 7.0 + (double)this.velocity.X * 0.100000001490116) / 8.0);
                        this.knockBackResist = 0.0f;
                        this.noTileCollide = true;
                        Vector2 vector2 = Main.player[this.target].Center - this.Center;
                        vector2.Y -= 8f;
                        float num1 = 9f;
                        float num2 = 8f;
                        vector2.Normalize();
                        vector2 *= num1;
                        this.velocity = (this.velocity * (num2 - 1f) + vector2) / num2;
                        if ((double)this.velocity.X < 0.0)
                            this.direction = -1;
                        else
                            this.direction = 1;
                        this.spriteDirection = this.direction;
                        ++this.ai[1];
                        if ((double)this.ai[1] <= 10.0)
                            return;
                        this.velocity = vector2;
                        if ((double)this.velocity.X < 0.0)
                            this.direction = -1;
                        else
                            this.direction = 1;
                        this.ai[0] = 2.1f;
                        this.ai[1] = 0.0f;
                    }
                    else
                    {
                        if ((double)this.ai[0] != 2.09999990463257)
                            return;
                        if ((double)this.velocity.X < 0.0)
                            this.direction = -1;
                        else if ((double)this.velocity.X > 0.0)
                            this.direction = 1;
                        this.spriteDirection = this.direction;
                        NPC npc = this;
                        Vector2 vector2 = npc.velocity * 1.01f;
                        npc.velocity = vector2;
                        this.knockBackResist = 0.0f;
                        this.noTileCollide = true;
                        ++this.ai[1];
                        int num = 45;
                        if ((double)this.ai[1] <= (double)num)
                            return;
                        if (!Collision.SolidCollision(this.position, this.width, this.height))
                        {
                            this.ai[0] = 0.0f;
                            this.ai[1] = 0.0f;
                            this.ai[2] = 0.0f;
                        }
                        else
                        {
                            if ((double)this.ai[1] <= (double)(num * 2))
                                return;
                            this.ai[0] = 1f;
                            this.ai[1] = 0.0f;
                            this.ai[2] = 0.0f;
                        }
                    }
                }
            }
            else if (this.aiStyle == 91)
            {
                this.noGravity = true;
                this.noTileCollide = false;
                this.dontTakeDamage = false;
                if (this.justHit && Main.netMode != 1 && (Main.expertMode && Main.rand.Next(6) == 0))
                {
                    this.netUpdate = true;
                    this.ai[0] = -1f;
                    this.ai[1] = 0.0f;
                }
                if ((double)this.ai[0] == -1.0)
                {
                    this.dontTakeDamage = true;
                    this.noGravity = false;
                    this.velocity.X *= 0.98f;
                    ++this.ai[1];
                    if ((double)this.ai[1] < 120.0)
                        return;
                    this.ai[0] = this.ai[1] = this.ai[2] = this.ai[3] = 0.0f;
                }
                else if ((double)this.ai[0] == 0.0)
                {
                    this.TargetClosest(true);
                    if (Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                    {
                        this.ai[0] = 1f;
                    }
                    else
                    {
                        Vector2 vector2_1 = Main.player[this.target].Center - this.Center;
                        vector2_1.Y -= (float)(Main.player[this.target].height / 4);
                        if ((double)vector2_1.Length() > 800.0)
                        {
                            this.ai[0] = 2f;
                        }
                        else
                        {
                            Vector2 center1 = this.Center;
                            center1.X = Main.player[this.target].Center.X;
                            Vector2 vector2_2 = center1 - this.Center;
                            if ((double)vector2_2.Length() > 8.0 && Collision.CanHit(this.Center, 1, 1, center1, 1, 1))
                            {
                                this.ai[0] = 3f;
                                this.ai[1] = center1.X;
                                this.ai[2] = center1.Y;
                                Vector2 center2 = this.Center;
                                center2.Y = Main.player[this.target].Center.Y;
                                if ((double)vector2_2.Length() > 8.0 && Collision.CanHit(this.Center, 1, 1, center2, 1, 1) && Collision.CanHit(center2, 1, 1, Main.player[this.target].position, 1, 1))
                                {
                                    this.ai[0] = 3f;
                                    this.ai[1] = center2.X;
                                    this.ai[2] = center2.Y;
                                }
                            }
                            else
                            {
                                Vector2 center2 = this.Center;
                                center2.Y = Main.player[this.target].Center.Y;
                                if ((double)(center2 - this.Center).Length() > 8.0 && Collision.CanHit(this.Center, 1, 1, center2, 1, 1))
                                {
                                    this.ai[0] = 3f;
                                    this.ai[1] = center2.X;
                                    this.ai[2] = center2.Y;
                                }
                            }
                            if ((double)this.ai[0] != 0.0)
                                return;
                            this.localAI[0] = 0.0f;
                            vector2_1.Normalize();
                            vector2_1 *= 0.5f;
                            NPC npc = this;
                            Vector2 vector2_3 = npc.velocity + vector2_1;
                            npc.velocity = vector2_3;
                            this.ai[0] = 4f;
                            this.ai[1] = 0.0f;
                        }
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    Vector2 vector2_1 = Main.player[this.target].Center - this.Center;
                    float num1 = 2f + vector2_1.Length() / 200f;
                    int num2 = 50;
                    vector2_1.Normalize();
                    Vector2 vector2_2 = vector2_1 * num1;
                    this.velocity = (this.velocity * (float)(num2 - 1) + vector2_2) / (float)num2;
                    if (Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                        return;
                    this.ai[0] = 0.0f;
                    this.ai[1] = 0.0f;
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    this.noTileCollide = true;
                    Vector2 vector2_1 = Main.player[this.target].Center - this.Center;
                    float num1 = vector2_1.Length();
                    float num2 = 2f;
                    int num3 = 4;
                    vector2_1.Normalize();
                    Vector2 vector2_2 = vector2_1 * num2;
                    this.velocity = (this.velocity * (float)(num3 - 1) + vector2_2) / (float)num3;
                    if ((double)num1 >= 600.0 || Collision.SolidCollision(this.position, this.width, this.height))
                        return;
                    this.ai[0] = 0.0f;
                }
                else if ((double)this.ai[0] == 3.0)
                {
                    Vector2 vector2_1 = new Vector2(this.ai[1], this.ai[2]) - this.Center;
                    float num1 = vector2_1.Length();
                    float num2 = 1f;
                    float num3 = 3f;
                    vector2_1.Normalize();
                    Vector2 vector2_2 = vector2_1 * num2;
                    this.velocity = (this.velocity * (num3 - 1f) + vector2_2) / num3;
                    if (this.collideX || this.collideY)
                    {
                        this.ai[0] = 4f;
                        this.ai[1] = 0.0f;
                    }
                    if ((double)num1 >= (double)num2 && (double)num1 <= 800.0 && !Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                        return;
                    this.ai[0] = 0.0f;
                }
                else
                {
                    if ((double)this.ai[0] != 4.0)
                        return;
                    if (this.collideX)
                        this.velocity.X *= -0.8f;
                    if (this.collideY)
                        this.velocity.Y *= -0.8f;
                    if ((double)this.velocity.X == 0.0 && (double)this.velocity.Y == 0.0)
                    {
                        Vector2 vector2 = Main.player[this.target].Center - this.Center;
                        vector2.Y -= (float)(Main.player[this.target].height / 4);
                        vector2.Normalize();
                        this.velocity = vector2 * 0.1f;
                    }
                    float num1 = 1.5f;
                    float num2 = 20f;
                    Vector2 vector2_1 = this.velocity;
                    vector2_1.Normalize();
                    Vector2 vector2_2 = vector2_1 * num1;
                    this.velocity = (this.velocity * (num2 - 1f) + vector2_2) / num2;
                    ++this.ai[1];
                    if ((double)this.ai[1] > 180.0)
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = 0.0f;
                    }
                    if (Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1))
                        this.ai[0] = 0.0f;
                    ++this.localAI[0];
                    if ((double)this.localAI[0] < 5.0 || Collision.SolidCollision(this.position - new Vector2(10f, 10f), this.width + 20, this.height + 20))
                        return;
                    this.localAI[0] = 0.0f;
                    Vector2 center1 = this.Center;
                    center1.X = Main.player[this.target].Center.X;
                    if (Collision.CanHit(this.Center, 1, 1, center1, 1, 1) && Collision.CanHit(this.Center, 1, 1, center1, 1, 1) && Collision.CanHit(Main.player[this.target].Center, 1, 1, center1, 1, 1))
                    {
                        this.ai[0] = 3f;
                        this.ai[1] = center1.X;
                        this.ai[2] = center1.Y;
                    }
                    else
                    {
                        Vector2 center2 = this.Center;
                        center2.Y = Main.player[this.target].Center.Y;
                        if (!Collision.CanHit(this.Center, 1, 1, center2, 1, 1) || !Collision.CanHit(Main.player[this.target].Center, 1, 1, center2, 1, 1))
                            return;
                        this.ai[0] = 3f;
                        this.ai[1] = center2.X;
                        this.ai[2] = center2.Y;
                    }
                }
            }
            else if (this.aiStyle == 92)
            {
                if (Main.rand.Next(20) == 0)
                    this.soundHit = Main.rand.Next(15, 18);
                if (Main.netMode == 1)
                    return;
                bool flag = false;
                int index1 = (int)this.ai[0];
                int index2 = (int)this.ai[1];
                if (!flag && (!Main.tile[index1, index2].active() || (int)Main.tile[index1, index2].type != 378))
                    flag = true;
                if (!flag && (this.target == (int)byte.MaxValue || Main.player[this.target].dead || (double)Vector2.Distance(this.Center, Main.player[this.target].Center) > 160000.0))
                {
                    this.TargetClosest(false);
                    if (this.target == (int)byte.MaxValue || Main.player[this.target].dead || (double)Vector2.Distance(this.Center, Main.player[this.target].Center) > 160000.0)
                        flag = true;
                }
                if (!flag)
                    return;
                this.life = 0;
                this.HitEffect(0, 10.0);
                this.active = false;
                int index3 = TETrainingDummy.Find((int)this.ai[0], (int)this.ai[1]);
                if (index3 == -1)
                    return;
                ((TETrainingDummy)TileEntity.ByID[index3]).Deactivate();
            }
            else if (this.aiStyle == 93)
            {
                if ((double)this.localAI[0] == 0.0)
                {
                    this.localAI[0] = 1f;
                    for (int index1 = 0; index1 < 4; ++index1)
                    {
                        int index2 = NPC.NewNPC((int)this.Center.X + index1 * 40 - 150, (int)this.Center.Y, 492, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        Main.npc[index2].netUpdate = true;
                        Main.npc[index2].ai[0] = (float)this.whoAmI;
                        Main.npc[index2].ai[1] = (float)index1;
                        Main.npc[index2].ai[3] = (float)(60 * index1);
                        Main.npc[index2].TargetClosest(false);
                        Main.npc[index2].timeLeft = 600;
                        this.ai[index1] = (float)index2;
                    }
                }
                bool flag = true;
                for (int index = 0; index < 4; ++index)
                {
                    if ((double)this.ai[index] >= 0.0 && (!Main.npc[(int)this.ai[index]].active || Main.npc[(int)this.ai[index]].type != 492))
                    {
                        this.ai[index] = -1f;
                        this.netUpdate = true;
                    }
                    else if ((double)this.ai[index] >= 0.0)
                        flag = false;
                }
                if (flag)
                {
                    this.life = 0;
                    this.HitEffect(9999, 10.0);
                    this.checkDead();
                }
                else
                {
                    if (Main.netMode != 1 && Main.rand.Next(300) == 0)
                    {
                        Vector2 vector2 = Utils.RotatedBy(new Vector2((Utils.NextFloat(Main.rand) - 0.5f) * (float)(this.width - 70), (float)(((double)Utils.NextFloat(Main.rand) - 0.5) * 20.0 - (double)(this.height / 2) - 20.0)), (double)this.rotation, new Vector2()) + this.Center;
                        int index = NPC.NewNPC((int)vector2.X, (int)vector2.Y, Utils.SelectRandom<int>(Main.rand, 213, 215, 214, 212), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        Main.npc[index].velocity = new Vector2((float)(((double)Utils.NextFloat(Main.rand) - 0.5) * 5.0), -8.01f) + this.velocity;
                        Main.npc[index].netUpdate = true;
                        Main.npc[index].timeLeft = 600;
                    }
                    if ((double)++this.localAI[3] >= 64.0)
                        this.localAI[3] = 0.0f;
                    this.TargetClosest(true);
                    int index1 = (int)this.Center.X / 16 + Math.Sign(this.velocity.X) * 10;
                    int index2 = (int)((double)this.position.Y + (double)this.height) / 16;
                    int num1 = 0;
                    if (Main.tile[index1, index2].nactive() && Main.tileSolid[(int)Main.tile[index1, index2].type] && !Main.tileSolidTop[(int)Main.tile[index1, index2].type])
                    {
                        num1 = 1;
                    }
                    else
                    {
                        for (; num1 < 150 && index2 + num1 < Main.maxTilesY; ++num1)
                        {
                            int index3 = index2 + num1;
                            if (Main.tile[index1, index3].nactive() && Main.tileSolid[(int)Main.tile[index1, index3].type] && !Main.tileSolidTop[(int)Main.tile[index1, index3].type])
                            {
                                --num1;
                                break;
                            }
                        }
                    }
                    float num2 = (float)(num1 * 16);
                    if ((double)num2 < 350.0)
                    {
                        float num3 = num2 - 350f;
                        if ((double)num3 < -4.0)
                            num3 = -4f;
                        this.velocity.Y = MathHelper.Lerp(this.velocity.Y, num3, 0.05f);
                    }
                    else if ((double)num2 > 450.0)
                    {
                        float num3 = num2 - 350f;
                        if ((double)num3 > 4.0)
                            num3 = 4f;
                        this.velocity.Y = MathHelper.Lerp(this.velocity.Y, num3, 0.05f);
                    }
                    else
                        this.velocity.Y *= 0.95f;
                    if ((double)Math.Abs(Main.player[this.target].Center.X - this.Center.X) >= 300.0 && ((double)Math.Abs(this.velocity.X) < 6.0 || Math.Sign(this.velocity.X) != this.direction))
                        this.velocity.X += (float)this.direction * 0.06f;
                    this.rotation = this.velocity.X * 0.025f;
                    this.spriteDirection = -Math.Sign(this.velocity.X);
                    for (int index3 = 0; index3 < 2; ++index3)
                    {
                        if (Main.rand.Next(2) != 0)
                        {
                            Vector2 vector2 = Utils.RotatedBy(new Vector2((Utils.NextFloat(Main.rand) - 0.5f) * (float)(this.width - 70), (float)(((double)Utils.NextFloat(Main.rand) - 0.5) * 20.0 + (double)(this.height / 2) + 10.0)), (double)this.rotation, new Vector2());
                            Dust dust = Main.dust[Dust.NewDust(this.Center, 0, 0, 228, 0.0f, 0.0f, 0, new Color(), 1f)];
                            dust.position = this.Center + vector2;
                            dust.velocity = Vector2.Zero;
                            dust.noGravity = true;
                            dust.noLight = true;
                            dust.fadeIn = 1.5f;
                            dust.scale = 0.5f;
                        }
                    }
                }
            }
            else if (this.aiStyle == 94)
            {
                if ((double)this.ai[2] == 1.0)
                {
                    this.velocity = Vector2.UnitY * this.velocity.Length();
                    if ((double)this.velocity.Y < 0.25)
                        this.velocity.Y += 0.02f;
                    if ((double)this.velocity.Y > 0.25)
                        this.velocity.Y -= 0.02f;
                    this.dontTakeDamage = true;
                    ++this.ai[1];
                    if ((double)this.ai[1] > 120.0)
                        this.Opacity = (float)(1.0 - ((double)this.ai[1] - 120.0) / 60.0);
                    int Type = 6;
                    switch (this.type)
                    {
                        case 507:
                            Type = 242;
                            break;
                        case 517:
                            Type = (int)sbyte.MaxValue;
                            break;
                        case 422:
                            Type = 229;
                            break;
                        case 493:
                            Type = 135;
                            break;
                    }
                    if (Main.rand.Next(5) == 0 && (double)this.ai[1] < 120.0)
                    {
                        for (int index = 0; index < 3; ++index)
                        {
                            Dust dust = Main.dust[Dust.NewDust(this.Left, this.width, this.height / 2, Type, 0.0f, 0.0f, 0, new Color(), 1f)];
                            dust.position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 4.1887903213501) * new Vector2((float)this.width * 1.5f, (float)this.height * 1.1f) * 0.8f * (float)(0.800000011920929 + (double)Utils.NextFloat(Main.rand) * 0.200000002980232);
                            dust.velocity.X = 0.0f;
                            dust.velocity.Y = (float)(-(double)Math.Abs((float)((double)dust.velocity.Y - (double)index + (double)this.velocity.Y - 4.0)) * 3.0);
                            dust.noGravity = true;
                            dust.fadeIn = 1f;
                            dust.scale = (float)(1.0 + (double)Utils.NextFloat(Main.rand) + (double)index * 0.300000011920929);
                        }
                    }
                    if ((double)this.ai[1] < 150.0)
                    {
                        for (int index = 0; index < 3; ++index)
                        {
                            if (Main.rand.Next(4) == 0)
                            {
                                Dust dust = Main.dust[Dust.NewDust(this.Top + new Vector2((float)-this.width * (float)(0.330000013113022 - 0.109999999403954 * (double)index), -20f), (int)((double)this.width * (0.660000026226044 - 0.219999998807907 * (double)index)), 20, Type, 0.0f, 0.0f, 0, new Color(), 1f)];
                                dust.velocity.X = 0.0f;
                                dust.velocity.Y = (float)(-(double)Math.Abs((float)((double)dust.velocity.Y - (double)index + (double)this.velocity.Y - 4.0)) * (1.0 + (double)this.ai[1] / 180.0 * 0.5));
                                dust.noGravity = true;
                                dust.fadeIn = 1f;
                                dust.scale = (float)(1.0 + (double)Utils.NextFloat(Main.rand) + (double)index * 0.300000011920929);
                            }
                        }
                    }
                    if (Main.rand.Next(5) == 0 && (double)this.ai[1] < 150.0)
                    {
                        for (int index1 = 0; index1 < 3; ++index1)
                        {
                            Vector2 vector2 = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 4.1887903213501) * new Vector2((float)this.width, (float)this.height) * 0.7f * Utils.NextFloat(Main.rand);
                            float num = (float)(1.0 + (double)Utils.NextFloat(Main.rand) * 2.0 + (double)this.ai[1] / 180.0 * 4.0);
                            for (int index2 = 0; index2 < 6; ++index2)
                            {
                                Dust dust = Main.dust[Dust.NewDust(vector2, 4, 4, Type, 0.0f, 0.0f, 0, new Color(), 1f)];
                                dust.position = vector2;
                                dust.velocity.X *= num;
                                dust.velocity.Y = -Math.Abs(dust.velocity.Y) * num;
                                dust.noGravity = true;
                                dust.fadeIn = 1f;
                                dust.scale = (float)(1.5 + (double)Utils.NextFloat(Main.rand) + (double)index2 * 0.129999995231628);
                            }
                            Main.PlaySound(3, vector2, Utils.SelectRandom<int>(Main.rand, 1, 18));
                        }
                    }
                    if (Main.rand.Next(3) != 0 && (double)this.ai[1] < 150.0)
                    {
                        Dust dust = Main.dust[Dust.NewDust(this.Left, this.width, this.height / 2, 241, 0.0f, 0.0f, 0, new Color(), 1f)];
                        dust.position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 4.1887903213501) * new Vector2((float)(this.width / 2), (float)(this.height / 2)) * (float)(0.800000011920929 + (double)Utils.NextFloat(Main.rand) * 0.200000002980232);
                        dust.velocity.X = 0.0f;
                        dust.velocity.Y = Math.Abs(dust.velocity.Y) * 0.25f;
                    }
                    if ((double)this.ai[1] % 60.0 == 1.0)
                        Main.PlaySound(4, this.Center, 22);
                    if ((double)this.ai[1] < 180.0)
                        return;
                    this.life = 0;
                    this.HitEffect(0, 1337.0);
                    this.checkDead();
                }
                else
                {
                    if ((double)this.ai[3] > 0.0)
                    {
                        bool flag = this.dontTakeDamage;
                        switch (this.type)
                        {
                            case 507:
                                flag = NPC.ShieldStrengthTowerNebula != 0;
                                break;
                            case 517:
                                flag = NPC.ShieldStrengthTowerSolar != 0;
                                break;
                            case 422:
                                flag = NPC.ShieldStrengthTowerVortex != 0;
                                break;
                            case 493:
                                flag = NPC.ShieldStrengthTowerStardust != 0;
                                break;
                        }
                        if (flag != this.dontTakeDamage)
                            Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 58);
                        else if ((double)this.ai[3] == 1.0)
                            Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 3);
                        ++this.ai[3];
                        if ((double)this.ai[3] > 120.0)
                            this.ai[3] = 0.0f;
                    }
                    switch (this.type)
                    {
                        case 507:
                            this.dontTakeDamage = NPC.ShieldStrengthTowerNebula != 0;
                            break;
                        case 517:
                            this.dontTakeDamage = NPC.ShieldStrengthTowerSolar != 0;
                            break;
                        case 422:
                            this.dontTakeDamage = NPC.ShieldStrengthTowerVortex != 0;
                            break;
                        case 493:
                            this.dontTakeDamage = NPC.ShieldStrengthTowerStardust != 0;
                            break;
                    }
                    this.TargetClosest(false);
                    if ((double)Main.player[this.target].Distance(this.Center) > 2000.0)
                        ++this.localAI[0];
                    if ((double)this.localAI[0] >= 60.0 && Main.netMode != 1)
                    {
                        this.localAI[0] = 0.0f;
                        this.netUpdate = true;
                        this.life = (int)MathHelper.Clamp((float)(this.life + 200), 0.0f, (float)this.lifeMax);
                    }
                    else
                        this.localAI[0] = 0.0f;
                    this.velocity = new Vector2(0.0f, (float)Math.Sin(6.28318548202515 * (double)this.ai[0] / 300.0) * 0.5f);
                    ++this.ai[0];
                    if ((double)this.ai[0] >= 300.0)
                        this.ai[0] = 0.0f;
                    if (this.type == 493)
                    {
                        if (Main.rand.Next(5) == 0)
                        {
                            Dust dust = Main.dust[Dust.NewDust(this.Left, this.width, this.height / 2, 241, 0.0f, 0.0f, 0, new Color(), 1f)];
                            dust.position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 2.09439516067505) * new Vector2((float)(this.width / 2), (float)(this.height / 2)) * (float)(0.800000011920929 + (double)Utils.NextFloat(Main.rand) * 0.200000002980232);
                            dust.velocity.X = 0.0f;
                            dust.velocity.Y = Math.Abs(dust.velocity.Y) * 0.25f;
                        }
                        for (int index = 0; index < 3; ++index)
                        {
                            if (Main.rand.Next(5) == 0)
                            {
                                Dust dust = Main.dust[Dust.NewDust(this.Top + new Vector2((float)-this.width * (float)(0.330000013113022 - 0.109999999403954 * (double)index), -20f), (int)((double)this.width * (0.660000026226044 - 0.219999998807907 * (double)index)), 20, 135, 0.0f, 0.0f, 0, new Color(), 1f)];
                                dust.velocity.X = 0.0f;
                                dust.velocity.Y = (float)(-(double)Math.Abs((float)((double)dust.velocity.Y - (double)index + (double)this.velocity.Y - 4.0)) * 1.0);
                                dust.noGravity = true;
                                dust.fadeIn = 1f;
                                dust.scale = (float)(1.0 + (double)Utils.NextFloat(Main.rand) + (double)index * 0.300000011920929);
                            }
                        }
                        if ((double)this.ai[1] > 0.0)
                            --this.ai[1];
                        if (Main.netMode != 1 && (double)this.ai[1] <= 0.0 && (Main.player[this.target].active && !Main.player[this.target].dead) && ((double)this.Distance(Main.player[this.target].Center) < 1080.0 && (double)Main.player[this.target].position.Y - (double)this.position.Y < 400.0))
                        {
                            List<int> list1 = new List<int>();
                            if (NPC.CountNPCS(405) + NPC.CountNPCS(406) < 2)
                                list1.Add(405);
                            if (NPC.CountNPCS(402) < 2)
                                list1.Add(402);
                            if (NPC.CountNPCS(407) < 1)
                                list1.Add(407);
                            if (list1.Count > 0)
                            {
                                int num1 = Utils.SelectRandom<int>(Main.rand, list1.ToArray());
                                this.ai[1] = (float)(30 * Main.rand.Next(5, 16));
                                int num2 = Main.rand.Next(3, 6);
                                int num3 = Main.rand.Next(0, 4);
                                int index1 = 0;
                                List<Tuple<Vector2, int, int>> list2 = new List<Tuple<Vector2, int, int>>();
                                List<Vector2> list3 = new List<Vector2>();
                                list2.Add(Tuple.Create<Vector2, int, int>(this.Top - Vector2.UnitY * 120f, num2, 0));
                                int num4 = 0;
                                int count = list2.Count;
                                while (list2.Count > 0)
                                {
                                    Vector2 vector2_1 = list2[0].Item1;
                                    int num5 = 1;
                                    int num6 = 1;
                                    if (num4 > 0 && num3 > 0 && (Main.rand.Next(3) != 0 || num4 == 1))
                                    {
                                        num6 = Main.rand.Next(Math.Max(1, list2[0].Item2));
                                        ++num5;
                                        --num3;
                                    }
                                    for (int index2 = 0; index2 < num5; ++index2)
                                    {
                                        int num7 = list2[0].Item3;
                                        if (num4 == 0)
                                            num7 = Utils.SelectRandom<int>(Main.rand, -1, 1);
                                        else if (index2 == 1)
                                            num7 *= -1;
                                        float num8 = (float)((num4 % 2 == 0 ? 0.0 : 3.14159274101257) + (0.5 - (double)Utils.NextFloat(Main.rand)) * 0.785398185253143 + (double)num7 * 0.785398185253143 * (double)Utils.ToDirectionInt(num4 % 2 == 0));
                                        float num9 = (float)(100.0 + 50.0 * (double)Utils.NextFloat(Main.rand));
                                        int num10 = list2[0].Item2;
                                        if (index2 != 0)
                                            num10 = num6;
                                        if (num4 == 0)
                                        {
                                            num8 = (float)((0.5 - (double)Utils.NextFloat(Main.rand)) * 0.785398185253143);
                                            num9 = (float)(100.0 + 100.0 * (double)Utils.NextFloat(Main.rand));
                                        }
                                        Vector2 vector2_2 = Utils.RotatedBy(-Vector2.UnitY, (double)num8, new Vector2()) * num9;
                                        if (num10 - 1 < 0)
                                            vector2_2 = Vector2.Zero;
                                        index1 = Projectile.NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 540, 0, 0.0f, Main.myPlayer, (float)-num4 * 10f, (float)(0.5 + (double)Utils.NextFloat(Main.rand) * 0.5));
                                        list3.Add(vector2_1 + vector2_2);
                                        if (num4 < num2 && list2[0].Item2 > 0)
                                            list2.Add(Tuple.Create<Vector2, int, int>(vector2_1 + vector2_2, num10 - 1, num7));
                                    }
                                    list2.Remove(list2[0]);
                                    if (--count == 0)
                                    {
                                        count = list2.Count;
                                        ++num4;
                                    }
                                }
                                Main.projectile[index1].localAI[0] = (float)num1;
                            }
                            else
                                this.ai[1] = 30f;
                        }
                    }
                    if (this.type == 507)
                    {
                        if (Main.rand.Next(5) == 0)
                        {
                            Dust dust = Main.dust[Dust.NewDust(this.Left, this.width, this.height / 2, 241, 0.0f, 0.0f, 0, new Color(), 1f)];
                            dust.position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 2.09439516067505) * new Vector2((float)(this.width / 2), (float)(this.height / 2)) * (float)(0.800000011920929 + (double)Utils.NextFloat(Main.rand) * 0.200000002980232);
                            dust.velocity.X = 0.0f;
                            dust.velocity.Y = Math.Abs(dust.velocity.Y) * 0.25f;
                        }
                        for (int index = 0; index < 3; ++index)
                        {
                            if (Main.rand.Next(5) == 0)
                            {
                                Dust dust = Main.dust[Dust.NewDust(this.Top + new Vector2((float)-this.width * (float)(0.330000013113022 - 0.109999999403954 * (double)index), -20f), (int)((double)this.width * (0.660000026226044 - 0.219999998807907 * (double)index)), 20, 242, 0.0f, 0.0f, 0, new Color(), 1f)];
                                dust.velocity.X = 0.0f;
                                dust.velocity.Y = (float)(-(double)Math.Abs((float)((double)dust.velocity.Y - (double)index + (double)this.velocity.Y - 4.0)) * 1.0);
                                dust.noGravity = true;
                                dust.fadeIn = 1f;
                                dust.color = Color.Black;
                                dust.scale = (float)(1.0 + (double)Utils.NextFloat(Main.rand) + (double)index * 0.300000011920929);
                            }
                        }
                    }
                    if (this.type == 422)
                    {
                        if (Main.rand.Next(5) == 0)
                        {
                            Dust dust = Main.dust[Dust.NewDust(this.Left, this.width, this.height / 2, 241, 0.0f, 0.0f, 0, new Color(), 1f)];
                            dust.position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 2.09439516067505) * new Vector2((float)(this.width / 2), (float)(this.height / 2)) * (float)(0.800000011920929 + (double)Utils.NextFloat(Main.rand) * 0.200000002980232);
                            dust.velocity.X = 0.0f;
                            dust.velocity.Y = Math.Abs(dust.velocity.Y) * 0.25f;
                        }
                        for (int index = 0; index < 3; ++index)
                        {
                            if (Main.rand.Next(5) == 0)
                            {
                                Dust dust = Main.dust[Dust.NewDust(this.Top + new Vector2((float)-this.width * (float)(0.330000013113022 - 0.109999999403954 * (double)index), -20f), (int)((double)this.width * (0.660000026226044 - 0.219999998807907 * (double)index)), 20, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                                dust.velocity.X = 0.0f;
                                dust.velocity.Y = (float)(-(double)Math.Abs((float)((double)dust.velocity.Y - (double)index + (double)this.velocity.Y - 4.0)) * 1.0);
                                dust.noGravity = true;
                                dust.fadeIn = 1f;
                                dust.color = Color.Black;
                                dust.scale = (float)(1.0 + (double)Utils.NextFloat(Main.rand) + (double)index * 0.300000011920929);
                            }
                        }
                        if ((double)this.ai[1] > 0.0)
                            --this.ai[1];
                        if (Main.netMode != 1 && (double)this.ai[1] <= 0.0 && (Main.player[this.target].active && !Main.player[this.target].dead) && ((double)this.Distance(Main.player[this.target].Center) < 1080.0 && (double)Main.player[this.target].position.Y - (double)this.position.Y < 400.0 && NPC.CountNPCS(427) + NPC.CountNPCS(426) * 3 + NPC.CountNPCS(428) < 20))
                        {
                            this.ai[1] = (float)(420 + Main.rand.Next(360));
                            Point point1 = Utils.ToTileCoordinates(this.Center);
                            Point point2 = Utils.ToTileCoordinates(Main.player[this.target].Center);
                            Vector2 vector2 = Main.player[this.target].Center - this.Center;
                            int num1 = 20;
                            int num2 = 3;
                            int num3 = 8;
                            int num4 = 2;
                            int num5 = 0;
                            bool flag1 = false;
                            if ((double)vector2.Length() > 2000.0)
                                flag1 = true;
                            while (!flag1 && num5 < 100)
                            {
                                ++num5;
                                int index1 = Main.rand.Next(point2.X - num1, point2.X + num1 + 1);
                                int index2 = Main.rand.Next(point2.Y - num1, point2.Y + num1 + 1);
                                if ((index2 < point2.Y - num3 || index2 > point2.Y + num3 || (index1 < point2.X - num3 || index1 > point2.X + num3)) && (index2 < point1.Y - num2 || index2 > point1.Y + num2 || (index1 < point1.X - num2 || index1 > point1.X + num2)) && !Main.tile[index1, index2].nactive())
                                {
                                    bool flag2 = true;
                                    if (flag2 && Main.tile[index1, index2].lava())
                                        flag2 = false;
                                    if (flag2 && Collision.SolidTiles(index1 - num4, index1 + num4, index2 - num4, index2 + num4))
                                        flag2 = false;
                                    if (flag2 && !Collision.CanHitLine(this.Center, 0, 0, Main.player[this.target].Center, 0, 0))
                                        flag2 = false;
                                    if (flag2)
                                    {
                                        Projectile.NewProjectile((float)(index1 * 16 + 8), (float)(index2 * 16 + 8), 0.0f, 0.0f, 579, 0, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                                        break;
                                    }
                                }
                            }
                        }
                    }
                    if (this.type != 517)
                        return;
                    if (Main.rand.Next(5) == 0)
                    {
                        Dust dust = Main.dust[Dust.NewDust(this.Left, this.width, this.height / 2, 241, 0.0f, 0.0f, 0, new Color(), 1f)];
                        dust.position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 2.09439516067505) * new Vector2((float)(this.width / 2), (float)(this.height / 2)) * (float)(0.800000011920929 + (double)Utils.NextFloat(Main.rand) * 0.200000002980232);
                        dust.velocity.X = 0.0f;
                        dust.velocity.Y = Math.Abs(dust.velocity.Y) * 0.25f;
                    }
                    for (int index = 0; index < 3; ++index)
                    {
                        if (Main.rand.Next(5) == 0)
                        {
                            Dust dust = Main.dust[Dust.NewDust(this.Top + new Vector2((float)-this.width * (float)(0.330000013113022 - 0.109999999403954 * (double)index), -20f), (int)((double)this.width * (0.660000026226044 - 0.219999998807907 * (double)index)), 20, 6, 0.0f, 0.0f, 0, new Color(), 1f)];
                            dust.velocity.X = 0.0f;
                            dust.velocity.Y = (float)(-(double)Math.Abs((float)((double)dust.velocity.Y - (double)index + (double)this.velocity.Y - 4.0)) * 1.0);
                            dust.noGravity = true;
                            dust.fadeIn = 1f;
                            dust.scale = (float)(1.0 + (double)Utils.NextFloat(Main.rand) + (double)index * 0.300000011920929);
                        }
                    }
                    if ((double)this.ai[1] > 0.0)
                        --this.ai[1];
                    if (Main.netMode == 1 || (double)this.ai[1] > 0.0 || (!Main.player[this.target].active || Main.player[this.target].dead) || ((double)this.Distance(Main.player[this.target].Center) >= 1080.0 || (double)Main.player[this.target].position.Y - (double)this.position.Y >= 700.0))
                        return;
                    Vector2 vector2_3 = this.Top + new Vector2((float)-this.width * 0.33f, -20f) + new Vector2((float)this.width * 0.66f, 20f) * Utils.RandomVector2(Main.rand, 0.0f, 1f);
                    Vector2 vector2_4 = -Utils.RotatedByRandom(Vector2.UnitY, 0.785398185253143) * (float)(7.0 + (double)Utils.NextFloat(Main.rand) * 5.0);
                    int index3 = NPC.NewNPC((int)vector2_3.X, (int)vector2_3.Y, 519, this.whoAmI, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    Main.npc[index3].velocity = vector2_4;
                    Main.npc[index3].netUpdate = true;
                    this.ai[1] = 60f;
                }
            }
            else if (this.aiStyle == 95)
            {
                float num1 = 300f;
                if ((double)this.velocity.Length() > 4.0)
                {
                    NPC npc = this;
                    Vector2 vector2 = npc.velocity * 0.95f;
                    npc.velocity = vector2;
                }
                NPC npc1 = this;
                Vector2 vector2_1 = npc1.velocity * 0.99f;
                npc1.velocity = vector2_1;
                ++this.ai[0];
                this.scale = (float)(1.0 + 0.300000011920929 * ((double)this.ai[0] / (double)num1));
                if ((double)this.ai[0] >= (double)num1)
                {
                    if (Main.netMode == 1)
                        return;
                    this.Transform(405);
                }
                else
                {
                    this.rotation += this.velocity.X * 0.1f;
                    if ((double)this.ai[0] <= 20.0)
                        return;
                    Vector2 center = this.Center;
                    int num2 = (int)((double)this.ai[0] / ((double)num1 / 2.0));
                    for (int index1 = 0; index1 < num2 + 1; ++index1)
                    {
                        if (Main.rand.Next(2) != 0)
                        {
                            int Type = 226;
                            float num3 = 0.4f;
                            if (index1 % 2 == 1)
                            {
                                Type = 226;
                                num3 = 0.65f;
                            }
                            Vector2 vector2_2 = center + Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f) * (12f - (float)(num2 * 2));
                            int index2 = Dust.NewDust(vector2_2 - Vector2.One * 12f, 24, 24, Type, this.velocity.X / 2f, this.velocity.Y / 2f, 0, new Color(), 1f);
                            Main.dust[index2].position -= new Vector2(2f);
                            Main.dust[index2].velocity = Vector2.Normalize(center - vector2_2) * 1.5f * (float)(10.0 - (double)num2 * 2.0) / 10f;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].scale = num3;
                            Main.dust[index2].customData = (object)this;
                        }
                    }
                }
            }
            else if (this.aiStyle == 96)
            {
                float num1 = 5f;
                float moveSpeed = 0.15f;
                this.TargetClosest(true);
                Vector2 vector2_1 = Main.player[this.target].Center - this.Center + new Vector2(0.0f, -250f);
                float num2 = vector2_1.Length();
                Vector2 desiredVelocity;
                if ((double)num2 < 20.0)
                    desiredVelocity = this.velocity;
                else if ((double)num2 < 40.0)
                {
                    vector2_1.Normalize();
                    desiredVelocity = vector2_1 * (num1 * 0.35f);
                }
                else if ((double)num2 < 80.0)
                {
                    vector2_1.Normalize();
                    desiredVelocity = vector2_1 * (num1 * 0.65f);
                }
                else
                {
                    vector2_1.Normalize();
                    desiredVelocity = vector2_1 * num1;
                }
                this.SimpleFlyMovement(desiredVelocity, moveSpeed);
                this.rotation = this.velocity.X * 0.1f;
                if ((double)++this.ai[0] < 70.0)
                    return;
                this.ai[0] = 0.0f;
                if (Main.netMode == 1)
                    return;
                Vector2 vector2_2 = Vector2.Zero;
                while ((double)Math.Abs(vector2_2.X) < 1.5)
                    vector2_2 = Utils.RotatedByRandom(Vector2.UnitY, 1.57079637050629) * new Vector2(5f, 3f);
                Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2_2.X, vector2_2.Y, 539, 60, 0.0f, Main.myPlayer, 0.0f, (float)this.whoAmI);
            }
            else if (this.aiStyle == 97)
            {
                float num1 = 7f;
                int num2 = 480;
                if ((double)this.localAI[2] < 180.0)
                {
                    ++this.localAI[2];
                    if (Main.netMode != 1 && (double)this.localAI[2] % 60.0 == 0.0)
                    {
                        Vector2 vector2 = Vector2.Zero;
                        while ((double)Math.Abs(vector2.X) < 1.5)
                            vector2 = Utils.RotatedByRandom(Vector2.UnitY, 1.57079637050629) * new Vector2(4f, 2.5f);
                        Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2.X, vector2.Y, 574, 0, 0.0f, Main.myPlayer, 0.0f, (float)this.whoAmI);
                    }
                }
                if ((double)this.localAI[1] == 1.0)
                {
                    this.localAI[1] = 0.0f;
                    if (Main.rand.Next(4) == 0)
                        this.ai[0] = (float)num2;
                }
                this.TargetClosest(true);
                this.rotation = (float)((double)Math.Abs(this.velocity.X) * (double)this.direction * 0.100000001490116);
                this.spriteDirection = -this.direction;
                Vector2 vector2_1 = this.Center + new Vector2((float)(this.direction * 20), 6f);
                Vector2 vector2_2 = Main.player[this.target].Center - vector2_1;
                bool flag1 = Collision.CanHit(this.Center, 1, 1, Main.player[this.target].Center, 1, 1);
                bool flag2 = false;
                if ((double)vector2_2.Length() > 400.0 || !flag1)
                {
                    Vector2 vector2_3 = vector2_2;
                    if ((double)vector2_3.Length() > (double)num1)
                    {
                        vector2_3.Normalize();
                        vector2_3 *= num1;
                    }
                    int num3 = 30;
                    this.velocity = (this.velocity * (float)(num3 - 1) + vector2_3) / (float)num3;
                }
                else
                {
                    NPC npc = this;
                    Vector2 vector2_3 = npc.velocity * 0.98f;
                    npc.velocity = vector2_3;
                    flag2 = true;
                }
                if ((double)this.ai[2] != 0.0 && (double)this.ai[3] != 0.0)
                {
                    Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 8);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 242, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 3f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].scale = 2.5f;
                    }
                    this.Center = new Vector2(this.ai[2] * 16f, this.ai[3] * 16f);
                    this.velocity = Vector2.Zero;
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                    Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 8);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 242, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 3f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].scale = 2.5f;
                    }
                }
                ++this.ai[0];
                if ((double)this.ai[0] >= (double)num2 && Main.netMode != 1)
                {
                    this.ai[0] = 0.0f;
                    Point point1 = Utils.ToTileCoordinates(this.Center);
                    Point point2 = Utils.ToTileCoordinates(Main.player[this.target].Center);
                    int num3 = 20;
                    int num4 = 3;
                    int num5 = 10;
                    int num6 = 1;
                    int num7 = 0;
                    bool flag3 = false;
                    if ((double)vector2_2.Length() > 2000.0)
                        flag3 = true;
                    while (!flag3 && num7 < 100)
                    {
                        ++num7;
                        int index1 = Main.rand.Next(point2.X - num3, point2.X + num3 + 1);
                        int index2 = Main.rand.Next(point2.Y - num3, point2.Y + num3 + 1);
                        if ((index2 < point2.Y - num5 || index2 > point2.Y + num5 || (index1 < point2.X - num5 || index1 > point2.X + num5)) && (index2 < point1.Y - num4 || index2 > point1.Y + num4 || (index1 < point1.X - num4 || index1 > point1.X + num4)) && !Main.tile[index1, index2].nactive())
                        {
                            bool flag4 = true;
                            if (flag4 && Main.tile[index1, index2].lava())
                                flag4 = false;
                            if (flag4 && Collision.SolidTiles(index1 - num6, index1 + num6, index2 - num6, index2 + num6))
                                flag4 = false;
                            if (flag4)
                            {
                                this.ai[1] = 20f;
                                this.ai[2] = (float)index1;
                                this.ai[3] = (float)index2;
                                break;
                            }
                        }
                    }
                    this.netUpdate = true;
                }
                if (!flag2 || (double)this.velocity.Length() >= 2.0 || Main.netMode == 1)
                    return;
                ++this.localAI[0];
            }
            else if (this.aiStyle == 98)
            {
                this.noTileCollide = false;
                if ((double)this.ai[0] == 0.0)
                {
                    this.TargetClosest(true);
                    this.ai[0] = 1f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                }
                bool flag1 = Collision.CanHit(this.Center, 1, 1, Main.player[this.target].position, 1, 1);
                bool flag2 = true;
                if (!flag1 || Main.player[this.target].dead)
                {
                    flag2 = false;
                }
                else
                {
                    int num1 = (int)((double)Main.player[this.target].Center.X / 16.0);
                    int num2 = (int)((double)Main.player[this.target].Center.Y / 16.0);
                    for (int i = num1 - 2; i <= num1 + 2; ++i)
                    {
                        for (int j = num2; j <= num2 + 25; ++j)
                        {
                            if (WorldGen.SolidTile2(i, j))
                                flag2 = false;
                        }
                    }
                }
                if ((double)this.ai[0] < 0.0)
                {
                    Vector2 vec = Main.player[this.target].Center - this.Center;
                    float num1 = vec.Length();
                    if ((double)this.ai[0] == -1.0)
                    {
                        vec.Normalize();
                        if (Utils.HasNaNs(vec))
                            vec = new Vector2((float)this.direction, 0.0f);
                        float num2 = (float)(8.0 + (double)num1 / 100.0);
                        float num3 = 12f;
                        if ((double)Main.player[this.target].velocity.Length() > (double)num3)
                            num3 = Main.player[this.target].velocity.Length();
                        if ((double)num2 > (double)num3)
                            num2 = num3;
                        Vector2 vector2_1 = vec * num2;
                        float num4 = 10f;
                        this.velocity = (this.velocity * (num4 - 1f) + vector2_1) / num4;
                        for (int index = 0; index < 200; ++index)
                        {
                            if (Main.npc[index].active && Main.npc[index].type == this.type && index != this.whoAmI)
                            {
                                Vector2 vector2_2 = Main.npc[index].Center - this.Center;
                                if ((double)vector2_2.Length() < 40.0)
                                {
                                    vector2_2.Normalize();
                                    Vector2 vector2_3 = vector2_2 * 1f;
                                    NPC npc = this;
                                    Vector2 vector2_4 = npc.velocity - vector2_3;
                                    npc.velocity = vector2_4;
                                }
                            }
                        }
                        this.rotation += this.velocity.X * 0.03f;
                        if ((double)this.rotation < -6.2831)
                            this.rotation += 6.2831f;
                        if ((double)this.rotation > 6.2831)
                            this.rotation -= 6.2831f;
                        if ((double)this.velocity.X > 0.0)
                            this.direction = 1;
                        else if ((double)this.velocity.X < 0.0)
                            this.direction = -1;
                        this.spriteDirection = this.direction;
                    }
                    ++this.ai[1];
                    if ((double)this.ai[1] >= 60.0 && !flag2)
                        this.ai[0] = 0.0f;
                }
                else if ((double)this.ai[0] == 2.0)
                {
                    this.rotation *= 0.92f;
                    if ((double)Math.Abs(this.rotation) < 0.02)
                        this.rotation = 0.0f;
                    int num = 300;
                    if ((double)Math.Abs(this.Center.X - Main.player[this.target].Center.X) < (double)num && Collision.CanHit(this.Center, 1, 1, Main.player[this.target].position, 1, 1))
                    {
                        this.velocity.X *= 0.96f;
                        this.velocity.Y *= 0.96f;
                        ++this.ai[1];
                        if ((double)this.ai[1] == 20.0)
                        {
                            if (Main.netMode != 1)
                                NPC.NewNPC((int)this.Center.X, (int)this.Center.Y + 26, 516, 0, 0.0f, 0.0f, 0.0f, 0.0f, this.target);
                        }
                        else if ((double)this.ai[1] >= 30.0)
                            this.ai[1] = 0.0f;
                        for (int index = 0; index < 200; ++index)
                        {
                            if (Main.npc[index].active && Main.npc[index].type == this.type && index != this.whoAmI)
                            {
                                Vector2 vector2_1 = Main.npc[index].Center - this.Center;
                                if ((double)vector2_1.Length() < 100.0)
                                {
                                    vector2_1.Normalize();
                                    Vector2 vector2_2 = vector2_1 * 0.1f;
                                    NPC npc = this;
                                    Vector2 vector2_3 = npc.velocity - vector2_2;
                                    npc.velocity = vector2_3;
                                }
                            }
                        }
                    }
                    else
                        this.ai[0] = 0.0f;
                    if ((double)Main.player[this.target].Center.X < (double)this.Center.X)
                        this.direction = -1;
                    else if ((double)Main.player[this.target].Center.X > (double)this.Center.X)
                        this.direction = 1;
                    this.spriteDirection = this.direction;
                }
                if ((double)this.ai[0] != 1.0)
                    return;
                this.rotation *= 0.92f;
                if ((double)Math.Abs(this.rotation) < 0.02)
                    this.rotation = 0.0f;
                if (flag2)
                {
                    this.ai[0] = -1f;
                    this.ai[1] = 0.0f;
                    this.ai[2] = 0.0f;
                    this.ai[3] = 0.0f;
                }
                int num5 = 300;
                for (int index = 0; index < 200; ++index)
                {
                    if (Main.npc[index].active && Main.npc[index].type == this.type && index != this.whoAmI)
                    {
                        Vector2 vector2_1 = Main.npc[index].Center - this.Center;
                        if ((double)vector2_1.Length() < 50.0)
                        {
                            vector2_1.Normalize();
                            Vector2 vector2_2 = vector2_1 * 0.1f;
                            NPC npc = this;
                            Vector2 vector2_3 = npc.velocity - vector2_2;
                            npc.velocity = vector2_3;
                            this.velocity.X -= vector2_2.X * 1f;
                        }
                    }
                }
                int num6 = 800;
                float num7 = Math.Abs(this.Center.X - Main.player[this.target].Center.X);
                if ((double)num7 < (double)num5 && flag1)
                {
                    this.ai[0] = 2f;
                    this.ai[1] = 0.0f;
                }
                else
                {
                    if (this.collideX)
                    {
                        this.velocity.X *= -0.5f;
                        this.ai[1] = 60f;
                        this.direction *= -1;
                    }
                    if ((double)this.ai[1] > 0.0)
                        --this.ai[1];
                    else if (flag1)
                    {
                        if ((double)this.Center.X > (double)Main.player[this.target].Center.X)
                            this.direction = -1;
                        else
                            this.direction = 1;
                    }
                    else if ((double)num7 > (double)num6)
                    {
                        if ((double)this.Center.X > (double)Main.player[this.target].Center.X)
                            this.direction = -1;
                        else
                            this.direction = 1;
                    }
                    float num1 = 2f;
                    float num2 = 0.1f;
                    if ((double)this.velocity.X > (double)num1 || (double)this.velocity.X < -(double)num1)
                    {
                        if ((double)Math.Abs(this.velocity.X) < (double)num1 + (double)num2 * 2.0)
                        {
                            if ((double)this.velocity.X < 0.0)
                                this.velocity.X = -num1;
                            else
                                this.velocity.X = num1;
                        }
                        else
                            this.velocity.X *= 0.99f;
                    }
                    else
                        this.velocity.X += (float)this.direction * num2;
                    this.spriteDirection = this.direction;
                }
                if (this.collideY)
                {
                    this.ai[2] = 60f;
                    this.directionY *= -1;
                    this.velocity.Y *= -0.5f;
                }
                if ((double)this.ai[2] > 0.0)
                {
                    --this.ai[2];
                }
                else
                {
                    int num1 = (int)((double)this.Center.Y / 16.0);
                    int num2 = (int)(((double)this.Center.X - 8.0) / 16.0);
                    int num3 = 30;
                    int num4 = 15;
                    int num8 = 0;
                    for (int j = num1; j < num1 + num3; ++j)
                    {
                        for (int i = num2; i <= num2 + 1; ++i)
                        {
                            if (WorldGen.SolidTile(i, j) || (int)Main.tile[i, j].liquid > 0)
                            {
                                num8 = j - num1;
                                break;
                            }
                        }
                        if (num8 != 0)
                            break;
                    }
                    if (num8 == 0)
                        this.directionY = 1;
                    else if (num8 < num4)
                        this.directionY = -1;
                }
                float num9 = 2f;
                float num10 = 0.1f;
                if ((double)this.velocity.Y > (double)num9 || (double)this.velocity.Y < -(double)num9)
                {
                    if ((double)Math.Abs(this.velocity.Y) < (double)num9 + (double)num10 * 2.0)
                    {
                        if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y = -num9;
                        else
                            this.velocity.Y = num9;
                    }
                    else
                        this.velocity.Y *= 0.99f;
                }
                else
                    this.velocity.Y += (float)this.directionY * num10;
            }
            else if (this.aiStyle == 99)
            {
                if ((double)this.velocity.Y == 0.0 && (double)this.ai[0] == 0.0)
                {
                    this.ai[0] = 1f;
                    this.ai[1] = 0.0f;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    this.velocity = Vector2.Zero;
                    this.position = this.oldPosition;
                    ++this.ai[1];
                    if ((double)this.ai[1] < 5.0)
                        return;
                    this.HitEffect(0, 9999.0);
                    this.active = false;
                }
                else
                {
                    this.velocity.Y += 0.2f;
                    if ((double)this.velocity.Y > 12.0)
                        this.velocity.Y = 12f;
                    this.rotation = Utils.ToRotation(this.velocity) - 1.570796f;
                    if (this.type != 519)
                        return;
                    if ((double)this.localAI[0] == 0.0)
                    {
                        this.localAI[0] = 1f;
                        for (int index1 = 0; index1 < 13; ++index1)
                        {
                            int index2 = Dust.NewDust(this.position, this.width, this.height, 6, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, new Color(), 2.5f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].fadeIn = 1f;
                            Main.dust[index2].velocity *= 4f;
                            Main.dust[index2].noLight = true;
                        }
                    }
                    for (int index1 = 0; index1 < 3; ++index1)
                    {
                        if (Main.rand.Next(3) < 2)
                        {
                            int index2 = Dust.NewDust(this.position, this.width, this.height, 6, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, new Color(), 2.5f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity *= 0.2f;
                            Main.dust[index2].fadeIn = 1f;
                            if (Main.rand.Next(6) == 0)
                            {
                                Main.dust[index2].velocity *= 30f;
                                Main.dust[index2].noGravity = false;
                                Main.dust[index2].noLight = true;
                            }
                            else
                                Main.dust[index2].velocity = this.DirectionFrom(Main.dust[index2].position) * Main.dust[index2].velocity.Length();
                        }
                    }
                }
            }
            else if (this.aiStyle == 100)
            {
                if ((double)this.velocity.Y == 0.0 && (double)this.ai[0] >= 0.0)
                {
                    this.ai[0] = -1f;
                    this.ai[1] = 0.0f;
                    this.netUpdate = true;
                }
                else if ((double)this.ai[0] == -1.0)
                {
                    this.velocity = Vector2.Zero;
                    this.position = this.oldPosition;
                    ++this.ai[1];
                    if ((double)this.ai[1] < 5.0)
                        return;
                    this.HitEffect(0, 9999.0);
                    this.active = false;
                }
                else
                {
                    this.rotation = Utils.ToRotation(this.velocity) - 1.570796f;
                    if (this.type != 522)
                        return;
                    if ((double)this.localAI[0] == 0.0)
                    {
                        this.localAI[0] = 1f;
                        this.velocity.X = this.ai[2];
                        this.velocity.Y = this.ai[3];
                        for (int index1 = 0; index1 < 13; ++index1)
                        {
                            int index2 = Dust.NewDust(this.position, this.width, this.height, 261, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, new Color(), 2.5f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].fadeIn = 1f;
                            Main.dust[index2].velocity *= 4f;
                            Main.dust[index2].noLight = true;
                        }
                    }
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        if (Main.rand.Next(10 - (int)Math.Min(7f, this.velocity.Length())) < 1)
                        {
                            int index2 = Dust.NewDust(this.position, this.width, this.height, 261, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, new Color(), 2.5f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity *= 0.2f;
                            Main.dust[index2].fadeIn = 0.4f;
                            if (Main.rand.Next(6) == 0)
                            {
                                Main.dust[index2].velocity *= 5f;
                                Main.dust[index2].noLight = true;
                            }
                            else
                                Main.dust[index2].velocity = this.DirectionFrom(Main.dust[index2].position) * Main.dust[index2].velocity.Length();
                        }
                    }
                    this.dontTakeDamage = (double)this.ai[0] >= 0.0 && (double)this.ai[0] <= 20.0;
                    if ((double)this.ai[0] < 0.0)
                        return;
                    ++this.ai[0];
                    if ((double)this.ai[0] > 60.0)
                        this.velocity = Utils.RotatedBy(this.velocity, (double)this.ai[1], new Vector2());
                    if ((double)this.ai[0] > 120.0)
                    {
                        NPC npc = this;
                        Vector2 vector2 = npc.velocity * 0.98f;
                        npc.velocity = vector2;
                    }
                    if ((double)this.velocity.Length() >= 0.200000002980232)
                        return;
                    this.velocity = Vector2.Zero;
                }
            }
            else
            {
                if (this.aiStyle != 101)
                    return;
                float num1 = 420f;
                float num2 = 120f;
                int num3 = 1;
                float num4 = 0.0f;
                float num5 = 1f;
                float num6 = 4f;
                bool flag = (double)this.ai[1] < 0.0 || !Main.npc[(int)this.ai[0]].active;
                if (Main.npc[(int)this.ai[0]].type == 439)
                {
                    if (Main.npc[(int)this.ai[0]].life < Main.npc[(int)this.ai[0]].lifeMax / 2)
                        num3 = 2;
                    if (Main.npc[(int)this.ai[0]].life < Main.npc[(int)this.ai[0]].lifeMax / 4)
                        num3 = 3;
                }
                else
                    flag = true;
                this.ai[1] += (float)num3;
                float amount = MathHelper.Clamp(this.ai[1] / num2, 0.0f, 1f);
                this.position = this.Center;
                this.scale = MathHelper.Lerp(num4, num5, amount);
                this.Center = this.position;
                this.alpha = (int)((double)byte.MaxValue - (double)amount * (double)byte.MaxValue);
                if (Main.rand.Next(6) == 0)
                {
                    Vector2 spinningpoint = Utils.RotatedByRandom(Vector2.UnitY, 6.28318548202515);
                    Dust dust = Main.dust[Dust.NewDust(this.Center - spinningpoint * 20f, 0, 0, 27, 0.0f, 0.0f, 0, new Color(), 1f)];
                    dust.noGravity = true;
                    dust.position = this.Center - spinningpoint * (float)Main.rand.Next(10, 21) * this.scale;
                    dust.velocity = Utils.RotatedBy(spinningpoint, 1.57079637050629, new Vector2()) * 4f;
                    dust.scale = 0.5f + Utils.NextFloat(Main.rand);
                    dust.fadeIn = 0.5f;
                }
                if (Main.rand.Next(6) == 0)
                {
                    Vector2 spinningpoint = Utils.RotatedByRandom(Vector2.UnitY, 6.28318548202515);
                    Dust dust = Main.dust[Dust.NewDust(this.Center - spinningpoint * 30f, 0, 0, 240, 0.0f, 0.0f, 0, new Color(), 1f)];
                    dust.noGravity = true;
                    dust.position = this.Center - spinningpoint * 20f * this.scale;
                    dust.velocity = Utils.RotatedBy(spinningpoint, -1.57079637050629, new Vector2()) * 2f;
                    dust.scale = 0.5f + Utils.NextFloat(Main.rand);
                    dust.fadeIn = 0.5f;
                }
                if (Main.rand.Next(6) == 0)
                {
                    Vector2 vector2 = Utils.RotatedByRandom(Vector2.UnitY, 6.28318548202515);
                    Dust dust = Main.dust[Dust.NewDust(this.Center - vector2 * 30f, 0, 0, 240, 0.0f, 0.0f, 0, new Color(), 1f)];
                    dust.position = this.Center - vector2 * 20f * this.scale;
                    dust.velocity = Vector2.Zero;
                    dust.scale = 0.5f + Utils.NextFloat(Main.rand);
                    dust.fadeIn = 0.5f;
                    dust.noLight = true;
                }
                this.localAI[0] += 0.05235988f;
                this.localAI[1] = (float)(0.25 + (double)Utils.RotatedBy(Vector2.UnitY, (double)this.ai[1] * 6.28318548202515 / 60.0, new Vector2()).Y * 0.25);
                if ((double)this.ai[1] >= (double)num1)
                {
                    flag = true;
                    if (Main.netMode != 1)
                    {
                        for (int index = 0; index < 4; ++index)
                        {
                            Vector2 vector2 = Utils.RotatedBy(new Vector2(0.0f, -num6), 1.57079637050629 * (double)index, new Vector2());
                            Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2.X, vector2.Y, 593, this.damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                        }
                    }
                }
                if (!flag)
                    return;
                this.HitEffect(0, 9999.0);
                this.active = false;
            }
        }

        public void ReflectProjectiles(Rectangle myRect)
        {
            for (int i = 0; i < 1000; ++i)
            {
                if (Main.projectile[i].active && Main.projectile[i].CanReflect())
                {
                    Rectangle hitbox = Main.projectile[i].Hitbox;
                    if (myRect.Intersects(hitbox))
                        this.ReflectProjectile(i);
                }
            }
        }

        public void ReflectProjectile(int i)
        {
            Main.PlaySound(3, (int)Main.projectile[i].position.X, (int)Main.projectile[i].position.Y, this.soundHit);
            for (int index1 = 0; index1 < 3; ++index1)
            {
                int index2 = Dust.NewDust(Main.projectile[i].position, Main.projectile[i].width, Main.projectile[i].height, 31, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index2].velocity *= 0.3f;
            }
            Main.projectile[i].hostile = true;
            Main.projectile[i].friendly = false;
            Vector2 vector2_1 = Main.player[Main.projectile[i].owner].Center - Main.projectile[i].Center;
            vector2_1.Normalize();
            vector2_1 *= Main.projectile[i].oldVelocity.Length();
            Main.projectile[i].velocity = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
            Main.projectile[i].velocity.Normalize();
            Projectile projectile1 = Main.projectile[i];
            Vector2 vector2_2 = projectile1.velocity * vector2_1.Length();
            projectile1.velocity = vector2_2;
            Projectile projectile2 = Main.projectile[i];
            Vector2 vector2_3 = projectile2.velocity + vector2_1 * 20f;
            projectile2.velocity = vector2_3;
            Main.projectile[i].velocity.Normalize();
            Projectile projectile3 = Main.projectile[i];
            Vector2 vector2_4 = projectile3.velocity * vector2_1.Length();
            projectile3.velocity = vector2_4;
            Main.projectile[i].damage /= 2;
            Main.projectile[i].penetrate = 1;
        }

        public int GetShootingFrame(float circleY)
        {
            int num = -4;
            if ((double)circleY < -0.300000011920929)
                num = 1;
            if ((double)circleY < -0.100000001490116)
                num = 0;
            if ((double)circleY > 0.100000001490116)
                num = 2;
            if ((double)circleY > 0.300000011920929)
                num = 3;
            if (this.type == 228 || this.type == 229 || (this.type == 209 || this.type == 22) || this.type == 368)
            {
                if (num == -4)
                    num = 1;
                if ((double)circleY >= -0.100000001490116)
                    ++num;
            }
            return num;
        }

        public Tuple<Vector2, float> GetSwingStats(int swingMax, int swingCurrent, int aimDir, int itemWidth, int itemHeight)
        {
            Vector2 zero = Vector2.Zero;
            if ((double)swingCurrent < (double)swingMax * 0.333)
            {
                float num = 10f;
                if (itemWidth > 32)
                    num = 14f;
                if (itemWidth >= 52)
                    num = 24f;
                if (itemWidth >= 64)
                    num = 28f;
                if (itemWidth >= 92)
                    num = 38f;
                zero.X = this.Center.X + ((float)itemWidth * 0.5f - num) * (float)aimDir;
                zero.Y = this.position.Y + 24f;
            }
            else if ((double)swingCurrent < (double)swingMax * 0.666)
            {
                float num1 = 10f;
                if (itemWidth > 32)
                    num1 = 18f;
                if (itemWidth >= 52)
                    num1 = 24f;
                if (itemWidth >= 64)
                    num1 = 28f;
                if (itemWidth >= 92)
                    num1 = 38f;
                zero.X = this.Center.X + ((float)itemWidth * 0.5f - num1) * (float)aimDir;
                float num2 = 10f;
                if (itemHeight > 32)
                    num2 = 8f;
                if (itemHeight > 52)
                    num2 = 12f;
                if (itemHeight > 64)
                    num2 = 14f;
                zero.Y = this.position.Y + num2;
            }
            else
            {
                float num1 = 6f;
                if (itemWidth > 32)
                    num1 = 14f;
                if (itemWidth >= 48)
                    num1 = 18f;
                if (itemWidth >= 52)
                    num1 = 24f;
                if (itemWidth >= 64)
                    num1 = 28f;
                if (itemWidth >= 92)
                    num1 = 38f;
                zero.X = this.Center.X - ((float)itemWidth * 0.5f - num1) * (float)aimDir;
                float num2 = 10f;
                if (itemHeight > 32)
                    num2 = 10f;
                if (itemHeight > 52)
                    num2 = 12f;
                if (itemHeight > 64)
                    num2 = 14f;
                zero.Y = this.position.Y + num2;
            }
            float num3 = (float)(((double)swingCurrent / (double)swingMax - 0.5) * (double)-aimDir * 3.5 - (double)aimDir * 0.300000011920929);
            return Tuple.Create<Vector2, float>(zero, num3);
        }

        public void TweakSwingStats(int swingMax, int swingCurrent, int aimDir, ref Rectangle itemRectangle)
        {
            if ((double)swingCurrent < (double)swingMax * 0.333)
            {
                if (aimDir == -1)
                    itemRectangle.X -= (int)((double)itemRectangle.Width * 1.4 - (double)itemRectangle.Width);
                itemRectangle.Width = (int)((double)itemRectangle.Width * 1.4);
                itemRectangle.Y += (int)((double)itemRectangle.Height * 0.5);
                itemRectangle.Height = (int)((double)itemRectangle.Height * 1.1);
            }
            else
            {
                if ((double)swingCurrent < (double)swingMax * 0.666)
                    return;
                if (aimDir == 1)
                    itemRectangle.X -= (int)((double)itemRectangle.Width * 1.2);
                itemRectangle.Width = itemRectangle.Width * 2;
                itemRectangle.Y -= (int)((double)itemRectangle.Height * 1.4 - (double)itemRectangle.Height);
                itemRectangle.Height = (int)((double)itemRectangle.Height * 1.4);
            }
        }

        public void FindFrame()
        {
            int num1 = 1;
            if (!Main.dedServ)
            {
                if (!Main.NPCLoaded[this.type] || Main.npcTexture[this.type] == null)
                    return;
                num1 = Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type];
            }
            int num2 = 0;
            if (this.aiAction == 0)
                num2 = (double)this.velocity.Y >= 0.0 ? ((double)this.velocity.Y <= 0.0 ? ((double)this.velocity.X == 0.0 ? 0 : 1) : 3) : 2;
            else if (this.aiAction == 1)
                num2 = 4;
            if (this.type == 338 || this.type == 339 || (this.type == 340 || this.type == 17) || (this.type == 18 || this.type == 19 || (this.type == 20 || this.type == 22)) || (this.type == 142 || this.type == 353 || (this.type == 178 || this.type == 38) || (this.type == 26 || this.type == 27 || (this.type == 28 || this.type == 31))) || (this.type == 294 || this.type == 295 || (this.type == 296 || this.type == 21) || (this.type == 44 || this.type == 54 || (this.type == 37 || this.type == 73)) || (this.type == 77 || this.type == 78 || (this.type == 79 || this.type == 80) || (this.type == 104 || this.type == 107 || (this.type == 108 || this.type == 120)))) || (this.type == 124 || this.type == 140 || (this.type == 159 || this.type == 160) || (this.type == 167 || this.type == 181 || (this.type == 185 || this.type == 196)) || (this.type == 197 || this.type == 198 || (this.type == 201 || this.type == 202) || (this.type == 203 || this.type == 207 || (this.type == 208 || this.type == 209))) || (this.type == 212 || this.type == 213 || (this.type == 227 || this.type == 228) || (this.type == 229 || this.type == 287 || this.type >= 310 && this.type <= 314) || (this.type >= 322 && this.type <= 324 || (this.type == 326 || this.type == 368) || (this.type == 369 || this.type == 453 || (this.type == 460 || this.type == 462))))) || (this.type == 463 || this.type == 489 || (this.type == 441 || this.type == 534)))
            {
                int num3 = this.townNPC || this.type == 453 ? NPCID.Sets.ExtraFramesCount[this.type] : 0;
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    int num4 = Main.npcFrameCount[this.type] - NPCID.Sets.AttackFrameCount[this.type];
                    if ((double)this.ai[0] == 2.0)
                    {
                        ++this.frameCounter;
                        if (this.frame.Y / num1 == num4 - 1 && this.frameCounter >= 5.0)
                        {
                            this.frame.Y = 0;
                            this.frameCounter = 0.0;
                        }
                        else if (this.frame.Y / num1 == 0 && this.frameCounter >= 40.0)
                        {
                            this.frame.Y = num1 * (num4 - 1);
                            this.frameCounter = 0.0;
                        }
                        else if (this.frame.Y != 0 && this.frame.Y != num1 * (num4 - 1))
                        {
                            this.frame.Y = 0;
                            this.frameCounter = 0.0;
                        }
                    }
                    else if ((double)this.ai[0] == 11.0)
                    {
                        ++this.frameCounter;
                        if (this.frame.Y / num1 == num4 - 1 && this.frameCounter >= 20.0)
                        {
                            if (this.frameCounter == 20.0)
                            {
                                int num5 = Main.rand.Next(4);
                                for (int index1 = 0; index1 < 3 + num5; ++index1)
                                {
                                    int index2 = Dust.NewDust(this.Center + Vector2.UnitX * (float)-this.direction * 8f - Vector2.One * 5f + Vector2.UnitY * 8f, 3, 6, 216, (float)-this.direction, 1f, 0, new Color(), 1f);
                                    Main.dust[index2].velocity /= 2f;
                                    Main.dust[index2].scale = 0.8f;
                                }
                                if (Main.rand.Next(30) == 0)
                                {
                                    int index = Gore.NewGore(this.Center + Vector2.UnitX * (float)-this.direction * 8f, Vector2.Zero, Main.rand.Next(580, 583), 1f);
                                    Main.gore[index].velocity /= 2f;
                                    Main.gore[index].velocity.Y = Math.Abs(Main.gore[index].velocity.Y);
                                    Main.gore[index].velocity.X = -Math.Abs(Main.gore[index].velocity.X) * (float)this.direction;
                                }
                            }
                            if (this.frameCounter >= 40.0 && Main.rand.Next(20) == 0)
                            {
                                this.frame.Y = 0;
                                this.frameCounter = 0.0;
                            }
                        }
                        else if (this.frame.Y / num1 == 0 && this.frameCounter >= 20.0)
                        {
                            this.frame.Y = num1 * (num4 - 1);
                            this.frameCounter = 0.0;
                            if (Main.netMode != 1)
                                EmoteBubble.NewBubble(89, new WorldUIAnchor((Entity)this), 30);
                        }
                        else if (this.frame.Y != 0 && this.frame.Y != num1 * (num4 - 1))
                        {
                            this.frame.Y = 0;
                            this.frameCounter = 0.0;
                        }
                    }
                    else if ((double)this.ai[0] == 5.0)
                    {
                        this.frame.Y = num1 * (num4 - 3);
                        this.frameCounter = 0.0;
                    }
                    else if ((double)this.ai[0] == 6.0)
                    {
                        ++this.frameCounter;
                        int num5 = this.frame.Y / num1;
                        switch (num4 - num5)
                        {
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                int num6 = this.frameCounter >= 10.0 ? (this.frameCounter >= 16.0 ? (this.frameCounter >= 46.0 ? (this.frameCounter >= 60.0 ? (this.frameCounter >= 66.0 ? (this.frameCounter >= 72.0 ? (this.frameCounter >= 102.0 ? (this.frameCounter >= 108.0 ? (this.frameCounter >= 114.0 ? (this.frameCounter >= 120.0 ? (this.frameCounter >= 150.0 ? (this.frameCounter >= 156.0 ? (this.frameCounter >= 162.0 ? (this.frameCounter >= 168.0 ? (this.frameCounter >= 198.0 ? (this.frameCounter >= 204.0 ? (this.frameCounter >= 210.0 ? (this.frameCounter >= 216.0 ? (this.frameCounter >= 246.0 ? (this.frameCounter >= 252.0 ? (this.frameCounter >= 258.0 ? (this.frameCounter >= 264.0 ? (this.frameCounter >= 294.0 ? (this.frameCounter >= 300.0 ? 0 : num4 - 5) : num4 - 4) : num4 - 5) : 0) : num4 - 5) : num4 - 4) : num4 - 5) : 0) : num4 - 5) : num4 - 4) : num4 - 5) : 0) : num4 - 5) : num4 - 4) : num4 - 5) : 0) : num4 - 5) : num4 - 4) : num4 - 5) : 0) : num4 - 5) : num4 - 4) : num4 - 5) : 0;
                                if (num6 == num4 - 4 && num5 == num4 - 5)
                                {
                                    Vector2 Position = this.Center + new Vector2((float)(10 * this.direction), -4f);
                                    for (int index1 = 0; index1 < 8; ++index1)
                                    {
                                        int Type = Main.rand.Next(139, 143);
                                        int index2 = Dust.NewDust(Position, 0, 0, Type, this.velocity.X + (float)this.direction, this.velocity.Y - 2.5f, 0, new Color(), 1.2f);
                                        Main.dust[index2].velocity.X += (float)this.direction * 1.5f;
                                        Main.dust[index2].position -= new Vector2(4f);
                                        Main.dust[index2].velocity *= 2f;
                                        Main.dust[index2].scale = (float)(0.699999988079071 + (double)Utils.NextFloat(Main.rand) * 0.300000011920929);
                                    }
                                }
                                this.frame.Y = num1 * num6;
                                if (this.frameCounter >= 300.0)
                                {
                                    this.frameCounter = 0.0;
                                    break;
                                }
                                break;
                            default:
                                if (num5 != 0)
                                {
                                    this.frame.Y = 0;
                                    this.frameCounter = 0.0;
                                    goto case 1;
                                }
                                else
                                    goto case 1;
                        }
                    }
                    else if ((double)this.ai[0] == 7.0)
                    {
                        ++this.frameCounter;
                        int num5 = this.frame.Y / num1;
                        switch (num4 - num5)
                        {
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                int num6 = 0;
                                if (this.frameCounter < 16.0)
                                    num6 = 0;
                                else if (this.frameCounter == 16.0 && Main.netMode != 1)
                                    EmoteBubble.NewBubbleNPC(new WorldUIAnchor((Entity)this), 112, (WorldUIAnchor)null);
                                else if (this.frameCounter < 128.0)
                                    num6 = this.frameCounter % 16.0 < 8.0 ? num4 - 2 : 0;
                                else if (this.frameCounter < 160.0)
                                    num6 = 0;
                                else if (this.frameCounter == 160.0 && Main.netMode != 1)
                                    EmoteBubble.NewBubbleNPC(new WorldUIAnchor((Entity)this), 60, (WorldUIAnchor)null);
                                else
                                    num6 = this.frameCounter >= 220.0 ? 0 : (this.frameCounter % 12.0 < 6.0 ? num4 - 2 : 0);
                                this.frame.Y = num1 * num6;
                                if (this.frameCounter >= 220.0)
                                {
                                    this.frameCounter = 0.0;
                                    break;
                                }
                                break;
                            default:
                                if (num5 != 0)
                                {
                                    this.frame.Y = 0;
                                    this.frameCounter = 0.0;
                                    goto case 1;
                                }
                                else
                                    goto case 1;
                        }
                    }
                    else if ((double)this.ai[0] == 9.0)
                    {
                        ++this.frameCounter;
                        int num5 = this.frame.Y / num1;
                        switch (num4 - num5)
                        {
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                int num6 = this.frameCounter >= 10.0 ? (this.frameCounter >= 16.0 ? num4 - 4 : num4 - 5) : 0;
                                if ((double)this.ai[1] < 16.0)
                                    num6 = num4 - 5;
                                if ((double)this.ai[1] < 10.0)
                                    num6 = 0;
                                this.frame.Y = num1 * num6;
                                break;
                            default:
                                if (num5 != 0)
                                {
                                    this.frame.Y = 0;
                                    this.frameCounter = 0.0;
                                    goto case 1;
                                }
                                else
                                    goto case 1;
                        }
                    }
                    else if ((double)this.ai[0] == 10.0 || (double)this.ai[0] == 13.0)
                    {
                        ++this.frameCounter;
                        int num5 = this.frame.Y / num1;
                        switch (num5 - num4)
                        {
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                int num6 = 10;
                                int num7 = 6;
                                int num8 = this.frameCounter >= (double)num6 ? (this.frameCounter >= (double)(num6 + num7) ? (this.frameCounter >= (double)(num6 + num7 * 2) ? (this.frameCounter >= (double)(num6 + num7 * 3) ? (this.frameCounter >= (double)(num6 + num7 * 4) ? 0 : num4 + 3) : num4 + 2) : num4 + 1) : num4) : 0;
                                this.frame.Y = num1 * num8;
                                break;
                            default:
                                if (num5 != 0)
                                {
                                    this.frame.Y = 0;
                                    this.frameCounter = 0.0;
                                    goto case 0;
                                }
                                else
                                    goto case 0;
                        }
                    }
                    else if ((double)this.ai[0] == 15.0)
                    {
                        ++this.frameCounter;
                        int num5 = this.frame.Y / num1;
                        switch (num5 - num4)
                        {
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                float num6 = this.ai[1] / (float)NPCID.Sets.AttackTime[this.type];
                                int num7 = (double)num6 <= 0.649999976158142 ? ((double)num6 <= 0.5 ? ((double)num6 <= 0.349999994039536 ? ((double)num6 <= 0.0 ? 0 : num4 + 3) : num4 + 2) : num4 + 1) : num4;
                                this.frame.Y = num1 * num7;
                                break;
                            default:
                                if (num5 != 0)
                                {
                                    this.frame.Y = 0;
                                    this.frameCounter = 0.0;
                                    goto case 0;
                                }
                                else
                                    goto case 0;
                        }
                    }
                    else if ((double)this.ai[0] == 12.0)
                    {
                        ++this.frameCounter;
                        int num5 = this.frame.Y / num1;
                        switch (num5 - num4)
                        {
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                                int num6 = num4 + this.GetShootingFrame(this.ai[2]);
                                this.frame.Y = num1 * num6;
                                break;
                            default:
                                if (num5 != 0)
                                {
                                    this.frame.Y = 0;
                                    this.frameCounter = 0.0;
                                    goto case 0;
                                }
                                else
                                    goto case 0;
                        }
                    }
                    else if ((double)this.ai[0] == 14.0)
                    {
                        ++this.frameCounter;
                        int num5 = this.frame.Y / num1;
                        switch (num5 - num4)
                        {
                            case 0:
                            case 1:
                                int num6 = 12;
                                int num7 = this.frameCounter % (double)num6 * 2.0 < (double)num6 ? num4 : num4 + 1;
                                this.frame.Y = num1 * num7;
                                break;
                            default:
                                if (num5 != 0)
                                {
                                    this.frame.Y = 0;
                                    this.frameCounter = 0.0;
                                    goto case 0;
                                }
                                else
                                    goto case 0;
                        }
                    }
                    else if ((double)this.ai[0] == 3.0 || (double)this.ai[0] == 4.0)
                    {
                        ++this.frameCounter;
                        int num5 = this.frame.Y / num1;
                        switch (num4 - num5)
                        {
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                bool flag = (double)this.ai[0] == 3.0;
                                int num6 = 0;
                                int num7 = 0;
                                int time1 = -1;
                                int time2 = -1;
                                if (this.frameCounter < 10.0)
                                    num6 = 0;
                                else if (this.frameCounter < 16.0)
                                    num6 = num4 - 5;
                                else if (this.frameCounter < 46.0)
                                    num6 = num4 - 4;
                                else if (this.frameCounter < 60.0)
                                    num6 = num4 - 5;
                                else if (this.frameCounter < 216.0)
                                    num6 = 0;
                                else if (this.frameCounter == 216.0 && Main.netMode != 1)
                                    time1 = 70;
                                else if (this.frameCounter < 286.0)
                                    num6 = this.frameCounter % 12.0 < 6.0 ? num4 - 2 : 0;
                                else if (this.frameCounter < 320.0)
                                    num6 = 0;
                                else if (this.frameCounter == 320.0 && Main.netMode != 1)
                                    time1 = 100;
                                else
                                    num6 = this.frameCounter >= 420.0 ? 0 : (this.frameCounter % 16.0 < 8.0 ? num4 - 2 : 0);
                                if (this.frameCounter < 70.0)
                                    num7 = 0;
                                else if (this.frameCounter == 70.0 && Main.netMode != 1)
                                    time2 = 90;
                                else
                                    num7 = this.frameCounter >= 160.0 ? (this.frameCounter >= 166.0 ? (this.frameCounter >= 186.0 ? (this.frameCounter >= 200.0 ? (this.frameCounter >= 320.0 ? (this.frameCounter >= 326.0 ? 0 : num4 - 1) : 0) : num4 - 5) : num4 - 4) : num4 - 5) : (this.frameCounter % 16.0 < 8.0 ? num4 - 2 : 0);
                                if (flag)
                                {
                                    if (time1 != -1)
                                        EmoteBubble.NewBubbleNPC(new WorldUIAnchor((Entity)this), time1, new WorldUIAnchor((Entity)Main.npc[(int)this.ai[2]]));
                                    if (time2 != -1)
                                        EmoteBubble.NewBubbleNPC(new WorldUIAnchor((Entity)Main.npc[(int)this.ai[2]]), time2, new WorldUIAnchor((Entity)this));
                                }
                                this.frame.Y = num1 * (flag ? num6 : num7);
                                if (this.frameCounter >= 420.0)
                                {
                                    this.frameCounter = 0.0;
                                    break;
                                }
                                break;
                            default:
                                if (num5 != 0)
                                {
                                    this.frame.Y = 0;
                                    this.frameCounter = 0.0;
                                    goto case 1;
                                }
                                else
                                    goto case 1;
                        }
                    }
                    else if ((double)this.ai[0] == 16.0 || (double)this.ai[0] == 17.0)
                    {
                        ++this.frameCounter;
                        int num5 = this.frame.Y / num1;
                        switch (num4 - num5)
                        {
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                bool flag = (double)this.ai[0] == 16.0;
                                int num6 = 0;
                                int time = -1;
                                if (this.frameCounter < 10.0)
                                    num6 = 0;
                                else if (this.frameCounter < 16.0)
                                    num6 = num4 - 5;
                                else if (this.frameCounter < 22.0)
                                    num6 = num4 - 4;
                                else if (this.frameCounter < 28.0)
                                    num6 = num4 - 5;
                                else if (this.frameCounter < 34.0)
                                    num6 = num4 - 4;
                                else if (this.frameCounter < 40.0)
                                    num6 = num4 - 5;
                                else if (this.frameCounter == 40.0 && Main.netMode != 1)
                                    time = 45;
                                else if (this.frameCounter < 70.0)
                                    num6 = num4 - 4;
                                else if (this.frameCounter < 76.0)
                                    num6 = num4 - 5;
                                else if (this.frameCounter < 82.0)
                                    num6 = num4 - 4;
                                else if (this.frameCounter < 88.0)
                                    num6 = num4 - 5;
                                else if (this.frameCounter < 94.0)
                                    num6 = num4 - 4;
                                else if (this.frameCounter < 100.0)
                                    num6 = num4 - 5;
                                else if (this.frameCounter == 100.0 && Main.netMode != 1)
                                    time = 45;
                                else if (this.frameCounter < 130.0)
                                    num6 = num4 - 4;
                                else if (this.frameCounter < 136.0)
                                    num6 = num4 - 5;
                                else if (this.frameCounter < 142.0)
                                    num6 = num4 - 4;
                                else if (this.frameCounter < 148.0)
                                    num6 = num4 - 5;
                                else if (this.frameCounter < 154.0)
                                    num6 = num4 - 4;
                                else if (this.frameCounter < 160.0)
                                    num6 = num4 - 5;
                                else if (this.frameCounter == 160.0 && Main.netMode != 1)
                                    time = 75;
                                else
                                    num6 = this.frameCounter >= 220.0 ? (this.frameCounter >= 226.0 ? 0 : num4 - 5) : num4 - 4;
                                if (flag && time != -1)
                                {
                                    int num7 = (int)this.localAI[2];
                                    int num8 = (int)this.localAI[3];
                                    int num9 = (int)Main.npc[(int)this.ai[2]].localAI[3];
                                    int num10 = (int)Main.npc[(int)this.ai[2]].localAI[2];
                                    int num11 = 3 - num7 - num8;
                                    int num12 = 0;
                                    if (this.frameCounter == 40.0)
                                        num12 = 1;
                                    if (this.frameCounter == 100.0)
                                        num12 = 2;
                                    if (this.frameCounter == 160.0)
                                        num12 = 3;
                                    int num13 = 3 - num12;
                                    int num14 = -1;
                                    int num15 = 0;
                                    while (num14 < 0 && ++num15 < 100)
                                    {
                                        num14 = Main.rand.Next(2);
                                        if (num14 == 0 && num10 >= num8)
                                            num14 = -1;
                                        if (num14 == 1 && num9 >= num7)
                                            num14 = -1;
                                        if (num14 == -1 && num13 <= num11)
                                            num14 = 2;
                                    }
                                    if (num14 == 0)
                                    {
                                        ++Main.npc[(int)this.ai[2]].localAI[3];
                                        ++num9;
                                    }
                                    if (num14 == 1)
                                    {
                                        ++Main.npc[(int)this.ai[2]].localAI[2];
                                        ++num10;
                                    }
                                    int emoticon1 = Utils.SelectRandom<int>(Main.rand, 38, 37, 36);
                                    int emoticon2 = emoticon1;
                                    if (num14 == 0)
                                    {
                                        switch (emoticon1)
                                        {
                                            case 36:
                                                emoticon2 = 38;
                                                break;
                                            case 37:
                                                emoticon2 = 36;
                                                break;
                                            case 38:
                                                emoticon2 = 37;
                                                break;
                                        }
                                    }
                                    else if (num14 == 1)
                                    {
                                        switch (emoticon1)
                                        {
                                            case 36:
                                                emoticon2 = 37;
                                                break;
                                            case 37:
                                                emoticon2 = 38;
                                                break;
                                            case 38:
                                                emoticon2 = 36;
                                                break;
                                        }
                                    }
                                    if (num13 == 0)
                                    {
                                        if (num9 >= 2)
                                            emoticon1 -= 3;
                                        if (num10 >= 2)
                                            emoticon2 -= 3;
                                    }
                                    EmoteBubble.NewBubble(emoticon1, new WorldUIAnchor((Entity)this), time);
                                    EmoteBubble.NewBubble(emoticon2, new WorldUIAnchor((Entity)Main.npc[(int)this.ai[2]]), time);
                                }
                                this.frame.Y = num1 * (flag ? num6 : num6);
                                if (this.frameCounter >= 420.0)
                                {
                                    this.frameCounter = 0.0;
                                    break;
                                }
                                break;
                            default:
                                if (num5 != 0)
                                {
                                    this.frame.Y = 0;
                                    this.frameCounter = 0.0;
                                    goto case 1;
                                }
                                else
                                    goto case 1;
                        }
                    }
                    else if ((double)this.velocity.X == 0.0)
                    {
                        if (this.type == 140 || this.type == 287 || this.type == 489)
                        {
                            this.frame.Y = num1;
                            this.frameCounter = 0.0;
                        }
                        else
                        {
                            this.frame.Y = 0;
                            this.frameCounter = 0.0;
                        }
                    }
                    else
                    {
                        int num5 = 6;
                        if (this.type == 534)
                            num5 = 12;
                        if (this.type == 489)
                        {
                            num5 = 8;
                            this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 1.0;
                            this.frameCounter += 0.5;
                        }
                        else
                        {
                            this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                            ++this.frameCounter;
                        }
                        if (this.type == 462)
                            num5 = 9;
                        if (this.frameCounter > (double)num5)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 >= Main.npcFrameCount[this.type] - num3)
                            this.frame.Y = num1 * 2;
                    }
                }
                else if (this.type == 462)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = (double)this.velocity.Y >= 0.0 ? num1 * 2 : num1;
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1;
                    if (this.type == 489 || this.type == 21 || (this.type == 31 || this.type == 294) || (this.type == 326 || this.type == 295 || (this.type == 296 || this.type == 44)) || (this.type == 77 || this.type == 78 || (this.type == 79 || this.type == 80) || (this.type == 120 || this.type == 140 || (this.type == 159 || this.type == 167))) || (this.type == 197 || this.type == 201 || (this.type == 202 || this.type == 203) || (this.type == 287 || this.type >= 322 && this.type <= 324)))
                        this.frame.Y = 0;
                    if (this.type == 181)
                        this.frame.Y = num1 * 14;
                }
            }
            if (this.type >= 494 && this.type <= 495)
            {
                if ((double)this.ai[2] > 0.0)
                {
                    if ((double)this.ai[2] < 7.0)
                        this.frame.Y = num1 * 5;
                    else if ((double)this.ai[2] < 14.0)
                        this.frame.Y = num1 * 6;
                    else if ((double)this.ai[2] < 20.0)
                        this.frame.Y = num1 * 7;
                }
                else
                {
                    if ((double)this.velocity.Y == 0.0)
                    {
                        if (this.direction == 1)
                            this.spriteDirection = 1;
                        if (this.direction == -1)
                            this.spriteDirection = -1;
                    }
                    if ((double)this.velocity.Y != 0.0 || this.direction == -1 && (double)this.velocity.X > 0.0 || this.direction == 1 && (double)this.velocity.X < 0.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y = (double)this.velocity.Y >= 0.0 ? num1 * 3 : num1 * 2;
                    }
                    else if ((double)this.velocity.X == 0.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y = 0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                        if (this.frameCounter < 8.0)
                            this.frame.Y = 0;
                        else if (this.frameCounter < 16.0)
                            this.frame.Y = num1;
                        else if (this.frameCounter < 24.0)
                            this.frame.Y = num1 * 2;
                        else if (this.frameCounter < 32.0)
                            this.frame.Y = num1 * 3;
                        else if (this.frameCounter < 39.0)
                        {
                            this.frame.Y = num1 * 4;
                        }
                        else
                        {
                            this.frame.Y = num1 * 4;
                            this.frameCounter = 0.0;
                        }
                    }
                }
            }
            if (this.type >= 498 && this.type <= 506)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.ai[2] > 0.0)
                    {
                        this.spriteDirection = this.direction;
                        this.frame.Y = (double)this.ai[1] >= 12.0 ? ((double)this.ai[1] >= 34.0 ? num1 * 8 : num1 * 9) : num1 * 8;
                        this.frameCounter = 0.0;
                    }
                    else if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 1.0;
                        if (this.frameCounter > 4.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y > num1 * 7)
                            this.frame.Y = 0;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 10;
                }
            }
            else if (this.type >= 524 && this.type <= 527)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction != 0)
                        this.spriteDirection = this.direction;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                        ++this.frameCounter;
                        if (this.frameCounter > 9.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                            this.frame.Y = num1 * 2;
                    }
                }
                else
                {
                    this.frame.Y = num1;
                    this.frameCounter = 0.0;
                }
            }
            else if (this.type >= 528 && this.type <= 529)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction != 0)
                        this.spriteDirection = this.direction;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                        ++this.frameCounter;
                        if (this.frameCounter > 9.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 >= Main.npcFrameCount[this.type] - 1)
                            this.frame.Y = num1;
                    }
                }
                else
                {
                    this.frame.Y = num1 * (Main.npcFrameCount[this.type] - 1);
                    this.frameCounter = 0.0;
                }
            }
            else if (this.type == 533)
            {
                if ((double)this.velocity.Y == 0.0 && this.direction != 0)
                    this.spriteDirection = this.direction;
                ++this.frameCounter;
                if (this.frameCounter >= 48.0)
                    this.frameCounter = 0.0;
                this.frame.Y = (int)(this.frameCounter / 6.0) * num1;
                if ((double)this.ai[1] > 0.0)
                    this.frame.Y += num1 * 8;
            }
            if (this.type >= 496 && this.type <= 497)
            {
                if ((double)this.ai[0] == 0.0)
                {
                    this.rotation = 0.0f;
                    if ((double)this.velocity.Y == 0.0)
                        this.spriteDirection = this.direction;
                    else if ((double)this.velocity.Y < 0.0)
                        this.frameCounter = 0.0;
                    this.frameCounter += (double)Math.Abs(this.velocity.X) * 1.10000002384186;
                    if (this.frameCounter < 6.0)
                        this.frame.Y = 0;
                    else if (this.frameCounter < 12.0)
                        this.frame.Y = num1;
                    else if (this.frameCounter < 18.0)
                        this.frame.Y = num1 * 2;
                    else if (this.frameCounter < 24.0)
                        this.frame.Y = num1 * 3;
                    else
                        this.frameCounter = 0.0;
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = (double)this.ai[1] >= 10.0 ? ((double)this.ai[1] >= 20.0 ? num1 * 6 : num1 * 5) : num1 * 4;
                }
                else if ((double)this.ai[0] == 5.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = (double)this.ai[1] >= 10.0 ? ((double)this.ai[1] >= 20.0 ? num1 * 3 : num1 * 11) : num1 * 10;
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 7;
                }
            }
            else if (this.aiStyle == 39 && this.type != 417)
            {
                if ((double)this.ai[0] == 0.0)
                {
                    this.rotation = 0.0f;
                    if ((double)this.velocity.Y == 0.0)
                        this.spriteDirection = this.direction;
                    else if ((double)this.velocity.Y < 0.0)
                        this.frameCounter = 0.0;
                    this.frameCounter += (double)Math.Abs(this.velocity.X) * 1.10000002384186;
                    if (this.frameCounter < 6.0)
                        this.frame.Y = 0;
                    else if (this.frameCounter < 12.0)
                        this.frame.Y = num1;
                    else if (this.frameCounter < 18.0)
                        this.frame.Y = num1 * 2;
                    else if (this.frameCounter < 24.0)
                        this.frame.Y = num1 * 3;
                    else if (this.frameCounter < 32.0)
                        this.frame.Y = num1 * 4;
                    else
                        this.frameCounter = 0.0;
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = (double)this.ai[1] >= 10.0 ? ((double)this.ai[1] >= 20.0 ? num1 * 7 : num1 * 6) : num1 * 5;
                }
                else if ((double)this.ai[0] == 5.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = (double)this.ai[1] >= 10.0 ? ((double)this.ai[1] >= 20.0 ? num1 * 5 : num1 * 6) : num1 * 7;
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 7;
                }
            }
            else if (this.type == 508 || this.type == 532)
            {
                if ((double)this.velocity.Y != 0.0)
                    this.frame.Y = num1;
                else if ((double)this.velocity.X == 0.0)
                {
                    this.frame.Y = 0;
                }
                else
                {
                    if (this.direction < 0 && (double)this.velocity.X < 0.0)
                        this.spriteDirection = -1;
                    if (this.direction > 0 && (double)this.velocity.X > 0.0)
                        this.spriteDirection = 1;
                    if (this.frame.Y / num1 < 2)
                        this.frame.Y = num1 * 2;
                    this.frameCounter += 1.0 + (double)Math.Abs(this.velocity.X) / 2.0;
                    if (this.frameCounter > 6.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = num1 * 2;
                }
            }
            else if (this.type == 509)
            {
                if ((double)this.velocity.X > 0.0 && this.direction > 0 || (double)this.velocity.X < 0.0 && this.direction < 0)
                    this.spriteDirection = this.direction;
                if (++this.frameCounter >= 3.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = 0;
                }
            }
            if (this.type == 415)
            {
                if ((double)this.ai[2] < 0.0)
                {
                    if (this.frame.Y / num1 != 8 && this.frame.Y / num1 != 9 && this.frame.Y / num1 != 0)
                        this.frameCounter = 0.0;
                    ++this.frameCounter;
                    int num3 = 0;
                    int num4 = 18;
                    int num5 = 4;
                    if (this.frameCounter > (double)(num4 - num5 * 2))
                        num3 = 8 + (int)this.frameCounter / 4 % 2;
                    if (this.frameCounter > (double)(num4 + num5 * 6))
                    {
                        num3 = 0;
                        this.frameCounter = 0.0;
                    }
                    this.frame.Y = num1 * num3;
                }
                else if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction != 0)
                        this.spriteDirection = this.direction;
                    if (this.frame.Y < num1 * 2)
                        this.frame.Y = num1 * 2;
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 0.5;
                    if (this.frameCounter >= 8.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type] - 2)
                        this.frame.Y = num1 * 2;
                    if ((double)this.velocity.X == 0.0)
                        this.frame.Y = 0;
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1;
                }
            }
            if (this.type == 416)
            {
                int index = (int)this.ai[0];
                if (Main.npc[index].active && Main.npc[index].type == 415 && Main.npcTexture[415] != null)
                    this.frame.Y = Main.npc[index].frame.Y / (Main.npcTexture[415].Height / Main.npcFrameCount[415]) * num1;
            }
            else if (this.type == 417)
            {
                if ((double)this.ai[0] == 0.0)
                {
                    this.rotation = 0.0f;
                    if ((double)this.velocity.Y == 0.0)
                        this.spriteDirection = this.direction;
                    else if ((double)this.velocity.Y < 0.0)
                        this.frameCounter = 0.0;
                    this.frameCounter += (double)Math.Abs(this.velocity.X) * 1.10000002384186;
                    this.frame.Y = (int)(this.frameCounter / 6.0) * num1;
                    if (this.frameCounter >= 48.0)
                        this.frameCounter = 0.0;
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * (9 + (int)((double)this.ai[1] / 6.0));
                }
                else if ((double)this.ai[0] == 5.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * (13 - (int)((double)this.ai[1] / 6.0));
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 14;
                }
            }
            else if (this.type == 518)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction != 0)
                        this.spriteDirection = this.direction;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 1.0;
                        ++this.frameCounter;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                            this.frame.Y = num1 * 2;
                    }
                }
                else
                {
                    this.frame.Y = num1;
                    this.frameCounter = 0.0;
                }
            }
            else if (this.type == 419)
            {
                if ((double)this.ai[2] < 0.0)
                {
                    int num3 = 1;
                    if (this.direction != 0)
                        this.spriteDirection = this.direction;
                    if (this.frame.Y / num1 >= 9)
                    {
                        this.frame.Y = num1 * 2;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y / num1 < 2)
                    {
                        this.frame.Y = num1 * 2;
                        this.frameCounter = 0.0;
                    }
                    ++this.frameCounter;
                    if (this.frameCounter >= (double)(num3 * 4 + 6))
                        this.frameCounter = 8.0;
                    this.frame.Y = this.frameCounter >= 6.0 ? num1 * (int)(4.0 + (this.frameCounter - 6.0) / (double)num3) : num1 * (int)(2.0 + this.frameCounter / 3.0);
                }
                else if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction != 0)
                        this.spriteDirection = this.direction;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 1.0;
                        ++this.frameCounter;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                            this.frame.Y = num1 * 9;
                        if (this.frame.Y / num1 < 9)
                            this.frame.Y = num1 * 9;
                    }
                }
                else
                {
                    this.frame.Y = num1;
                    this.frameCounter = 0.0;
                }
            }
            else if (this.type == 425)
            {
                if (this.direction != 0)
                    this.spriteDirection = -this.direction;
                if ((double)this.ai[2] == 1.0)
                {
                    ++this.frameCounter;
                    if (this.frameCounter >= 3.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y > num1 * 12 || this.frame.Y < num1 * 10)
                        this.frame.Y = num1 * 10;
                }
                else if ((double)this.velocity.Y != 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1;
                }
                else if ((double)this.velocity.X == 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else
                {
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                    if (this.frameCounter >= 8.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y > num1 * 9 || this.frame.Y < num1 * 2)
                        this.frame.Y = num1 * 2;
                }
            }
            else if (this.type == 427)
            {
                if (this.direction != 0)
                    this.spriteDirection = this.direction;
                if ((double)this.velocity.Y != 0.0)
                {
                    ++this.frameCounter;
                    if (this.frameCounter >= 2.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y >= num1 * 9 || this.frame.Y < num1 * 6)
                        this.frame.Y = num1 * 6;
                }
                else if ((double)this.velocity.X == 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else
                {
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                    if (this.frameCounter >= 8.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y > num1 * 5 || this.frame.Y < num1)
                        this.frame.Y = num1;
                }
            }
            else if (this.type == 426)
            {
                if (this.direction != 0)
                    this.spriteDirection = this.direction;
                if ((double)this.ai[1] >= 45.0)
                {
                    if ((double)this.velocity.Y == 0.0)
                    {
                        this.frame.Y = num1 * 8;
                    }
                    else
                    {
                        ++this.frameCounter;
                        if (this.frameCounter >= 2.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y >= num1 * 15 || this.frame.Y < num1 * 12)
                            this.frame.Y = num1 * 12;
                    }
                }
                else if ((double)this.velocity.Y != 0.0)
                {
                    ++this.frameCounter;
                    if (this.frameCounter >= 2.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y >= num1 * 12 || this.frame.Y < num1 * 9)
                        this.frame.Y = num1 * 9;
                }
                else if ((double)this.velocity.X == 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else
                {
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                    if (this.frameCounter >= 10.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y > num1 * 7 || this.frame.Y < num1)
                        this.frame.Y = num1;
                }
            }
            else if (this.type == 429)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction != 0)
                        this.spriteDirection = this.direction;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 1.0;
                        ++this.frameCounter;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                            this.frame.Y = num1 * 2;
                    }
                }
                else
                {
                    this.frame.Y = num1;
                    this.frameCounter = 0.0;
                }
            }
            else if (this.type == 428)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction != 0)
                        this.spriteDirection = this.direction;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter += (double)Math.Abs(this.velocity.X) * 1.0;
                        if (++this.frameCounter > 10.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 >= Main.npcFrameCount[this.type] - 1)
                            this.frame.Y = 0;
                    }
                }
                else if (this.frame.Y / num1 != 4)
                {
                    if (this.frameCounter > 0.0)
                        this.frameCounter = 0.0;
                    if (--this.frameCounter < -10.0 || (double)this.velocity.Y > 0.600000023841858)
                    {
                        this.frame.Y = num1 * 4;
                        this.frameCounter = 0.0;
                    }
                }
            }
            else if (this.type == 423)
            {
                if ((double)this.ai[2] == 1.0)
                {
                    int num3 = 2;
                    if ((double)this.ai[1] >= 30.0 && (double)this.ai[1] < 45.0)
                        num3 = 3;
                    this.frame.Y = num3 * num1;
                }
                else if ((double)this.velocity.Y != 0.0)
                    this.frame.Y = num1;
                else if ((double)this.velocity.X == 0.0)
                {
                    this.frame.Y = 0;
                }
                else
                {
                    if ((double)this.velocity.X != 0.0)
                        this.spriteDirection = Math.Sign(-this.velocity.X);
                    if (this.frame.Y / num1 < 4)
                        this.frame.Y = num1 * 4;
                    this.frameCounter += 1.0 + (double)Math.Abs(this.velocity.X) / 2.0;
                    if (this.frameCounter > 6.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = num1 * 4;
                }
            }
            else if (this.type == 421)
            {
                if ((double)this.ai[0] == 5.0)
                    ++this.frameCounter;
                if (++this.frameCounter >= 5.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = 0;
                }
            }
            if (this.type == 424)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction != 0)
                        this.spriteDirection = -this.direction;
                    if ((double)this.ai[2] > 0.0)
                    {
                        this.frame.Y = num1 * ((double)this.ai[1] > 90.0 ? Main.npcFrameCount[this.type] - 2 : Main.npcFrameCount[this.type] - 1);
                        this.frameCounter = 0.0;
                    }
                    else if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                    }
                    else
                    {
                        if (this.frame.Y < num1 * 2)
                            this.frame.Y = num1 * 2;
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                        this.frameCounter += (double)this.velocity.X * 1.29999995231628;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 >= Main.npcFrameCount[this.type] - 2)
                            this.frame.Y = num1 * 2;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1;
                }
            }
            else if (this.type == 420 && ++this.frameCounter >= 5.0)
            {
                this.frameCounter = 0.0;
                this.frame.Y += num1;
                if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                    this.frame.Y = 0;
            }
            if (this.type == 411)
            {
                if ((double)this.ai[1] >= 90.0 && (double)this.ai[1] < 180.0)
                {
                    this.spriteDirection = -this.direction;
                    this.frame.Y = num1 * (Main.npcFrameCount[this.type] - 1);
                    this.frameCounter = 0.0;
                }
                else if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction != 0)
                        this.spriteDirection = -this.direction;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 1.0;
                        ++this.frameCounter;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 >= Main.npcFrameCount[this.type] - 1)
                            this.frame.Y = num1 * 2;
                    }
                }
                else
                {
                    this.frame.Y = num1;
                    this.frameCounter = 0.0;
                }
            }
            else if (this.type == 409)
            {
                if ((double)this.velocity.Y == 0.0 && (double)this.ai[1] <= 30.0 && (double)this.ai[1] > 0.0)
                {
                    this.frame.Y = num1 * (Main.npcFrameCount[this.type] - 1);
                    this.frameCounter = 0.0;
                }
                else
                {
                    if ((double)this.velocity.Y == 0.0)
                        this.spriteDirection = this.direction;
                    if (++this.frameCounter >= 6.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                        if (this.frame.Y / num1 >= Main.npcFrameCount[this.type] - 2)
                            this.frame.Y = 0;
                    }
                }
            }
            else if (this.type == 410)
            {
                this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                if (this.frameCounter >= 10.0)
                {
                    this.frameCounter -= 10.0;
                    this.frame.Y += num1;
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = 0;
                }
            }
            else if (this.type == 407)
            {
                if (++this.frameCounter >= 6.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = 0;
                }
            }
            else if ((this.type == 405 || this.type == 406) && ++this.frameCounter >= 4.0)
            {
                this.frameCounter = 0.0;
                this.frame.Y += num1;
                if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                    this.frame.Y = 0;
            }
            if (this.type == 516)
            {
                if ((double)this.localAI[1] == 0.0)
                {
                    this.localAI[1] = 1f;
                    this.frame.Y = num1 * Main.rand.Next(3);
                    this.frameCounter += (double)Main.rand.Next(3);
                }
                ++this.frameCounter;
                if (this.frameCounter > 3.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                    if (this.frame.Y > num1 * 3)
                        this.frame.Y = 0;
                }
            }
            if (this.type == 418)
            {
                if ((double)this.ai[0] == 0.0 || (double)this.ai[0] == 1.0 || (double)this.ai[0] == -1.0)
                {
                    ++this.frameCounter;
                    if (this.frameCounter > 6.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                    }
                    if (this.frame.Y > num1 * 4)
                        this.frame.Y = 0;
                }
                else if ((double)this.ai[0] == 2.0)
                    this.frame.Y = (double)this.ai[1] >= 10.0 ? ((double)this.ai[1] >= 20.0 ? num1 * 7 : num1 * 6) : num1 * 5;
                else if ((double)this.ai[0] == -2.0)
                {
                    ++this.frameCounter;
                    if (this.frameCounter > 12.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                    }
                    if (this.frame.Y > num1 * 7)
                        this.frame.Y = num1 * 5;
                }
            }
            if (this.type == 1 || this.type == 537 || (this.type == 16 || this.type == 59) || (this.type == 71 || this.type == 81 || (this.type == 138 || this.type == 147)) || (this.type == 183 || this.type == 184 || (this.type == 204 || this.type == 225) || (this.type == 302 || this.type == 304 || this.type >= 333 && this.type <= 336)) || this.type == 535)
            {
                if (this.type == 302 || this.type == 304)
                    this.spriteDirection = this.direction;
                this.frameCounter = this.frameCounter + 1.0;
                if (num2 > 0)
                    ++this.frameCounter;
                if (num2 == 4)
                    ++this.frameCounter;
                if (this.frameCounter >= 8.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= num1 * Main.npcFrameCount[this.type])
                    this.frame.Y = 0;
            }
            if (this.type == 488)
            {
                int num3 = (int)this.localAI[1];
                if ((int)Framing.GetTileSafely((int)this.ai[0], (int)this.ai[1]).frameX >= 36)
                    num3 *= -1;
                if ((double)this.localAI[0] > 24.0)
                    this.localAI[0] = 24f;
                if ((double)this.localAI[0] > 0.0)
                    --this.localAI[0];
                if ((double)this.localAI[0] < 0.0)
                    this.localAI[0] = 0.0f;
                int num4 = num3 == -1 ? 4 : 6;
                int num5 = (int)this.localAI[0] / num4;
                if ((double)this.localAI[0] % (double)num4 != 0.0)
                    ++num5;
                if (num5 != 0 && num3 == 1)
                    num5 += 5;
                this.frame.Y = num5 * num1;
            }
            if (this.type >= 430 && this.type <= 436)
            {
                if ((double)this.ai[2] > 0.0)
                {
                    this.frame.Y = (double)this.ai[2] >= 5.0 ? ((double)this.ai[2] >= 10.0 ? ((double)this.ai[2] >= 15.0 ? num1 * 6 : num1 * 5) : num1 * 4) : num1 * 3;
                }
                else
                {
                    if ((double)this.velocity.Y == 0.0)
                    {
                        if (this.direction == 1)
                            this.spriteDirection = 1;
                        if (this.direction == -1)
                            this.spriteDirection = -1;
                    }
                    if ((double)this.velocity.Y != 0.0 || this.direction == -1 && (double)this.velocity.X > 0.0 || this.direction == 1 && (double)this.velocity.X < 0.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y = num1 * 2;
                    }
                    else if ((double)this.velocity.X == 0.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y = 0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                        if (this.frameCounter < 8.0)
                            this.frame.Y = 0;
                        else if (this.frameCounter < 16.0)
                            this.frame.Y = num1;
                        else if (this.frameCounter < 24.0)
                            this.frame.Y = num1 * 2;
                        else if (this.frameCounter < 32.0)
                            this.frame.Y = num1;
                        else
                            this.frameCounter = 0.0;
                    }
                }
            }
            if (this.type == 454)
            {
                int num3 = (int)(this.frameCounter / 2.0);
                this.frame.Y = num1 * num3;
            }
            if (this.type == 377 || this.type == 446)
            {
                this.frame.Y = (double)this.velocity.Y == 0.0 ? 0 : num1;
                this.spriteDirection = this.direction;
            }
            if (this.type == 378)
            {
                if ((double)this.velocity.Y != 0.0 && this.frame.Y < num1 * 2)
                    this.frame.Y += num1 * 2;
                if ((double)this.velocity.Y == 0.0 && this.frame.Y > num1 * 2)
                    this.frame.Y -= num1 * 2;
                ++this.frameCounter;
                if (this.frameCounter >= 6.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                    if ((double)this.velocity.Y != 0.0 && this.frame.Y >= num1 * 4)
                        this.frame.Y = num1 * 2;
                    if ((double)this.velocity.Y == 0.0 && this.frame.Y >= num1 * 2)
                        this.frame.Y = 0;
                }
            }
            if (this.type == 376)
            {
                ++this.frameCounter;
                if (this.frameCounter > 30.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                    if (this.frame.Y >= num1 * 2)
                        this.frame.Y = 0;
                }
            }
            if (this.type == 375)
            {
                ++this.frameCounter;
                if (this.frameCounter > 4.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                    if (this.frame.Y >= num1 * 4)
                        this.frame.Y = 0;
                }
            }
            if (this.type == 374)
            {
                this.localAI[0] = -2f;
                if ((double)this.velocity.Y == 0.0)
                {
                    this.rotation = 0.0f;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        ++this.frameCounter;
                        if (this.frameCounter > 6.0)
                        {
                            this.frameCounter = 0.0;
                            this.frame.Y += num1;
                            if (this.frame.Y >= num1 * 4)
                                this.frame.Y = num1;
                        }
                    }
                }
                else
                {
                    this.rotation += (float)this.direction * 0.1f;
                    ++this.frameCounter;
                    if (this.frameCounter > 3.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                        if (this.frame.Y >= num1 * 4)
                            this.frame.Y = num1;
                    }
                }
            }
            if (this.type == 492)
                this.frame.Y = num1 * (int)this.ai[2];
            if (this.type == 473 || this.type == 474 || (this.type == 475 || this.type == 476))
            {
                if ((double)this.velocity.Y == 0.0)
                    this.spriteDirection = this.direction;
                if ((double)this.ai[0] == 0.0 || (double)this.ai[0] == 7.0)
                {
                    this.rotation = 0.0f;
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    this.rotation = 0.0f;
                    this.frameCounter = 0.0;
                    int num3 = 6;
                    this.frame.Y = (double)this.ai[1] >= (double)num3 ? ((double)this.ai[1] >= (double)(num3 * 2) ? ((double)this.ai[1] >= (double)(num3 * 3) ? ((double)this.ai[1] >= (double)(num3 * 4) ? ((double)this.ai[1] >= (double)(num3 * 5) ? num1 * 6 : num1 * 5) : num1 * 4) : num1 * 3) : num1 * 2) : num1;
                }
                else if ((double)this.ai[0] == 2.0 || (double)this.ai[0] == 6.0)
                {
                    this.rotation = 0.0f;
                    if ((double)this.velocity.Y == 0.0)
                    {
                        int num3 = 6;
                        ++this.frameCounter;
                        if (this.frame.Y < num1 * 7)
                            this.frame.Y = num1 * 12;
                        if (this.frame.Y < num1 * 10)
                        {
                            if (this.frameCounter > 8.0)
                            {
                                this.frame.Y += num1;
                                this.frameCounter = 0.0;
                                if (this.frame.Y == num1 * 10)
                                    this.frameCounter = (double)(num3 * 2);
                            }
                        }
                        else if (this.frameCounter < (double)num3)
                            this.frame.Y = num1 * 12;
                        else if (this.frameCounter < (double)(num3 * 2))
                            this.frame.Y = num1 * 11;
                        else if (this.frameCounter < (double)(num3 * 3))
                        {
                            this.frame.Y = num1 * 10;
                        }
                        else
                        {
                            this.frame.Y = num1 * 11;
                            if (this.frameCounter >= (double)(num3 * 4 - 1))
                                this.frameCounter = 0.0;
                        }
                    }
                    else
                    {
                        this.frame.Y = num1 * 13;
                        this.frameCounter = 0.0;
                    }
                }
                else if ((double)this.ai[0] == 3.0)
                {
                    this.rotation = 0.0f;
                    ++this.frameCounter;
                    if (this.frameCounter > 6.0)
                    {
                        this.frameCounter = 0.0;
                        if (this.frame.Y > num1 * 7)
                            this.frame.Y -= num1;
                    }
                }
                else if ((double)this.ai[0] == 4.0 || (double)this.ai[0] == 5.0)
                {
                    if ((double)this.ai[0] == 4.0 && (double)this.ai[2] == 1.0)
                        this.rotation = 0.0f;
                    this.frame.Y = num1 * 13;
                    this.frameCounter = 0.0;
                }
                else if ((double)this.ai[0] == 4.09999990463257)
                {
                    this.rotation = 0.0f;
                    if (this.frame.Y > num1 * 6)
                        this.frameCounter = 0.0;
                    ++this.frameCounter;
                    int num3 = 4;
                    if (this.frameCounter < (double)num3)
                        this.frame.Y = num1 * 6;
                    else if (this.frameCounter < (double)(num3 * 2))
                        this.frame.Y = num1 * 5;
                    else if (this.frameCounter < (double)(num3 * 3))
                        this.frame.Y = num1 * 4;
                    else if (this.frameCounter < (double)(num3 * 4))
                        this.frame.Y = num1 * 3;
                    else if (this.frameCounter < (double)(num3 * 5))
                    {
                        this.frame.Y = num1 * 4;
                    }
                    else
                    {
                        this.frame.Y = num1 * 5;
                        if (this.frameCounter >= (double)(num3 * 6 - 1))
                            this.frameCounter = 0.0;
                    }
                }
            }
            if (this.type == 477)
            {
                this.frameCounter += (double)this.velocity.Length() / 4.0;
                ++this.frameCounter;
                if (this.frameCounter >= 6.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                }
                if (this.frame.Y / num1 > 5)
                    this.frame.Y = 0;
            }
            if (this.type == 479)
            {
                this.frameCounter = this.frameCounter + 1.0;
                int num3 = 4;
                if (this.frameCounter < (double)num3)
                    this.frame.Y = 0;
                else if (this.frameCounter < (double)(num3 * 2))
                    this.frame.Y = num1;
                else if (this.frameCounter < (double)(num3 * 3))
                    this.frame.Y = num1 * 2;
                else if (this.frameCounter < (double)(num3 * 4 - 1))
                    this.frame.Y = num1;
                else
                    this.frameCounter = 0.0;
            }
            if (this.type == 472)
            {
                if ((double)this.velocity.X < 0.0)
                    this.direction = -1;
                else
                    this.direction = 1;
                if (this.direction == 1)
                    this.spriteDirection = 1;
                if (this.direction == -1)
                    this.spriteDirection = -1;
                this.rotation = (float)Math.Atan2((double)this.velocity.Y * (double)this.direction, (double)this.velocity.X * (double)this.direction);
                ++this.frameCounter;
                if (this.frameCounter > 4.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y / num1 >= 6)
                    this.frame.Y = 0;
            }
            if (this.type >= 449 && this.type <= 452)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.ai[2] > 0.0)
                    {
                        this.spriteDirection = this.direction;
                        int num3 = 0;
                        if ((double)this.ai[1] < 22.0)
                            num3 = -14;
                        else if ((double)this.ai[1] < 28.0)
                            num3 = 3;
                        else if ((double)this.ai[1] < 34.0)
                            num3 = 2;
                        else if ((double)this.ai[1] < 40.0)
                            num3 = 1;
                        this.frame.Y = num1 * (15 + num3);
                        this.frameCounter = 0.0;
                    }
                    else if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = num1;
                    }
                    else
                    {
                        if (this.frame.Y < num1 * 2)
                            this.frame.Y = num1 * 2;
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 >= 15)
                            this.frame.Y = num1 * 2;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
            }
            if (this.type == 481)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.ai[2] > 0.0)
                    {
                        this.spriteDirection = this.direction;
                        int num3 = 0;
                        if ((double)this.ai[1] < 22.0)
                            num3 = -14;
                        else if ((double)this.ai[1] < 28.0)
                            num3 = 3;
                        else if ((double)this.ai[1] < 34.0)
                            num3 = 2;
                        else if ((double)this.ai[1] < 40.0)
                            num3 = 1;
                        this.frame.Y = num1 * (15 + num3);
                        this.frameCounter = 0.0;
                    }
                    else if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = num1;
                    }
                    else
                    {
                        if (this.frame.Y < num1 * 2)
                            this.frame.Y = num1 * 2;
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 >= 15)
                            this.frame.Y = num1 * 2;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
            }
            if (this.type == 468)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.ai[2] > 0.0)
                    {
                        this.spriteDirection = this.direction;
                        int num3 = 0;
                        if ((double)this.ai[1] < 22.0)
                            num3 = -15;
                        else if ((double)this.ai[1] < 28.0)
                            num3 = 3;
                        else if ((double)this.ai[1] < 34.0)
                            num3 = 2;
                        else if ((double)this.ai[1] < 40.0)
                            num3 = 1;
                        this.frame.Y = num1 * (15 + num3);
                        this.frameCounter = 0.0;
                    }
                    else if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                    }
                    else
                    {
                        if (this.frame.Y < num1 * 2)
                            this.frame.Y = num1 * 2;
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 >= 15)
                            this.frame.Y = num1 * 2;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1;
                }
            }
            if (this.type == 379 || this.type == 380)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.ai[2] > 0.0)
                    {
                        this.spriteDirection = this.direction;
                        this.frame.Y = num1 * ((int)this.ai[2] - 1 + 2);
                        this.frameCounter = 0.0;
                    }
                    else if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                    }
                    else
                    {
                        if (this.frame.Y < num1 * 7)
                            this.frame.Y = num1 * 7;
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                            this.frame.Y = num1 * 7;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1;
                }
            }
            if (this.type == 381 || this.type == 382 || (this.type == 383 || this.type == 385) || this.type == 389)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    this.spriteDirection = this.direction;
                    if (this.frame.Y < num1 * 2)
                        this.frame.Y = num1 * 2;
                    this.frameCounter = this.type == 389 || this.type == 385 ? this.frameCounter + (double)Math.Abs(this.velocity.X) * 1.2 : this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                    if (this.frameCounter > 6.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = num1 * 2;
                    if ((double)this.velocity.X == 0.0)
                        this.frame.Y = 0;
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1;
                }
            }
            if (this.type == 387)
            {
                if ((double)this.ai[0] > 0.0)
                {
                    ++this.frameCounter;
                    if ((double)this.ai[0] >= 20.0)
                        ++this.frameCounter;
                    if ((double)this.ai[0] >= 40.0)
                        ++this.frameCounter;
                    if (this.frameCounter >= 10.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                        if (this.frame.Y >= num1 * 2)
                            this.frame.Y = 0;
                    }
                }
                else
                {
                    ++this.frameCounter;
                    if (this.frameCounter >= 15.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                        if (this.frame.Y >= num1 * 2)
                            this.frame.Y = 0;
                    }
                }
            }
            if (this.type == 386)
            {
                if ((double)this.ai[2] > 0.0)
                {
                    int num3 = (int)this.ai[2] / 12;
                    this.frame.Y = num1 * (9 + num3 % 2);
                }
                else if ((double)this.velocity.Y == 0.0)
                {
                    this.spriteDirection = this.direction;
                    if (this.frame.Y < num1 * 2)
                        this.frame.Y = num1 * 2;
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                    if (this.frameCounter > 6.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y / num1 >= 9)
                        this.frame.Y = num1 * 2;
                    if ((double)this.velocity.X == 0.0)
                        this.frame.Y = 0;
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1;
                }
            }
            if (this.type == 388)
            {
                ++this.frameCounter;
                if (this.frameCounter >= 6.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                    if (this.frame.Y >= num1 * 2)
                        this.frame.Y = 0;
                }
            }
            if (this.type == 391)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = -1;
                    if (this.direction == -1)
                        this.spriteDirection = 1;
                    if (this.frame.Y < num1)
                        this.frame.Y = num1;
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 0.5;
                    if (this.frameCounter > 6.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = num1;
                    if ((double)this.velocity.X == 0.0)
                        this.frame.Y = 0;
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
            }
            if (this.type == 390)
            {
                if (this.direction != 0)
                    this.spriteDirection = -this.direction;
                this.frame.Y = (double)this.ai[2] <= 0.0 ? num1 * 2 : num1 * ((int)this.ai[2] - 1);
            }
            if (this.type == 393)
            {
                Vector2 vector2 = Utils.ToRotationVector2(this.ai[2]);
                int num3 = (double)vector2.Y <= (double)Math.Abs(vector2.X) * 2.0 ? ((double)vector2.Y <= (double)Math.Abs(vector2.X) * 1.5 ? ((double)Math.Abs(vector2.X) <= (double)vector2.Y * 2.0 ? ((double)Math.Abs(vector2.X) <= (double)vector2.Y * 1.5 ? ((double)vector2.X > 0.0 ? 6 : 2) : ((double)vector2.X > 0.0 ? 7 : 1)) : ((double)vector2.X > 0.0 ? 8 : 0)) : ((double)vector2.X > 0.0 ? 5 : 3)) : 4;
                this.frame.Y = num1 * num3;
                float num4 = 280f;
                float num5 = 140f;
                if ((double)this.ai[3] >= (double)num4 && (double)this.ai[3] < (double)num4 + (double)num5 && (int)this.ai[3] % 6 <= 2)
                    this.frame.Y += num1 * 9;
            }
            if (this.type == 394)
            {
                int num3 = (int)this.ai[3] - 300;
                if (num3 >= 120)
                {
                    int num4 = num3 - 120;
                    this.frame.Y = num4 < 160 ? (num4 < 20 ? num1 * (4 + num4 / 5) : num1 * (num4 / 4 % 4)) : num1 * (7 - (num4 - 160) / 5);
                }
                else
                    this.frame.Y = num1 * 4;
            }
            if (this.type == 395)
            {
                float num3 = 20f;
                float num4 = 240f;
                bool flag = (double)this.ai[3] >= (double)num3 && (double)this.ai[3] < (double)num3 + (double)num4;
                ++this.frameCounter;
                if (this.frameCounter >= 66.0)
                    this.frameCounter = 0.0;
                if (flag)
                {
                    ++this.frameCounter;
                    if (this.frameCounter >= 54.0 || this.frameCounter < 36.0)
                        this.frameCounter = 36.0;
                }
                int num5 = (int)this.frameCounter % 66 / 6;
                this.frame.Y = num1 * num5;
            }
            if (this.type == 392)
            {
                float num3 = 20f;
                float num4 = 240f;
                bool flag = (double)this.ai[3] >= (double)num3 && (double)this.ai[3] < (double)num3 + (double)num4;
                ++this.frameCounter;
                if (flag)
                    ++this.frameCounter;
                if (this.frameCounter >= 12.0)
                    this.frameCounter = 0.0;
                int num5 = (int)this.frameCounter % 12 / 3;
                this.frame.Y = num1 * num5;
            }
            if (this.type == 399)
            {
                this.frameCounter = (this.frameCounter + 0.25) % 4.0 + ((double)this.ai[0] == 0.0 ? 0.0 : 4.0);
                this.frame.Y = num1 * (int)this.frameCounter;
            }
            else if (this.type == 520)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    this.spriteDirection = this.direction;
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 1.0;
                    if (this.frameCounter > 6.0)
                    {
                        if ((double)Math.Abs(this.velocity.X) < 0.200000002980232)
                        {
                            this.frame.Y = 0;
                            this.frameCounter = 0.0;
                        }
                        else
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                    }
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = num1;
                    if ((double)this.velocity.X == 0.0)
                        this.frame.Y = 0;
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1;
                }
            }
            if (this.type == 398)
            {
                if ((double)this.ai[0] <= 0.0)
                {
                    this.frame.Y = 0;
                }
                else
                {
                    if (this.frame.Y == 0)
                    {
                        Gore.NewGore(this.position + new Vector2(-10f, -15f), this.velocity, 619, 1f);
                        Gore.NewGore(this.position + new Vector2(10f, -15f), this.velocity, 620, 1f);
                        Gore.NewGore(this.position + new Vector2(-10f, 15f), this.velocity, 621, 1f);
                        Gore.NewGore(this.position + new Vector2(10f, 15f), this.velocity, 622, 1f);
                        for (int index = 0; index < 50; ++index)
                        {
                            this.frame.Y = num1;
                            Dust.NewDust(this.position, this.width, this.height, 209, 0.0f, 0.0f, 0, new Color(), 1f);
                        }
                    }
                    ++this.frameCounter;
                    if (this.frameCounter >= 30.0)
                        this.frameCounter = 6.0;
                    int num3 = (int)this.frameCounter % 30 / 6;
                    this.frame.Y = num1 * num3;
                }
            }
            if (this.type == 397)
            {
                int num3 = (int)this.frameCounter / 7;
                this.frame.Y = num1 * num3;
            }
            if (this.type == 400)
            {
                ++this.frameCounter;
                if ((double)this.ai[0] == 0.0 || (double)this.ai[0] == 3.0)
                    ++this.frameCounter;
                if (this.frameCounter >= 16.0)
                    this.frameCounter = 0.0;
                int num3 = (int)this.frameCounter % 16 / 4;
                this.frame.Y = num1 * num3;
            }
            if (this.type == 437)
            {
                ++this.frameCounter;
                if (this.frameCounter >= 20.0)
                    this.frameCounter = 0.0;
                int num3 = (int)this.frameCounter % 20 / 5;
                this.frame.Y = num1 * num3;
            }
            if (this.type == 438)
            {
                ++this.frameCounter;
                if ((double)this.ai[1] == 1.0)
                    ++this.frameCounter;
                if (this.frameCounter >= 49.0)
                    this.frameCounter = 0.0;
                int num3 = (int)this.frameCounter % 49 / 7;
                if (num3 >= 4)
                    num3 = 6 - num3;
                this.frame.Y = num1 * num3;
            }
            if (this.type == 439 || this.type == 440)
            {
                switch ((int)this.localAI[2])
                {
                    case 0:
                        if (this.frameCounter >= 15.0)
                        {
                            this.frameCounter = 0.0;
                            this.frame.Y = 0;
                            break;
                        }
                        if (this.frame.Y != 0)
                        {
                            this.frame.Y = ((int)this.frameCounter / 5 + 4) * num1;
                            break;
                        }
                        break;
                    case 10:
                        if (this.frameCounter >= 15.0)
                            this.frameCounter = 0.0;
                        this.frame.Y = ((int)this.frameCounter / 5 + 4) * num1;
                        break;
                    case 1:
                        if (this.frameCounter >= 15.0)
                        {
                            this.frameCounter = 0.0;
                            this.frame.Y = num1;
                            break;
                        }
                        if (this.frame.Y != num1)
                        {
                            this.frame.Y = ((int)this.frameCounter / 5 + 10) * num1;
                            break;
                        }
                        break;
                    case 11:
                        if (this.frameCounter >= 15.0)
                            this.frameCounter = 0.0;
                        this.frame.Y = ((int)this.frameCounter / 5 + 10) * num1;
                        break;
                    case 2:
                        if (this.frameCounter >= 15.0)
                        {
                            this.frameCounter = 0.0;
                            this.frame.Y = num1 * 2;
                            break;
                        }
                        if (this.frame.Y != num1 * 2)
                        {
                            this.frame.Y = ((int)this.frameCounter / 5 + 7) * num1;
                            break;
                        }
                        break;
                    case 12:
                        if (this.frameCounter >= 15.0)
                            this.frameCounter = 0.0;
                        this.frame.Y = ((int)this.frameCounter / 5 + 7) * num1;
                        break;
                    case 13:
                        if (this.frameCounter >= 15.0)
                            this.frameCounter = 0.0;
                        this.frame.Y = ((int)this.frameCounter / 5 + 13) * num1;
                        break;
                }
                ++this.frameCounter;
            }
            if (this.type == 521)
            {
                if ((double)this.velocity.X < 0.0)
                    this.direction = -1;
                else
                    this.direction = 1;
                if (this.direction != 0)
                    this.spriteDirection = this.direction;
                this.rotation = (float)Math.Atan2((double)this.velocity.Y * (double)this.spriteDirection, (double)this.velocity.X * (double)this.spriteDirection) + this.velocity.X * 0.1f;
                if (++this.frameCounter >= 5.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = 0;
                }
            }
            if (this.type == 523 && ++this.frameCounter >= 6.0)
            {
                this.frame.Y += num1;
                this.frameCounter = 0.0;
                if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                    this.frame.Y = 0;
            }
            if (this.type == 371 || this.type == 372 || this.type == 373)
                this.frame.Y = num1;
            if (this.type == 370)
            {
                if ((double)this.ai[0] == 0.0 || (double)this.ai[0] == 5.0)
                {
                    int num3 = 5;
                    if ((double)this.ai[0] == 5.0)
                        num3 = 4;
                    ++this.frameCounter;
                    if (this.frameCounter > (double)num3)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                    }
                    if (this.frame.Y >= num1 * 6)
                        this.frame.Y = 0;
                }
                if ((double)this.ai[0] == 1.0 || (double)this.ai[0] == 6.0)
                    this.frame.Y = (double)this.ai[2] >= 10.0 ? num1 * 7 : num1 * 6;
                if ((double)this.ai[0] == 2.0 || (double)this.ai[0] == 7.0)
                    this.frame.Y = (double)this.ai[2] >= 10.0 ? num1 * 7 : num1 * 6;
                if ((double)this.ai[0] == 3.0 || (double)this.ai[0] == 8.0 || (double)this.ai[0] == -1.0)
                {
                    int num3 = 90;
                    if ((double)this.ai[2] < (double)(num3 - 30) || (double)this.ai[2] > (double)(num3 - 10))
                    {
                        ++this.frameCounter;
                        if (this.frameCounter > 5.0)
                        {
                            this.frameCounter = 0.0;
                            this.frame.Y += num1;
                        }
                        if (this.frame.Y >= num1 * 6)
                            this.frame.Y = 0;
                    }
                    else
                    {
                        this.frame.Y = num1 * 6;
                        if ((double)this.ai[2] > (double)(num3 - 20) && (double)this.ai[2] < (double)(num3 - 15))
                            this.frame.Y = num1 * 7;
                    }
                }
                if ((double)this.ai[0] == 4.0 || (double)this.ai[0] == 9.0)
                {
                    int num3 = 180;
                    if ((double)this.ai[2] < (double)(num3 - 60) || (double)this.ai[2] > (double)(num3 - 20))
                    {
                        ++this.frameCounter;
                        if (this.frameCounter > 5.0)
                        {
                            this.frameCounter = 0.0;
                            this.frame.Y += num1;
                        }
                        if (this.frame.Y >= num1 * 6)
                            this.frame.Y = 0;
                    }
                    else
                    {
                        this.frame.Y = num1 * 6;
                        if ((double)this.ai[2] > (double)(num3 - 50) && (double)this.ai[2] < (double)(num3 - 25))
                            this.frame.Y = num1 * 7;
                    }
                }
            }
            if (this.type == 359 || this.type == 360)
            {
                if ((double)this.velocity.Y > 1.0)
                {
                    ++this.frameCounter;
                    int num3 = 6;
                    if (this.frameCounter < (double)num3)
                    {
                        this.frame.Y = num1 * 4;
                    }
                    else
                    {
                        this.frame.Y = num1 * 5;
                        if (this.frameCounter >= (double)(num3 * 2 - 1))
                            this.frameCounter = 0.0;
                    }
                }
                else
                {
                    ++this.frameCounter;
                    int num3 = 10;
                    if (this.frameCounter < (double)num3)
                        this.frame.Y = 0;
                    else if (this.frameCounter < (double)(num3 * 2))
                        this.frame.Y = num1;
                    else if (this.frameCounter < (double)(num3 * 3))
                        this.frame.Y = num1 * 2;
                    else if (this.frameCounter < (double)(num3 * 4))
                        this.frame.Y = num1 * 3;
                    else if (this.frameCounter < (double)(num3 * 5))
                    {
                        this.frame.Y = num1 * 2;
                    }
                    else
                    {
                        this.frame.Y = num1;
                        if (this.frameCounter >= (double)(num3 * 6 - 1))
                            this.frameCounter = 0.0;
                    }
                }
            }
            if (this.type == 327)
            {
                if ((double)this.ai[3] == 0.0)
                {
                    if (this.frame.Y > num1 * 5)
                        ++this.frameCounter;
                    else if (this.frame.Y > 0)
                        --this.frameCounter;
                }
                else if ((double)this.ai[3] == 1.0)
                {
                    if (this.frame.Y > num1 * 10)
                        ++this.frameCounter;
                    else if (this.frame.Y > num1 * 4)
                        --this.frameCounter;
                    else if (this.frame.Y < num1 * 4)
                        ++this.frameCounter;
                }
                else if ((double)this.ai[3] == 2.0)
                {
                    if (this.frame.Y < num1 * 2)
                        --this.frameCounter;
                    else if (this.frame.Y > num1 * 8)
                        --this.frameCounter;
                    else if (this.frame.Y < num1 * 8)
                        ++this.frameCounter;
                }
                if (this.frameCounter > 6.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                    if (this.frame.Y > num1 * 11)
                        this.frame.Y = 0;
                }
                if (this.frameCounter < 0.0)
                {
                    this.frameCounter = 6.0;
                    this.frame.Y -= num1;
                    if (this.frame.Y < 0)
                        this.frame.Y = num1 * 11;
                }
            }
            if (this.type == 347)
            {
                ++this.frameCounter;
                if (this.frameCounter > 1.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y > num1 * 3)
                    this.frame.Y = 0;
            }
            if (this.type == 346)
            {
                if ((double)this.ai[0] == 1.0)
                {
                    this.spriteDirection = this.direction;
                    ++this.frameCounter;
                    if (this.frameCounter > 2.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y > num1 * 8)
                        this.frame.Y = num1 * 6;
                    if (this.frame.Y < num1 * 6)
                        this.frame.Y = num1 * 6;
                }
                else if ((double)this.velocity.X == 0.0)
                {
                    this.frame.Y = this.frame.Y;
                    this.frameCounter = 0.0;
                }
                else
                {
                    this.spriteDirection = this.direction;
                    ++this.frameCounter;
                    this.frameCounter += (double)Math.Abs(this.velocity.X) / 2.0;
                    if (this.frameCounter > 4.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y > num1 * 5)
                        this.frame.Y = num1;
                    if (this.frame.Y < num1)
                        this.frame.Y = num1;
                }
            }
            if (this.type == 352)
            {
                ++this.frameCounter;
                if (this.frameCounter > 3.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y > num1 * 5)
                    this.frame.Y = 0;
            }
            if (this.type == 345)
            {
                if ((double)this.ai[0] == 0.0)
                    this.frame.Y = (double)this.ai[3] < 0.0 ? ((double)this.velocity.X >= 0.0 ? num1 * 2 : num1) : 0;
                else if ((double)this.ai[0] == 1.0)
                {
                    ++this.frameCounter;
                    if (this.frameCounter > 5.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                    }
                    if (this.frame.Y > num1 * 4)
                        this.frame.Y = num1 * 3;
                    if (this.frame.Y < num1 * 3)
                        this.frame.Y = num1 * 3;
                }
                else if ((double)this.ai[0] == 2.0)
                    this.frame.Y = num1 * 5;
            }
            if (this.type == 344)
            {
                if ((double)this.velocity.X == 0.0)
                {
                    ++this.frameCounter;
                    if (this.frameCounter > 2.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                    }
                    if (this.frame.Y > num1 * 9)
                        this.frame.Y = 0;
                }
                else
                {
                    ++this.frameCounter;
                    if (this.frameCounter > 3.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                    }
                    if (this.frame.Y > num1 * 9)
                        this.frame.Y = 0;
                }
            }
            if (this.type == 325)
            {
                if ((double)this.velocity.X == 0.0)
                {
                    ++this.frameCounter;
                    if (this.frameCounter > 4.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                    }
                    if (this.frame.Y > num1 * 4)
                        this.frame.Y = 0;
                }
                else
                {
                    ++this.frameCounter;
                    if (this.frameCounter > 4.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                    }
                    if (this.frame.Y < num1 * 5)
                        this.frame.Y = num1 * 5;
                    if (this.frame.Y > num1 * 9)
                        this.frame.Y = num1 * 5;
                }
            }
            if (this.type == 490)
            {
                this.rotation = this.velocity.X * 0.15f;
                ++this.frameCounter;
                if (this.frameCounter > 6.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                }
                if (this.frame.Y >= num1 * Main.npcFrameCount[this.type])
                    this.frame.Y = 0;
            }
            else if (this.type == 266)
            {
                ++this.frameCounter;
                if (this.frameCounter > 6.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                }
                if ((double)this.ai[0] >= 0.0)
                {
                    if (this.frame.Y > num1 * 3)
                        this.frame.Y = 0;
                }
                else
                {
                    if (this.frame.Y < num1 * 4)
                        this.frame.Y = num1 * 4;
                    if (this.frame.Y > num1 * 7)
                        this.frame.Y = num1 * 4;
                }
            }
            else if (this.type == 262)
            {
                ++this.frameCounter;
                if (this.frameCounter > 6.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                }
                if (this.life > this.lifeMax / 2)
                {
                    if (this.frame.Y > num1 * 3)
                        this.frame.Y = 0;
                }
                else
                {
                    if (this.frame.Y < num1 * 4)
                        this.frame.Y = num1 * 4;
                    if (this.frame.Y > num1 * 7)
                        this.frame.Y = num1 * 4;
                }
            }
            else if (this.type >= 305 && this.type <= 309)
            {
                if ((double)this.velocity.Y == 0.0)
                    this.spriteDirection = this.direction;
                this.frame.Y = (double)this.velocity.Y >= -3.0 ? ((double)this.velocity.Y > 0.0 ? ((double)this.velocity.Y >= 2.0 ? num1 : num1 * 3) : 0) : num1 * 5;
                this.rotation = this.velocity.X * 0.1f;
            }
            else if (this.type == 263)
            {
                if ((double)this.velocity.X == 0.0 && (double)this.velocity.Y == 0.0)
                {
                    if (this.frame.Y > 0)
                    {
                        this.frameCounter = this.frameCounter + 1.0;
                        if (this.frameCounter > 4.0)
                        {
                            this.frameCounter = 0.0;
                            this.frame.Y -= num1;
                        }
                    }
                }
                else if (this.frame.Y < 2)
                {
                    this.frameCounter = this.frameCounter + 1.0;
                    if (this.frameCounter > 4.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                    }
                }
            }
            else if (this.type == 244)
            {
                this.frameCounter = this.frameCounter + 1.0;
                if (num2 > 0)
                    ++this.frameCounter;
                if (num2 == 4)
                    ++this.frameCounter;
                if (this.frameCounter >= 8.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= num1 * Main.npcFrameCount[this.type])
                    this.frame.Y = 0;
            }
            else if (this.type == 289)
            {
                ++this.frameCounter;
                if (this.frameCounter < 2.0)
                    this.frame.Y = 0;
                else if (this.frameCounter < 3.0)
                {
                    this.frame.Y = num1;
                }
                else
                {
                    this.frame.Y = num1 * 2;
                    this.frameCounter = 0.0;
                }
                if ((double)this.ai[3] == 1.0)
                    this.frame.Y += num1 * 3;
            }
            else if (this.type == 288)
            {
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter >= 6.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= num1 * Main.npcFrameCount[this.type])
                    this.frame.Y = 0;
            }
            else if (this.type == 355 || this.type == 358)
            {
                this.spriteDirection = this.direction;
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter < 4.0)
                {
                    this.frame.Y = 0;
                }
                else
                {
                    this.frame.Y = num1;
                    if (this.frameCounter >= 7.0)
                        this.frameCounter = 0.0;
                }
                if ((double)this.localAI[2] <= 0.0)
                    this.frame.Y += num1 * 2;
            }
            else if (this.type == 356 || this.type == 444)
            {
                int num3 = 7;
                this.rotation = this.velocity.X * 0.3f;
                this.spriteDirection = this.direction;
                this.frameCounter = this.frameCounter + 1.0 + ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y)) / 2.0;
                if (this.frameCounter < (double)num3)
                    this.frame.Y = 0;
                else if (this.frameCounter < (double)(num3 * 2))
                    this.frame.Y = num1;
                else if (this.frameCounter < (double)(num3 * 3))
                {
                    this.frame.Y = num1 * 2;
                }
                else
                {
                    this.frame.Y = num1;
                    if (this.frameCounter >= (double)(num3 * 4 - 1))
                        this.frameCounter = 0.0;
                }
                if (this.type != 444)
                    this.frame.Y += (int)((double)(num1 * 3) * ((double)this.ai[2] - 1.0));
            }
            else if (this.type == 357 || this.type == 448 || this.type == 484)
            {
                this.localAI[0] = -2f;
                if ((double)this.velocity.Y == 0.0)
                {
                    this.rotation = 0.0f;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = num1;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        ++this.frameCounter;
                        if (this.frameCounter > 12.0)
                        {
                            this.frameCounter = 0.0;
                            this.frame.Y += num1;
                            if (this.frame.Y > num1)
                                this.frame.Y = 0;
                        }
                    }
                }
                else
                {
                    this.rotation += (float)this.direction * 0.1f;
                    this.frame.Y = num1;
                }
                int x = (int)this.Center.X / 16;
                int y = (int)this.position.Y / 16;
                if (WorldGen.InWorld(x, y, 0) && Main.tile[x, y] != null)
                {
                    if ((int)Main.tile[x, y].slope() == 0)
                        ++y;
                    if ((int)Main.tile[x, y].slope() == 1)
                    {
                        this.rotation = 0.785f;
                        this.localAI[0] = 0.0f;
                    }
                    else if ((int)Main.tile[x, y].slope() == 2)
                    {
                        this.rotation = -0.785f;
                        this.localAI[0] = 0.0f;
                    }
                }
            }
            else if (this.type >= 485 && this.type <= 487)
            {
                this.spriteDirection = this.direction;
                this.localAI[0] = -2f;
                if ((double)this.velocity.Y == 0.0)
                {
                    this.rotation = 0.0f;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = num1;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter += (double)Math.Abs(this.velocity.X * 5f);
                        if (this.frameCounter > 10.0)
                        {
                            this.frameCounter = 0.0;
                            this.frame.Y += num1;
                            if (this.frame.Y > num1 * 3)
                                this.frame.Y = 0;
                        }
                    }
                }
                else
                {
                    this.rotation += (float)this.direction * 0.1f;
                    this.frame.Y = num1;
                }
                int index1 = (int)this.Center.X / 16;
                int index2 = (int)this.position.Y / 16;
                if (Main.tile[index1, index2] != null)
                {
                    if ((int)Main.tile[index1, index2].slope() == 0)
                        ++index2;
                    if ((int)Main.tile[index1, index2].slope() == 1)
                    {
                        this.rotation = 0.785f;
                        this.localAI[0] = 0.0f;
                    }
                    else if ((int)Main.tile[index1, index2].slope() == 2)
                    {
                        this.rotation = -0.785f;
                        this.localAI[0] = 0.0f;
                    }
                }
            }
            else if (this.type == 250 || this.type == 264 || this.type == 268)
            {
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter >= 6.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= num1 * Main.npcFrameCount[this.type])
                    this.frame.Y = 0;
            }
            else if (this.type == 245)
            {
                if ((double)this.ai[0] == 0.0)
                    this.frame.Y = (double)this.ai[1] >= -16.0 ? ((double)this.ai[1] >= -12.0 ? ((double)this.ai[1] >= -8.0 ? ((double)this.ai[1] >= -4.0 ? ((double)this.ai[1] >= 0.0 ? 0 : num1 * 4) : num1 * 3) : num1 * 2) : num1) : 0;
                else if ((double)this.ai[0] == 1.0)
                    this.frame.Y = 1;
            }
            else if (this.type == 246)
            {
                if ((double)this.ai[0] == 0.0)
                    this.frame.Y = (double)this.localAI[0] != 1.0 ? 0 : num1;
                else if ((double)this.ai[0] == 1.0)
                {
                    this.frame.Y = (double)this.localAI[0] != 1.0 ? 0 : num1;
                    if ((double)this.localAI[1] == -1.0)
                        this.frame.Y += num1 * 4;
                    if ((double)this.localAI[1] == 1.0)
                        this.frame.Y += num1 * 2;
                }
            }
            else if (this.type == 249)
                this.frame.Y = (double)this.localAI[0] != 1.0 ? 0 : num1;
            else if (this.type == 141)
            {
                this.spriteDirection = this.direction;
                if ((double)this.velocity.Y != 0.0)
                {
                    this.frame.Y = num1 * 2;
                }
                else
                {
                    this.frameCounter = this.frameCounter + 1.0;
                    if (this.frameCounter >= 8.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y > num1)
                        this.frame.Y = 0;
                }
            }
            else if (this.type == 243)
            {
                if (this.frameCounter < 0.0)
                {
                    if ((double)this.velocity.Y == 0.0)
                    {
                        ++this.frameCounter;
                        if (this.frameCounter < -12.0)
                        {
                            if (this.frame.Y > num1 * 9)
                                this.frame.Y = num1 * 11;
                        }
                        else if (this.frameCounter < -6.0)
                        {
                            if (this.frame.Y > num1 * 9)
                                this.frame.Y = num1 * 12;
                        }
                        else if (this.frameCounter < 0.0)
                        {
                            this.frameCounter = 0.0;
                            if (this.frame.Y > num1 * 9)
                                this.frame.Y = num1 * 11;
                        }
                    }
                    else
                    {
                        this.frameCounter = -18.0;
                        this.frame.Y = (double)this.velocity.Y >= 0.0 ? num1 * 13 : num1 * 14;
                    }
                }
                else
                {
                    this.spriteDirection = this.direction;
                    this.frameCounter += (double)Math.Abs(this.velocity.X * 1.1f);
                    if (this.frameCounter >= 6.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                        if (this.frame.Y > num1 * 9)
                            this.frame.Y = 0;
                    }
                    if ((double)this.velocity.Y < -2.0 || (double)this.velocity.Y > 5.0)
                        this.frameCounter = -18.0;
                }
            }
            else if (this.type == 222)
            {
                ++this.frameCounter;
                if ((double)this.localAI[0] == 1.0)
                {
                    if (this.frameCounter > 4.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y >= num1 * 4)
                        this.frame.Y = 0;
                }
                else
                {
                    if (this.frameCounter > 4.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y < num1 * 4)
                        this.frame.Y = num1 * 4;
                    if (this.frame.Y >= num1 * 12)
                        this.frame.Y = num1 * 4;
                }
            }
            else if (this.type == 164 || this.type == 239 || this.type == 530)
            {
                if ((double)this.velocity.Y != 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = (double)this.velocity.Y >= 0.0 ? 0 : num1 * 4;
                }
                else
                {
                    this.spriteDirection = this.direction;
                    this.frameCounter += (double)Math.Abs(this.velocity.X) * 1.10000002384186;
                    if (this.frameCounter < 6.0)
                        this.frame.Y = num1;
                    else if (this.frameCounter < 12.0)
                        this.frame.Y = num1 * 2;
                    else if (this.frameCounter < 18.0)
                        this.frame.Y = num1 * 3;
                    else
                        this.frameCounter = 0.0;
                }
            }
            else if (this.type == 236)
            {
                if ((double)this.velocity.Y == 0.0)
                    this.spriteDirection = this.direction;
                else
                    this.frame.Y = 0;
                this.frameCounter += (double)Math.Abs(this.velocity.X);
                if (this.frameCounter > 6.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y > num1 || (double)this.velocity.Y != 0.0)
                    this.frame.Y = 0;
            }
            else if (this.type == 165 || this.type == 237 || (this.type == 238 || this.type == 240) || this.type == 531)
            {
                float num3 = 0.5f;
                if (this.type == 531)
                    num3 = 0.4f;
                this.frameCounter += ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y)) * (double)num3;
                if (this.frameCounter < 6.0)
                    this.frame.Y = 0;
                else if (this.frameCounter < 12.0)
                    this.frame.Y = num1;
                else if (this.frameCounter < 18.0)
                    this.frame.Y = num1 * 2;
                else if (this.frameCounter < 24.0)
                    this.frame.Y = num1 * 3;
                else
                    this.frameCounter = 0.0;
            }
            else if (this.type == 195)
                this.frame.Y = (double)this.ai[0] >= 3.0 ? ((double)this.ai[0] >= 6.0 ? ((double)this.ai[0] >= 9.0 ? ((double)this.ai[0] >= 12.0 ? ((double)this.ai[0] >= 15.0 ? num1 * 5 : num1 * 4) : num1 * 3) : num1 * 2) : num1) : 0;
            else if (this.type == 174)
                this.frame.Y = (double)this.velocity.Y != 0.0 ? ((double)this.velocity.Y >= -1.5 ? ((double)this.velocity.Y <= 1.5 ? num1 * 2 : num1 * 3) : num1) : 0;
            else if (this.type == 177)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    ++this.frameCounter;
                    if (this.frameCounter >= 10.0)
                    {
                        this.frameCounter = 30.0;
                        this.frame.Y = 0;
                    }
                    else
                        this.frame.Y = num1;
                }
                else if ((double)this.velocity.Y < 0.0)
                {
                    this.frame.Y = num1 * 2;
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 2;
                }
            }
            else if (this.type == 163)
            {
                if ((double)this.velocity.Y != 0.0)
                {
                    this.frameCounter = -12.0;
                    this.frame.Y = (double)this.velocity.Y >= 0.0 ? num1 * 6 : num1 * 5;
                }
                else
                {
                    this.spriteDirection = this.direction;
                    this.frameCounter += (double)Math.Abs(this.velocity.X) * 1.10000002384186;
                    if (this.frameCounter < -6.0)
                        this.frame.Y = num1 * 6;
                    else if (this.frameCounter < 0.0)
                        this.frame.Y = num1 * 7;
                    else if (this.frameCounter < 6.0)
                        this.frame.Y = num1;
                    else if (this.frameCounter < 12.0)
                        this.frame.Y = num1 * 2;
                    else if (this.frameCounter < 18.0)
                        this.frame.Y = num1 * 3;
                    else
                        this.frameCounter = 0.0;
                }
            }
            else if (this.type == 143)
            {
                if ((double)this.velocity.Y > 0.0)
                    ++this.frameCounter;
                else if ((double)this.velocity.Y < 0.0)
                    --this.frameCounter;
                if (this.frameCounter < 6.0)
                    this.frame.Y = num1;
                else if (this.frameCounter < 12.0)
                    this.frame.Y = num1 * 2;
                else if (this.frameCounter < 18.0)
                    this.frame.Y = num1 * 3;
                if (this.frameCounter < 0.0)
                    this.frameCounter = 0.0;
                if (this.frameCounter > 17.0)
                    this.frameCounter = 17.0;
            }
            else if (this.type == 144)
            {
                if ((double)this.velocity.X == 0.0 && (double)this.velocity.Y == 0.0)
                {
                    ++this.localAI[3];
                    if ((double)this.localAI[3] < 6.0)
                        this.frame.Y = 0;
                    else if ((double)this.localAI[3] < 12.0)
                        this.frame.Y = num1;
                    if ((double)this.localAI[3] >= 11.0)
                        this.localAI[3] = 0.0f;
                }
                else
                {
                    if ((double)this.velocity.Y > 0.0)
                        ++this.frameCounter;
                    else if ((double)this.velocity.Y < 0.0)
                        --this.frameCounter;
                    if (this.frameCounter < 6.0)
                        this.frame.Y = num1 * 2;
                    else if (this.frameCounter < 12.0)
                        this.frame.Y = num1 * 3;
                    else if (this.frameCounter < 18.0)
                        this.frame.Y = num1 * 4;
                    if (this.frameCounter < 0.0)
                        this.frameCounter = 0.0;
                    if (this.frameCounter > 17.0)
                        this.frameCounter = 17.0;
                }
            }
            else if (this.type == 145)
            {
                if ((double)this.velocity.X == 0.0 && (double)this.velocity.Y == 0.0)
                {
                    if ((double)this.ai[2] < 4.0)
                        this.frame.Y = 0;
                    else if ((double)this.ai[2] < 8.0)
                        this.frame.Y = num1;
                    else if ((double)this.ai[2] < 12.0)
                        this.frame.Y = num1 * 2;
                    else if ((double)this.ai[2] < 16.0)
                        this.frame.Y = num1 * 3;
                }
                else
                {
                    if ((double)this.velocity.Y > 0.0)
                        ++this.frameCounter;
                    else if ((double)this.velocity.Y < 0.0)
                        --this.frameCounter;
                    if (this.frameCounter < 6.0)
                        this.frame.Y = num1 * 4;
                    else if (this.frameCounter < 12.0)
                        this.frame.Y = num1 * 5;
                    else if (this.frameCounter < 18.0)
                        this.frame.Y = num1 * 6;
                    if (this.frameCounter < 0.0)
                        this.frameCounter = 0.0;
                    if (this.frameCounter > 17.0)
                        this.frameCounter = 17.0;
                }
            }
            else if (this.type == 50)
            {
                if ((double)this.velocity.Y != 0.0)
                {
                    if (this.frame.Y < num1 * 4)
                    {
                        this.frame.Y = num1 * 4;
                        this.frameCounter = 0.0;
                    }
                    if (++this.frameCounter >= 4.0)
                        this.frame.Y = num1 * 5;
                }
                else
                {
                    if (this.frame.Y >= num1 * 5)
                    {
                        this.frame.Y = num1 * 4;
                        this.frameCounter = 0.0;
                    }
                    ++this.frameCounter;
                    if (num2 > 0)
                        ++this.frameCounter;
                    if (num2 == 4)
                        ++this.frameCounter;
                    if (this.frameCounter >= 8.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                        if (this.frame.Y >= num1 * 4)
                            this.frame.Y = 0;
                    }
                }
            }
            else if (this.type == 170 || this.type == 171 || this.type == 180)
            {
                this.spriteDirection = this.direction;
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter >= 4.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= num1 * 14)
                    this.frame.Y = 0;
            }
            else if (this.type == 135)
                this.frame.Y = (double)this.ai[2] != 0.0 ? num1 : 0;
            else if (this.type == 85 || this.type == 341)
            {
                if ((double)this.ai[0] == 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else
                {
                    int num3 = 3;
                    if ((double)this.velocity.Y == 0.0)
                        --this.frameCounter;
                    else
                        ++this.frameCounter;
                    if (this.frameCounter < 0.0)
                        this.frameCounter = 0.0;
                    if (this.frameCounter > (double)(num3 * 4))
                        this.frameCounter = (double)(num3 * 4);
                    if (this.frameCounter < (double)num3)
                        this.frame.Y = num1;
                    else if (this.frameCounter < (double)(num3 * 2))
                        this.frame.Y = num1 * 2;
                    else if (this.frameCounter < (double)(num3 * 3))
                        this.frame.Y = num1 * 3;
                    else if (this.frameCounter < (double)(num3 * 4))
                        this.frame.Y = num1 * 4;
                    else if (this.frameCounter < (double)(num3 * 5))
                        this.frame.Y = num1 * 5;
                    else if (this.frameCounter < (double)(num3 * 6))
                        this.frame.Y = num1 * 4;
                    else if (this.frameCounter < (double)(num3 * 7))
                    {
                        this.frame.Y = num1 * 3;
                    }
                    else
                    {
                        this.frame.Y = num1 * 2;
                        if (this.frameCounter >= (double)(num3 * 8))
                            this.frameCounter = (double)num3;
                    }
                }
                if ((double)this.ai[3] == 2.0)
                    this.frame.Y += num1 * 6;
                else if ((double)this.ai[3] == 3.0)
                    this.frame.Y += num1 * 12;
                else if ((double)this.ai[3] == 4.0)
                    this.frame.Y += num1 * 18;
            }
            else if (this.type == 113 || this.type == 114)
            {
                if ((double)this.ai[2] == 0.0)
                {
                    this.frameCounter = this.frameCounter + 1.0;
                    if (this.frameCounter >= 12.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y >= num1 * Main.npcFrameCount[this.type])
                        this.frame.Y = 0;
                }
                else
                {
                    this.frame.Y = 0;
                    this.frameCounter = -60.0;
                }
            }
            else if (this.type == 61)
            {
                this.spriteDirection = this.direction;
                this.rotation = this.velocity.X * 0.1f;
                if ((double)this.velocity.X == 0.0 && (double)this.velocity.Y == 0.0)
                {
                    this.frame.Y = 0;
                    this.frameCounter = 0.0;
                }
                else
                {
                    ++this.frameCounter;
                    if (this.frameCounter < 4.0)
                    {
                        this.frame.Y = num1;
                    }
                    else
                    {
                        this.frame.Y = num1 * 2;
                        if (this.frameCounter >= 7.0)
                            this.frameCounter = 0.0;
                    }
                }
            }
            else if (this.type == 252 || this.type == 301)
            {
                if (this.type == 301)
                {
                    if ((double)this.velocity.Y == 0.0)
                    {
                        this.spriteDirection = -this.direction;
                    }
                    else
                    {
                        if ((double)this.velocity.X > 0.5)
                            this.spriteDirection = -1;
                        if ((double)this.velocity.X < -0.5)
                            this.spriteDirection = 1;
                    }
                }
                else
                {
                    if ((double)this.velocity.X > 0.5)
                        this.spriteDirection = 1;
                    if ((double)this.velocity.X < -0.5)
                        this.spriteDirection = -1;
                }
                this.rotation = this.velocity.X * 0.1f;
                if ((double)this.velocity.X == 0.0 && (double)this.velocity.Y == 0.0)
                {
                    this.frame.Y = 0;
                    this.frameCounter = 0.0;
                }
                else
                {
                    ++this.frameCounter;
                    if (this.frameCounter > 4.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                    }
                    if (this.frame.Y > num1 * 4 || this.frame.Y == 0)
                        this.frame.Y = num1;
                }
            }
            else if (this.type == 122)
            {
                this.spriteDirection = this.direction;
                this.rotation = this.velocity.X * 0.05f;
                if ((double)this.ai[3] > 0.0)
                {
                    int num3 = (int)((double)this.ai[3] / 8.0);
                    this.frameCounter = 0.0;
                    this.frame.Y = (num3 + 3) * num1;
                }
                else
                {
                    this.frameCounter = this.frameCounter + 1.0;
                    if (this.frameCounter >= 8.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y >= num1 * 3)
                        this.frame.Y = 0;
                }
            }
            else if (this.type == 74 || this.type == 297 || (this.type == 298 || this.type == 442))
            {
                this.spriteDirection = this.direction;
                this.rotation = this.velocity.X * 0.1f;
                if ((double)this.velocity.X == 0.0 && (double)this.velocity.Y == 0.0)
                {
                    this.frame.Y = num1 * 4;
                    this.frameCounter = 0.0;
                }
                else
                {
                    this.frameCounter = this.frameCounter + 1.0;
                    if (this.frameCounter >= 4.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y >= num1 * Main.npcFrameCount[this.type])
                        this.frame.Y = 0;
                }
            }
            else if (this.type == 362 || this.type == 364)
            {
                this.spriteDirection = this.direction;
                if ((double)this.velocity.X == 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else
                {
                    this.frameCounter = this.frameCounter + 1.0;
                    if (this.frameCounter >= 4.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y >= num1 * 10)
                        this.frame.Y = num1 * 3;
                    if (this.frame.Y < num1 * 3)
                        this.frame.Y = num1 * 3;
                }
            }
            else if (this.type == 363 || this.type == 365)
            {
                this.spriteDirection = this.direction;
                if (this.wet)
                {
                    this.frameCounter = this.frameCounter + 1.0;
                    if (this.frameCounter >= 8.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y > num1 * 2)
                        this.frame.Y = num1;
                    if (this.frame.Y < num1)
                        this.frame.Y = num1;
                    this.rotation = 0.0f;
                }
                else if ((double)this.velocity.X == 0.0 && (double)this.velocity.Y == 0.0)
                {
                    this.frame.Y = num1;
                    this.frameCounter = 0.0;
                    this.rotation = 0.0f;
                }
                else
                {
                    this.rotation = this.velocity.X * 0.1f;
                    this.frameCounter = this.frameCounter + 1.0;
                    if (this.frameCounter >= 4.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y >= num1 * Main.npcFrameCount[this.type])
                        this.frame.Y = num1 * 11;
                    if (this.frame.Y < num1 * 11)
                        this.frame.Y = num1 * 11;
                }
            }
            else if (this.type == 62 || this.type == 66)
            {
                this.spriteDirection = this.direction;
                this.rotation = this.velocity.X * 0.1f;
                ++this.frameCounter;
                if (this.frameCounter < 6.0)
                {
                    this.frame.Y = 0;
                }
                else
                {
                    this.frame.Y = num1;
                    if (this.frameCounter >= 11.0)
                        this.frameCounter = 0.0;
                }
            }
            else if (this.type == 156)
            {
                this.spriteDirection = this.direction;
                this.rotation = this.velocity.X * 0.1f;
                ++this.frameCounter;
                if (this.frameCounter >= 20.0)
                    this.frameCounter = 0.0;
                this.frame.Y = (int)this.frameCounter / 4 * num1;
            }
            else if (this.type == 63 || this.type == 64 || (this.type == 103 || this.type == 242) || this.type == 256)
            {
                if ((this.type == 63 || this.type == 64 || (this.type == 103 || this.type == 242)) && (double)this.ai[1] == 1.0)
                {
                    ++this.frameCounter;
                    if (this.frameCounter > 4.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                    }
                    if (this.frame.Y > num1 * 6)
                        this.frame.Y = num1 * 4;
                    if (this.frame.Y >= num1 * 4)
                        return;
                    this.frame.Y = num1 * 4;
                    return;
                }
                ++this.frameCounter;
                if (this.frameCounter < 6.0)
                    this.frame.Y = 0;
                else if (this.frameCounter < 12.0)
                    this.frame.Y = num1;
                else if (this.frameCounter < 18.0)
                {
                    this.frame.Y = num1 * 2;
                }
                else
                {
                    this.frame.Y = num1 * 3;
                    if (this.frameCounter >= 23.0)
                        this.frameCounter = 0.0;
                }
            }
            else if (this.type == 221)
            {
                if ((double)this.localAI[2] == 1.0)
                {
                    if ((double)this.localAI[0] == 1.0)
                    {
                        this.frame.Y = 0;
                        this.localAI[0] = 0.0f;
                    }
                    this.frameCounter = this.frameCounter + 1.0;
                    if (this.frameCounter >= 8.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y >= num1 * Main.npcFrameCount[this.type])
                        this.frame.Y = num1 * Main.npcFrameCount[this.type] - num1;
                }
                else
                {
                    this.frameCounter = this.frameCounter + 1.0;
                    if (this.frameCounter >= 13.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y >= num1 * Main.npcFrameCount[this.type])
                        this.frame.Y = 0;
                }
            }
            else if (this.type == 2 || this.type == 23 || (this.type == 121 || this.type == 169) || (this.type == 190 || this.type == 191 || (this.type == 192 || this.type == 193)) || (this.type == 194 || this.type == 317 || this.type == 318))
            {
                if (this.type == 2 || this.type == 190 || (this.type == 191 || this.type == 192) || (this.type == 193 || this.type == 194 || (this.type == 317 || this.type == 318)))
                {
                    if ((double)this.velocity.X > 0.0)
                    {
                        this.spriteDirection = 1;
                        this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                    }
                    if ((double)this.velocity.X < 0.0)
                    {
                        this.spriteDirection = -1;
                        this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
                    }
                }
                else if (this.type == 2 || this.type == 121)
                {
                    if ((double)this.velocity.X > 0.0)
                        this.spriteDirection = 1;
                    if ((double)this.velocity.X < 0.0)
                        this.spriteDirection = -1;
                    this.rotation = this.velocity.X * 0.1f;
                }
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter >= 8.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= num1 * Main.npcFrameCount[this.type])
                    this.frame.Y = 0;
            }
            else if (this.type == 133)
            {
                if ((double)this.velocity.X > 0.0)
                {
                    this.spriteDirection = 1;
                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                }
                if ((double)this.velocity.X < 0.0)
                {
                    this.spriteDirection = -1;
                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
                }
                this.frameCounter = this.frameCounter + 1.0;
                this.frame.Y = this.frameCounter < 8.0 ? 0 : num1;
                if (this.frameCounter >= 16.0)
                {
                    this.frame.Y = 0;
                    this.frameCounter = 0.0;
                }
                if ((double)this.life < (double)this.lifeMax * 0.5)
                    this.frame.Y += num1 * 2;
            }
            else if (this.type == 116)
            {
                if ((double)this.velocity.X > 0.0)
                {
                    this.spriteDirection = 1;
                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                }
                if ((double)this.velocity.X < 0.0)
                {
                    this.spriteDirection = -1;
                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
                }
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter >= 5.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= num1 * Main.npcFrameCount[this.type])
                    this.frame.Y = 0;
            }
            else if (this.type == 75)
            {
                this.spriteDirection = (double)this.velocity.X <= 0.0 ? -1 : 1;
                this.rotation = this.velocity.X * 0.1f;
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter >= 4.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= num1 * Main.npcFrameCount[this.type])
                    this.frame.Y = 0;
            }
            else if (this.type == 157)
            {
                this.spriteDirection = this.direction;
                ++this.frameCounter;
                if (!this.wet)
                    ++this.frameCounter;
                int num3 = 5;
                if (this.frameCounter < (double)num3)
                    this.frame.Y = 0;
                else if (this.frameCounter < (double)(num3 * 2))
                    this.frame.Y = num1;
                else if (this.frameCounter < (double)(num3 * 3))
                    this.frame.Y = num1 * 2;
                else if (this.frameCounter < (double)(num3 * 4))
                    this.frame.Y = num1;
                else if (this.frameCounter < (double)(num3 * 5))
                    this.frame.Y = num1 * 3;
                else if (this.frameCounter < (double)(num3 * 6))
                    this.frame.Y = num1 * 4;
                else if (this.frameCounter < (double)(num3 * 7))
                    this.frame.Y = num1 * 5;
                else if (this.frameCounter < (double)(num3 * 8))
                    this.frame.Y = num1 * 4;
                else
                    this.frameCounter = 0.0;
            }
            else if (this.type == 55 || this.type == 57 || (this.type == 58 || this.type == 102) || (this.type == 241 || this.type == 465))
            {
                this.spriteDirection = this.direction;
                ++this.frameCounter;
                if (this.wet)
                {
                    if (this.frameCounter < 6.0)
                        this.frame.Y = 0;
                    else if (this.frameCounter < 12.0)
                        this.frame.Y = num1;
                    else if (this.frameCounter < 18.0)
                        this.frame.Y = num1 * 2;
                    else if (this.frameCounter < 24.0)
                        this.frame.Y = num1 * 3;
                    else
                        this.frameCounter = 0.0;
                }
                else if (this.frameCounter < 6.0)
                    this.frame.Y = num1 * 4;
                else if (this.frameCounter < 12.0)
                    this.frame.Y = num1 * 5;
                else
                    this.frameCounter = 0.0;
            }
            else if (this.type == 69)
            {
                if ((double)this.ai[0] < 190.0)
                {
                    ++this.frameCounter;
                    if (this.frameCounter >= 6.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                        if (this.frame.Y / num1 >= Main.npcFrameCount[this.type] - 1)
                            this.frame.Y = 0;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * (Main.npcFrameCount[this.type] - 1);
                }
            }
            else if (this.type == 155)
            {
                if ((double)this.velocity.Y > 0.0)
                {
                    this.frame.Y = num1 * 4;
                    this.frameCounter = 0.0;
                }
                else if ((double)this.velocity.Y < 0.0)
                {
                    this.frame.Y = num1 * 6;
                    this.frameCounter = 0.0;
                }
                else
                {
                    this.spriteDirection = this.direction;
                    this.frameCounter += (double)Math.Abs(this.velocity.X) * 0.400000005960464;
                    if (this.direction > 0 && (double)this.velocity.X < 0.0 || this.direction < 0 && (double)this.velocity.X > 0.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y = 0;
                    }
                    else if (this.frameCounter < 8.0)
                        this.frame.Y = num1 * 3;
                    else if (this.frameCounter < 16.0)
                        this.frame.Y = num1 * 6;
                    else if (this.frameCounter < 24.0)
                        this.frame.Y = num1 * 4;
                    else if (this.frameCounter < 32.0)
                        this.frame.Y = num1 * 5;
                    else
                        this.frameCounter = 0.0;
                }
            }
            else if (this.type == 329)
            {
                if ((double)this.velocity.Y > 0.0)
                {
                    this.frame.Y = num1 * 3;
                    this.frameCounter = 0.0;
                }
                else if ((double)this.velocity.Y < 0.0)
                {
                    this.frame.Y = num1 * 2;
                    this.frameCounter = 0.0;
                }
                else
                {
                    this.spriteDirection = this.direction;
                    this.frameCounter += (double)Math.Abs(this.velocity.X) * 0.400000005960464;
                    if (this.frameCounter > 4.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                        if (this.frame.Y < num1 * 2)
                            this.frame.Y = num1 * 2;
                        if (this.frame.Y > num1 * 9)
                            this.frame.Y = num1 * 2;
                    }
                }
            }
            else if (this.type == 86)
            {
                if ((double)this.velocity.Y == 0.0 || this.wet)
                    this.spriteDirection = (double)this.velocity.X >= -2.0 ? ((double)this.velocity.X <= 2.0 ? this.direction : 1) : -1;
                if ((double)this.velocity.Y != 0.0)
                {
                    this.frame.Y = num1 * 15;
                    this.frameCounter = 0.0;
                }
                else if ((double)this.velocity.X == 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else if ((double)Math.Abs(this.velocity.X) < 3.0)
                {
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                    if (this.frameCounter >= 6.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                        if (this.frame.Y / num1 >= 9)
                            this.frame.Y = num1;
                        if (this.frame.Y / num1 <= 0)
                            this.frame.Y = num1;
                    }
                }
                else
                {
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                    if (this.frameCounter >= 10.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                        if (this.frame.Y / num1 >= 15)
                            this.frame.Y = num1 * 9;
                        if (this.frame.Y / num1 <= 8)
                            this.frame.Y = num1 * 9;
                    }
                }
            }
            else if (this.type == 315)
            {
                if ((double)this.velocity.Y == 0.0 || this.wet)
                    this.spriteDirection = (double)this.velocity.X >= -1.0 ? ((double)this.velocity.X <= 1.0 ? this.direction : 1) : -1;
                if ((double)this.velocity.Y != 0.0)
                {
                    this.frame.Y = 0;
                    this.frameCounter = 0.0;
                }
                else
                {
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                    if (this.frameCounter >= 8.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                        if (this.frame.Y / num1 > 10)
                            this.frame.Y = num1;
                    }
                }
            }
            else if (this.type == (int)sbyte.MaxValue)
            {
                if ((double)this.ai[1] == 0.0)
                {
                    ++this.frameCounter;
                    if (this.frameCounter >= 12.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                        if (this.frame.Y / num1 >= 2)
                            this.frame.Y = 0;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 2;
                }
            }
            else if (this.type == 129)
            {
                if ((double)this.velocity.Y == 0.0)
                    this.spriteDirection = this.direction;
                ++this.frameCounter;
                if (this.frameCounter >= 2.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = 0;
                }
            }
            else if (this.type == 130)
            {
                if ((double)this.velocity.Y == 0.0)
                    this.spriteDirection = this.direction;
                ++this.frameCounter;
                if (this.frameCounter >= 8.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = 0;
                }
            }
            else if (this.type == 67 || this.type == 217 || (this.type == 218 || this.type == 219))
            {
                if ((double)this.velocity.Y == 0.0)
                    this.spriteDirection = this.direction;
                ++this.frameCounter;
                if (this.frameCounter >= 6.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = 0;
                }
            }
            else if (this.type == 220)
            {
                if ((double)this.velocity.Y == 0.0)
                    this.spriteDirection = this.direction;
                ++this.frameCounter;
                if (this.frameCounter >= 10.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = 0;
                }
            }
            else if (this.type == 109)
            {
                if ((double)this.velocity.Y == 0.0 && ((double)this.velocity.X <= 0.0 && this.direction < 0 || (double)this.velocity.X >= 0.0 && this.direction > 0))
                    this.spriteDirection = this.direction;
                this.frameCounter += (double)Math.Abs(this.velocity.X);
                if (this.frameCounter >= 7.0)
                {
                    this.frameCounter -= 7.0;
                    this.frame.Y += num1;
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = 0;
                }
            }
            else if (this.type == 83 || this.type == 84 || this.type == 179)
            {
                if ((double)this.ai[0] == 2.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else
                {
                    ++this.frameCounter;
                    if (this.frameCounter >= 4.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num1;
                        if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                            this.frame.Y = 0;
                    }
                }
            }
            else if (this.type == 72)
            {
                ++this.frameCounter;
                if (this.frameCounter >= 3.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                    if (this.frame.Y / num1 >= Main.npcFrameCount[this.type])
                        this.frame.Y = 0;
                }
            }
            else if (this.type == 65)
            {
                this.spriteDirection = this.direction;
                ++this.frameCounter;
                if (this.wet)
                {
                    if (this.frameCounter < 6.0)
                        this.frame.Y = 0;
                    else if (this.frameCounter < 12.0)
                        this.frame.Y = num1;
                    else if (this.frameCounter < 18.0)
                        this.frame.Y = num1 * 2;
                    else if (this.frameCounter < 24.0)
                        this.frame.Y = num1 * 3;
                    else
                        this.frameCounter = 0.0;
                }
            }
            else if (this.type == 224)
            {
                if ((double)this.velocity.X > 0.0)
                {
                    this.spriteDirection = 1;
                    this.rotation = this.velocity.Y * 0.2f;
                }
                if ((double)this.velocity.X < 0.0)
                {
                    this.spriteDirection = -1;
                    this.rotation = (float)(-(double)this.velocity.Y * 0.200000002980232);
                }
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter >= 6.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= num1 * 4)
                    this.frame.Y = 0;
            }
            else if (this.type == 150 || this.type == 151 || (this.type == 152 || this.type == 158) || this.type == 226)
            {
                if ((double)this.velocity.X > 0.0)
                    this.spriteDirection = 1;
                if ((double)this.velocity.X < 0.0)
                    this.spriteDirection = -1;
                this.rotation = this.velocity.X * 0.1f;
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter >= 6.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= num1 * 4)
                    this.frame.Y = 0;
            }
            else if (this.type == 48 || this.type == 49 || (this.type == 51 || this.type == 60) || (this.type == 82 || this.type == 93 || (this.type == 137 || this.type == 182)) || (this.type == 210 || this.type == 211 || (this.type == 253 || this.type == 316)))
            {
                if ((double)this.velocity.X > 0.0)
                    this.spriteDirection = 1;
                if ((double)this.velocity.X < 0.0)
                    this.spriteDirection = -1;
                this.rotation = this.velocity.X * 0.1f;
                if (this.type == 210 || this.type == 211)
                {
                    ++this.frameCounter;
                    this.rotation = this.velocity.X * 0.2f;
                }
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter >= 6.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= num1 * Main.npcFrameCount[this.type])
                    this.frame.Y = 0;
            }
            else if (this.type == 330)
            {
                if ((double)this.velocity.X > 0.0)
                    this.spriteDirection = 1;
                if ((double)this.velocity.X < 0.0)
                    this.spriteDirection = -1;
                this.rotation = this.velocity.X * 0.15f;
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter >= 8.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= num1 * Main.npcFrameCount[this.type])
                    this.frame.Y = 0;
            }
            else if (this.type == 42 || this.type >= 231 && this.type <= 235)
            {
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter < 2.0)
                    this.frame.Y = 0;
                else if (this.frameCounter < 4.0)
                    this.frame.Y = num1;
                else if (this.frameCounter < 6.0)
                    this.frame.Y = num1 * 2;
                else if (this.frameCounter < 8.0)
                    this.frame.Y = num1;
                else
                    this.frameCounter = 0.0;
            }
            else if (this.type == 205)
            {
                this.frameCounter = this.frameCounter + 0.5;
                if (this.frameCounter < 2.0)
                    this.frame.Y = 0;
                else if (this.frameCounter < 4.0)
                    this.frame.Y = num1;
                else if (this.frameCounter < 6.0)
                    this.frame.Y = num1 * 2;
                else if (this.frameCounter < 8.0)
                    this.frame.Y = num1;
                else
                    this.frameCounter = 0.0;
            }
            else if (this.type == 176)
            {
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter > 4.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y > num1)
                    this.frame.Y = 0;
            }
            else if (this.type == 43 || this.type == 56 || this.type == 175)
            {
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter < 6.0)
                    this.frame.Y = 0;
                else if (this.frameCounter < 12.0)
                    this.frame.Y = num1;
                else if (this.frameCounter < 18.0)
                    this.frame.Y = num1 * 2;
                else if (this.frameCounter < 24.0)
                    this.frame.Y = num1;
                if (this.frameCounter == 23.0)
                    this.frameCounter = 0.0;
            }
            else if (this.type == 115)
            {
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter < 3.0)
                    this.frame.Y = 0;
                else if (this.frameCounter < 6.0)
                    this.frame.Y = num1;
                else if (this.frameCounter < 12.0)
                    this.frame.Y = num1 * 2;
                else if (this.frameCounter < 15.0)
                    this.frame.Y = num1;
                if (this.frameCounter == 15.0)
                    this.frameCounter = 0.0;
            }
            else if (this.type == 101)
            {
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter > 6.0)
                {
                    this.frame.Y += num1 * 2;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y > num1 * 2)
                    this.frame.Y = 0;
            }
            if (this.type == 199)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                }
                if (this.frame.Y < num1 * 3)
                {
                    ++this.frameCounter;
                    if (this.frameCounter <= 6.0)
                        return;
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                }
                else
                {
                    if ((double)this.velocity.Y != 0.0)
                        return;
                    this.frameCounter += (double)Math.Abs(this.velocity.X);
                    if (this.frameCounter <= 12.0)
                        return;
                    this.frameCounter = 0.0;
                    this.frame.Y += num1;
                    if (this.frame.Y <= num1 * 7)
                        return;
                    this.frame.Y = num1 * 3;
                }
            }
            else if (this.type == 467)
            {
                if ((double)this.ai[0] == 1.0)
                {
                    ++this.frameCounter;
                    if (this.frameCounter <= 4.0)
                        return;
                    this.frameCounter = 0.0;
                    if (this.frame.Y >= num1 * 6)
                        return;
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                else
                {
                    ++this.frameCounter;
                    if (this.frameCounter <= 4.0)
                        return;
                    this.frameCounter = 0.0;
                    if (this.frame.Y > num1 * 3)
                        this.frame.Y = num1 * 3;
                    if (this.frame.Y <= 0)
                        return;
                    this.frame.Y -= num1;
                    this.frameCounter = 0.0;
                }
            }
            else if (this.type == 480)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.ai[2] < 0.0)
                    {
                        ++this.frameCounter;
                        if (this.frameCounter > 3.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y >= Main.npcFrameCount[this.type] * num1)
                        {
                            this.frame.Y = num1 * 21;
                        }
                        else
                        {
                            if (this.frame.Y >= num1 * 21)
                                return;
                            this.frame.Y = num1 * 21;
                        }
                    }
                    else if ((double)this.velocity.X == 0.0)
                    {
                        ++this.frameCounter;
                        if (this.frameCounter > 4.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 <= 7)
                            return;
                        this.frame.Y = 0;
                    }
                    else
                    {
                        this.frameCounter += 1.0 + (double)Math.Abs(this.velocity.X);
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 >= Main.npcFrameCount[this.type] - 4)
                        {
                            this.frame.Y = num1 * 10;
                        }
                        else
                        {
                            if (this.frame.Y / num1 >= 10)
                                return;
                            this.frame.Y = num1 * 10;
                        }
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 8;
                }
            }
            else if (this.type == 483)
            {
                if ((double)this.ai[0] == -1.0)
                {
                    ++this.frameCounter;
                    if (this.frameCounter > 4.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y > num1 * 21)
                        this.frame.Y = num1 * 21;
                    else if (this.frame.Y < num1 * 13)
                        this.frame.Y = num1 * 13;
                    this.rotation += this.velocity.X * 0.2f;
                }
                else
                {
                    ++this.frameCounter;
                    if (this.frameCounter > 4.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y > num1 * 11)
                        this.frame.Y = 0;
                    this.rotation = this.velocity.X * 0.1f;
                }
            }
            else if (this.type == 482)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.ai[2] < 0.0)
                    {
                        ++this.frameCounter;
                        if (this.frameCounter > 3.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y >= Main.npcFrameCount[this.type] * num1)
                        {
                            this.frame.Y = num1 * 11;
                        }
                        else
                        {
                            if (this.frame.Y >= num1 * 11)
                                return;
                            this.frame.Y = num1 * 11;
                        }
                    }
                    else if ((double)this.velocity.X == 0.0)
                    {
                        ++this.frameCounter;
                        this.frame.Y = 0;
                    }
                    else
                    {
                        this.frameCounter += 0.200000002980232 + (double)Math.Abs(this.velocity.X);
                        if (this.frameCounter > 8.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 >= Main.npcFrameCount[this.type] - 10)
                        {
                            this.frame.Y = num1 * 2;
                        }
                        else
                        {
                            if (this.frame.Y / num1 >= 2)
                                return;
                            this.frame.Y = num1 * 2;
                        }
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1;
                }
            }
            else if (this.type == 461)
            {
                if (this.wet)
                {
                    if ((double)this.velocity.X < 0.0)
                        this.direction = -1;
                    if ((double)this.velocity.X > 0.0)
                        this.direction = 1;
                    if (this.spriteDirection != this.direction)
                    {
                        this.rotation *= -1f;
                        this.spriteDirection = this.direction;
                    }
                    float num3 = (float)Math.Atan2((double)this.velocity.Y * (double)this.direction, (double)this.velocity.X * (double)this.direction);
                    if ((double)Math.Abs(this.rotation - num3) >= 3.14)
                    {
                        if ((double)num3 < (double)this.rotation)
                            this.rotation -= 6.28f;
                        else
                            this.rotation += 6.28f;
                    }
                    this.rotation = (float)(((double)this.rotation * 4.0 + (double)num3) / 5.0);
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.Length());
                    ++this.frameCounter;
                    if (this.frameCounter > 8.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y / num1 > 20)
                    {
                        this.frame.Y = num1 * 16;
                    }
                    else
                    {
                        if (this.frame.Y / num1 >= 16)
                            return;
                        this.frame.Y = num1 * 19;
                    }
                }
                else
                {
                    if ((double)this.rotation > 3.14)
                        this.rotation -= 6.28f;
                    if ((double)this.rotation > -0.01 && (double)this.rotation < 0.01)
                        this.rotation = 0.0f;
                    else
                        this.rotation *= 0.9f;
                    if ((double)this.velocity.Y == 0.0)
                    {
                        if (this.direction == 1)
                            this.spriteDirection = 1;
                        if (this.direction == -1)
                            this.spriteDirection = -1;
                        if ((double)this.velocity.X == 0.0)
                        {
                            this.frame.Y = 0;
                            this.frameCounter = 0.0;
                        }
                        else
                        {
                            this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                            ++this.frameCounter;
                            if (this.frameCounter > 6.0)
                            {
                                this.frame.Y += num1;
                                this.frameCounter = 0.0;
                            }
                            if (this.frame.Y / num1 <= 15)
                                return;
                            this.frame.Y = num1 * 2;
                        }
                    }
                    else
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y = num1;
                    }
                }
            }
            else if (this.type == 466)
            {
                if ((double)this.ai[2] <= 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.ai[2] == 0.0)
                        this.frame.Y = 0;
                    else if ((double)this.ai[2] < -8.0)
                        this.frame.Y = num1;
                    else
                        this.frame.Y = num1 * 2;
                }
                else if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = num1 * 2;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                        ++this.frameCounter;
                        if (this.frameCounter > 7.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 > 17)
                            this.frame.Y = num1 * 4;
                        if (this.frame.Y / num1 >= 4)
                            return;
                        this.frame.Y = num1 * 4;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 3;
                }
            }
            else if (this.type == 471)
            {
                bool flag = false;
                if ((double)this.ai[3] < 0.0)
                    flag = true;
                if (flag)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.Length()) * 0.5;
                    ++this.frameCounter;
                    if (this.frameCounter < 6.0)
                        this.frame.Y = num1 * 17;
                    else if (this.frameCounter < 12.0)
                        this.frame.Y = num1 * 18;
                    else if (this.frameCounter < 18.0)
                        this.frame.Y = num1 * 19;
                    else if (this.frameCounter < 23.0)
                    {
                        this.frame.Y = num1 * 18;
                    }
                    else
                    {
                        this.frame.Y = num1 * 18;
                        this.frameCounter = 0.0;
                    }
                }
                else if ((double)this.ai[3] == 1.0)
                {
                    this.frame.Y = num1 * 16;
                    this.frameCounter = 0.0;
                }
                else if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                        ++this.frameCounter;
                        if (this.frameCounter > 7.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 > 15)
                            this.frame.Y = num1 * 2;
                        if (this.frame.Y / num1 >= 2)
                            return;
                        this.frame.Y = num1 * 2;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1;
                }
            }
            else if (this.type == 166)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frameCounter += 2.0;
                        if (this.frameCounter > 7.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 <= 5)
                            return;
                        this.frame.Y = 0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                        ++this.frameCounter;
                        if (this.frameCounter > 9.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 > 12)
                            this.frame.Y = num1 * 7;
                        if (this.frame.Y / num1 >= 7)
                            return;
                        this.frame.Y = num1 * 7;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 6;
                }
            }
            else if (this.type == 469)
            {
                if ((double)this.ai[2] == 1.0)
                {
                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
                    if ((double)this.velocity.X < 0.0)
                        this.direction = -1;
                    if ((double)this.velocity.X > 0.0)
                        this.direction = 1;
                    this.spriteDirection = this.direction;
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.Length());
                    if (this.frameCounter > 11.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y / num1 > 5)
                        this.frame.Y = num1 * 2;
                    if (this.frame.Y / num1 >= 2)
                        return;
                    this.frame.Y = num1 * 2;
                }
                else
                {
                    this.rotation = 0.0f;
                    if ((double)this.velocity.Y == 0.0)
                    {
                        if (this.direction == 1)
                            this.spriteDirection = 1;
                        if (this.direction == -1)
                            this.spriteDirection = -1;
                        if ((double)this.velocity.X == 0.0)
                        {
                            this.frameCounter = 0.0;
                            this.frame.Y = 0;
                        }
                        else
                        {
                            this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                            ++this.frameCounter;
                            if (this.frameCounter > 9.0)
                            {
                                this.frame.Y += num1;
                                this.frameCounter = 0.0;
                            }
                            if (this.frame.Y / num1 > 11)
                                this.frame.Y = num1 * 6;
                            if (this.frame.Y / num1 >= 6)
                                return;
                            this.frame.Y = num1 * 6;
                        }
                    }
                    else
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y = num1;
                    }
                }
            }
            else if (this.type == 351)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 1.0;
                        ++this.frameCounter;
                        if (this.frameCounter > 8.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 < Main.npcFrameCount[this.type])
                            return;
                        this.frame.Y = num1 * 2;
                    }
                }
                else
                {
                    this.frame.Y = (double)this.velocity.Y >= 0.0 ? num1 : num1;
                    this.frameCounter = 0.0;
                }
            }
            else if (this.type == 343)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = num1 * 2;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 1.0;
                        ++this.frameCounter;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 < Main.npcFrameCount[this.type])
                            return;
                        this.frame.Y = num1 * 2;
                    }
                }
                else
                {
                    this.frame.Y = (double)this.velocity.Y >= 0.0 ? num1 : 0;
                    this.frameCounter = 0.0;
                }
            }
            else if (this.type >= 269 && this.type <= 280)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.velocity.X == 0.0)
                    {
                        if (this.type == 140)
                        {
                            this.frame.Y = num1;
                            this.frameCounter = 0.0;
                        }
                        else
                        {
                            this.frame.Y = 0;
                            this.frameCounter = 0.0;
                        }
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                        ++this.frameCounter;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 < Main.npcFrameCount[this.type])
                            return;
                        this.frame.Y = num1 * 2;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
            }
            else if (this.type == 230)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    this.rotation = 0.0f;
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                        ++this.frameCounter;
                        if (this.frameCounter > 10.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 < Main.npcFrameCount[this.type])
                            return;
                        this.frame.Y = 0;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                    if ((double)this.velocity.Y <= 4.0)
                        return;
                    this.rotation -= this.velocity.Y * 0.01f;
                }
            }
            else if (this.type == 290)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.ai[2] > 0.0)
                    {
                        if ((double)this.ai[1] < 10.0)
                            this.frame.Y = num1 * 11;
                        else if ((double)this.ai[1] < 20.0)
                            this.frame.Y = num1 * 10;
                        else
                            this.frame.Y = num1 * 9;
                    }
                    else if ((double)this.velocity.X == 0.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y = 0;
                    }
                    else
                    {
                        if (this.frame.Y < num1 * 2)
                            this.frame.Y = num1 * 2;
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 1.0;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y <= num1 * 8)
                            return;
                        this.frame.Y = num1 * 2;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1;
                }
            }
            else if (this.type == 110 || this.type == 214 || (this.type == 215 || this.type == 216) || (this.type == 291 || this.type == 292 || this.type == 293))
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.ai[2] > 0.0)
                    {
                        this.spriteDirection = this.direction;
                        this.frame.Y = num1 * (int)this.ai[2];
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        if (this.frame.Y < num1 * 6)
                            this.frame.Y = num1 * 6;
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                        this.frameCounter += (double)this.velocity.X;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 < Main.npcFrameCount[this.type])
                            return;
                        this.frame.Y = num1 * 6;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
            }
            else if (this.type == 206)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.ai[2] > 0.0)
                    {
                        this.spriteDirection = this.direction;
                        this.frame.Y = num1 * (int)this.ai[2];
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        if (this.frame.Y < num1 * 6)
                            this.frame.Y = num1 * 6;
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                        this.frameCounter += (double)this.velocity.X;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 < Main.npcFrameCount[this.type])
                            return;
                        this.frame.Y = num1 * 6;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
            }
            else if (this.type == 350)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.ai[2] > 0.0)
                    {
                        this.spriteDirection = this.direction;
                        this.frame.Y = num1 * ((int)this.ai[2] - 1);
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        if (this.frame.Y < num1 * 7)
                            this.frame.Y = num1 * 7;
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                        this.frameCounter += (double)this.velocity.X * 1.29999995231628;
                        if (this.frameCounter > 4.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 < Main.npcFrameCount[this.type])
                            return;
                        this.frame.Y = num1 * 7;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 5;
                }
            }
            else if (this.type == 111)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.ai[2] > 0.0)
                    {
                        this.spriteDirection = this.direction;
                        this.frame.Y = num1 * ((int)this.ai[2] - 1);
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        if (this.frame.Y < num1 * 7)
                            this.frame.Y = num1 * 7;
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 2.0;
                        this.frameCounter += (double)this.velocity.X * 1.29999995231628;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 < Main.npcFrameCount[this.type])
                            return;
                        this.frame.Y = num1 * 7;
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 6;
                }
            }
            else if (this.type == 257)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                }
                if ((double)this.velocity.Y != 0.0 || this.direction == -1 && (double)this.velocity.X > 0.0 || this.direction == 1 && (double)this.velocity.X < 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 4;
                }
                else if ((double)this.velocity.X == 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else
                {
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                    if (this.frameCounter < 8.0)
                        this.frame.Y = 0;
                    else if (this.frameCounter < 16.0)
                        this.frame.Y = num1;
                    else if (this.frameCounter < 24.0)
                        this.frame.Y = num1 * 2;
                    else if (this.frameCounter < 32.0)
                        this.frame.Y = num1 * 3;
                    else
                        this.frameCounter = 0.0;
                }
            }
            else if (this.type == 258)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                }
                if ((double)this.velocity.Y != 0.0 || this.direction == -1 && (double)this.velocity.X > 0.0 || this.direction == 1 && (double)this.velocity.X < 0.0)
                {
                    ++this.frameCounter;
                    if (this.frameCounter > 1.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y <= num1 * 5 && this.frame.Y >= num1 * 3)
                        return;
                    this.frame.Y = num1 * 3;
                }
                else if ((double)this.velocity.X == 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else
                {
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                    if (this.frameCounter < 8.0)
                        this.frame.Y = 0;
                    else if (this.frameCounter < 16.0)
                        this.frame.Y = num1;
                    else if (this.frameCounter < 24.0)
                        this.frame.Y = num1 * 2;
                    else
                        this.frameCounter = 0.0;
                }
            }
            else if (this.type == 348)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                }
                if ((double)this.velocity.Y != 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 8;
                }
                else if ((double)this.velocity.X == 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else
                {
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                    ++this.frameCounter;
                    if (this.frameCounter > 6.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y <= num1 * 7)
                        return;
                    this.frame.Y = num1;
                }
            }
            else if (this.type == 349)
            {
                ++this.frameCounter;
                if (this.frameCounter > 3.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y <= num1 * 7)
                    return;
                this.frame.Y = 0;
            }
            else if (this.type == 3 || this.type == 342 || (this.type == 331 || this.type == 332) || (this.type == 52 || this.type == 53 || (this.type == 536 || this.type == 132)) || (this.type == 161 || this.type == 162 || (this.type == 186 || this.type == 187) || (this.type == 188 || this.type == 189 || (this.type == 200 || this.type == 223))) || (this.type == 251 || this.type == 254 || this.type == (int)byte.MaxValue || this.type >= 319 && this.type <= 321))
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                }
                if ((double)this.velocity.Y != 0.0 || this.direction == -1 && (double)this.velocity.X > 0.0 || this.direction == 1 && (double)this.velocity.X < 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 2;
                }
                else if ((double)this.velocity.X == 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else
                {
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
                    if (this.frameCounter < 8.0)
                        this.frame.Y = 0;
                    else if (this.frameCounter < 16.0)
                        this.frame.Y = num1;
                    else if (this.frameCounter < 24.0)
                        this.frame.Y = num1 * 2;
                    else if (this.frameCounter < 32.0)
                        this.frame.Y = num1;
                    else
                        this.frameCounter = 0.0;
                }
            }
            else if (this.type == 148 || this.type == 149 || (this.type == 168 || this.type == 470))
            {
                int num3 = 0;
                if ((double)this.localAI[0] == 2.0)
                    num3 = 3;
                if ((double)this.localAI[0] == 3.0)
                    num3 = 6;
                if ((double)this.localAI[0] == 4.0)
                    num3 = 9;
                int num4 = num3 * num1;
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = num4;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 1.0;
                        if (this.frameCounter < 6.0)
                            this.frame.Y = num4;
                        else if (this.frameCounter < 12.0)
                            this.frame.Y = num1 + num4;
                        else if (this.frameCounter < 15.0)
                        {
                            this.frame.Y = num1 * 2 + num4;
                        }
                        else
                        {
                            this.frameCounter = 0.0;
                            this.frame.Y = num1 * 2 + num4;
                        }
                    }
                }
                else if ((double)this.velocity.Y < 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 2 + num4;
                }
                else
                {
                    if ((double)this.velocity.Y <= 0.0)
                        return;
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 2 + num4;
                }
            }
            else if (this.type == 299 || this.type == 538 || this.type == 539)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 0.5;
                        ++this.frameCounter;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 < Main.npcFrameCount[this.type] - 1)
                            return;
                        this.frame.Y = num1;
                    }
                }
                else if ((double)this.velocity.Y < 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 2;
                }
                else
                {
                    if ((double)this.velocity.Y <= 0.0)
                        return;
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 4;
                }
            }
            else if (this.type == 300 || this.type == 447)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.velocity.X == 0.0)
                    {
                        ++this.frameCounter;
                        if (this.frameCounter > 8.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 <= 1)
                            return;
                        this.frame.Y = 0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 0.5;
                        ++this.frameCounter;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 < Main.npcFrameCount[this.type])
                            return;
                        this.frame.Y = num1 * 2;
                    }
                }
                else
                {
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 0.5;
                    ++this.frameCounter;
                    if (this.frameCounter > 6.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y / num1 < Main.npcFrameCount[this.type])
                        return;
                    this.frame.Y = num1 * 2;
                }
            }
            else if (this.type == 361 || this.type == 445)
            {
                this.spriteDirection = this.direction;
                if ((double)this.velocity.Y == 0.0)
                {
                    if ((double)this.velocity.X == 0.0)
                    {
                        ++this.frameCounter;
                        if (this.frameCounter > 6.0)
                        {
                            this.frameCounter = 0.0;
                            this.frame.Y += num1;
                        }
                        if (this.frame.Y <= num1 * 5)
                            return;
                        this.frame.Y = 0;
                    }
                    else
                    {
                        ++this.frameCounter;
                        int num3 = 6;
                        if (this.frameCounter < (double)num3)
                            this.frame.Y = 0;
                        else if (this.frameCounter < (double)(num3 * 2))
                            this.frame.Y = num1 * 6;
                        else if (this.frameCounter < (double)(num3 * 3))
                        {
                            this.frame.Y = num1 * 8;
                        }
                        else
                        {
                            this.frame.Y = num1 * 9;
                            if (this.frameCounter < (double)(num3 * 4 - 1))
                                return;
                            this.frameCounter = 0.0;
                        }
                    }
                }
                else if ((double)this.velocity.Y > 0.0)
                    this.frame.Y = num1 * 9;
                else
                    this.frame.Y = num1 * 8;
            }
            else if (this.type == 366 || this.type == 367)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                }
                if ((double)this.velocity.X == 0.0)
                {
                    this.frame.Y = 0;
                    this.frameCounter = 0.0;
                }
                else
                {
                    this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 1.0;
                    ++this.frameCounter;
                    if (this.frameCounter > 6.0)
                    {
                        this.frame.Y += num1;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y / num1 < Main.npcFrameCount[this.type])
                        return;
                    this.frame.Y = 0;
                }
            }
            else if (this.type == 46 || this.type == 47 || (this.type == 303 || this.type == 337) || (this.type == 443 || this.type == 464))
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                    if ((double)this.velocity.X == 0.0)
                    {
                        this.frame.Y = 0;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 1.0;
                        ++this.frameCounter;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num1;
                            this.frameCounter = 0.0;
                        }
                        if (this.frame.Y / num1 < Main.npcFrameCount[this.type])
                            return;
                        this.frame.Y = 0;
                    }
                }
                else if ((double)this.velocity.Y < 0.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 4;
                }
                else
                {
                    if ((double)this.velocity.Y <= 0.0)
                        return;
                    this.frameCounter = 0.0;
                    this.frame.Y = num1 * 6;
                }
            }
            else if (this.type == 4 || this.type == 125 || this.type == 126)
            {
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter < 7.0)
                    this.frame.Y = 0;
                else if (this.frameCounter < 14.0)
                    this.frame.Y = num1;
                else if (this.frameCounter < 21.0)
                {
                    this.frame.Y = num1 * 2;
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                if ((double)this.ai[0] <= 1.0)
                    return;
                this.frame.Y += num1 * 3;
            }
            else if (this.type == 5)
            {
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter >= 8.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y < num1 * Main.npcFrameCount[this.type])
                    return;
                this.frame.Y = 0;
            }
            else if (this.type == 94)
            {
                ++this.frameCounter;
                if (this.frameCounter < 6.0)
                    this.frame.Y = 0;
                else if (this.frameCounter < 12.0)
                    this.frame.Y = num1;
                else if (this.frameCounter < 18.0)
                {
                    this.frame.Y = num1 * 2;
                }
                else
                {
                    this.frame.Y = num1;
                    if (this.frameCounter < 23.0)
                        return;
                    this.frameCounter = 0.0;
                }
            }
            else if (this.type == 6 || this.type == 173)
            {
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter >= 8.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y < num1 * Main.npcFrameCount[this.type])
                    return;
                this.frame.Y = 0;
            }
            else if (this.type == 24)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                }
                if ((double)this.ai[1] > 0.0)
                {
                    if (this.frame.Y < 4)
                        this.frameCounter = 0.0;
                    ++this.frameCounter;
                    if (this.frameCounter <= 4.0)
                        this.frame.Y = num1 * 4;
                    else if (this.frameCounter <= 8.0)
                        this.frame.Y = num1 * 5;
                    else if (this.frameCounter <= 12.0)
                        this.frame.Y = num1 * 6;
                    else if (this.frameCounter <= 16.0)
                        this.frame.Y = num1 * 7;
                    else if (this.frameCounter <= 20.0)
                    {
                        this.frame.Y = num1 * 8;
                    }
                    else
                    {
                        this.frame.Y = num1 * 9;
                        this.frameCounter = 100.0;
                    }
                }
                else
                {
                    ++this.frameCounter;
                    if (this.frameCounter <= 4.0)
                        this.frame.Y = 0;
                    else if (this.frameCounter <= 8.0)
                        this.frame.Y = num1;
                    else if (this.frameCounter <= 12.0)
                    {
                        this.frame.Y = num1 * 2;
                    }
                    else
                    {
                        this.frame.Y = num1 * 3;
                        if (this.frameCounter < 16.0)
                            return;
                        this.frameCounter = 0.0;
                    }
                }
            }
            else if (this.type == 29 || this.type == 32 || (this.type == 45 || this.type == 172) || this.type >= 281 && this.type <= 286)
            {
                if ((double)this.velocity.Y == 0.0)
                {
                    if (this.direction == 1)
                        this.spriteDirection = 1;
                    if (this.direction == -1)
                        this.spriteDirection = -1;
                }
                this.frame.Y = 0;
                if ((double)this.velocity.Y != 0.0)
                {
                    this.frame.Y += num1;
                }
                else
                {
                    if ((double)this.ai[1] <= 0.0)
                        return;
                    this.frame.Y += num1 * 2;
                }
            }
            else
            {
                if (this.type != 34)
                    return;
                this.frameCounter = this.frameCounter + 1.0;
                if (this.frameCounter >= 4.0)
                {
                    this.frame.Y += num1;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y < num1 * Main.npcFrameCount[this.type])
                    return;
                this.frame.Y = 0;
            }
        }

        public void SimpleFlyMovement(Vector2 desiredVelocity, float moveSpeed)
        {
            if ((double)this.velocity.X < (double)desiredVelocity.X)
            {
                this.velocity.X += moveSpeed;
                if ((double)this.velocity.X < 0.0 && (double)desiredVelocity.X > 0.0)
                    this.velocity.X += moveSpeed;
            }
            else if ((double)this.velocity.X > (double)desiredVelocity.X)
            {
                this.velocity.X -= moveSpeed;
                if ((double)this.velocity.X > 0.0 && (double)desiredVelocity.X < 0.0)
                    this.velocity.X -= moveSpeed;
            }
            if ((double)this.velocity.Y < (double)desiredVelocity.Y)
            {
                this.velocity.Y += moveSpeed;
                if ((double)this.velocity.Y >= 0.0 || (double)desiredVelocity.Y <= 0.0)
                    return;
                this.velocity.Y += moveSpeed;
            }
            else
            {
                if ((double)this.velocity.Y <= (double)desiredVelocity.Y)
                    return;
                this.velocity.Y -= moveSpeed;
                if ((double)this.velocity.Y <= 0.0 || (double)desiredVelocity.Y >= 0.0)
                    return;
                this.velocity.Y -= moveSpeed;
            }
        }

        public void HealEffect(int healAmount, bool broadcast = true)
        {
            int index = CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), CombatText.HealLife, string.Concat((object)healAmount), false, false);
            if (!broadcast || Main.netMode != 2 || index == 100)
                return;
            CombatText combatText = Main.combatText[index];
            NetMessage.SendData(81, -1, -1, combatText.text, (int)combatText.color.PackedValue, combatText.position.X, combatText.position.Y, 0.0f, 0, 0, 0);
        }

        public static void HealEffect(Rectangle r, int healAmount, bool broadcast = true)
        {
            int index = CombatText.NewText(r, CombatText.HealLife, string.Concat((object)healAmount), false, false);
            if (!broadcast || Main.netMode != 2 || index == 100)
                return;
            CombatText combatText = Main.combatText[index];
            NetMessage.SendData(81, -1, -1, combatText.text, (int)combatText.color.PackedValue, combatText.position.X, combatText.position.Y, 0.0f, 0, 0, 0);
        }

        public int FindClosestPlayer()
        {
            float distanceToPlayer;
            return this.FindClosestPlayer(out distanceToPlayer);
        }

        public int FindClosestPlayer(out float distanceToPlayer)
        {
            Vector2 center = this.Center;
            float num1 = float.MaxValue;
            int num2 = -1;
            for (int index = 0; index < (int)byte.MaxValue; ++index)
            {
                Player player = Main.player[index];
                if (player.active && !player.dead)
                {
                    float num3 = Vector2.DistanceSquared(center, player.Center);
                    if ((double)num3 < (double)num1)
                    {
                        num1 = num3;
                        num2 = index;
                    }
                }
            }
            if (num2 < 0)
            {
                for (int index = 0; index < (int)byte.MaxValue; ++index)
                {
                    Player player = Main.player[index];
                    if (player.active)
                    {
                        float num3 = Vector2.DistanceSquared(center, player.Center);
                        if ((double)num3 < (double)num1)
                        {
                            num1 = num3;
                            num2 = index;
                        }
                    }
                }
            }
            distanceToPlayer = (float)Math.Sqrt((double)num1);
            return num2;
        }

        public void BigMimicSpawnSmoke()
        {
            if (Main.netMode == 2)
            {
                NetMessage.SendData(51, -1, -1, "", this.whoAmI, 4f, 0.0f, 0.0f, 0, 0, 0);
            }
            else
            {
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 54, 0.0f, 0.0f, 50, new Color(), 1.5f);
                    Main.dust[index2].velocity *= 2f;
                    Main.dust[index2].noGravity = true;
                }
                for (int index1 = 0; index1 < 3; ++index1)
                {
                    for (int index2 = 0; index2 < 2; ++index2)
                    {
                        int index3 = Gore.NewGore(new Vector2((float)((double)this.position.X + (double)(this.width * index1) * 0.449999988079071 - 20.0), (float)((double)this.position.Y + (double)(this.height * index2) * 0.5 + 10.0)), new Vector2(0.0f, 0.0f), 99, 1.1f);
                        Main.gore[index3].velocity *= 0.3f;
                    }
                }
            }
        }

        public static bool BigMimicSummonCheck(int x, int y)
        {
            if (Main.netMode == 1 || !Main.hardMode)
                return false;
            int chest = Chest.FindChest(x, y);
            if (chest < 0)
                return false;
            int num1 = 0;
            int num2 = 0;
            int num3 = 0;
            for (int index = 0; index < 40; ++index)
            {
                ushort num4 = Main.tile[Main.chest[chest].x, Main.chest[chest].y].type;
                int num5 = (int)Main.tile[Main.chest[chest].x, Main.chest[chest].y].frameX / 36;
                if ((int)num4 == 21 && (num5 < 5 || num5 > 6) && (Main.chest[chest].item[index] != null && Main.chest[chest].item[index].itemId > 0))
                {
                    if (Main.chest[chest].item[index].itemId == 3092)
                        num1 += Main.chest[chest].item[index].stack;
                    else if (Main.chest[chest].item[index].itemId == 3091)
                        num2 += Main.chest[chest].item[index].stack;
                    else
                        ++num3;
                }
            }
            if (num3 == 0 && num1 + num2 == 1)
            {
                if ((int)Main.tile[x, y].type == 21)
                {
                    if ((int)Main.tile[x, y].frameX % 36 != 0)
                        --x;
                    if ((int)Main.tile[x, y].frameY % 36 != 0)
                        --y;
                    Chest.FindChest(x, y);
                    for (int index1 = x; index1 <= x + 1; ++index1)
                    {
                        for (int index2 = y; index2 <= y + 1; ++index2)
                        {
                            if ((int)Main.tile[index1, index2].type == 21)
                                Main.tile[index1, index2].active(false);
                        }
                    }
                    for (int index = 0; index < 40; ++index)
                        Main.chest[chest].item[index] = new Item();
                    Chest.DestroyChest(x, y);
                    NetMessage.SendTileSquare(-1, x, y, 3);
                }
                int Type = 475;
                if (num2 == 1)
                    Type = !WorldGen.crimson ? 473 : 474;
                int number = NPC.NewNPC(x * 16 + 16, y * 16 + 32, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                Main.npc[number].whoAmI = number;
                NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                Main.npc[number].BigMimicSpawnSmoke();
            }
            return false;
        }

        public void TargetClosest(bool faceTarget = true)
        {
            float num1 = 0.0f;
            float num2 = 0.0f;
            bool flag = false;
            int num3 = -1;
            for (int index1 = 0; index1 < (int)byte.MaxValue; ++index1)
            {
                if (Main.player[index1].active && !Main.player[index1].dead)
                {
                    float num4 = Math.Abs(Main.player[index1].position.X + (float)(Main.player[index1].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[index1].position.Y + (float)(Main.player[index1].height / 2) - this.position.Y + (float)(this.height / 2)) - (float)Main.player[index1].aggro;
                    if (Main.player[index1].npcTypeNoAggro[this.type] && this.direction != 0)
                        num4 += 1000f;
                    if (!flag || (double)num4 < (double)num1)
                    {
                        flag = true;
                        num3 = -1;
                        num2 = Math.Abs(Main.player[index1].position.X + (float)(Main.player[index1].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[index1].position.Y + (float)(Main.player[index1].height / 2) - this.position.Y + (float)(this.height / 2));
                        num1 = num4;
                        this.target = index1;
                    }
                    if (Main.player[index1].tankPet >= 0 && !Main.player[index1].npcTypeNoAggro[this.type])
                    {
                        int index2 = Main.player[index1].tankPet;
                        float num5 = Math.Abs(Main.projectile[index2].position.X + (float)(Main.projectile[index2].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.projectile[index2].position.Y + (float)(Main.projectile[index2].height / 2) - this.position.Y + (float)(this.height / 2)) - 200f;
                        if ((double)num5 < (double)num1 && (double)num5 < 200.0 && Collision.CanHit(this.Center, 1, 1, Main.projectile[index2].Center, 1, 1))
                            num3 = index2;
                    }
                }
            }
            if (num3 >= 0)
            {
                int index = num3;
                this.targetRect = new Rectangle((int)Main.projectile[index].position.X, (int)Main.projectile[index].position.Y, Main.projectile[index].width, Main.projectile[index].height);
                this.direction = 1;
                if ((double)(this.targetRect.X + this.targetRect.Width / 2) < (double)this.position.X + (double)(this.width / 2))
                    this.direction = -1;
                this.directionY = 1;
                if ((double)(this.targetRect.Y + this.targetRect.Height / 2) < (double)this.position.Y + (double)(this.height / 2))
                    this.directionY = -1;
            }
            else
            {
                if (this.target < 0 || this.target >= (int)byte.MaxValue)
                    this.target = 0;
                this.targetRect = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
                if (Main.player[this.target].dead)
                    faceTarget = false;
                if (Main.player[this.target].npcTypeNoAggro[this.type] && this.direction != 0)
                    faceTarget = false;
                if (faceTarget)
                {
                    float num4 = num2 - (float)Main.player[this.target].aggro;
                    float num5 = (float)((Main.player[this.target].height + Main.player[this.target].width + this.height + this.width) / 4 + 750 + 50);
                    if (Main.player[this.target].itemAnimation != 0 || Main.player[this.target].aggro >= 0 || ((double)num4 <= (double)num5 || this.oldTarget < 0) || this.oldTarget > 254)
                    {
                        this.direction = 1;
                        if ((double)(this.targetRect.X + this.targetRect.Width / 2) < (double)this.position.X + (double)(this.width / 2))
                            this.direction = -1;
                        this.directionY = 1;
                        if ((double)(this.targetRect.Y + this.targetRect.Height / 2) < (double)this.position.Y + (double)(this.height / 2))
                            this.directionY = -1;
                    }
                }
            }
            if (this.confused)
                this.direction *= -1;
            if (this.direction == this.oldDirection && this.directionY == this.oldDirectionY && this.target == this.oldTarget || (this.collideX || this.collideY))
                return;
            this.netUpdate = true;
        }

        public void CheckActive()
        {
            if (!this.active)
                return;
            switch (this.type)
            {
                case 493:
                    break;
                case 507:
                    break;
                case 517:
                    break;
                case 437:
                    break;
                case 438:
                    break;
                case 439:
                    break;
                case 440:
                    break;
                case 488:
                    break;
                case 396:
                    break;
                case 397:
                    break;
                case 398:
                    break;
                case 400:
                    break;
                case 422:
                    break;
                case 328:
                    break;
                case 379:
                    break;
                case 380:
                    break;
                case 263:
                    break;
                case 267:
                    break;
                case 134:
                    break;
                case 135:
                    break;
                case 136:
                    break;
                case 246:
                    break;
                case 247:
                    break;
                case 248:
                    break;
                case 249:
                    break;
                case 88:
                    break;
                case 89:
                    break;
                case 90:
                    break;
                case 91:
                    break;
                case 92:
                    break;
                case 96:
                    break;
                case 97:
                    break;
                case 99:
                    break;
                case 100:
                    break;
                case 113:
                    break;
                case 114:
                    break;
                case 115:
                    break;
                case 118:
                    break;
                case 119:
                    break;
                case 8:
                    break;
                case 9:
                    break;
                case 11:
                    break;
                case 12:
                    break;
                case 14:
                    break;
                case 15:
                    break;
                case 40:
                    break;
                case 41:
                    break;
                default:
                    if (this.townNPC || this.type == 453)
                    {
                        Rectangle rectangle = new Rectangle((int)((double)this.position.X + (double)(this.width / 2) - (double)NPC.townRangeX), (int)((double)this.position.Y + (double)(this.height / 2) - (double)NPC.townRangeY), NPC.townRangeX * 2, NPC.townRangeY * 2);
                        for (int index = 0; index < (int)byte.MaxValue; ++index)
                        {
                            if (Main.player[index].active && rectangle.Intersects(new Rectangle((int)Main.player[index].position.X, (int)Main.player[index].position.Y, Main.player[index].width, Main.player[index].height)))
                                Main.player[index].townNPCs += this.npcSlots;
                        }
                        if (this.type != 453)
                            break;
                    }
                    bool flag = false;
                    Rectangle rectangle1 = new Rectangle((int)((double)this.position.X + (double)(this.width / 2) - (double)NPC.activeRangeX), (int)((double)this.position.Y + (double)(this.height / 2) - (double)NPC.activeRangeY), NPC.activeRangeX * 2, NPC.activeRangeY * 2);
                    Rectangle rectangle2 = new Rectangle((int)((double)this.position.X + (double)(this.width / 2) - (double)NPC.sWidth * 0.5 - (double)this.width), (int)((double)this.position.Y + (double)(this.height / 2) - (double)NPC.sHeight * 0.5 - (double)this.height), NPC.sWidth + this.width * 2, NPC.sHeight + this.height * 2);
                    for (int index = 0; index < (int)byte.MaxValue; ++index)
                    {
                        if (Main.player[index].active)
                        {
                            if (rectangle1.Intersects(new Rectangle((int)Main.player[index].position.X, (int)Main.player[index].position.Y, Main.player[index].width, Main.player[index].height)))
                            {
                                flag = true;
                                if (this.type != 25 && this.type != 30 && (this.type != 33 && (int)this.releaseOwner == (int)byte.MaxValue) && this.lifeMax > 0)
                                {
                                    if (Main.slimeRain && Main.slimeRainNPC[this.type])
                                        Main.player[index].activeNPCs += this.npcSlots * Main.slimeRainNPCSlots;
                                    else
                                        Main.player[index].activeNPCs += this.npcSlots;
                                }
                            }
                            if (rectangle2.Intersects(new Rectangle((int)Main.player[index].position.X, (int)Main.player[index].position.Y, Main.player[index].width, Main.player[index].height)))
                                this.timeLeft = NPC.activeTime;
                            if (this.boss)
                                flag = true;
                            switch (this.type)
                            {
                                case 392:
                                case 393:
                                case 394:
                                case 491:
                                case 492:
                                case 87:
                                case (int)sbyte.MaxValue:
                                case 128:
                                case 129:
                                case 130:
                                case 131:
                                case 13:
                                case 35:
                                case 36:
                                case 39:
                                case 7:
                                case 10:
                                    flag = true;
                                    continue;
                                case 399:
                                    if (this.timeLeft == NPC.activeTime)
                                        this.timeLeft = NPC.activeTime * 30;
                                    flag = true;
                                    continue;
                                default:
                                    continue;
                            }
                        }
                    }
                    --this.timeLeft;
                    if (this.timeLeft <= 0)
                        flag = false;
                    if (flag || Main.netMode == 1)
                        break;
                    NPC.noSpawnCycle = true;
                    this.active = false;
                    if (Main.netMode == 2)
                    {
                        this.netSkip = -1;
                        this.life = 0;
                        NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                    }
                    if (this.aiStyle != 6)
                        break;
                    for (int number = (int)this.ai[0]; number > 0; number = (int)Main.npc[number].ai[0])
                    {
                        if (Main.npc[number].active)
                        {
                            Main.npc[number].active = false;
                            if (Main.netMode == 2)
                            {
                                Main.npc[number].life = 0;
                                Main.npc[number].netSkip = -1;
                                NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                            }
                        }
                    }
                    break;
            }
        }

        public void checkDead()
        {
            if (!this.active || this.realLife >= 0 && this.realLife != this.whoAmI || this.life > 0)
                return;
            if (this.type == 397 || this.type == 396)
            {
                if ((double)this.ai[0] == -2.0)
                    return;
                this.ai[0] = -2f;
                this.life = this.lifeMax;
                this.netUpdate = true;
                this.dontTakeDamage = true;
                if (Main.netMode == 1)
                    return;
                int index = NPC.NewNPC((int)this.Center.X, (int)this.Center.Y, 400, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                Main.npc[index].ai[3] = this.ai[3];
                Main.npc[index].netUpdate = true;
            }
            else if (this.type == 398 && (double)this.ai[0] != 2.0)
            {
                this.ai[0] = 2f;
                this.life = this.lifeMax;
                this.netUpdate = true;
                this.dontTakeDamage = true;
            }
            else if ((this.type == 517 || this.type == 422 || (this.type == 507 || this.type == 493)) && (double)this.ai[2] != 1.0)
            {
                this.ai[2] = 1f;
                this.ai[1] = 0.0f;
                this.life = this.lifeMax;
                this.dontTakeDamage = true;
                this.netUpdate = true;
            }
            else
            {
                NPC.noSpawnCycle = true;
                if (this.townNPC && this.type != 37 && this.type != 453)
                {
                    string str = this.name;
                    if (this.displayName != "")
                        str = this.displayName;
                    if (Main.netMode == 0)
                    {
                        if (this.type == 369)
                            Main.NewText(str + Lang.misc[36], byte.MaxValue, (byte)25, (byte)25, false);
                        else
                            Main.NewText(str + Lang.misc[19], byte.MaxValue, (byte)25, (byte)25, false);
                    }
                    else if (Main.netMode == 2)
                    {
                        if (this.type == 369)
                            NetMessage.SendData(25, -1, -1, str + Lang.misc[36], (int)byte.MaxValue, (float)byte.MaxValue, 25f, 25f, 0, 0, 0);
                        else
                            NetMessage.SendData(25, -1, -1, str + Lang.misc[19], (int)byte.MaxValue, (float)byte.MaxValue, 25f, 25f, 0, 0, 0);
                    }
                }
                if (Main.netMode != 1 && !Main.dayTime && (this.type == 54 && !NPC.AnyNPCs(35)))
                {
                    for (int index = 0; index < (int)byte.MaxValue; ++index)
                    {
                        if (Main.player[index].active && !Main.player[index].dead && Main.player[index].killClothier)
                        {
                            NPC.SpawnSkeletron();
                            break;
                        }
                    }
                }
                if (this.townNPC && Main.netMode != 1 && (this.homeless && WorldGen.spawnNPC == this.type))
                    WorldGen.spawnNPC = 0;
                if (this.soundKilled > 0)
                    Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, this.soundKilled);
                if (this.type == 13 || this.type == 14 || this.type == 15)
                {
                    bool flag = true;
                    for (int index = 0; index < 200; ++index)
                    {
                        if (index != this.whoAmI && Main.npc[index].active && (Main.npc[index].type == 13 || Main.npc[index].type == 14 || Main.npc[index].type == 15))
                        {
                            flag = false;
                            break;
                        }
                    }
                    if (flag)
                    {
                        this.boss = true;
                        this.NPCLoot();
                    }
                    else
                        this.NPCLoot();
                }
                else if (this.type == 134)
                {
                    Vector2 vector2_1 = this.position;
                    Vector2 center = Main.player[this.target].Center;
                    float num1 = 1E+08f;
                    Vector2 vector2_2 = this.position;
                    for (int index = 0; index < 200; ++index)
                    {
                        if (Main.npc[index].active && (Main.npc[index].type == 134 || Main.npc[index].type == 135 || Main.npc[index].type == 136))
                        {
                            float num2 = Math.Abs(Main.npc[index].Center.X - center.X) + Math.Abs(Main.npc[index].Center.Y - center.Y);
                            if ((double)num2 < (double)num1)
                            {
                                num1 = num2;
                                vector2_2 = Main.npc[index].position;
                            }
                        }
                    }
                    this.position = vector2_2;
                    this.NPCLoot();
                    this.position = vector2_1;
                }
                else
                    this.NPCLoot();
                this.active = false;
                if (Main.snowMoon)
                {
                    string str = "";
                    int[] numArray = new int[21]
          {
            0,
            25,
            15,
            10,
            30,
            100,
            160,
            180,
            200,
            250,
            300,
            375,
            450,
            525,
            675,
            850,
            1025,
            1325,
            1550,
            2000,
            0
          };
                    int progressMax = numArray[NPC.waveCount];
                    switch (NPC.waveCount)
                    {
                        case 1:
                            str = "Wave 2: Zombie Elf and Elf Archer";
                            break;
                        case 2:
                            str = "Wave 3: Zombie Elf, Elf Archer, Gingerbread Man, and Nutcracker";
                            break;
                        case 3:
                            str = "Wave 4: Everscream, Zombie Elf, Elf Archer, and Gingerbread Man";
                            break;
                        case 4:
                            str = "Wave 5: Everscream, Zombie Elf, Elf Archer, and Nutcracker";
                            break;
                        case 5:
                            str = "Wave 6: Everscream, Elf Archer, Nutcracker, and Elf Copter";
                            break;
                        case 6:
                            str = "Wave 7: Santa-NK1, Gingerbread Man, Elf Archer, and Zombie Elf";
                            break;
                        case 7:
                            str = "Wave 8: Santa-NK1, Elf Copter, Elf Archer, Nutcracker, and Krampus";
                            break;
                        case 8:
                            str = "Wave 9: Santa-NK1, Everscream, Nutcracker, Elf Copter, and Gingerbread Man";
                            break;
                        case 9:
                            str = "Wave 10: Santa-NK1, Everscream, Krampus, Zombie Elf, and Elf Helicopter";
                            break;
                        case 10:
                            str = "Wave 11: Ice Queen, Flocko, Zombie Elf, and Gingerbread Man";
                            break;
                        case 11:
                            str = "Wave 12: Ice Queen, Everscream, Gingerbread Man, Yeti, and Zombie Elf";
                            break;
                        case 12:
                            str = "Wave 13: Ice Queen, Santa-NK1, Gingerbread Man, Flocko, Yeti, and Elf Helicopter";
                            break;
                        case 13:
                            str = "Wave 14: Ice Queen, Santa-NK1, Everscream, Yeti, and Krampus";
                            break;
                        case 14:
                            str = "Wave 15: Ice Queen, Santa-NK1, Everscream, Yeti, and Elf Copter";
                            break;
                        case 15:
                            str = "Wave 16: Ice Queen, Santa-NK1, Everscream, Yeti and Flocko";
                            break;
                        case 16:
                            str = "Wave 17: Ice Queen, Santa-NK1, Everscream, Yeti, Krampus, Elf Copter";
                            break;
                        case 17:
                            str = "Wave 18: Ice Queen, Santa-NK1, Everscream, Yeti, Nutcracker, Krampus";
                            break;
                        case 18:
                            str = "Wave 19: Ice Queen, Santa-NK1, Everscream, Yeti";
                            break;
                        case 19:
                            str = "Final Wave: Ice Queen, Santa-NK1, and Everscream";
                            break;
                    }
                    float num1 = 0.0f;
                    switch (this.type)
                    {
                        case 338:
                        case 339:
                        case 340:
                            num1 = 1f;
                            break;
                        case 341:
                            num1 = 20f;
                            break;
                        case 342:
                            num1 = 2f;
                            break;
                        case 343:
                            num1 = 18f;
                            break;
                        case 344:
                            num1 = 50f;
                            break;
                        case 345:
                            num1 = 150f;
                            break;
                        case 346:
                            num1 = 100f;
                            break;
                        case 347:
                            num1 = 8f;
                            break;
                        case 348:
                        case 349:
                            num1 = 4f;
                            break;
                        case 350:
                            num1 = 3f;
                            break;
                    }
                    if (Main.expertMode)
                        num1 *= 2f;
                    float num2 = NPC.waveKills;
                    NPC.waveKills += num1;
                    if ((double)NPC.waveKills >= (double)progressMax && progressMax != 0)
                    {
                        NPC.waveKills = 0.0f;
                        ++NPC.waveCount;
                        progressMax = numArray[NPC.waveCount];
                        if (str != "")
                        {
                            if (Main.netMode == 0)
                                Main.NewText(str, (byte)175, (byte)75, byte.MaxValue, false);
                            else if (Main.netMode == 2)
                                NetMessage.SendData(25, -1, -1, str, (int)byte.MaxValue, 175f, 75f, (float)byte.MaxValue, 0, 0, 0);
                            if (NPC.waveCount == 15)
                                AchievementsHelper.NotifyProgressionEvent(14);
                        }
                    }
                    if ((double)NPC.waveKills != (double)num2 && (double)num1 != 0.0)
                    {
                        if (Main.netMode != 1)
                            Main.ReportInvasionProgress((int)NPC.waveKills, progressMax, 1, NPC.waveCount);
                        if (Main.netMode == 2)
                            NetMessage.SendData(78, -1, -1, "", Main.invasionProgress, (float)Main.invasionProgressMax, 1f, (float)NPC.waveCount, 0, 0, 0);
                    }
                }
                if (Main.pumpkinMoon)
                {
                    string str = "";
                    int[] numArray = new int[16]
          {
            0,
            25,
            40,
            50,
            80,
            100,
            160,
            180,
            200,
            250,
            300,
            375,
            450,
            525,
            675,
            0
          };
                    int progressMax = numArray[NPC.waveCount];
                    switch (NPC.waveCount)
                    {
                        case 1:
                            str = "Wave 2: " + Main.npcName[305] + " and " + Main.npcName[326];
                            break;
                        case 2:
                            str = "Wave 3: " + Main.npcName[305] + ", " + Main.npcName[326] + ", and " + Main.npcName[329];
                            break;
                        case 3:
                            str = "Wave 4: " + Main.npcName[305] + ", " + Main.npcName[326] + ", " + Main.npcName[329] + ", and " + Main.npcName[325];
                            break;
                        case 4:
                            str = "Wave 5: " + Main.npcName[305] + ", " + Main.npcName[326] + ", " + Main.npcName[329] + ", " + Main.npcName[330] + ", and " + Main.npcName[325];
                            break;
                        case 5:
                            str = "Wave 6: " + Main.npcName[326] + ", " + Main.npcName[329] + ", " + Main.npcName[330] + ", and " + Main.npcName[325];
                            break;
                        case 6:
                            str = "Wave 7: " + Main.npcName[305] + ", " + Main.npcName[329] + ", " + Main.npcName[330] + ", and " + Main.npcName[327];
                            break;
                        case 7:
                            str = "Wave 8: " + Main.npcName[326] + ", " + Main.npcName[329] + ", " + Main.npcName[330] + ", and " + Main.npcName[327];
                            break;
                        case 8:
                            str = "Wave 9: " + Main.npcName[305] + ", " + Main.npcName[315] + ", " + Main.npcName[325] + ", and " + Main.npcName[327];
                            break;
                        case 9:
                            str = "Wave 10: " + Main.npcName[326] + ", " + Main.npcName[329] + ", " + Main.npcName[330] + ", " + Main.npcName[315] + ", " + Main.npcName[325] + ", and " + Main.npcName[327];
                            break;
                        case 10:
                            str = "Wave 11: " + Main.npcName[305] + ", " + Main.npcName[326] + ", " + Main.npcName[329] + ", " + Main.npcName[330] + ", " + Main.npcName[315] + ", " + Main.npcName[325] + ", and " + Main.npcName[327];
                            break;
                        case 11:
                            str = "Wave 12: " + Main.npcName[326] + ", " + Main.npcName[329] + ", " + Main.npcName[330] + ", " + Main.npcName[315] + ", " + Main.npcName[325] + ", and " + Main.npcName[327];
                            break;
                        case 12:
                            str = "Wave 13: " + Main.npcName[329] + ", " + Main.npcName[330] + ", " + Main.npcName[315] + ", " + Main.npcName[325] + ", and " + Main.npcName[327];
                            break;
                        case 13:
                            str = "Wave 14: " + Main.npcName[315] + ", " + Main.npcName[325] + ", and " + Main.npcName[327];
                            break;
                        case 14:
                            str = "Final Wave: " + Main.npcName[325] + ", and " + Main.npcName[327];
                            break;
                    }
                    float num1 = 0.0f;
                    switch (this.type)
                    {
                        case 305:
                        case 306:
                        case 307:
                        case 308:
                        case 309:
                        case 310:
                        case 311:
                        case 312:
                        case 313:
                        case 314:
                            num1 = 1f;
                            break;
                        case 315:
                            num1 = 25f;
                            break;
                        case 325:
                            num1 = 75f;
                            break;
                        case 326:
                            num1 = 2f;
                            break;
                        case 327:
                            num1 = 150f;
                            break;
                        case 329:
                            num1 = 4f;
                            break;
                        case 330:
                            num1 = 8f;
                            break;
                    }
                    if (Main.expertMode)
                        num1 *= 2f;
                    float num2 = NPC.waveKills;
                    NPC.waveKills += num1;
                    if ((double)NPC.waveKills >= (double)progressMax && progressMax != 0)
                    {
                        NPC.waveKills = 0.0f;
                        ++NPC.waveCount;
                        progressMax = numArray[NPC.waveCount];
                        if (str != "")
                        {
                            if (Main.netMode == 0)
                                Main.NewText(str, (byte)175, (byte)75, byte.MaxValue, false);
                            else if (Main.netMode == 2)
                                NetMessage.SendData(25, -1, -1, str, (int)byte.MaxValue, 175f, 75f, (float)byte.MaxValue, 0, 0, 0);
                            if (NPC.waveCount == 15)
                                AchievementsHelper.NotifyProgressionEvent(15);
                        }
                    }
                    if ((double)NPC.waveKills != (double)num2 && (double)num1 != 0.0)
                    {
                        if (Main.netMode != 1)
                            Main.ReportInvasionProgress((int)NPC.waveKills, progressMax, 2, NPC.waveCount);
                        if (Main.netMode == 2)
                            NetMessage.SendData(78, -1, -1, "", Main.invasionProgress, (float)Main.invasionProgressMax, 2f, (float)NPC.waveCount, 0, 0, 0);
                    }
                }
                int num3 = 0;
                switch (this.type)
                {
                    case 471:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 111:
                        num3 = 1;
                        break;
                    case 491:
                    case 212:
                    case 213:
                    case 214:
                    case 215:
                    case 216:
                        num3 = 3;
                        break;
                    case 381:
                    case 382:
                    case 383:
                    case 385:
                    case 386:
                    case 388:
                    case 389:
                    case 390:
                    case 391:
                    case 395:
                        num3 = 4;
                        break;
                    case 143:
                    case 144:
                    case 145:
                        num3 = 2;
                        break;
                }
                if (num3 == 0 || num3 != Main.invasionType)
                    return;
                int num4 = 1;
                switch (this.type)
                {
                    case 471:
                        num4 = 10;
                        break;
                    case 491:
                        num4 = 10;
                        break;
                    case 216:
                        num4 = 5;
                        break;
                    case 395:
                        num4 = 10;
                        break;
                }
                Main.invasionSize -= num4;
                if (Main.invasionSize < 0)
                    Main.invasionSize = 0;
                if (Main.netMode != 1)
                    Main.ReportInvasionProgress(Main.invasionSizeStart - Main.invasionSize, Main.invasionSizeStart, num3 + 2, 0);
                if (Main.netMode != 2)
                    return;
                NetMessage.SendData(78, -1, -1, "", Main.invasionProgress, (float)Main.invasionProgressMax, (float)Main.invasionProgressIcon, 0.0f, 0, 0, 0);
            }
        }

        public static void ResetKillCount()
        {
            for (int index = 0; index < 540; ++index)
                NPC.killCount[index] = 0;
        }

        public void NPCLoot()
        {
            if (Main.netMode == 1 || this.type >= 540)
                return;
            bool flag1 = NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3;
            switch (this.type)
            {
                case 13:
                case 14:
                case 15:
                    if (this.boss)
                    {
                        AchievementsHelper.NotifyNPCKilled(this);
                        break;
                    }
                    break;
                case 125:
                case 126:
                    if (!NPC.AnyNPCs(this.type == 126 ? 125 : 126))
                    {
                        AchievementsHelper.NotifyNPCKilled(this);
                        AchievementsHelper.CheckMechaMayhem(this.type);
                        break;
                    }
                    break;
                case (int)sbyte.MaxValue:
                case 134:
                    AchievementsHelper.CheckMechaMayhem(this.type);
                    AchievementsHelper.NotifyNPCKilled(this);
                    break;
                default:
                    AchievementsHelper.NotifyNPCKilled(this);
                    break;
            }
            int index1 = Item.NPCtoBanner(this.BannerID());
            if (index1 > 0 && !NPCID.Sets.ExcludedFromDeathTally[this.type])
            {
                ++NPC.killCount[index1];
                if (Main.netMode == 2)
                    NetMessage.SendData(83, -1, -1, "", index1, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                int num1 = 50;
                if (NPC.killCount[index1] % num1 == 0 && index1 > 0)
                {
                    int num2 = Item.BannerToNPC(index1);
                    new NPC().netDefaults(num2);
                    int closestPlayer = this.FindClosestPlayer();
                    string str = "The " + (object)NPC.killCount[index1] + "th " + Lang.npcName(num2, false) + " has been defeated!";
                    if (closestPlayer >= 0 && closestPlayer < (int)byte.MaxValue)
                        str = Main.player[closestPlayer].name + (object)" has defeated the " + (string)(object)NPC.killCount[index1] + "th " + Lang.npcName(num2, false) + "!";
                    if (Main.netMode == 0)
                        Main.NewText(str, (byte)250, (byte)250, (byte)0, false);
                    else if (Main.netMode == 2)
                        NetMessage.SendData(25, -1, -1, str, (int)byte.MaxValue, 250f, 250f, 0.0f, 0, 0, 0);
                    int Type = 1615 + index1 - 1;
                    if (index1 >= 249)
                        Type = 3593 + index1 - 249;
                    else if (index1 >= 186)
                        Type = 3390 + index1 - 186;
                    else if (index1 >= 88)
                        Type = 2897 + index1 - 88;
                    Vector2 vector2 = this.position;
                    if (closestPlayer >= 0 && closestPlayer < (int)byte.MaxValue)
                        vector2 = Main.player[closestPlayer].position;
                    Item.NewItem((int)vector2.X, (int)vector2.Y, this.width, this.height, Type, 1, false, 0, false);
                }
            }
            if (this.type == 23 && Main.hardMode)
                return;
            if ((this.type == 170 || this.type == 180 || this.type == 171) && Main.rand.Next(3) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3532, 1, false, 0, false);
            switch (this.type)
            {
                case 244:
                case 475:
                case 137:
                case 138:
                case 171:
                case 84:
                case 86:
                case 120:
                case 122:
                case 75:
                case 80:
                    int maxValue1 = Main.expertMode ? 150 : 200;
                    if (Main.rand.Next(maxValue1) == 0)
                    {
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3260, 1, false, 0, false);
                        break;
                    }
                    break;
            }
            if (Main.slimeRain && Main.slimeRainNPC[this.type] && !NPC.AnyNPCs(50))
            {
                int num = 150;
                if (NPC.downedSlimeKing)
                    num /= 2;
                ++Main.slimeRainKillCount;
                if (Main.slimeRainKillCount >= num)
                {
                    NPC.SpawnOnPlayer(this.FindClosestPlayer(), 50);
                    Main.slimeRainKillCount = -num / 2;
                }
            }
            if (!Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneDungeon)
            {
                bool flag2 = false;
                if (Main.expertMode && Main.rand.Next(5) == 0)
                    flag2 = true;
                else if (Main.rand.Next(5) == 0)
                    flag2 = true;
                if (this.boss)
                    flag2 = false;
                switch (this.type)
                {
                    case 13:
                    case 14:
                    case 15:
                        flag2 = false;
                        break;
                }
                if (Main.hardMode && this.lifeMax > 1 && (this.damage > 0 && !this.friendly) && ((double)this.position.Y > Main.rockLayer * 16.0 && flag2 && (this.type != 121 && (double)this.value > 0.0)))
                {
                    if (Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCorrupt || Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCrimson)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 521, 1, false, 0, false);
                    if (Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneHoly)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 520, 1, false, 0, false);
                }
            }
            if (this.type == 1 && (double)this.ai[1] > 0.0)
            {
                int Type = (int)this.ai[1];
                if (Type > 0 && Type < 3601)
                {
                    int Stack = 1;
                    if (Type == 8)
                        Stack = Main.rand.Next(5, 11);
                    else if (Type == 166)
                        Stack = Main.rand.Next(2, 7);
                    else if (Type == 965)
                        Stack = Main.rand.Next(20, 46);
                    else if (Type >= 11 && Type <= 14 || Type >= 699 && Type <= 702)
                    {
                        Stack = Main.rand.Next(3, 9);
                        if (Main.rand.Next(2) == 0)
                            Stack += 5;
                    }
                    else if (Type == 71)
                        Stack = Main.rand.Next(50, 100);
                    else if (Type == 72)
                        Stack = Main.rand.Next(20, 100);
                    else if (Type == 73)
                        Stack = Main.rand.Next(1, 3);
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Type, Stack, false, 0, false);
                }
            }
            if (this.type == 22 && this.displayName == "Andrew")
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 867, 1, false, 0, false);
            if (this.type == 353 && Main.rand.Next(8) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3352, 1, false, 0, false);
            if (this.type == 441 && Main.rand.Next(8) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3351, 1, false, 0, false);
            if (this.type == 227 && Main.rand.Next(10) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3350, 1, false, 0, false);
            if (this.type == 208 && Main.rand.Next(4) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3548, Main.rand.Next(30, 61), false, 0, false);
            if (this.type == 207 && Main.rand.Next(8) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3349, 1, false, 0, false);
            if (Main.hardMode && (double)this.value > 0.0)
            {
                if (!NPC.downedMechBoss1 && Main.rand.Next(2500) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 556, 1, false, 0, false);
                else if (!NPC.downedMechBoss2 && Main.rand.Next(2500) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 544, 1, false, 0, false);
                else if (!NPC.downedMechBoss3 && Main.rand.Next(2500) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 557, 1, false, 0, false);
            }
            if (Main.halloween && (double)this.value > 0.0 && ((double)this.value < 500.0 && this.damage < 40) && this.defense < 20)
            {
                if (Main.rand.Next(2000) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1825, 1, false, 0, false);
                else if (Main.rand.Next(2000) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1827, 1, false, 0, false);
            }
            if (Main.hardMode && (double)this.value > 0.0)
            {
                if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneJungle)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1533, 1, false, 0, false);
                if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCorrupt)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1534, 1, false, 0, false);
                if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneCrimson)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1535, 1, false, 0, false);
                if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneHoly)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1536, 1, false, 0, false);
                if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].ZoneSnow)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1537, 1, false, 0, false);
            }
            if (this.type == 68)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1169, 1, false, 0, false);
            if (Main.snowMoon)
            {
                int num1 = NPC.waveCount;
                if (Main.expertMode)
                    num1 += 7;
                int maxValue2 = (int)((double)(30 - num1) / 2.5);
                if (Main.expertMode)
                    maxValue2 -= 2;
                if (maxValue2 < 1)
                    maxValue2 = 1;
                if (this.type == 344)
                    NPC.downedChristmasTree = true;
                if (this.type == 345)
                    NPC.downedChristmasIceQueen = true;
                if (this.type == 346)
                    NPC.downedChristmasSantank = true;
                if ((this.type == 344 || this.type == 345 || this.type == 346) && (Main.rand.Next(maxValue2) == 0 && num1 >= 15))
                {
                    int maxValue3 = 4;
                    if (num1 == 16)
                        maxValue3 = 4;
                    if (num1 == 17)
                        maxValue3 = 3;
                    if (num1 == 18)
                        maxValue3 = 3;
                    if (num1 == 19)
                        maxValue3 = 2;
                    if (num1 >= 20)
                        maxValue3 = 2;
                    if (Main.expertMode && Main.rand.Next(3) == 0)
                        --maxValue3;
                    if (Main.rand.Next(maxValue3) == 0)
                    {
                        if (this.type == 344)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1962, 1, false, 0, false);
                        if (this.type == 345)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1960, 1, false, 0, false);
                        if (this.type == 346)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1961, 1, false, 0, false);
                    }
                }
                if (Main.rand.Next(maxValue2) == 0)
                {
                    if (this.type == 344)
                    {
                        int num2 = Main.rand.Next(3);
                        if (Main.rand.Next(15) == 0)
                        {
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1871, 1, false, -1, false);
                        }
                        else
                        {
                            if (num2 == 0)
                                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1916, 1, false, 0, false);
                            if (num2 == 1)
                                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1928, 1, false, -1, false);
                            if (num2 == 2)
                                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1930, 1, false, -1, false);
                        }
                    }
                    if (this.type == 346)
                    {
                        int num2 = Main.rand.Next(2);
                        if (num2 == 0)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1910, 1, false, -1, false);
                        if (num2 == 1)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1929, 1, false, -1, false);
                    }
                    if (this.type == 345)
                    {
                        if (NPC.waveCount >= 15 && Main.rand.Next(30) == 0)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1914, 1, false, 0, false);
                        else if (Main.rand.Next(15) == 0)
                        {
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1959, 1, false, 0, false);
                        }
                        else
                        {
                            int num2 = Main.rand.Next(3);
                            if (num2 == 0)
                                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1931, 1, false, -1, false);
                            if (num2 == 1)
                                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1946, 1, false, -1, false);
                            if (num2 == 2)
                                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1947, 1, false, -1, false);
                        }
                    }
                }
            }
            if (this.type == 341)
            {
                int num = Main.rand.Next(5, 11);
                for (int index2 = 0; index2 < num; ++index2)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
                if (Main.xMas)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1869, 1, false, 0, false);
            }
            if (this.type >= 338 && this.type <= 340 && Main.rand.Next(5) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
            if (this.type >= 338 && this.type <= 340 && Main.rand.Next(200) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1943 + Main.rand.Next(3), 1, false, 0, false);
            if (this.type == 342 && Main.rand.Next(3) != 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
            if (Main.pumpkinMoon)
            {
                if (this.type == 325)
                    NPC.downedHalloweenTree = true;
                if (this.type == 327)
                    NPC.downedHalloweenKing = true;
                int num1 = NPC.waveCount;
                if (Main.expertMode)
                    num1 += 6;
                int maxValue2 = (int)((double)(17 - num1) / 1.25);
                if (Main.expertMode)
                    --maxValue2;
                if (maxValue2 < 1)
                    maxValue2 = 1;
                if (num1 >= 15)
                {
                    if (this.type == 325)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1855, 1, false, 0, false);
                    if (this.type == 327)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1856, 1, false, 0, false);
                }
                if (Main.rand.Next(maxValue2) == 0)
                {
                    if (this.type == 315 && Main.rand.Next(20) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1857, 1, false, 0, false);
                    if (this.type >= 305 && this.type <= 314 && Main.rand.Next(10) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(1788, 1791), 1, false, 0, false);
                    if (this.type == 325)
                    {
                        int num2 = Main.rand.Next(5);
                        if (num2 == 0)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1829, 1, false, 0, false);
                        if (num2 == 1)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1831, 1, false, 0, false);
                        if (num2 == 2)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1835, 1, false, -1, false);
                        if (num2 == 2)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1836, Main.rand.Next(30, 61), false, 0, false);
                        if (num2 == 3)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1837, 1, false, 0, false);
                        if (num2 == 4)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1845, 1, false, -1, false);
                    }
                    if (this.type == 327)
                    {
                        int num2 = Main.rand.Next(7);
                        if (num2 == 0)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1782, 1, false, -1, false);
                        if (num2 == 0)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1783, Main.rand.Next(50, 101), false, 0, false);
                        if (num2 == 1)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1784, 1, false, -1, false);
                        if (num2 == 1)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1785, Main.rand.Next(25, 51), false, 0, false);
                        if (num2 == 2)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1811, 1, false, 0, false);
                        if (num2 == 3)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1826, 1, false, -1, false);
                        if (num2 == 4)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1801, 1, false, -1, false);
                        if (num2 == 5)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1802, 1, false, -1, false);
                        if (num2 == 6)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1798, 1, false, 0, false);
                    }
                }
            }
            if (this.type == 325)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1729, Main.rand.Next(30, 51), false, 0, false);
            if (this.type == 326)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1729, Main.rand.Next(1, 5), false, 0, false);
            if (this.type >= 305 && this.type <= 314 && Main.rand.Next(4) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
            if (this.type == 326 && Main.rand.Next(6) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
            if (this.type == 329 && Main.rand.Next(4) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
            if (this.type == 330 && Main.rand.Next(4) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
            if (this.type == 315)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
            if (Main.halloween && this.lifeMax > 1 && (this.damage > 0 && !this.friendly) && (this.type != 121 && this.type != 23 && ((double)this.value > 0.0 && Main.rand.Next(80) == 0)))
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1774, 1, false, 0, false);
            if (Main.xMas && this.lifeMax > 1 && (this.damage > 0 && !this.friendly) && (this.type != 121 && (double)this.value > 0.0 && Main.rand.Next(13) == 0))
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1869, 1, false, 0, false);
            if (this.lifeMax > 5 && (double)this.value > 0.0 && (!this.friendly && Main.hardMode) && ((double)this.position.Y / 16.0 > (double)(Main.maxTilesY - 200) && Main.rand.Next(50) == 0))
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2701, Main.rand.Next(20, 51), false, 0, false);
            if (this.type == 325 || this.type == 327 || (this.type == 344 || this.type == 345) || this.type == 346)
            {
                int num = Main.rand.Next(6) + 6;
                for (int index2 = 0; index2 < num; ++index2)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
            }
            if (this.type == 156 && Main.rand.Next(75) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1518, 1, false, 0, false);
            if (this.type == 243 && Main.rand.Next(3) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1519, 1, false, 0, false);
            if (this.type >= 269 && this.type <= 280 && Main.rand.Next(450) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1517, 1, false, 0, false);
            if ((this.type == 158 || this.type == 159) && Main.rand.Next(40) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1520, 1, false, 0, false);
            if (this.type == 176 && Main.rand.Next(150) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1521, 1, false, 0, false);
            if (this.type == 48 && Main.rand.Next(200) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1516, 1, false, 0, false);
            if (this.type == 205 && Main.rand.Next(2) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1611, 1, false, 0, false);
            if (this.type == 483 || this.type == 482)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3086, Main.rand.Next(5, 11), false, -1, false);
            if (!Main.hardMode && Main.rand.Next(100) == 0 && (this.target >= 0 && this.lifeMax > 5) && (!this.friendly && Main.rand.Next(4) == 0 && ((double)this.position.Y / 16.0 > (double)(Main.maxTilesY - 350) && NPC.downedBoss3)))
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3282, 1, false, -1, false);
            if (Main.hardMode && Main.player[this.target].ZoneSnow && (Main.rand.Next(80) == 0 && this.target >= 0) && (this.lifeMax > 5 && !this.friendly && (double)this.value > 0.0))
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3289, 1, false, -1, false);
            else if (Main.hardMode && Main.rand.Next(200) == 0 && (this.target >= 0 && this.lifeMax > 5) && (!this.friendly && (double)this.value > 0.0))
            {
                if (Main.player[this.target].ZoneJungle && NPC.downedMechBossAny)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3286, 1, false, -1, false);
                else if (Main.player[this.target].ZoneDungeon && NPC.downedPlantBoss)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3291, 1, false, -1, false);
                else if ((double)this.position.Y / 16.0 > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && !Main.player[this.target].ZoneDungeon && Main.rand.Next(2) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3290, 1, false, -1, false);
            }
            int num3 = 1;
            if (Main.expertMode && Main.rand.Next(2) == 0)
                num3 = 2;
            for (int index2 = 0; index2 < num3; ++index2)
            {
                if (this.type == 461 && Main.rand.Next(50) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 497, 1, false, -1, false);
                if ((this.type == 159 || this.type == 158) && Main.rand.Next(35) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 900, 1, false, -1, false);
                if (this.type == 251 && Main.rand.Next(15) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1311, 1, false, -1, false);
                if (NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3)
                {
                    if (this.type == 477)
                    {
                        if (Main.rand.Next(4) == 0)
                        {
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1570, 1, false, -1, false);
                            ++index2;
                        }
                        else if (Main.rand.Next(3) == 0 && NPC.downedPlantBoss)
                        {
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3292, 1, false, -1, false);
                            ++index2;
                        }
                    }
                    if (this.type == 253 && Main.rand.Next(40) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1327, 1, false, -1, false);
                }
                if (NPC.downedPlantBoss)
                {
                    if (this.type == 460 && Main.rand.Next(40) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3098, 1, false, -1, false);
                    if (this.type == 468 && Main.rand.Next(40) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3105, 1, false, -1, false);
                    if (this.type == 466 && Main.rand.Next(40) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3106, 1, false, -1, false);
                    if (this.type == 467 && Main.rand.Next(40) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3249, 1, false, -1, false);
                    if (this.type == 463 && Main.rand.Next(25) == 0)
                    {
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3107, 1, false, -1, false);
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3108, Main.rand.Next(100, 201), false, -1, false);
                    }
                }
            }
            if (Main.bloodMoon && Main.hardMode && (Main.rand.Next(1000) == 0 && (double)this.value > 0.0))
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1314, 1, false, -1, false);
            if (this.type == 77 && Main.rand.Next(150) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 723, 1, false, -1, false);
            if (Main.rand.Next(100) == 0 || Main.expertMode && Main.rand.Next(100) == 0)
            {
                int Type1 = -1;
                int Type2 = -1;
                switch (this.type)
                {
                    case 182:
                    case 94:
                        Type1 = 892;
                        break;
                    case 231:
                    case 232:
                    case 233:
                    case 234:
                    case 235:
                    case 141:
                    case 176:
                    case 42:
                        Type1 = 887;
                        break;
                    case 269:
                    case 270:
                    case 271:
                    case 272:
                    case 102:
                    case 104:
                        Type1 = 885;
                        break;
                    case 273:
                    case 274:
                    case 275:
                    case 276:
                    case 77:
                        Type1 = 886;
                        break;
                    case 179:
                    case 83:
                    case 84:
                    case 34:
                        Type1 = 891;
                        break;
                    case 75:
                        Type1 = Main.rand.Next(2) != 0 ? 890 : 889;
                        if (Main.rand.Next(100) == 0)
                        {
                            Type2 = Type1 != 889 ? 889 : 890;
                            break;
                        }
                        break;
                    case 78:
                    case 82:
                        Type1 = 889;
                        break;
                    case 79:
                        Type1 = Main.rand.Next(2) != 0 ? 890 : 888;
                        if (Main.rand.Next(100) == 0)
                        {
                            Type2 = Type1 != 888 ? 888 : 890;
                            break;
                        }
                        break;
                    case 80:
                    case 93:
                    case 109:
                        Type1 = 893;
                        break;
                    case 81:
                        Type1 = 888;
                        break;
                    case 103:
                        Type1 = 890;
                        break;
                }
                if (Type1 != -1)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Type1, 1, false, -1, false);
                if (Type2 != -1)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Type2, 1, false, -1, false);
            }
            int num4 = 1;
            if (Main.expertMode && Main.rand.Next(2) == 0)
                num4 = 2;
            for (int index2 = 0; index2 < num4; ++index2)
            {
                if (this.type == 290)
                {
                    if (Main.rand.Next(15) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1513, 1, false, -1, false);
                    else if (Main.rand.Next(10) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 938, 1, false, -1, false);
                }
                if (this.type == 287 && Main.rand.Next(6) == 0)
                {
                    if (Main.rand.Next(2) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 963, 1, false, -1, false);
                    else
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 977, 1, false, -1, false);
                }
                if (this.type == 291)
                {
                    if (Main.rand.Next(12) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1300, 1, false, -1, false);
                    else if (Main.rand.Next(12) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1254, 1, false, -1, false);
                }
                if (this.type == 292)
                {
                    if (Main.rand.Next(12) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1514, 1, false, -1, false);
                    else if (Main.rand.Next(12) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 679, 1, false, -1, false);
                }
                if (this.type == 293 && Main.rand.Next(18) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 759, 1, false, -1, false);
                if ((this.type == 281 || this.type == 282) && Main.rand.Next(20) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1446, 1, false, -1, false);
                if ((this.type == 283 || this.type == 284) && Main.rand.Next(20) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1444, 1, false, -1, false);
                if ((this.type == 285 || this.type == 286) && Main.rand.Next(20) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1445, 1, false, -1, false);
                if (this.type >= 269 && this.type <= 280)
                {
                    if (Main.rand.Next(400) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1183, 1, false, -1, false);
                    else if (Main.rand.Next(300) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1266, 1, false, -1, false);
                    else if (Main.rand.Next(200) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 671, 1, false, -1, false);
                }
            }
            if (this.lifeMax > 100 && this.type != 288 && ((double)this.value > 0.0 && this.target >= 0) && (Main.hardMode && NPC.downedPlantBoss && Main.player[this.target].ZoneDungeon))
            {
                int maxValue2 = 13;
                if (Main.expertMode)
                    maxValue2 = 9;
                if (Main.rand.Next(maxValue2) == 0 && Main.wallDungeon[(int)Main.tile[(int)this.Center.X / 16, (int)this.Center.Y / 16].wall])
                    NPC.NewNPC((int)this.Center.X, (int)this.Center.Y, 288, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
            }
            if (this.type == 288)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1508, Main.rand.Next(1, 3), false, -1, false);
            if (this.type == 156 && Main.rand.Next(30) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 683, 1, false, -1, false);
            if ((this.type == 195 || this.type == 196) && (Main.expertMode || Main.rand.Next(2) == 0))
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3102, 1, false, -1, false);
            if (this.type == 245)
            {
                if (Main.expertMode)
                {
                    this.DropBossBags();
                }
                else
                {
                    if (Main.rand.Next(7) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2110, 1, false, -1, false);
                    switch (Main.rand.Next(8))
                    {
                        case 0:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1258, 1, false, -1, false);
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1261, Main.rand.Next(60, 100), false, 0, false);
                            break;
                        case 1:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1122, 1, false, -1, false);
                            break;
                        case 2:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 899, 1, false, -1, false);
                            break;
                        case 3:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1248, 1, false, -1, false);
                            break;
                        case 4:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1294, 1, false, -1, false);
                            break;
                        case 5:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1295, 1, false, -1, false);
                            break;
                        case 6:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1296, 1, false, -1, false);
                            break;
                        case 7:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1297, 1, false, -1, false);
                            break;
                    }
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2218, Main.rand.Next(4, 9), false, -1, false);
                }
                NPC.downedGolemBoss = true;
            }
            if (this.type == 471 && (Main.expertMode || Main.rand.Next(2) == 0))
            {
                if (Main.rand.Next(3) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3052, 1, false, -1, false);
                else if (Main.rand.Next(2) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3053, 1, false, -1, false);
                else
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3054, 1, false, -1, false);
            }
            if (this.type == 268)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1332, Main.rand.Next(2, 6), false, 0, false);
            if (this.type == 370)
            {
                NPC.downedFishron = true;
                if (Main.expertMode)
                {
                    this.DropBossBags();
                }
                else
                {
                    if (Main.rand.Next(7) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2588, 1, false, -1, false);
                    if (Main.rand.Next(15) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2609, 1, false, -1, false);
                    switch (Main.rand.Next(5))
                    {
                        case 0:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2611, 1, false, -1, false);
                            break;
                        case 1:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2624, 1, false, -1, false);
                            break;
                        case 2:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2622, 1, false, -1, false);
                            break;
                        case 3:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2621, 1, false, -1, false);
                            break;
                        case 4:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2623, 1, false, -1, false);
                            break;
                    }
                }
            }
            if (this.type == 109 && !NPC.downedClown)
            {
                NPC.downedClown = true;
                if (Main.netMode == 2)
                    NetMessage.SendData(7, -1, -1, "", 0, 0.0f, 0.0f, 0.0f, 0, 0, 0);
            }
            if (this.type == 153 && Main.rand.Next(17) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1328, 1, false, -1, false);
            if (this.type == 120 && Main.rand.Next(500) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1326, 1, false, -1, false);
            if (this.type == 49 && Main.rand.Next(250) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1325, 1, false, -1, false);
            if (this.type == 185 && Main.rand.Next(150) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 951, 1, false, -1, false);
            if (this.type == 44 && Main.rand.Next(50) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1320, 1, false, -1, false);
            if (this.type == 44 && Main.rand.Next(20) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 88, 1, false, -1, false);
            if (this.type == 110 && Main.rand.Next(80) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1321, 1, false, -1, false);
            if (this.type == 60 && Main.rand.Next(150) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1322, 1, false, -1, false);
            if (this.type == 151 && Main.rand.Next(50) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1322, 1, false, -1, false);
            if (this.type == 24 && Main.rand.Next(50) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1323, 1, false, -1, false);
            if (this.type == 109 && Main.rand.Next(30) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1324, Main.rand.Next(1, 5), false, -1, false);
            if (this.type == 163 || this.type == 238)
            {
                if (Main.rand.Next(40) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1308, 1, false, -1, false);
                if (Main.expertMode)
                {
                    if (Main.rand.Next(3) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(2, 4), false, 0, false);
                    else if (Main.rand.Next(2) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(1, 4), false, 0, false);
                    else
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, 1, false, 0, false);
                }
                else if (Main.rand.Next(4) != 0)
                {
                    if (Main.rand.Next(3) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(1, 4), false, 0, false);
                    else if (Main.rand.Next(2) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(1, 3), false, 0, false);
                    else
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, 1, false, 0, false);
                }
            }
            if (Main.hardMode && (this.type == 197 || this.type == 206 || (this.type == 169 || this.type == 154)) && Main.rand.Next(180) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1306, 1, false, -1, false);
            if (this.type == 244)
            {
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
                if (Main.rand.Next(2) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
                if (Main.rand.Next(2) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
                if (Main.rand.Next(2) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 662, Main.rand.Next(30, 60), false, 0, false);
            }
            if (this.type == 250 && Main.rand.Next(15) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1244, 1, false, -1, false);
            if (this.type == 172)
            {
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 754, 1, false, -1, false);
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 755, 1, false, -1, false);
            }
            if (this.type == 110 && Main.rand.Next(200) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 682, 1, false, -1, false);
            if (this.type == 154 && Main.rand.Next(100) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1253, 1, false, -1, false);
            if ((this.type == 169 || this.type == 206) && Main.rand.Next(50) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 726, 1, false, -1, false);
            if (this.type == 243)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2161, 1, false, -1, false);
            if (this.type == 480 && Main.rand.Next(50) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3269, 1, false, -1, false);
            if (this.type == 198 || this.type == 199 || this.type == 226)
            {
                if (Main.rand.Next(1000) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1172, 1, false, -1, false);
                if (Main.rand.Next(50) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1293, 1, false, -1, false);
                if (Main.rand.Next(7) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2766, Main.rand.Next(1, 3), false, -1, false);
            }
            if (this.type == 78 || this.type == 79 || this.type == 80)
            {
                if (Main.rand.Next(75) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 870, 1, false, -1, false);
                if (Main.rand.Next(75) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 871, 1, false, -1, false);
                if (Main.rand.Next(75) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 872, 1, false, -1, false);
            }
            if (this.type == 473)
            {
                switch (Main.rand.Next(5))
                {
                    case 0:
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3008, 1, false, -1, false);
                        break;
                    case 1:
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3014, 1, false, -1, false);
                        break;
                    case 2:
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3012, 1, false, -1, false);
                        break;
                    case 3:
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3015, 1, false, -1, false);
                        break;
                    case 4:
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3023, 1, false, -1, false);
                        break;
                }
            }
            else if (this.type == 474)
            {
                switch (Main.rand.Next(5))
                {
                    case 0:
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3006, 1, false, -1, false);
                        break;
                    case 1:
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3007, 1, false, -1, false);
                        break;
                    case 2:
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3013, 1, false, -1, false);
                        break;
                    case 3:
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3016, 1, false, -1, false);
                        break;
                    case 4:
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3020, 1, false, -1, false);
                        break;
                }
            }
            else if (this.type == 475)
            {
                switch (Main.rand.Next(4))
                {
                    case 0:
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3029, 1, false, -1, false);
                        break;
                    case 1:
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3030, 1, false, -1, false);
                        break;
                    case 2:
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3051, 1, false, -1, false);
                        break;
                    case 3:
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3022, 1, false, -1, false);
                        break;
                }
            }
            else
            {
                int num5 = this.type;
            }
            if (this.type == 473 || this.type == 474 || (this.type == 475 || this.type == 476))
            {
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 499, Main.rand.Next(5, 11), false, -1, false);
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 500, Main.rand.Next(5, 16), false, -1, false);
            }
            if (this.type == 85 && (double)this.value > 0.0)
            {
                if ((double)this.ai[3] == 4.0)
                {
                    if (Main.rand.Next(20) == 0)
                    {
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1312, 1, false, -1, false);
                    }
                    else
                    {
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 676, 1, false, -1, false);
                                break;
                            case 1:
                                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 725, 1, false, -1, false);
                                break;
                            case 2:
                                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1264, 1, false, -1, false);
                                break;
                        }
                    }
                }
                else
                {
                    switch (Main.rand.Next(6))
                    {
                        case 0:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 437, 1, false, -1, false);
                            break;
                        case 1:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 517, 1, false, -1, false);
                            break;
                        case 2:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 535, 1, false, -1, false);
                            break;
                        case 3:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 536, 1, false, -1, false);
                            break;
                        case 4:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 532, 1, false, -1, false);
                            break;
                        default:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 554, 1, false, -1, false);
                            break;
                    }
                }
            }
            if (this.type == 87)
            {
                if (Main.expertMode)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 575, Main.rand.Next(5, 11) * 2, false, 0, false);
                else
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 575, Main.rand.Next(5, 11), false, 0, false);
            }
            if (this.type >= 212 && this.type <= 215)
            {
                if (Main.rand.Next(8000) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false);
                if (Main.rand.Next(4000) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false);
                if (Main.rand.Next(2000) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false);
                if (Main.rand.Next(2000) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2584, 1, false, -1, false);
                if (Main.rand.Next(1000) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3033, 1, false, -1, false);
                if (Main.rand.Next(200) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false);
                if (Main.rand.Next(500) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1277, 1, false, 0, false);
                if (Main.rand.Next(500) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1278, 1, false, 0, false);
                if (Main.rand.Next(500) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1279, 1, false, 0, false);
                if (Main.rand.Next(500) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1280, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1704, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1705, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1710, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1716, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1720, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2379, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2389, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2405, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2843, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2663, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2238, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2133, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2137, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2143, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2147, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2151, 1, false, 0, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2155, 1, false, 0, false);
                if (Main.rand.Next(500) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3263, 1, false, 0, false);
                if (Main.rand.Next(500) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3264, 1, false, 0, false);
                if (Main.rand.Next(500) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3265, 1, false, 0, false);
            }
            else if (this.type == 216)
            {
                if (Main.rand.Next(2000) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false);
                if (Main.rand.Next(1000) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false);
                if (Main.rand.Next(500) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false);
                if (Main.rand.Next(500) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2584, 1, false, -1, false);
                if (Main.rand.Next(250) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3033, 1, false, -1, false);
                if (Main.rand.Next(50) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false);
            }
            else if (this.type == 491)
            {
                if (Main.rand.Next(400) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false);
                else if (Main.rand.Next(200) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false);
                else if (Main.rand.Next(100) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false);
                else if (Main.rand.Next(100) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2584, 1, false, -1, false);
                else if (Main.rand.Next(50) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3033, 1, false, -1, false);
                else if (Main.rand.Next(10) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false);
            }
            if ((this.type == 161 || this.type == 431) && Main.rand.Next(50) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 803 + Main.rand.Next(3), 1, false, 0, false);
            if (this.type == 217)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1115, 1, false, -1, false);
            if (this.type == 218)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1116, 1, false, -1, false);
            if (this.type == 219)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1117, 1, false, -1, false);
            if (this.type == 220)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1118, 1, false, -1, false);
            if (this.type == 221)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1119, 1, false, -1, false);
            if (this.type == 167 && Main.rand.Next(50) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 879, 1, false, -1, false);
            if (this.type == 143 || this.type == 144 || this.type == 145)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 593, Main.rand.Next(5, 11), false, 0, false);
            if (this.type == 79)
            {
                if (Main.rand.Next(10) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false);
            }
            else if (this.type == 80 && Main.rand.Next(10) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 528, 1, false, 0, false);
            if (this.type == 525)
            {
                if (Main.rand.Next(3) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 522, Main.rand.Next(1, 4), false, 0, false);
                if (Main.rand.Next(15) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false);
            }
            if (this.type == 526)
            {
                if (Main.rand.Next(3) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1332, Main.rand.Next(1, 4), false, 0, false);
                if (Main.rand.Next(15) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false);
            }
            if (this.type == 527 && Main.rand.Next(15) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 528, 1, false, 0, false);
            if (this.type == 532 && Main.rand.Next(3) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3380, 1, false, 0, false);
            if (this.type == 528)
            {
                if (Main.rand.Next(25) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2802, 1, false, 0, false);
            }
            else if (this.type == 529 && Main.rand.Next(25) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2801, 1, false, 0, false);
            if ((this.type == 49 || this.type == 51 || (this.type == 150 || this.type == 93)) && Main.rand.Next(100) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 18, 1, false, -1, false);
            if ((this.type == 16 || this.type == 185 || (this.type == 167 || this.type == 197)) && Main.rand.Next(50) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 393, 1, false, -1, false);
            if (this.type == 58 && Main.rand.Next(75) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 393, 1, false, -1, false);
            if (this.type >= 494 && this.type <= 506)
            {
                if (Main.rand.Next(80) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 18, 1, false, -1, false);
                else if (Main.rand.Next(80) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 393, 1, false, -1, false);
                else if (Main.rand.Next(25) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3285, 1, false, -1, false);
            }
            if (this.type == 21 || this.type == 201 || (this.type == 202 || this.type == 203) || (this.type == 322 || this.type == 323 || this.type == 324) || this.type >= 449 && this.type <= 452)
            {
                if (Main.rand.Next(100) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 954, 1, false, -1, false);
                else if (Main.rand.Next(200) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 955, 1, false, -1, false);
                else if (Main.rand.Next(200) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1166, 1, false, -1, false);
                else if (Main.rand.Next(500) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1274, 1, false, -1, false);
            }
            else if (this.type == 6)
            {
                if (Main.rand.Next(175) == 0)
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 956, 1, false, -1, false);
                            break;
                        case 1:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 957, 1, false, -1, false);
                            break;
                        default:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 958, 1, false, -1, false);
                            break;
                    }
                }
            }
            else if (this.type == 42 || this.type == 43 || this.type >= 231 && this.type <= 235)
            {
                if (Main.rand.Next(100) == 0)
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 960, 1, false, -1, false);
                            break;
                        case 1:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 961, 1, false, -1, false);
                            break;
                        default:
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 962, 1, false, -1, false);
                            break;
                    }
                }
            }
            else if (this.type == 31 || this.type == 32 || (this.type == 294 || this.type == 295) || this.type == 296)
            {
                if (Main.rand.Next(450) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 959, 1, false, -1, false);
                if (Main.rand.Next(300) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1307, 1, false, -1, false);
            }
            if ((this.type == 174 || this.type == 179 || (this.type == 182 || this.type == 183)) && Main.rand.Next(200) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 996, 1, false, 0, false);
            if (this.type == 101 || this.type == 98)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 522, Main.rand.Next(2, 6), false, 0, false);
            if (this.type == 86)
            {
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 526, 1, false, 0, false);
                if (Main.rand.Next(100) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 856, 1, false, 0, false);
            }
            if (this.type == 186 || this.type == 432)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, Main.rand.Next(1, 10), false, 0, false);
            if (this.type == 225)
            {
                if (Main.rand.Next(45) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1243, 1, false, 0, false);
                else
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(2, 7), false, 0, false);
            }
            if (this.type == 537)
            {
                int Stack = Main.rand.Next(1, 3);
                if (Main.expertMode)
                {
                    if (this.netID == -7)
                        ++Stack;
                    if (this.netID == -8 || this.netID == -9)
                        Stack += Main.rand.Next(2);
                }
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Stack, false, 0, false);
                int maxValue2 = 8000;
                if (Main.expertMode)
                    maxValue2 = (int)((double)maxValue2 * 0.7);
                if (Main.rand.Next(maxValue2) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1309, 1, false, -1, false);
            }
            if (this.type >= 333 && this.type <= 336 && Main.rand.Next(20) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1906, 1, false, 0, false);
            if (this.netID == -4)
            {
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3111, Main.rand.Next(25, 51), false, 0, false);
                int maxValue2 = 100;
                if (Main.expertMode)
                    maxValue2 = (int)((double)maxValue2 * 0.7);
                if (Main.rand.Next(maxValue2) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1309, 1, false, -1, false);
            }
            else if (this.type == 1 || this.type == 16 || (this.type == 138 || this.type == 141) || (this.type == 147 || this.type == 184 || (this.type == 187 || this.type == 204)) || (this.type == 302 || this.type >= 333 && this.type <= 336 || this.type == 535))
            {
                int Stack = Main.rand.Next(1, 3);
                if (Main.expertMode)
                {
                    if (this.netID == -7)
                        ++Stack;
                    if (this.netID == -8 || this.netID == -9)
                        Stack += Main.rand.Next(2);
                }
                int number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Stack, false, 0, false);
                if (this.netID <= 1 && this.netID != -1 && (this.netID != -2 && this.netID != -5) && this.netID != -6)
                {
                    Main.item[number].color = this.color;
                    NetMessage.SendData(88, -1, -1, "", number, 1f, 0.0f, 0.0f, 0, 0, 0);
                }
                int maxValue2 = 10000;
                if (Main.expertMode)
                    maxValue2 = (int)((double)maxValue2 * 0.7);
                if (Main.rand.Next(maxValue2) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1309, 1, false, -1, false);
            }
            if (this.type == 75)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 501, Main.rand.Next(1, 4), false, 0, false);
            if (this.type == 81 || this.type == 183)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(2, 5), false, 0, false);
            if (this.type == 122)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(5, 11), false, 0, false);
            if (this.type == 71)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 327, 1, false, 0, false);
            if (this.type == 2 || this.type == 317 || (this.type == 318 || this.type == 190) || (this.type == 191 || this.type == 192 || (this.type == 193 || this.type == 194)) || this.type == 133)
            {
                if (Main.rand.Next(3) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 38, 1, false, 0, false);
                else if (Main.rand.Next(100) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 236, 1, false, 0, false);
            }
            if (this.type == 104 && Main.rand.Next(60) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 485, 1, false, -1, false);
            if (this.type == 58)
            {
                if (Main.rand.Next(250) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 263, 1, false, 0, false);
                else if (Main.rand.Next(30) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 118, 1, false, 0, false);
            }
            if (this.type == 102 && Main.rand.Next(250) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 263, 1, false, 0, false);
            if (this.type == 3 || this.type == 331 || (this.type == 332 || this.type == 132) || (this.type == 161 || this.type == 186 || (this.type == 187 || this.type == 188)) || (this.type == 189 || this.type == 200 || (this.type == 223 || this.type == 319) || (this.type == 320 || this.type == 321 || this.type >= 430 && this.type <= 436)))
            {
                if (Main.rand.Next(50) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 216, 1, false, -1, false);
                if (Main.rand.Next(250) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1304, 1, false, -1, false);
            }
            if ((this.type == 489 || this.type == 490) && (Main.expertMode || Main.rand.Next(2) == 0))
            {
                if (Main.rand.Next(75) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3212, 1, false, -1, false);
                if (Main.rand.Next(100) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3213, 1, false, -1, false);
            }
            if (this.type == 223 && Main.rand.Next(20) == 0)
            {
                if (Main.rand.Next(2) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1135, 1, false, -1, false);
                else
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1136, 1, false, -1, false);
            }
            if (this.type == 66)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 267, 1, false, 0, false);
            if ((this.type == 62 || this.type == 66) && Main.rand.Next(35) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 272, 1, false, -1, false);
            if ((double)this.value > 0.0 && Main.hardMode && (double)this.position.Y / 16.0 < Main.worldSurface + 10.0 && (((double)this.Center.X / 16.0 < 380.0 || (double)this.Center.X / 16.0 > (double)(Main.maxTilesX - 380)) && Main.rand.Next(100) == 0))
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1315, 1, false, 0, false);
            if (this.type == 52)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 251, 1, false, 0, false);
            if (this.type == 53)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 239, 1, false, 0, false);
            if (this.type == 536)
            {
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3478, 1, false, 0, false);
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3479, 1, false, 0, false);
            }
            if (this.type == 54)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 260, 1, false, 0, false);
            if (this.type == 368)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2222, 1, false, 0, false);
            if ((this.type == 69 || this.type == 509 || this.type == 508) && Main.rand.Next(3) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 323, Main.rand.Next(1, 3), false, 0, false);
            if (this.type == 73)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 362, Main.rand.Next(1, 3), false, 0, false);
            if ((this.type == 483 || this.type == 482) && Main.rand.Next(30) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3109, 1, false, 0, false);
            if ((this.type == 6 || this.type == 94) && Main.rand.Next(3) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 68, 1, false, 0, false);
            if ((this.type == 181 || this.type == 173 || (this.type == 239 || this.type == 182) || this.type == 240) && Main.rand.Next(3) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1330, 1, false, 0, false);
            if (this.type == 7 || this.type == 8 || this.type == 9)
            {
                if (Main.rand.Next(3) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 68, Main.rand.Next(1, 3), false, 0, false);
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 69, Main.rand.Next(3, 9), false, 0, false);
            }
            if ((this.type == 10 || this.type == 11 || (this.type == 12 || this.type == 95) || (this.type == 96 || this.type == 97)) && (Main.rand.Next(50) == 0 || Main.expertMode && Main.rand.Next(50) == 0))
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 215, 1, false, 0, false);
            if (this.type == 47 && Main.rand.Next(75) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 243, 1, false, 0, false);
            if (this.type == 4)
            {
                if (Main.expertMode)
                {
                    this.DropBossBags();
                }
                else
                {
                    if (Main.rand.Next(7) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2112, 1, false, -1, false);
                    if (Main.rand.Next(40) == 0 || Main.expertMode && Main.rand.Next(20) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1299, 1, false, 0, false);
                    if (Main.expertMode)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3097, 1, false, -1, false);
                    int num1 = 1;
                    if (Main.expertMode)
                        num1 = 2;
                    for (int index2 = 0; index2 < num1; ++index2)
                    {
                        if (WorldGen.crimson)
                        {
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, Main.rand.Next(20) + 10, false, 0, false);
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, Main.rand.Next(20) + 10, false, 0, false);
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, Main.rand.Next(20) + 10, false, 0, false);
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2171, Main.rand.Next(3) + 1, false, 0, false);
                        }
                        else
                        {
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 47, Main.rand.Next(30) + 20, false, 0, false);
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, Main.rand.Next(20) + 10, false, 0, false);
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, Main.rand.Next(20) + 10, false, 0, false);
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, Main.rand.Next(20) + 10, false, 0, false);
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 59, Main.rand.Next(3) + 1, false, 0, false);
                        }
                    }
                }
            }
            if (this.type == 266)
            {
                if (Main.expertMode)
                {
                    this.DropBossBags();
                }
                else
                {
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, Main.rand.Next(20, 46), false, 0, false);
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, Main.rand.Next(20, 46), false, 0, false);
                    if (Main.expertMode)
                    {
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, Main.rand.Next(30, 51), false, 0, false);
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, Main.rand.Next(30, 51), false, 0, false);
                    }
                    if (Main.rand.Next(7) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2104, 1, false, -1, false);
                    if (Main.rand.Next(20) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3060, 1, false, 0, false);
                    if (Main.expertMode)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3223, 1, false, 0, false);
                }
            }
            if (this.type == 267 && NPC.AnyNPCs(266))
            {
                int Stack1 = Main.rand.Next(2, 6);
                if (Main.rand.Next(3) != 0)
                {
                    if (Main.expertMode)
                        Stack1 += Main.rand.Next(2, 6);
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1329, Stack1, false, 0, false);
                }
                if (Main.rand.Next(3) != 0)
                {
                    int Stack2 = Main.rand.Next(5, 13);
                    if (Main.expertMode)
                        Stack2 += Main.rand.Next(6, 14);
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, Stack2, false, 0, false);
                }
                if (Main.rand.Next(2) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLifeMax2)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
            }
            if (this.type == 13 || this.type == 14 || this.type == 15)
            {
                int Stack = Main.rand.Next(1, 3);
                if (Main.rand.Next(2) == 0)
                {
                    if (Main.expertMode)
                        ++Stack;
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 86, Stack, false, 0, false);
                }
                if (Main.rand.Next(2) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, Main.rand.Next(2, 6), false, 0, false);
                if (this.boss)
                {
                    if (Main.expertMode)
                    {
                        this.DropBossBags();
                    }
                    else
                    {
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, Main.rand.Next(10, 30), false, 0, false);
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, Main.rand.Next(10, 31), false, 0, false);
                        if (Main.expertMode)
                        {
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, Main.rand.Next(10, 30), false, 0, false);
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, Main.rand.Next(10, 31), false, 0, false);
                        }
                        if (Main.expertMode)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3224, 1, false, 0, false);
                        if (Main.rand.Next(20) == 0)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 994, 1, false, 0, false);
                        if (Main.rand.Next(7) == 0)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2111, 1, false, -1, false);
                    }
                }
                if (Main.rand.Next(4) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLifeMax2)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
            }
            if (this.type == 222)
            {
                if (Main.expertMode)
                {
                    this.DropBossBags();
                }
                else
                {
                    if (Main.rand.Next(7) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2108, 1, false, -1, false);
                    int Type1 = Main.rand.Next(3);
                    switch (Type1)
                    {
                        case 0:
                            Type1 = 1121;
                            break;
                        case 1:
                            Type1 = 1123;
                            break;
                        case 2:
                            Type1 = 2888;
                            break;
                    }
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Type1, 1, false, -1, false);
                    if (Main.expertMode)
                    {
                        int Type2 = Main.rand.Next(3);
                        switch (Type2)
                        {
                            case 0:
                                Type2 = 1121;
                                break;
                            case 1:
                                Type2 = 1123;
                                break;
                            case 2:
                                Type2 = 2888;
                                break;
                        }
                        while (Type2 == Type1)
                        {
                            Type2 = Main.rand.Next(3);
                            switch (Type2)
                            {
                                case 0:
                                    Type2 = 1121;
                                    continue;
                                case 1:
                                    Type2 = 1123;
                                    continue;
                                case 2:
                                    Type2 = 2888;
                                    continue;
                                default:
                                    continue;
                            }
                        }
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Type2, 1, false, -1, false);
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1132, 1, false, -1, false);
                    }
                    else if (Main.rand.Next(3) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1132, 1, false, -1, false);
                    if (Main.expertMode && Main.rand.Next(15) == 0 || Main.rand.Next(15) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1170, 1, false, 0, false);
                    if (Main.expertMode && Main.rand.Next(20) == 0 || Main.rand.Next(20) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2502, 1, false, 0, false);
                    if (Main.expertMode)
                    {
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1129, 1, false, 0, false);
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(842, 845), 1, false, 0, false);
                    }
                    else if (Main.rand.Next(3) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1129, 1, false, 0, false);
                    else if (Main.rand.Next(2) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(842, 845), 1, false, 0, false);
                    if (Main.rand.Next(4) != 0 || Main.expertMode)
                    {
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1130, Main.rand.Next(10, 30), false, 0, false);
                        if (Main.expertMode)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1130, Main.rand.Next(10, 30), false, 0, false);
                    }
                    if (Main.expertMode)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2431, Main.rand.Next(44, 67), false, 0, false);
                    else
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2431, Main.rand.Next(16, 27), false, 0, false);
                }
                NPC.downedQueenBee = true;
                if (Main.netMode == 2)
                    NetMessage.SendData(7, -1, -1, "", 0, 0.0f, 0.0f, 0.0f, 0, 0, 0);
            }
            if (this.type == 35)
            {
                if (Main.expertMode)
                    this.DropBossBags();
                else if (Main.rand.Next(7) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1281, 1, false, -1, false);
                else if (Main.rand.Next(7) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1273, 1, false, -1, false);
                else if (Main.rand.Next(7) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1313, 1, false, -1, false);
            }
            if (this.type == 113)
            {
                if (Main.expertMode)
                {
                    this.DropBossBags();
                }
                else
                {
                    if (Main.rand.Next(7) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2105, 1, false, -1, false);
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 367, 1, false, -1, false);
                    if (Main.expertMode)
                    {
                        int num1 = Main.rand.Next(4);
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num1 != 3 ? 489 + num1 : 2998, 1, false, -1, false);
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 514, 1, false, -1, false);
                                break;
                            case 1:
                                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 426, 1, false, -1, false);
                                break;
                            case 2:
                                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 434, 1, false, -1, false);
                                break;
                        }
                    }
                    else if (Main.rand.Next(2) == 0)
                    {
                        int num1 = Main.rand.Next(4);
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num1 != 3 ? 489 + num1 : 2998, 1, false, -1, false);
                    }
                    else
                    {
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 514, 1, false, -1, false);
                                break;
                            case 1:
                                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 426, 1, false, -1, false);
                                break;
                            case 2:
                                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 434, 1, false, -1, false);
                                break;
                        }
                    }
                }
                if (Main.netMode != 1)
                {
                    int num1 = (int)((double)this.position.X + (double)(this.width / 2)) / 16;
                    int num2 = (int)((double)this.position.Y + (double)(this.height / 2)) / 16;
                    int num6 = this.width / 2 / 16 + 1;
                    for (int index2 = num1 - num6; index2 <= num1 + num6; ++index2)
                    {
                        for (int index3 = num2 - num6; index3 <= num2 + num6; ++index3)
                        {
                            if ((index2 == num1 - num6 || index2 == num1 + num6 || (index3 == num2 - num6 || index3 == num2 + num6)) && !Main.tile[index2, index3].active())
                            {
                                Main.tile[index2, index3].type = WorldGen.crimson ? (ushort)347 : (ushort)140;
                                Main.tile[index2, index3].active(true);
                            }
                            Main.tile[index2, index3].lava(false);
                            Main.tile[index2, index3].liquid = (byte)0;
                            if (Main.netMode == 2)
                                NetMessage.SendTileSquare(-1, index2, index3, 1);
                            else
                                WorldGen.SquareTileFrame(index2, index3, true);
                        }
                    }
                }
            }
            if (this.type == 439)
            {
                NPC.downedAncientCultist = true;
                if (Main.rand.Next(7) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3372, 1, false, -1, false);
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3549, 1, false, -1, false);
                WorldGen.TriggerLunarApocalypse();
            }
            if (this.type == 398)
            {
                NPC.downedMoonlord = true;
                NPC.LunarApocalypseIsUp = false;
                if (Main.expertMode)
                {
                    this.DropBossBags();
                }
                else
                {
                    if (Main.rand.Next(7) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3373, 1, false, -1, false);
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3384, 1, false, -1, false);
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3460, Main.rand.Next(70, 91), false, -1, false);
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Utils.SelectRandom<int>(Main.rand, 3063, 3389, 3065, 1553, 3546, 3541, 3570, 3571, 3569), 1, false, -1, false);
                }
            }
            switch (this.type)
            {
                case 507:
                    int num7 = Main.rand.Next(25, 41) / 2;
                    if (Main.expertMode)
                        num7 = (int)((double)num7 * 1.5);
                    for (int index2 = 0; index2 < num7; ++index2)
                        Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3457, Main.rand.Next(1, 4), false, 0, false);
                    NPC.downedTowerNebula = true;
                    NPC.TowerActiveNebula = false;
                    WorldGen.UpdateLunarApocalypse();
                    WorldGen.MessageLunarApocalypse();
                    break;
                case 517:
                    int num8 = Main.rand.Next(25, 41) / 2;
                    if (Main.expertMode)
                        num8 = (int)((double)num8 * 1.5);
                    for (int index2 = 0; index2 < num8; ++index2)
                        Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3458, Main.rand.Next(1, 4), false, 0, false);
                    NPC.downedTowerSolar = true;
                    NPC.TowerActiveSolar = false;
                    WorldGen.UpdateLunarApocalypse();
                    WorldGen.MessageLunarApocalypse();
                    break;
                case 518:
                case 412:
                case 413:
                case 414:
                case 415:
                case 416:
                case 417:
                case 418:
                case 419:
                    if (NPC.ShieldStrengthTowerSolar > 0)
                    {
                        Projectile.NewProjectile(this.Center.X, this.Center.Y, 0.0f, 0.0f, 629, 0, 0.0f, Main.myPlayer, (float)NPC.FindFirstNPC(517), 0.0f);
                        break;
                    }
                    break;
                case 402:
                case 405:
                case 407:
                case 409:
                case 411:
                    if ((this.type != 406 || Main.rand.Next(3) == 0) && NPC.ShieldStrengthTowerStardust > 0)
                    {
                        Projectile.NewProjectile(this.Center.X, this.Center.Y, 0.0f, 0.0f, 629, 0, 0.0f, Main.myPlayer, (float)NPC.FindFirstNPC(493), 0.0f);
                        break;
                    }
                    break;
                case 420:
                case 421:
                case 423:
                case 424:
                    if (NPC.ShieldStrengthTowerNebula > 0)
                    {
                        Projectile.NewProjectile(this.Center.X, this.Center.Y, 0.0f, 0.0f, 629, 0, 0.0f, Main.myPlayer, (float)NPC.FindFirstNPC(507), 0.0f);
                        break;
                    }
                    break;
                case 422:
                    int num9 = Main.rand.Next(25, 41) / 2;
                    if (Main.expertMode)
                        num9 = (int)((double)num9 * 1.5);
                    for (int index2 = 0; index2 < num9; ++index2)
                        Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3456, Main.rand.Next(1, 4), false, 0, false);
                    NPC.downedTowerVortex = true;
                    NPC.TowerActiveVortex = false;
                    WorldGen.UpdateLunarApocalypse();
                    WorldGen.MessageLunarApocalypse();
                    break;
                case 425:
                case 426:
                case 427:
                case 429:
                    if (NPC.ShieldStrengthTowerVortex > 0)
                    {
                        Projectile.NewProjectile(this.Center.X, this.Center.Y, 0.0f, 0.0f, 629, 0, 0.0f, Main.myPlayer, (float)NPC.FindFirstNPC(422), 0.0f);
                        break;
                    }
                    break;
                case 493:
                    int num10 = Main.rand.Next(25, 41) / 2;
                    if (Main.expertMode)
                        num10 = (int)((double)num10 * 1.5);
                    for (int index2 = 0; index2 < num10; ++index2)
                        Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3459, Main.rand.Next(1, 4), false, 0, false);
                    NPC.downedTowerStardust = true;
                    NPC.TowerActiveStardust = false;
                    WorldGen.UpdateLunarApocalypse();
                    WorldGen.MessageLunarApocalypse();
                    break;
            }
            switch (this.type)
            {
                case 381:
                case 382:
                case 383:
                case 385:
                case 386:
                case 389:
                case 390:
                case 520:
                    if (Main.rand.Next(8) == 0)
                    {
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2860, Main.rand.Next(8, 21), false, 0, false);
                        break;
                    }
                    break;
            }
            switch (this.type)
            {
                case 383:
                case 386:
                case 389:
                    if (Main.rand.Next(200) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2806, 1, false, 0, false);
                    if (Main.rand.Next(200) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2807, 1, false, 0, false);
                    if (Main.rand.Next(200) == 0)
                    {
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2808, 1, false, 0, false);
                        break;
                    }
                    break;
            }
            switch (this.type)
            {
                case 381:
                case 382:
                case 385:
                case 390:
                    if (Main.rand.Next(200) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2803, 1, false, 0, false);
                    if (Main.rand.Next(200) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2804, 1, false, 0, false);
                    if (Main.rand.Next(200) == 0)
                    {
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2805, 1, false, 0, false);
                        break;
                    }
                    break;
            }
            if (this.type == 395)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Utils.SelectRandom<int>(Main.rand, 2797, 2749, 2795, 2798, 2796, 2882, 2880, 2769, 2800), 1, 0 != 0, 0, 0 != 0);
            if (this.type == 390 && Main.rand.Next(100) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2771, 1, false, 0, false);
            if ((this.type == 116 || this.type == 117 || (this.type == 118 || this.type == 119)) && (!Main.expertMode || Main.rand.Next(5) == 0))
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
            if (this.type == 139 && Main.rand.Next(2) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
            if (this.type == 63 || this.type == 64 || this.type == 103)
            {
                if (Main.rand.Next(100) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1303, 1, false, -1, false);
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 282, Main.rand.Next(1, 5), false, 0, false);
            }
            if (this.type == 481 && Main.rand.Next(2) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3094, Main.rand.Next(40, 81), false, 0, false);
            if (this.type == 481 && Main.rand.Next(20) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3187 + Main.rand.Next(3), 1, false, 0, false);
            if (this.type == 21 || this.type == 44 || (this.type == 167 || this.type == 201) || (this.type == 202 || this.type == 481 || (this.type == 203 || this.type == 322)) || (this.type == 323 || this.type == 324 || this.type >= 449 && this.type <= 452))
            {
                if (Main.rand.Next(25) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 118, 1, false, 0, false);
                else if (this.type == 44)
                {
                    if (Main.rand.Next(20) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(410, 412), 1, false, 0, false);
                    else
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 166, Main.rand.Next(1, 4), false, 0, false);
                }
            }
            if (this.type == 45)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 238, 1, false, 0, false);
            if (this.type == 50)
            {
                if (Main.slimeRain)
                {
                    Main.StopSlimeRain(true);
                    AchievementsHelper.NotifyProgressionEvent(16);
                }
                if (Main.expertMode)
                {
                    this.DropBossBags();
                }
                else
                {
                    if (Main.rand.Next(4) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2430, 1, false, 0, false);
                    if (Main.rand.Next(7) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2493, 1, false, -1, false);
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(256, 259), 1, false, 0, false);
                    Main.rand.Next(2);
                    if (Main.rand.Next(3) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2585, 1, false, 0, false);
                    else
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2610, 1, false, 0, false);
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 998, 1, false, 0, false);
                }
                NPC.downedSlimeKing = true;
                if (Main.netMode == 2)
                    NetMessage.SendData(7, -1, -1, "", 0, 0.0f, 0.0f, 0.0f, 0, 0, 0);
            }
            if (this.type == 23 && Main.rand.Next(50) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 116, 1, false, 0, false);
            if (this.type == 24 && Main.rand.Next(250) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 244, 1, false, 0, false);
            if (this.type == 31 || this.type == 32 || this.type == 34)
            {
                if (Main.rand.Next(250) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 932, 1, false, 0, false);
                else if (Main.rand.Next(100) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3095, 1, false, 0, false);
                else if (Main.rand.Next(65) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 327, 1, false, 0, false);
                else if (!Main.expertMode)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 154, Main.rand.Next(1, 4), false, 0, false);
                if (Main.expertMode)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 154, Main.rand.Next(2, 7), false, 0, false);
            }
            if (this.type == 26 || this.type == 27 || (this.type == 28 || this.type == 29) || this.type == 111)
            {
                if (Main.rand.Next(200) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 160, 1, false, 0, false);
                else if (Main.rand.Next(2) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 161, Main.rand.Next(1, 6), false, 0, false);
            }
            if (this.type == 175 && Main.rand.Next(100) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1265, 1, false, -1, false);
            if ((this.type == 42 || this.type >= 231 && this.type <= 235) && (Main.expertMode || Main.rand.Next(3) != 0))
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 209, 1, false, 0, false);
            if (this.type == 204 && (Main.expertMode || Main.rand.Next(2) == 0))
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 209, 1, false, 0, false);
            if (this.type == 43 && (Main.expertMode || Main.rand.Next(2) == 0))
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 210, 1, false, 0, false);
            if (this.type == 65)
            {
                if (Main.rand.Next(50) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 268, 1, false, 0, false);
                else
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 319, 1, false, 0, false);
            }
            if (this.type == 48 && Main.rand.Next(2) == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 320, 1, false, 0, false);
            if (this.type == 125 || this.type == 126)
            {
                int Type = 125;
                if (this.type == 125)
                    Type = 126;
                if (!NPC.AnyNPCs(Type))
                {
                    if (Main.expertMode)
                    {
                        this.DropBossBags();
                    }
                    else
                    {
                        if (Main.rand.Next(7) == 0)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2106, 1, false, -1, false);
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 549, Main.rand.Next(25, 41), false, 0, false);
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false);
                    }
                }
                else
                {
                    this.value = 0.0f;
                    this.boss = false;
                }
            }
            else if (Main.expertMode)
            {
                if (this.type == (int)sbyte.MaxValue || this.type == 134)
                    this.DropBossBags();
            }
            else if (this.type == (int)sbyte.MaxValue)
            {
                if (Main.rand.Next(7) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2107, 1, false, -1, false);
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 547, Main.rand.Next(25, 41), false, 0, false);
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false);
            }
            else if (this.type == 134)
            {
                if (Main.rand.Next(7) == 0)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2113, 1, false, -1, false);
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 548, Main.rand.Next(25, 41), false, 0, false);
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false);
            }
            if (this.type == 262)
            {
                if (Main.expertMode)
                {
                    this.DropBossBags();
                }
                else
                {
                    if (Main.rand.Next(7) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2109, 1, false, -1, false);
                    if (Main.expertMode)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1141, Main.rand.Next(2, 4), false, -1, false);
                    else
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1141, 1, false, -1, false);
                    if (Main.rand.Next(20) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1182, 1, false, -1, false);
                    if (Main.rand.Next(50) == 0 || Main.expertMode && Main.rand.Next(50) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1305, 1, false, -1, false);
                    if (Main.rand.Next(4) == 0 || Main.expertMode)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1157, 1, false, -1, false);
                    if (Main.rand.Next(10) == 0)
                        Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3021, 1, false, -1, false);
                    int num1 = 1;
                    if (Main.expertMode)
                        num1 = 2;
                    int num2 = 0;
                    for (int index2 = 0; index2 < num1; ++index2)
                    {
                        int num6 = Main.rand.Next(7);
                        if (!NPC.downedPlantBoss)
                            num6 = 0;
                        if (index2 == 0)
                        {
                            num2 = num6;
                        }
                        else
                        {
                            while (num2 == num6)
                                num6 = Main.rand.Next(6);
                        }
                        if (num6 == 0)
                        {
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 758, 1, false, -1, false);
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 771, Main.rand.Next(50, 150), false, 0, false);
                        }
                        else if (num6 == 1)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1255, 1, false, -1, false);
                        else if (num6 == 2)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 788, 1, false, -1, false);
                        else if (num6 == 3)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1178, 1, false, -1, false);
                        else if (num6 == 4)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1259, 1, false, -1, false);
                        else if (num6 == 5)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1155, 1, false, -1, false);
                        else if (num6 == 6)
                            Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3018, 1, false, -1, false);
                    }
                }
                if (!NPC.downedPlantBoss)
                {
                    if (Main.netMode == 0)
                        Main.NewText(Lang.misc[33], (byte)50, byte.MaxValue, (byte)130, false);
                    else if (Main.netMode == 2)
                        NetMessage.SendData(25, -1, -1, Lang.misc[33], (int)byte.MaxValue, 50f, (float)byte.MaxValue, 130f, 0, 0, 0);
                }
                NPC.downedPlantBoss = true;
            }
            if ((this.boss || this.type == 125 || (this.type == 126 || this.type == 491)) && Main.rand.Next(10) == 0)
            {
                if (this.type == 4)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1360, 1, false, 0, false);
                if (this.type == 13 || this.type == 14 || this.type == 15)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1361, 1, false, 0, false);
                if (this.type == 266)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1362, 1, false, 0, false);
                if (this.type == 35)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1363, 1, false, 0, false);
                if (this.type == 222)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1364, 1, false, 0, false);
                if (this.type == 113)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1365, 1, false, 0, false);
                if (this.type == 134)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1366, 1, false, 0, false);
                if (this.type == (int)sbyte.MaxValue)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1367, 1, false, 0, false);
                if (this.type == 125)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1368, 1, false, 0, false);
                if (this.type == 126)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1369, 1, false, 0, false);
                if (this.type == 262)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1370, 1, false, 0, false);
                if (this.type == 245)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1371, 1, false, 0, false);
                if (this.type == 50)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2489, 1, false, 0, false);
                if (this.type == 370)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2589, 1, false, 0, false);
                if (this.type == 439)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3357, 1, false, 0, false);
                if (this.type == 491)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3359, 1, false, 0, false);
                if (this.type == 395)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3358, 1, false, 0, false);
                if (this.type == 398)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3595, 1, false, 0, false);
            }
            if (this.boss)
            {
                if (this.type == 4)
                    NPC.downedBoss1 = true;
                else if (this.type == 13 || this.type == 14 || this.type == 15)
                {
                    NPC.downedBoss2 = true;
                    this.name = "Eater of Worlds";
                }
                else if (this.type == 266)
                {
                    NPC.downedBoss2 = true;
                    this.name = "Brain of Cthulu";
                }
                else if (this.type == 35)
                {
                    NPC.downedBoss3 = true;
                    this.name = "Skeletron";
                }
                else
                    this.name = this.displayName;
                if (this.type == (int)sbyte.MaxValue)
                {
                    NPC.downedMechBoss3 = true;
                    NPC.downedMechBossAny = true;
                }
                if (this.type == 134)
                {
                    NPC.downedMechBoss1 = true;
                    NPC.downedMechBossAny = true;
                }
                string str = this.name;
                if (this.displayName != "")
                    str = this.displayName;
                int Stack = Main.rand.Next(5, 16);
                int Type = 28;
                if (this.type == 113)
                    Type = 188;
                else if (this.type == 222)
                    Type = 1134;
                else if (this.type > 113 && this.type < 222)
                    Type = 499;
                else if (this.type == 245 || this.type == 262)
                    Type = 499;
                else if (this.type == 370)
                    Type = 499;
                else if (this.type == 395)
                    Type = 499;
                else if (this.type == 439)
                    Type = 499;
                else if (this.type == 398)
                    Type = 499;
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Type, Stack, false, 0, false);
                int num1 = Main.rand.Next(5) + 5;
                for (int index2 = 0; index2 < num1; ++index2)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
                if (this.type == 125 || this.type == 126)
                {
                    NPC.downedMechBoss2 = true;
                    NPC.downedMechBossAny = true;
                    if (Main.netMode == 0)
                        Main.NewText("The Twins " + Lang.misc[50], (byte)175, (byte)75, byte.MaxValue, false);
                    else if (Main.netMode == 2)
                        NetMessage.SendData(25, -1, -1, "The Twins " + Lang.misc[50], (int)byte.MaxValue, 175f, 75f, (float)byte.MaxValue, 0, 0, 0);
                }
                else if (this.type == 398)
                {
                    if (Main.netMode == 0)
                        Main.NewText("Moon Lord " + Lang.misc[17], (byte)175, (byte)75, byte.MaxValue, false);
                    else if (Main.netMode == 2)
                        NetMessage.SendData(25, -1, -1, "Moon Lord " + Lang.misc[17], (int)byte.MaxValue, 175f, 75f, (float)byte.MaxValue, 0, 0, 0);
                }
                else if (Main.netMode == 0)
                    Main.NewText(str + " " + Lang.misc[17], (byte)175, (byte)75, byte.MaxValue, false);
                else if (Main.netMode == 2)
                    NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[17], (int)byte.MaxValue, 175f, 75f, (float)byte.MaxValue, 0, 0, 0);
                if (this.type == 113 && Main.netMode != 1)
                {
                    bool flag2 = Main.hardMode;
                    WorldGen.StartHardmode();
                    if (NPC.downedMechBoss1 && NPC.downedMechBoss2 && (NPC.downedMechBoss3 && !flag2))
                    {
                        if (Main.netMode == 0)
                            Main.NewText(Lang.misc[32], (byte)50, byte.MaxValue, (byte)130, false);
                        else if (Main.netMode == 2)
                            NetMessage.SendData(25, -1, -1, Lang.misc[32], (int)byte.MaxValue, 50f, (float)byte.MaxValue, 130f, 0, 0, 0);
                    }
                }
                if (Main.netMode == 2)
                    NetMessage.SendData(7, -1, -1, "", 0, 0.0f, 0.0f, 0.0f, 0, 0, 0);
            }
            if (!flag1 && NPC.downedMechBoss1 && (NPC.downedMechBoss2 && NPC.downedMechBoss3) && Main.hardMode)
            {
                if (Main.netMode == 0)
                    Main.NewText(Lang.misc[32], (byte)50, byte.MaxValue, (byte)130, false);
                else if (Main.netMode == 2)
                    NetMessage.SendData(25, -1, -1, Lang.misc[32], (int)byte.MaxValue, 50f, (float)byte.MaxValue, 130f, 0, 0, 0);
            }
            if (this.type != 16 && this.type != 81 && (this.type != 121 && Main.rand.Next(6) == 0) && (this.lifeMax > 1 && this.damage > 0))
            {
                int index2 = (int)Player.FindClosest(this.position, this.width, this.height);
                if (Main.rand.Next(2) == 0 && Main.player[index2].statMana < Main.player[index2].statManaMax2)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 184, 1, false, 0, false);
                else if (Main.rand.Next(2) == 0 && Main.player[index2].statLife < Main.player[index2].statLifeMax2)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
            }
            if (this.type != 16 && this.type != 81 && (this.type != 121 && Main.rand.Next(2) == 0) && (this.lifeMax > 1 && this.damage > 0))
            {
                int index2 = (int)Player.FindClosest(this.position, this.width, this.height);
                if (Main.player[index2].statMana < Main.player[index2].statManaMax2)
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 184, 1, false, 0, false);
            }
            float num11 = this.value;
            if (this.midas)
                num11 *= (float)(1.0 + (double)Main.rand.Next(10, 50) * 0.00999999977648258);
            float num12 = num11 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.00999999977648258);
            if (Main.rand.Next(5) == 0)
                num12 *= (float)(1.0 + (double)Main.rand.Next(5, 11) * 0.00999999977648258);
            if (Main.rand.Next(10) == 0)
                num12 *= (float)(1.0 + (double)Main.rand.Next(10, 21) * 0.00999999977648258);
            if (Main.rand.Next(15) == 0)
                num12 *= (float)(1.0 + (double)Main.rand.Next(15, 31) * 0.00999999977648258);
            if (Main.rand.Next(20) == 0)
                num12 *= (float)(1.0 + (double)Main.rand.Next(20, 41) * 0.00999999977648258);
            float num13 = num12 + this.extraValue;
            while ((int)num13 > 0)
            {
                if ((double)num13 > 1000000.0)
                {
                    int Stack = (int)((double)num13 / 1000000.0);
                    if (Stack > 50 && Main.rand.Next(5) == 0)
                        Stack /= Main.rand.Next(3) + 1;
                    if (Main.rand.Next(5) == 0)
                        Stack /= Main.rand.Next(3) + 1;
                    num13 -= (float)(1000000 * Stack);
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 74, Stack, false, 0, false);
                }
                else if ((double)num13 > 10000.0)
                {
                    int Stack = (int)((double)num13 / 10000.0);
                    if (Stack > 50 && Main.rand.Next(5) == 0)
                        Stack /= Main.rand.Next(3) + 1;
                    if (Main.rand.Next(5) == 0)
                        Stack /= Main.rand.Next(3) + 1;
                    num13 -= (float)(10000 * Stack);
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 73, Stack, false, 0, false);
                }
                else if ((double)num13 > 100.0)
                {
                    int Stack = (int)((double)num13 / 100.0);
                    if (Stack > 50 && Main.rand.Next(5) == 0)
                        Stack /= Main.rand.Next(3) + 1;
                    if (Main.rand.Next(5) == 0)
                        Stack /= Main.rand.Next(3) + 1;
                    num13 -= (float)(100 * Stack);
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 72, Stack, false, 0, false);
                }
                else
                {
                    int Stack = (int)num13;
                    if (Stack > 50 && Main.rand.Next(5) == 0)
                        Stack /= Main.rand.Next(3) + 1;
                    if (Main.rand.Next(5) == 0)
                        Stack /= Main.rand.Next(4) + 1;
                    if (Stack < 1)
                        Stack = 1;
                    num13 -= (float)Stack;
                    Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 71, Stack, false, 0, false);
                }
            }
        }

        public static void CatchNPC(int i, int who = -1)
        {
            if (!Main.npc[i].active)
                return;
            if (Main.netMode == 1)
            {
                Main.npc[i].active = false;
                NetMessage.SendData(70, -1, -1, "", i, (float)who, 0.0f, 0.0f, 0, 0, 0);
            }
            else
            {
                if ((int)Main.npc[i].catchItem <= 0)
                    return;
                int num = Main.npc[i].type;
                new Item().SetDefaults((int)Main.npc[i].catchItem, false);
                Item.NewItem((int)Main.player[who].Center.X, (int)Main.player[who].Center.Y, 0, 0, (int)Main.npc[i].catchItem, 1, false, 0, true);
                Main.npc[i].active = false;
                NetMessage.SendData(23, -1, -1, "", i, 0.0f, 0.0f, 0.0f, 0, 0, 0);
            }
        }

        public void DropBossBags()
        {
            int Type = -1;
            if (this.type == 50)
                Type = 3318;
            if (this.type == 4)
                Type = 3319;
            if (this.type >= 13 && this.type <= 15)
                Type = 3320;
            if (this.type == 266)
                Type = 3321;
            if (this.type == 222)
                Type = 3322;
            if (this.type == 35)
                Type = 3323;
            if (this.type == 113)
                Type = 3324;
            if (this.type == 134)
                Type = 3325;
            if (this.type == 125 || this.type == 126)
                Type = 3326;
            if (this.type == (int)sbyte.MaxValue)
                Type = 3327;
            if (this.type == 262)
                Type = 3328;
            if (this.type == 245)
                Type = 3329;
            if (this.type == 370)
                Type = 3330;
            if (this.type == 439)
                Type = 3331;
            if (this.type == 398)
                Type = 3332;
            if (Type <= 0)
                return;
            if (Main.netMode == 2)
            {
                int number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Type, 1, true, 0, false);
                Main.itemLockoutTime[number] = 54000;
                for (int remoteClient = 0; remoteClient < (int)byte.MaxValue; ++remoteClient)
                {
                    if (this.playerInteraction[remoteClient] && Main.player[remoteClient].active)
                        NetMessage.SendData(90, remoteClient, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                }
                Main.item[number].active = false;
            }
            else if (Main.netMode == 0)
                Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Type, 1, false, 0, false);
            this.value = 0.0f;
        }

        public void PlayerInteraction(int player)
        {
            if (this.playerInteraction[player])
                return;
            if (this.type == 13 || this.type == 14 || this.type == 15)
            {
                for (int index = 0; index < 200; ++index)
                {
                    if (index != this.whoAmI && Main.npc[index].active && (Main.npc[index].type == 13 || Main.npc[index].type == 14 || Main.npc[index].type == 15))
                        Main.npc[index].playerInteraction[player] = true;
                }
            }
            if (this.type == 134 || this.type == 135 || this.type == 136)
            {
                for (int index = 0; index < 200; ++index)
                {
                    if (index != this.whoAmI && Main.npc[index].active && (Main.npc[index].type == 134 || Main.npc[index].type == 135 || Main.npc[index].type == 136))
                        Main.npc[index].playerInteraction[player] = true;
                }
            }
            if (this.type == 35 || this.type == 36)
            {
                for (int index = 0; index < 200; ++index)
                {
                    if (index != this.whoAmI && Main.npc[index].active && (Main.npc[index].type == 35 || Main.npc[index].type == 36))
                        Main.npc[index].playerInteraction[player] = true;
                }
            }
            if (this.type == 113 || this.type == 114)
            {
                for (int index = 0; index < 200; ++index)
                {
                    if (index != this.whoAmI && Main.npc[index].active && (Main.npc[index].type == 113 || Main.npc[index].type == 114))
                        Main.npc[index].playerInteraction[player] = true;
                }
            }
            if (this.type >= (int)sbyte.MaxValue && this.type <= 131)
            {
                for (int index = 0; index < 200; ++index)
                {
                    if (index != this.whoAmI && Main.npc[index].active && (Main.npc[index].type >= (int)sbyte.MaxValue && Main.npc[index].type <= 131))
                        Main.npc[index].playerInteraction[player] = true;
                }
            }
            if (this.type >= 245 && this.type <= 249)
            {
                for (int index = 0; index < 200; ++index)
                {
                    if (index != this.whoAmI && Main.npc[index].active && (Main.npc[index].type >= 245 && Main.npc[index].type <= 249))
                        Main.npc[index].playerInteraction[player] = true;
                }
            }
            if ((this.type == 396 || this.type == 397) && (Main.npc[(int)this.ai[3]].active && Main.npc[(int)this.ai[3]].type == 398))
                Main.npc[(int)this.ai[3]].playerInteraction[player] = true;
            if ((this.type == 393 || this.type == 394) && (Main.npc[(int)this.ai[0]].active && Main.npc[(int)this.ai[0]].type == 395))
                Main.npc[(int)this.ai[0]].playerInteraction[player] = true;
            if (this.type == 492 && Main.npc[(int)this.ai[0]].active && Main.npc[(int)this.ai[0]].type == 491)
                Main.npc[(int)this.ai[0]].playerInteraction[player] = true;
            this.playerInteraction[player] = true;
        }

        public static bool CanReleaseNPCs(int who)
        {
            float num1 = 0.7f;
            if (Main.netMode != 1)
                num1 += 0.05f;
            int num2 = 0;
            int num3 = 0;
            for (int index = 0; index < 200; ++index)
            {
                if (Main.npc[index].active)
                {
                    ++num3;
                    if ((int)Main.npc[index].releaseOwner == who)
                        ++num2;
                }
            }
            int num4 = 0;
            for (int index = 0; index < (int)byte.MaxValue; ++index)
            {
                if (Main.player[index].active)
                    ++num4;
            }
            int num5 = (int)(200.0 * (double)num1 / (double)num4);
            return (double)num3 < 200.0 * (double)num1 && num2 < num5;
        }

        public static void ReleaseNPC(int x, int y, int Type, int Style, int who)
        {
            if (Main.netMode == 1)
            {
                NetMessage.SendData(71, -1, -1, "", x, (float)y, (float)Type, (float)Style, 0, 0, 0);
            }
            else
            {
                if (!Main.npcCatchable[Type] || !NPC.CanReleaseNPCs(who))
                    return;
                if (Type == 148)
                {
                    int Type1 = Type + Main.rand.Next(2);
                    int index = NPC.NewNPC(x, y, Type1, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    Main.npc[index].releaseOwner = (short)who;
                }
                else
                {
                    int index = NPC.NewNPC(x, y, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    if (Type == 356)
                        Main.npc[index].ai[2] = (float)Style;
                    Main.npc[index].releaseOwner = (short)who;
                }
            }
        }

        public static void SlimeRainSpawns(int plr)
        {
            float num1 = 15f;
            Player player = Main.player[plr];
            if ((double)player.position.Y > Main.worldSurface * 16.0 + (double)(Main.maxScreenH / 2) || (double)player.activeNPCs > (double)num1)
                return;
            int maxValue1 = 45 + (int)(450.0 * (double)(player.activeNPCs / num1));
            if (Main.expertMode)
                maxValue1 = (int)((double)maxValue1 * 0.85);
            if (Main.rand.Next(maxValue1) != 0)
                return;
            int minValue1 = (int)((double)player.Center.X - (double)Main.maxScreenW);
            int maxValue2 = minValue1 + Main.maxScreenW * 2;
            int minValue2 = (int)((double)player.Center.Y - (double)Main.maxScreenH * 1.5);
            int maxValue3 = (int)((double)player.Center.Y - (double)Main.maxScreenH * 0.75);
            int num2 = Main.rand.Next(minValue1, maxValue2);
            int num3 = Main.rand.Next(minValue2, maxValue3);
            int index1 = num2 / 16;
            int index2 = num3 / 16;
            if (index1 < 10 || index1 > Main.maxTilesX + 10 || ((double)index2 < Main.worldSurface * 0.3 || (double)index2 > Main.worldSurface) || (Collision.SolidTiles(index1 - 3, index1 + 3, index2 - 5, index2 + 2) || Main.wallHouse[(int)Main.tile[index1, index2].wall]))
                return;
            int index3 = NPC.NewNPC(index1 * 16 + 8, index2 * 16, 1, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
            if (Main.rand.Next(200) == 0)
                Main.npc[index3].netDefaults(-4);
            else if (Main.expertMode)
            {
                if (Main.rand.Next(7) == 0)
                {
                    Main.npc[index3].netDefaults(-7);
                }
                else
                {
                    if (Main.rand.Next(3) != 0)
                        return;
                    Main.npc[index3].netDefaults(-3);
                }
            }
            else if (Main.rand.Next(10) == 0)
            {
                Main.npc[index3].netDefaults(-7);
            }
            else
            {
                if (Main.rand.Next(5) >= 2)
                    return;
                Main.npc[index3].netDefaults(-3);
            }
        }

        public static void SpawnNPC()
        {
            if (NPC.noSpawnCycle)
            {
                NPC.noSpawnCycle = false;
            }
            else
            {
                bool flag1 = false;
                bool flag2 = false;
                int index1 = 0;
                int y = 0;
                int num1 = 0;
                int num2 = 0;
                for (int index2 = 0; index2 < (int)byte.MaxValue; ++index2)
                {
                    if (Main.player[index2].active)
                        ++num2;
                }
                for (int plr = 0; plr < (int)byte.MaxValue; ++plr)
                {
                    if (Main.player[plr].active && !Main.player[plr].dead)
                    {
                        if (Main.slimeRain)
                            NPC.SlimeRainSpawns(plr);
                        bool flag3 = false;
                        bool flag4 = false;
                        bool flag5 = false;
                        bool flag6 = false;
                        bool flag7 = false;
                        bool flag8 = false;
                        bool flag9 = false;
                        bool flag10 = false;
                        bool flag11 = false;
                        bool flag12 = false;
                        bool flag13 = NPC.downedPlantBoss && Main.hardMode;
                        if (Main.player[plr].active && Main.invasionType > 0 && (Main.invasionDelay == 0 && Main.invasionSize > 0) && (double)Main.player[plr].position.Y < Main.worldSurface * 16.0 + (double)NPC.sHeight)
                        {
                            int num3 = 3000;
                            if ((double)Main.player[plr].position.X > Main.invasionX * 16.0 - (double)num3 && (double)Main.player[plr].position.X < Main.invasionX * 16.0 + (double)num3)
                                flag5 = true;
                            else if (Main.invasionX >= (double)(Main.maxTilesX / 2 - 5) && Main.invasionX <= (double)(Main.maxTilesX / 2 + 5))
                            {
                                for (int index2 = 0; index2 < 200; ++index2)
                                {
                                    if (Main.npc[index2].townNPC && (double)Math.Abs(Main.player[plr].position.X - Main.npc[index2].Center.X) < (double)num3)
                                    {
                                        if (Main.rand.Next(3) == 0)
                                        {
                                            flag5 = true;
                                            break;
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                        if (Main.player[plr].ZoneTowerSolar || Main.player[plr].ZoneTowerNebula || (Main.player[plr].ZoneTowerVortex || Main.player[plr].ZoneTowerStardust))
                            flag5 = true;
                        bool flag14 = false;
                        NPC.spawnRate = NPC.defaultSpawnRate;
                        NPC.maxSpawns = NPC.defaultMaxSpawns;
                        if (Main.hardMode)
                        {
                            NPC.spawnRate = (int)((double)NPC.defaultSpawnRate * 0.9);
                            NPC.maxSpawns = NPC.defaultMaxSpawns + 1;
                        }
                        if ((double)Main.player[plr].position.Y > (double)((Main.maxTilesY - 200) * 16))
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns * 2.0);
                        else if ((double)Main.player[plr].position.Y > Main.rockLayer * 16.0 + (double)NPC.sHeight)
                        {
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns * 1.89999997615814);
                        }
                        else if ((double)Main.player[plr].position.Y > Main.worldSurface * 16.0 + (double)NPC.sHeight)
                        {
                            if (Main.hardMode)
                            {
                                NPC.spawnRate = (int)((double)NPC.spawnRate * 0.45);
                                NPC.maxSpawns = (int)((double)NPC.maxSpawns * 1.79999995231628);
                            }
                            else
                            {
                                NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
                                NPC.maxSpawns = (int)((double)NPC.maxSpawns * 1.70000004768372);
                            }
                        }
                        else if (!Main.dayTime)
                        {
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 0.6);
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns * 1.29999995231628);
                            if (Main.bloodMoon)
                            {
                                NPC.spawnRate = (int)((double)NPC.spawnRate * 0.3);
                                NPC.maxSpawns = (int)((double)NPC.maxSpawns * 1.79999995231628);
                            }
                            if ((Main.pumpkinMoon || Main.snowMoon) && (double)Main.player[plr].position.Y < Main.worldSurface * 16.0)
                            {
                                NPC.spawnRate = (int)((double)NPC.spawnRate * 0.2);
                                NPC.maxSpawns *= 2;
                            }
                        }
                        else if (Main.dayTime && Main.eclipse)
                        {
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 0.2);
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns * 1.89999997615814);
                        }
                        if (Main.player[plr].ZoneSnow && (double)Main.player[plr].position.Y / 16.0 < Main.worldSurface)
                        {
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns + (double)NPC.maxSpawns * (double)Main.cloudAlpha);
                            NPC.spawnRate = (int)((double)NPC.spawnRate * (1.0 - (double)Main.cloudAlpha + 1.0) / 2.0);
                        }
                        if (Main.player[plr].ZoneDungeon)
                        {
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns * 1.70000004768372);
                        }
                        else if (Main.player[plr].ZoneUndergroundDesert)
                        {
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 0.3);
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns * 1.5);
                        }
                        else if (Main.player[plr].ZoneJungle)
                        {
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns * 1.5);
                        }
                        else if (Main.player[plr].ZoneCorrupt || Main.player[plr].ZoneCrimson)
                        {
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 0.65);
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns * 1.29999995231628);
                        }
                        else if (Main.player[plr].ZoneMeteor)
                        {
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns * 1.10000002384186);
                        }
                        if (Main.player[plr].ZoneHoly && (double)Main.player[plr].position.Y > Main.rockLayer * 16.0 + (double)NPC.sHeight)
                        {
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 0.65);
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns * 1.29999995231628);
                        }
                        if (Main.wof >= 0 && (double)Main.player[plr].position.Y > (double)((Main.maxTilesY - 200) * 16))
                        {
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns * 0.300000011920929);
                            NPC.spawnRate *= 3;
                        }
                        if ((double)Main.player[plr].activeNPCs < (double)NPC.maxSpawns * 0.2)
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 0.600000023841858);
                        else if ((double)Main.player[plr].activeNPCs < (double)NPC.maxSpawns * 0.4)
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 0.699999988079071);
                        else if ((double)Main.player[plr].activeNPCs < (double)NPC.maxSpawns * 0.6)
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 0.800000011920929);
                        else if ((double)Main.player[plr].activeNPCs < (double)NPC.maxSpawns * 0.8)
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 0.899999976158142);
                        if ((double)Main.player[plr].position.Y / 16.0 > (Main.worldSurface + Main.rockLayer) / 2.0 || Main.player[plr].ZoneCorrupt || Main.player[plr].ZoneCrimson)
                        {
                            if ((double)Main.player[plr].activeNPCs < (double)NPC.maxSpawns * 0.2)
                                NPC.spawnRate = (int)((double)NPC.spawnRate * 0.699999988079071);
                            else if ((double)Main.player[plr].activeNPCs < (double)NPC.maxSpawns * 0.4)
                                NPC.spawnRate = (int)((double)NPC.spawnRate * 0.899999976158142);
                        }
                        if (Main.player[plr].calmed)
                        {
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 1.29999995231628);
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns * 0.699999988079071);
                        }
                        if (Main.player[plr].sunflower)
                        {
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 1.20000004768372);
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns * 0.800000011920929);
                        }
                        if (Main.player[plr].enemySpawns)
                        {
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns * 2.0);
                        }
                        if (Main.player[plr].ZoneWaterCandle || Main.player[plr].inventory[Main.player[plr].selectedItem].itemId == 148)
                        {
                            if (!Main.player[plr].ZonePeaceCandle && Main.player[plr].inventory[Main.player[plr].selectedItem].itemId != 3117)
                            {
                                NPC.spawnRate = (int)((double)NPC.spawnRate * 0.75);
                                NPC.maxSpawns = (int)((double)NPC.maxSpawns * 1.5);
                            }
                        }
                        else if (Main.player[plr].ZonePeaceCandle || Main.player[plr].inventory[Main.player[plr].selectedItem].itemId == 3117)
                        {
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 1.3);
                            NPC.maxSpawns = (int)((double)NPC.maxSpawns * 0.699999988079071);
                        }
                        if (Main.player[plr].ZoneWaterCandle && (double)Main.player[plr].position.Y / 16.0 < Main.worldSurface * 0.349999994039536)
                            NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
                        if ((double)NPC.spawnRate < (double)NPC.defaultSpawnRate * 0.1)
                            NPC.spawnRate = (int)((double)NPC.defaultSpawnRate * 0.1);
                        if (NPC.maxSpawns > NPC.defaultMaxSpawns * 3)
                            NPC.maxSpawns = NPC.defaultMaxSpawns * 3;
                        if ((Main.pumpkinMoon || Main.snowMoon) && (double)Main.player[plr].position.Y < Main.worldSurface * 16.0)
                        {
                            NPC.maxSpawns = (int)((double)NPC.defaultMaxSpawns * (2.0 + 0.3 * (double)num2));
                            NPC.spawnRate = 20;
                        }
                        if (flag5)
                        {
                            NPC.maxSpawns = (int)((double)NPC.defaultMaxSpawns * (2.0 + 0.3 * (double)num2));
                            NPC.spawnRate = 20;
                        }
                        if (Main.player[plr].ZoneDungeon && !NPC.downedBoss3)
                            NPC.spawnRate = 10;
                        if (!flag5 && (!Main.bloodMoon && !Main.pumpkinMoon && !Main.snowMoon || Main.dayTime) && ((!Main.eclipse || !Main.dayTime) && (!Main.player[plr].ZoneDungeon && !Main.player[plr].ZoneCorrupt) && (!Main.player[plr].ZoneCrimson && !Main.player[plr].ZoneMeteor)))
                        {
                            if ((double)Main.player[plr].Center.Y / 16.0 > (double)(Main.maxTilesY - 200))
                            {
                                if ((double)Main.player[plr].townNPCs == 1.0)
                                {
                                    if (Main.rand.Next(2) == 0)
                                        flag4 = true;
                                    if (Main.rand.Next(10) == 0)
                                    {
                                        flag11 = true;
                                        NPC.maxSpawns = (int)((double)NPC.maxSpawns * 0.5);
                                    }
                                    else
                                        NPC.spawnRate = (int)((double)NPC.spawnRate * 1.25);
                                }
                                else if ((double)Main.player[plr].townNPCs == 2.0)
                                {
                                    if (Main.rand.Next(4) != 0)
                                        flag4 = true;
                                    if (Main.rand.Next(5) == 0)
                                    {
                                        flag11 = true;
                                        NPC.maxSpawns = (int)((double)NPC.maxSpawns * 0.5);
                                    }
                                    else
                                        NPC.spawnRate = (int)((double)NPC.spawnRate * 1.5);
                                }
                                else if ((double)Main.player[plr].townNPCs >= 3.0)
                                {
                                    if (Main.rand.Next(10) != 0)
                                        flag4 = true;
                                    if (Main.rand.Next(3) == 0)
                                    {
                                        flag11 = true;
                                        NPC.maxSpawns = (int)((double)NPC.maxSpawns * 0.5);
                                    }
                                    else
                                        NPC.spawnRate = (int)((double)NPC.spawnRate * 2.0);
                                }
                            }
                            else if ((double)Main.player[plr].townNPCs == 1.0)
                            {
                                flag4 = true;
                                if (Main.rand.Next(3) == 1)
                                {
                                    flag11 = true;
                                    NPC.maxSpawns = (int)((double)NPC.maxSpawns * 0.6);
                                }
                                else
                                    NPC.spawnRate = (int)((double)NPC.spawnRate * 2.0);
                            }
                            else if ((double)Main.player[plr].townNPCs == 2.0)
                            {
                                flag4 = true;
                                if (Main.rand.Next(3) != 0)
                                {
                                    flag11 = true;
                                    NPC.maxSpawns = (int)((double)NPC.maxSpawns * 0.6);
                                }
                                else
                                    NPC.spawnRate = (int)((double)NPC.spawnRate * 3.0);
                            }
                            else if ((double)Main.player[plr].townNPCs >= 3.0)
                            {
                                flag4 = true;
                                if (!Main.expertMode || Main.rand.Next(30) != 0)
                                    flag11 = true;
                                NPC.maxSpawns = (int)((double)NPC.maxSpawns * 0.6);
                            }
                        }
                        int index3 = (int)((double)Main.player[plr].position.X + (double)(Main.player[plr].width / 2)) / 16;
                        int index4 = (int)((double)Main.player[plr].position.Y + (double)(Main.player[plr].height / 2)) / 16;
                        if (Main.wallHouse[(int)Main.tile[index3, index4].wall])
                            flag4 = true;
                        if ((int)Main.tile[index3, index4].wall == 87)
                            flag3 = true;
                        bool flag15 = false;
                        if (Main.player[plr].active && !Main.player[plr].dead && ((double)Main.player[plr].activeNPCs < (double)NPC.maxSpawns && Main.rand.Next(NPC.spawnRate) == 0))
                        {
                            NPC.spawnRangeX = (int)((double)(NPC.sWidth / 16) * 0.7);
                            NPC.spawnRangeY = (int)((double)(NPC.sHeight / 16) * 0.7);
                            NPC.safeRangeX = (int)((double)(NPC.sWidth / 16) * 0.52);
                            NPC.safeRangeY = (int)((double)(NPC.sHeight / 16) * 0.52);
                            if (Main.player[plr].inventory[Main.player[plr].selectedItem].itemId == 1254 || Main.player[plr].inventory[Main.player[plr].selectedItem].itemId == 1299 || Main.player[plr].scope)
                            {
                                float num3 = 1.5f;
                                if (Main.player[plr].inventory[Main.player[plr].selectedItem].itemId == 1254 && Main.player[plr].scope)
                                    num3 = 1.25f;
                                else if (Main.player[plr].inventory[Main.player[plr].selectedItem].itemId == 1254)
                                    num3 = 1.5f;
                                else if (Main.player[plr].inventory[Main.player[plr].selectedItem].itemId == 1299)
                                    num3 = 1.5f;
                                else if (Main.player[plr].scope)
                                    num3 = 2f;
                                NPC.spawnRangeX += (int)((double)(NPC.sWidth / 16) * 0.5 / (double)num3);
                                NPC.spawnRangeY += (int)((double)(NPC.sHeight / 16) * 0.5 / (double)num3);
                                NPC.safeRangeX += (int)((double)(NPC.sWidth / 16) * 0.5 / (double)num3);
                                NPC.safeRangeY += (int)((double)(NPC.sHeight / 16) * 0.5 / (double)num3);
                            }
                            int minValue1 = (int)((double)Main.player[plr].position.X / 16.0) - NPC.spawnRangeX;
                            int maxValue1 = (int)((double)Main.player[plr].position.X / 16.0) + NPC.spawnRangeX;
                            int minValue2 = (int)((double)Main.player[plr].position.Y / 16.0) - NPC.spawnRangeY;
                            int maxValue2 = (int)((double)Main.player[plr].position.Y / 16.0) + NPC.spawnRangeY;
                            int num4 = (int)((double)Main.player[plr].position.X / 16.0) - NPC.safeRangeX;
                            int num5 = (int)((double)Main.player[plr].position.X / 16.0) + NPC.safeRangeX;
                            int num6 = (int)((double)Main.player[plr].position.Y / 16.0) - NPC.safeRangeY;
                            int num7 = (int)((double)Main.player[plr].position.Y / 16.0) + NPC.safeRangeY;
                            if (minValue1 < 0)
                                minValue1 = 0;
                            if (maxValue1 > Main.maxTilesX)
                                maxValue1 = Main.maxTilesX;
                            if (minValue2 < 0)
                                minValue2 = 0;
                            if (maxValue2 > Main.maxTilesY)
                                maxValue2 = Main.maxTilesY;
                            for (int index2 = 0; index2 < 50; ++index2)
                            {
                                int index5 = Main.rand.Next(minValue1, maxValue1);
                                int index6 = Main.rand.Next(minValue2, maxValue2);
                                if (!Main.tile[index5, index6].nactive() || !Main.tileSolid[(int)Main.tile[index5, index6].type])
                                {
                                    if (!Main.wallHouse[(int)Main.tile[index5, index6].wall])
                                    {
                                        if (!flag5 && (double)index6 < Main.worldSurface * 0.349999994039536 && !flag11 && ((double)index5 < (double)Main.maxTilesX * 0.45 || (double)index5 > (double)Main.maxTilesX * 0.55 || Main.hardMode))
                                        {
                                            num1 = (int)Main.tile[index5, index6].type;
                                            index1 = index5;
                                            y = index6;
                                            flag14 = true;
                                            flag2 = true;
                                        }
                                        else if (!flag5 && (double)index6 < Main.worldSurface * 0.449999988079071 && (!flag11 && Main.hardMode) && Main.rand.Next(10) == 0)
                                        {
                                            num1 = (int)Main.tile[index5, index6].type;
                                            index1 = index5;
                                            y = index6;
                                            flag14 = true;
                                            flag2 = true;
                                        }
                                        else
                                        {
                                            for (int index7 = index6; index7 < Main.maxTilesY; ++index7)
                                            {
                                                if (Main.tile[index5, index7].nactive() && Main.tileSolid[(int)Main.tile[index5, index7].type])
                                                {
                                                    if (index5 < num4 || index5 > num5 || (index7 < num6 || index7 > num7))
                                                    {
                                                        num1 = (int)Main.tile[index5, index7].type;
                                                        index1 = index5;
                                                        y = index7;
                                                        flag14 = true;
                                                        break;
                                                    }
                                                    break;
                                                }
                                            }
                                        }
                                        if (flag14)
                                        {
                                            int num3 = index1 - NPC.spawnSpaceX / 2;
                                            int num8 = index1 + NPC.spawnSpaceX / 2;
                                            int num9 = y - NPC.spawnSpaceY;
                                            int num10 = y;
                                            if (num3 < 0)
                                                flag14 = false;
                                            if (num8 > Main.maxTilesX)
                                                flag14 = false;
                                            if (num9 < 0)
                                                flag14 = false;
                                            if (num10 > Main.maxTilesY)
                                                flag14 = false;
                                            if (flag14)
                                            {
                                                for (int index7 = num3; index7 < num8; ++index7)
                                                {
                                                    for (int index8 = num9; index8 < num10; ++index8)
                                                    {
                                                        if (Main.tile[index7, index8].nactive() && Main.tileSolid[(int)Main.tile[index7, index8].type])
                                                        {
                                                            flag14 = false;
                                                            break;
                                                        }
                                                        if (Main.tile[index7, index8].lava())
                                                        {
                                                            flag14 = false;
                                                            break;
                                                        }
                                                    }
                                                }
                                            }
                                            if (index1 >= num4 && index1 <= num5)
                                                flag15 = true;
                                        }
                                    }
                                    else
                                        continue;
                                }
                                if (flag14 || flag14)
                                    break;
                            }
                        }
                        if (flag14)
                        {
                            Rectangle rectangle1 = new Rectangle(index1 * 16, y * 16, 16, 16);
                            for (int index2 = 0; index2 < (int)byte.MaxValue; ++index2)
                            {
                                if (Main.player[index2].active)
                                {
                                    Rectangle rectangle2 = new Rectangle((int)((double)Main.player[index2].position.X + (double)(Main.player[index2].width / 2) - (double)(NPC.sWidth / 2) - (double)NPC.safeRangeX), (int)((double)Main.player[index2].position.Y + (double)(Main.player[index2].height / 2) - (double)(NPC.sHeight / 2) - (double)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
                                    if (rectangle1.Intersects(rectangle2))
                                        flag14 = false;
                                }
                            }
                        }
                        if (flag14)
                        {
                            if (Main.player[plr].ZoneDungeon && (!Main.tileDungeon[(int)Main.tile[index1, y].type] || (int)Main.tile[index1, y - 1].wall == 0))
                                flag14 = false;
                            if ((int)Main.tile[index1, y - 1].liquid > 0 && (int)Main.tile[index1, y - 2].liquid > 0 && !Main.tile[index1, y - 1].lava())
                            {
                                if (Main.tile[index1, y - 1].honey())
                                    flag7 = true;
                                else
                                    flag6 = true;
                            }
                            int index2 = (int)Main.player[plr].Center.X / 16;
                            int index5 = (int)((double)Main.player[plr].Bottom.Y + 8.0) / 16;
                            if ((int)Main.tile[index1, y].type == 367)
                                flag9 = true;
                            else if ((int)Main.tile[index1, y].type == 368)
                                flag8 = true;
                            else if ((int)Main.tile[index2, index5].type == 367)
                                flag9 = true;
                            else if ((int)Main.tile[index2, index5].type == 368)
                            {
                                flag8 = true;
                            }
                            else
                            {
                                int num3 = Main.rand.Next(20, 31);
                                int num4 = Main.rand.Next(1, 4);
                                if (index1 - num3 < 0)
                                    num3 = index1;
                                if (y - num3 < 0)
                                    num3 = y;
                                if (index1 + num3 >= Main.maxTilesX)
                                    num3 = Main.maxTilesX - index1 - 1;
                                if (y + num3 >= Main.maxTilesY)
                                    num3 = Main.maxTilesY - y - 1;
                                int index6 = index1 - num3;
                                while (index6 <= index1 + num3)
                                {
                                    int num5 = Main.rand.Next(1, 4);
                                    int index7 = y - num3;
                                    while (index7 <= y + num3)
                                    {
                                        if ((int)Main.tile[index6, index7].type == 367)
                                            flag9 = true;
                                        if ((int)Main.tile[index6, index7].type == 368)
                                            flag8 = true;
                                        index7 += num5;
                                    }
                                    index6 += num4;
                                }
                                int num6 = Main.rand.Next(30, 61);
                                int num7 = Main.rand.Next(3, 7);
                                if (index2 - num6 < 0)
                                    num6 = index2;
                                if (index5 - num6 < 0)
                                    num6 = index5;
                                if (index2 + num6 >= Main.maxTilesX)
                                    num6 = Main.maxTilesX - index2 - 2;
                                if (index5 + num6 >= Main.maxTilesY)
                                    num6 = Main.maxTilesY - index5 - 2;
                                int index8 = index2 - num6;
                                while (index8 <= index2 + num6)
                                {
                                    int num5 = Main.rand.Next(3, 7);
                                    int index7 = index5 - num6;
                                    while (index7 <= index5 + num6)
                                    {
                                        if ((int)Main.tile[index8, index7].type == 367)
                                            flag9 = true;
                                        if ((int)Main.tile[index8, index7].type == 368)
                                            flag8 = true;
                                        index7 += num5;
                                    }
                                    index8 += num7;
                                }
                            }
                        }
                        if (flag7)
                            flag14 = false;
                        if (flag14)
                        {
                            if ((double)y > Main.rockLayer && y < Main.maxTilesY - 200 && (!Main.player[plr].ZoneDungeon && !flag5))
                            {
                                if (Main.rand.Next(3) == 0)
                                {
                                    int num3 = Main.rand.Next(5, 15);
                                    if (index1 - num3 >= 0 && index1 + num3 < Main.maxTilesX)
                                    {
                                        for (int index2 = index1 - num3; index2 < index1 + num3; ++index2)
                                        {
                                            for (int index5 = y - num3; index5 < y + num3; ++index5)
                                            {
                                                if ((int)Main.tile[index2, index5].wall == 62)
                                                    flag10 = true;
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    int index2 = (int)Main.player[plr].position.X / 16;
                                    int index5 = (int)Main.player[plr].position.Y / 16;
                                    if ((int)Main.tile[index2, index5].wall == 62)
                                        flag10 = true;
                                }
                            }
                            if ((double)y < Main.rockLayer && y > 200 && (!Main.player[plr].ZoneDungeon && !flag5))
                            {
                                if (Main.rand.Next(3) == 0)
                                {
                                    int num3 = Main.rand.Next(5, 15);
                                    if (index1 - num3 >= 0 && index1 + num3 < Main.maxTilesX)
                                    {
                                        for (int index2 = index1 - num3; index2 < index1 + num3; ++index2)
                                        {
                                            for (int index5 = y - num3; index5 < y + num3; ++index5)
                                            {
                                                if (WallID.Sets.Conversion.Sandstone[(int)Main.tile[index2, index5].wall] || WallID.Sets.Conversion.HardenedSand[(int)Main.tile[index2, index5].wall])
                                                    flag12 = true;
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    int index2 = (int)Main.player[plr].position.X / 16;
                                    int index5 = (int)Main.player[plr].position.Y / 16;
                                    if (WallID.Sets.Conversion.Sandstone[(int)Main.tile[index2, index5].wall] || WallID.Sets.Conversion.HardenedSand[(int)Main.tile[index2, index5].wall])
                                        flag12 = true;
                                }
                            }
                            flag1 = false;
                            int index6 = (int)Main.tile[index1, y].type;
                            int number = 200;
                            int num4;
                            if (Main.player[plr].ZoneTowerNebula)
                            {
                                bool flag16 = true;
                                int Type = 0;
                                while (flag16)
                                {
                                    Type = Utils.SelectRandom<int>(Main.rand, 424, 424, 424, 423, 423, 423, 421, 421, 421, 421, 421, 420);
                                    flag16 = false;
                                    if (Type == 424 && NPC.CountNPCS(Type) >= 2)
                                        flag16 = true;
                                    if (Type == 423 && NPC.CountNPCS(Type) >= 3)
                                        flag16 = true;
                                    if (Type == 420 && NPC.CountNPCS(Type) >= 2)
                                        flag16 = true;
                                }
                                if (Type != 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, Type, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if (Main.player[plr].ZoneTowerVortex)
                            {
                                bool flag16 = true;
                                int Type = 0;
                                while (flag16)
                                {
                                    Type = Utils.SelectRandom<int>(Main.rand, 429, 429, 429, 429, 427, 427, 425, 425, 426);
                                    flag16 = false;
                                    if (Type == 425 && NPC.CountNPCS(Type) >= 3)
                                        flag16 = true;
                                    if (Type == 426 && NPC.CountNPCS(Type) >= 3)
                                        flag16 = true;
                                    if (Type == 429 && NPC.CountNPCS(Type) >= 4)
                                        flag16 = true;
                                }
                                if (Type != 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, Type, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if (Main.player[plr].ZoneTowerStardust)
                            {
                                int Type = Utils.SelectRandom<int>(Main.rand, 411, 411, 411, 409, 409, 407, 402, 405);
                                if (Type != 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, Type, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if (Main.player[plr].ZoneTowerSolar)
                            {
                                bool flag16 = true;
                                int Type = 0;
                                while (flag16)
                                {
                                    Type = Utils.SelectRandom<int>(Main.rand, 518, 419, 418, 412, 417, 416, 415);
                                    flag16 = false;
                                    if (Type == 415 && NPC.CountNPCS(Type) >= 2)
                                        flag16 = true;
                                    if (Type == 416 && NPC.CountNPCS(Type) >= 1)
                                        flag16 = true;
                                    if (Type == 518 && NPC.CountNPCS(Type) >= 2)
                                        flag16 = true;
                                    if (Type == 412 && NPC.CountNPCS(Type) >= 1)
                                        flag16 = true;
                                }
                                if (Type != 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, Type, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if (flag2)
                            {
                                int maxValue1 = 5;
                                int maxValue2 = 15;
                                if (Main.player[plr].ZoneWaterCandle)
                                {
                                    maxValue1 = 3;
                                    maxValue2 = 10;
                                }
                                if (flag5 && Main.invasionType == 4)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 388, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode && NPC.downedGolemBoss && (!NPC.downedMartians && Main.rand.Next(maxValue1) == 0 || Main.rand.Next(maxValue2) == 0) && !NPC.AnyNPCs(399))
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 399, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode && !NPC.AnyNPCs(87) && (!flag4 && Main.rand.Next(10) == 0))
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 87, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode && !NPC.AnyNPCs(87) && (!flag4 && Main.rand.Next(10) == 0) && (Main.player[plr].inventory[Main.player[plr].selectedItem].itemId == 148 || Main.player[plr].ZoneWaterCandle))
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 87, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 48, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if (flag5)
                            {
                                if (Main.invasionType == 1)
                                {
                                    if (Main.hardMode && !NPC.AnyNPCs(471) && Main.rand.Next(30) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 471, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(9) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 29, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(5) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 26, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(3) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 111, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(3) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 27, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 28, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else if (Main.invasionType == 2)
                                {
                                    if (Main.rand.Next(7) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 145, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(3) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 143, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 144, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else if (Main.invasionType == 3)
                                {
                                    if (Main.invasionSize < Main.invasionSizeStart / 2 && Main.rand.Next(20) == 0 && (!NPC.AnyNPCs(491) && !Collision.SolidTiles(index1 - 20, index1 + 20, y - 40, y - 10)))
                                        NPC.NewNPC(index1 * 16 + 8, (y - 10) * 16, 491, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(30) == 0 && !NPC.AnyNPCs(216))
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 216, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(11) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 215, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(9) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 252, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(7) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 214, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(3) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 213, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 212, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else if (Main.invasionType == 4)
                                {
                                    int Type = 0;
                                    int num3 = Main.rand.Next(7);
                                    if (Main.invasionSize <= 100 && Main.rand.Next(10) == 0 && !NPC.AnyNPCs(395))
                                        Type = 395;
                                    else if (num3 >= 6)
                                    {
                                        if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(395))
                                        {
                                            Type = 395;
                                        }
                                        else
                                        {
                                            int num5 = Main.rand.Next(2);
                                            if (num5 == 0)
                                                Type = 390;
                                            if (num5 == 1)
                                                Type = 386;
                                        }
                                    }
                                    else if (num3 >= 4)
                                    {
                                        int num5 = Main.rand.Next(5);
                                        Type = num5 >= 2 ? (num5 >= 4 ? 388 : 381) : 382;
                                    }
                                    else
                                    {
                                        int num5 = Main.rand.Next(4);
                                        if (num5 == 3)
                                        {
                                            if (!NPC.AnyNPCs(520))
                                                Type = 520;
                                            else
                                                num5 = Main.rand.Next(3);
                                        }
                                        if (num5 == 0)
                                            Type = 385;
                                        if (num5 == 1)
                                            Type = 389;
                                        if (num5 == 2)
                                            Type = 383;
                                    }
                                    if (Type != 0)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, Type, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                            }
                            else if ((int)Main.tile[index1, y].wall == 62 || flag10)
                            {
                                if ((int)Main.tile[index1, y].wall == 62 && Main.rand.Next(8) == 0 && (!flag6 && (double)y >= Main.rockLayer) && (y < Main.maxTilesY - 210 && !NPC.savedStylist && !NPC.AnyNPCs(354)))
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 354, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode)
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 163, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 164, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if ((WallID.Sets.Conversion.HardenedSand[(int)Main.tile[index1, y].wall] || WallID.Sets.Conversion.Sandstone[(int)Main.tile[index1, y].wall] || flag12) && WorldGen.checkUnderground(index1, y))
                            {
                                if (Main.hardMode && Main.rand.Next(33) == 0 && !flag4)
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 510, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.rand.Next(22) == 0 && !flag4)
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 513, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode && Main.rand.Next(5) != 0)
                                {
                                    List<int> list = new List<int>();
                                    if (Main.player[plr].ZoneCorrupt)
                                    {
                                        list.Add(525);
                                        list.Add(525);
                                    }
                                    if (Main.player[plr].ZoneCrimson)
                                    {
                                        list.Add(526);
                                        list.Add(526);
                                    }
                                    if (Main.player[plr].ZoneHoly)
                                    {
                                        list.Add(527);
                                        list.Add(527);
                                    }
                                    if (list.Count == 0)
                                    {
                                        list.Add(524);
                                        list.Add(524);
                                    }
                                    if (Main.player[plr].ZoneCorrupt || Main.player[plr].ZoneCrimson)
                                    {
                                        list.Add(533);
                                        list.Add(529);
                                    }
                                    else
                                    {
                                        list.Add(530);
                                        list.Add(528);
                                    }
                                    list.Add(532);
                                    int Type = Utils.SelectRandom<int>(Main.rand, list.ToArray());
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    list.Clear();
                                }
                                else
                                {
                                    int Type = Utils.SelectRandom<int>(Main.rand, 69, 508, 508, 508, 509);
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                            }
                            else if (Main.hardMode && flag6 && (Main.player[plr].ZoneJungle && Main.rand.Next(3) != 0))
                                NPC.NewNPC(index1 * 16 + 8, y * 16, 157, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (Main.hardMode && flag6 && (Main.player[plr].ZoneCrimson && Main.rand.Next(3) != 0))
                                NPC.NewNPC(index1 * 16 + 8, y * 16, 242, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (Main.hardMode && flag6 && (Main.player[plr].ZoneCrimson && Main.rand.Next(3) != 0))
                                NPC.NewNPC(index1 * 16 + 8, y * 16, 241, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (flag6 && (index1 < 250 || index1 > Main.maxTilesX - 250) && (Main.tileSand[index6] && (double)y < Main.rockLayer))
                            {
                                bool flag16 = false;
                                if (!NPC.savedAngler && !NPC.AnyNPCs(376))
                                {
                                    int num3 = -1;
                                    for (int j = y - 1; j > y - 50; --j)
                                    {
                                        if ((int)Main.tile[index1, j].liquid == 0 && !WorldGen.SolidTile(index1, j) && (!WorldGen.SolidTile(index1, j + 1) && !WorldGen.SolidTile(index1, j + 2)))
                                        {
                                            num3 = j + 2;
                                            break;
                                        }
                                    }
                                    if (num3 > y)
                                        num3 = y;
                                    if (num3 > 0 && !flag15)
                                    {
                                        NPC.NewNPC(index1 * 16 + 8, num3 * 16, 376, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        flag16 = true;
                                    }
                                }
                                if (!flag16)
                                {
                                    if (Main.rand.Next(60) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 220, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(25) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 221, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(8) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 65, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(3) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 67, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 64, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                            }
                            else if (!flag6 && !NPC.savedAngler && !NPC.AnyNPCs(376) && ((index1 < 340 || index1 > Main.maxTilesX - 340) && (Main.tileSand[index6] && (double)y < Main.worldSurface)))
                                NPC.NewNPC(index1 * 16 + 8, y * 16, 376, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (flag6 && ((double)y > Main.rockLayer && Main.rand.Next(2) == 0 || index6 == 60))
                            {
                                if (Main.hardMode && Main.rand.Next(3) > 0)
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 102, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 58, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if (flag6 && (double)y > Main.worldSurface && Main.rand.Next(3) == 0)
                            {
                                if (Main.hardMode)
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 103, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 63, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if (flag6 && Main.rand.Next(4) == 0)
                            {
                                if (Main.player[plr].ZoneCorrupt)
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 57, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if ((double)y < Main.worldSurface && y > 50 && (Main.rand.Next(3) != 0 && Main.dayTime))
                                {
                                    int num3 = -1;
                                    for (int j = y - 1; j > y - 50; --j)
                                    {
                                        if ((int)Main.tile[index1, j].liquid == 0 && !WorldGen.SolidTile(index1, j) && (!WorldGen.SolidTile(index1, j + 1) && !WorldGen.SolidTile(index1, j + 2)))
                                        {
                                            num3 = j + 2;
                                            break;
                                        }
                                    }
                                    if (num3 > y)
                                        num3 = y;
                                    if (num3 > 0 && !flag15)
                                    {
                                        if (Main.rand.Next(2) == 0)
                                            NPC.NewNPC(index1 * 16 + 8, num3 * 16, 362, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else
                                            NPC.NewNPC(index1 * 16 + 8, num3 * 16, 364, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    }
                                    else
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 55, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 55, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if (NPC.downedGoblins && Main.rand.Next(20) == 0 && (!flag6 && (double)y >= Main.rockLayer) && (y < Main.maxTilesY - 210 && !NPC.savedGoblin && !NPC.AnyNPCs(105)))
                                NPC.NewNPC(index1 * 16 + 8, y * 16, 105, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (Main.hardMode && Main.rand.Next(20) == 0 && (!flag6 && (double)y >= Main.rockLayer) && (y < Main.maxTilesY - 210 && !NPC.savedWizard && !NPC.AnyNPCs(106)))
                                NPC.NewNPC(index1 * 16 + 8, y * 16, 106, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (flag11)
                            {
                                if (flag6)
                                {
                                    if ((double)y < Main.worldSurface && y > 50 && (Main.rand.Next(3) != 0 && Main.dayTime))
                                    {
                                        int num3 = -1;
                                        for (int j = y - 1; j > y - 50; --j)
                                        {
                                            if ((int)Main.tile[index1, j].liquid == 0 && !WorldGen.SolidTile(index1, j) && (!WorldGen.SolidTile(index1, j + 1) && !WorldGen.SolidTile(index1, j + 2)))
                                            {
                                                num3 = j + 2;
                                                break;
                                            }
                                        }
                                        if (num3 > y)
                                            num3 = y;
                                        if (num3 > 0 && !flag15)
                                        {
                                            if (Main.rand.Next(2) == 0)
                                                NPC.NewNPC(index1 * 16 + 8, num3 * 16, 362, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            else
                                                NPC.NewNPC(index1 * 16 + 8, num3 * 16, 364, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        }
                                        else
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 55, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    }
                                    else
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 55, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else if (index6 == 147 || index6 == 161)
                                {
                                    if (Main.rand.Next(2) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 148, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 149, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else if (index6 == 60)
                                {
                                    if (Main.rand.Next(NPC.goldCritterChance) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 445, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 361, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else
                                {
                                    if (index6 != 2 && index6 != 109 && (double)y <= Main.worldSurface)
                                        break;
                                    if (Main.raining)
                                    {
                                        if (Main.rand.Next(NPC.goldCritterChance) == 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 448, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else if (Main.rand.Next(3) != 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 357, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 230, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    }
                                    else if (!Main.dayTime && Main.rand.Next(NPC.fireFlyFriendly) == 0 && (double)y <= Main.worldSurface)
                                    {
                                        int Type = 355;
                                        if (index6 == 109)
                                            Type = 358;
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
                                            NPC.NewNPC(index1 * 16 + 8 - 16, y * 16, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
                                            NPC.NewNPC(index1 * 16 + 8 + 16, y * 16, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16 - 16, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16 + 16, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    }
                                    else if (Main.dayTime && Main.time < 18000.0 && (Main.rand.Next(3) != 0 && (double)y <= Main.worldSurface))
                                    {
                                        int num3 = Main.rand.Next(4);
                                        if (Main.rand.Next(NPC.goldCritterChance) == 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 442, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else if (num3 == 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 297, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else if (num3 == 1)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 298, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 74, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    }
                                    else if (Main.dayTime && Main.rand.Next(NPC.butterflyChance) == 0 && (double)y <= Main.worldSurface)
                                    {
                                        if (Main.rand.Next(NPC.goldCritterChance) == 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 444, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 356, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        if (Main.rand.Next(4) == 0)
                                            NPC.NewNPC(index1 * 16 + 8 - 16, y * 16, 356, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        if (Main.rand.Next(4) == 0)
                                            NPC.NewNPC(index1 * 16 + 8 + 16, y * 16, 356, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    }
                                    else if (Main.rand.Next(2) == 0 && (double)y <= Main.worldSurface)
                                    {
                                        int num3 = Main.rand.Next(4);
                                        if (Main.rand.Next(NPC.goldCritterChance) == 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 442, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else if (num3 == 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 297, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else if (num3 == 1)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 298, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 74, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    }
                                    else if (index6 == 53)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(366, 368), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(NPC.goldCritterChance) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 443, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(NPC.goldCritterChance) == 0 && (double)y <= Main.worldSurface)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 539, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.halloween && Main.rand.Next(3) != 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 303, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.xMas && Main.rand.Next(3) != 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 337, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(3) == 0 && (double)y <= Main.worldSurface)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, (int)Utils.SelectRandom<short>(Main.rand, (short)299, (short)538), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, 46, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                            }
                            else if (Main.player[plr].ZoneDungeon)
                            {
                                int num3 = 0;
                                if ((int)Main.tile[index1, y].wall == 94 || (int)Main.tile[index1, y].wall == 96 || (int)Main.tile[index1, y].wall == 98)
                                    num3 = 1;
                                if ((int)Main.tile[index1, y].wall == 95 || (int)Main.tile[index1, y].wall == 97 || (int)Main.tile[index1, y].wall == 99)
                                    num3 = 2;
                                if (Main.rand.Next(7) == 0)
                                    num3 = Main.rand.Next(3);
                                if (!NPC.downedBoss3)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 68, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (!NPC.savedMech && Main.rand.Next(5) == 0 && (!flag6 && !NPC.AnyNPCs(123)) && (double)y > Main.rockLayer)
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 123, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (flag13 && Main.rand.Next(30) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 287, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (flag13 && num3 == 0 && Main.rand.Next(15) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 293, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (flag13 && num3 == 1 && Main.rand.Next(15) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 291, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (flag13 && num3 == 2 && Main.rand.Next(15) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 292, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (flag13 && !NPC.AnyNPCs(290) && (num3 == 0 && Main.rand.Next(35) == 0))
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 290, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (flag13 && (num3 == 1 || num3 == 2) && Main.rand.Next(30) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 289, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (flag13 && Main.rand.Next(20) == 0)
                                {
                                    int num5 = 281;
                                    if (num3 == 0)
                                        num5 += 2;
                                    if (num3 == 2)
                                        num5 += 4;
                                    int Type = num5 + Main.rand.Next(2);
                                    if (!NPC.AnyNPCs(Type))
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else if (flag13 && Main.rand.Next(3) != 0)
                                {
                                    int num5 = 269;
                                    if (num3 == 0)
                                        num5 += 4;
                                    if (num3 == 2)
                                        num5 += 8;
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, num5 + Main.rand.Next(4), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else if (Main.rand.Next(37) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 71, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (num3 == 1 && Main.rand.Next(4) == 0 && !NPC.NearSpikeBall(index1, y))
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 70, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (num3 == 2 && Main.rand.Next(15) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 72, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (num3 == 0 && Main.rand.Next(9) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 34, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.rand.Next(7) == 0)
                                {
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 32, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else
                                {
                                    switch (Main.rand.Next(5))
                                    {
                                        case 0:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 294, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            break;
                                        case 1:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 295, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            break;
                                        case 2:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 296, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            break;
                                        default:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 31, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            if (Main.rand.Next(4) == 0)
                                            {
                                                Main.npc[number].SetDefaults("Big Boned");
                                                break;
                                            }
                                            if (Main.rand.Next(5) == 0)
                                            {
                                                Main.npc[number].SetDefaults("Short Bones");
                                                break;
                                            }
                                            break;
                                    }
                                }
                            }
                            else if (Main.player[plr].ZoneMeteor)
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 23, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if ((double)y <= Main.worldSurface && !Main.dayTime && Main.snowMoon)
                            {
                                if (Main.rand.Next(30) == 0 && NPC.CountNPCS(341) < 4)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 341, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (NPC.waveCount >= 20)
                                {
                                    switch (Main.rand.Next(3))
                                    {
                                        case 0:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 345, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            break;
                                        case 1:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 346, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            break;
                                        default:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 344, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            break;
                                    }
                                }
                                else if (NPC.waveCount >= 19)
                                    number = Main.rand.Next(10) != 0 || NPC.CountNPCS(345) >= 4 ? (Main.rand.Next(10) != 0 || NPC.CountNPCS(346) >= 5 ? (Main.rand.Next(10) != 0 || NPC.CountNPCS(344) >= 7 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 343, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 344, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 346, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 345, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (NPC.waveCount >= 18)
                                    number = Main.rand.Next(10) != 0 || NPC.CountNPCS(345) >= 3 ? (Main.rand.Next(10) != 0 || NPC.CountNPCS(346) >= 4 ? (Main.rand.Next(10) != 0 || NPC.CountNPCS(344) >= 6 ? (Main.rand.Next(3) != 0 ? (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 343, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 351, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 348, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 344, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 346, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 345, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (NPC.waveCount >= 17)
                                    number = Main.rand.Next(10) != 0 || NPC.CountNPCS(345) >= 2 ? (Main.rand.Next(10) != 0 || NPC.CountNPCS(346) >= 3 ? (Main.rand.Next(10) != 0 || NPC.CountNPCS(344) >= 5 ? (Main.rand.Next(4) != 0 ? (Main.rand.Next(2) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 343, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 351, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 347, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 344, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 346, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 345, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (NPC.waveCount >= 16)
                                    number = Main.rand.Next(10) != 0 || NPC.CountNPCS(345) >= 2 ? (Main.rand.Next(10) != 0 || NPC.CountNPCS(346) >= 2 ? (Main.rand.Next(10) != 0 || NPC.CountNPCS(344) >= 4 ? (Main.rand.Next(2) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 343, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 352, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 344, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 346, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 345, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (NPC.waveCount >= 15)
                                    number = Main.rand.Next(10) != 0 || NPC.AnyNPCs(345) ? (Main.rand.Next(10) != 0 || NPC.CountNPCS(346) >= 2 ? (Main.rand.Next(10) != 0 || NPC.CountNPCS(344) >= 3 ? (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 343, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 347, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 344, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 346, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 345, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (NPC.waveCount == 14)
                                {
                                    if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 345, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 346, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 344, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(3) == 0)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 343, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else
                                    number = NPC.waveCount != 13 ? (NPC.waveCount != 12 ? (NPC.waveCount != 11 ? (NPC.waveCount != 10 ? (NPC.waveCount != 9 ? (NPC.waveCount != 8 ? (NPC.waveCount != 7 ? (NPC.waveCount != 6 ? (NPC.waveCount != 5 ? (NPC.waveCount != 4 ? (NPC.waveCount != 3 ? (NPC.waveCount != 2 ? (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(338, 341), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 342, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(338, 341), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 350, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(8) != 0 ? (Main.rand.Next(4) != 0 ? (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(338, 341), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 342, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 350, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 348, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(10) != 0 || NPC.AnyNPCs(344) ? (Main.rand.Next(4) != 0 ? (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(338, 341), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 342, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 350, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 344, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(10) != 0 || NPC.AnyNPCs(344) ? (Main.rand.Next(4) != 0 ? (Main.rand.Next(8) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(338, 341), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 348, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 350, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 344, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(10) != 0 || NPC.CountNPCS(344) >= 2 ? (Main.rand.Next(4) != 0 ? (Main.rand.Next(2) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 350, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 348, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 347, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 344, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(10) != 0 || NPC.AnyNPCs(346) ? (Main.rand.Next(3) != 0 ? (Main.rand.Next(4) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(338, 341), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 350, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 342, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 346, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(10) != 0 || NPC.AnyNPCs(346) ? (Main.rand.Next(8) != 0 ? (Main.rand.Next(3) != 0 ? (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 350, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 347, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 348, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 351, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 346, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(10) != 0 || NPC.AnyNPCs(346) ? (Main.rand.Next(10) != 0 || NPC.AnyNPCs(344) ? (Main.rand.Next(2) != 0 ? (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 342, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 347, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 348, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 344, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 346, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(10) != 0 || NPC.AnyNPCs(346) ? (Main.rand.Next(10) != 0 || NPC.CountNPCS(344) >= 2 ? (Main.rand.Next(6) != 0 ? (Main.rand.Next(3) != 0 ? (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(338, 341), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 347, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 348, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 351, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 344, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 346, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(10) != 0 || NPC.AnyNPCs(345) ? (Main.rand.Next(6) != 0 ? (Main.rand.Next(2) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(338, 341), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 342, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 352, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 345, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(10) != 0 || NPC.AnyNPCs(345) ? (Main.rand.Next(10) != 0 || NPC.AnyNPCs(344) ? (Main.rand.Next(8) != 0 ? (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(338, 341), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 342, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 343, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 344, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 345, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(10) != 0 || NPC.AnyNPCs(345) ? (Main.rand.Next(10) != 0 || NPC.AnyNPCs(346) ? (Main.rand.Next(3) != 0 ? (Main.rand.Next(6) != 0 ? (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 347, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 342, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 343, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 352, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 346, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 345, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue));
                            }
                            else if ((double)y <= Main.worldSurface && !Main.dayTime && Main.pumpkinMoon)
                            {
                                if (NPC.waveCount >= 15)
                                    number = Main.rand.Next(2) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 325, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 327, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (NPC.waveCount == 14)
                                    number = Main.rand.Next(5) != 0 || NPC.CountNPCS(327) >= 3 ? (Main.rand.Next(5) != 0 || NPC.CountNPCS(325) >= 3 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 315, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 325, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 327, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (NPC.waveCount == 13)
                                {
                                    if (Main.rand.Next(7) == 0 && NPC.CountNPCS(327) < 2)
                                        num4 = NPC.NewNPC(index1 * 16 + 8, y * 16, 327, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    number = Main.rand.Next(5) != 0 || NPC.CountNPCS(325) >= 3 ? (Main.rand.Next(5) != 0 || NPC.CountNPCS(315) >= 3 ? (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 329, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 330, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 315, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 325, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else if (NPC.waveCount == 12)
                                {
                                    if (Main.rand.Next(7) == 0 && NPC.CountNPCS(327) < 2)
                                        num4 = NPC.NewNPC(index1 * 16 + 8, y * 16, 327, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    number = Main.rand.Next(7) != 0 || NPC.CountNPCS(325) >= 2 ? (Main.rand.Next(7) != 0 || NPC.CountNPCS(315) >= 2 ? (Main.rand.Next(7) != 0 ? (Main.rand.Next(5) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 326, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 329, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 330, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 315, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 325, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else if (NPC.waveCount == 11)
                                {
                                    if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
                                        num4 = NPC.NewNPC(index1 * 16 + 8, y * 16, 327, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    number = Main.rand.Next(7) != 0 || NPC.CountNPCS(325) >= 2 ? (Main.rand.Next(10) != 0 || NPC.AnyNPCs(315) ? (Main.rand.Next(10) != 0 ? (Main.rand.Next(7) != 0 ? (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(305, 315), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 326, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 329, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 330, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 315, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 325, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else
                                    number = NPC.waveCount != 10 ? (NPC.waveCount != 9 ? (NPC.waveCount != 8 ? (NPC.waveCount != 7 ? (NPC.waveCount != 6 ? (NPC.waveCount != 5 ? (NPC.waveCount != 4 ? (NPC.waveCount != 3 ? (NPC.waveCount != 2 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(305, 315), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(305, 315), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 326, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(6) != 0 ? (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(305, 315), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 326, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 329, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(10) != 0 || NPC.AnyNPCs(325) ? (Main.rand.Next(10) != 0 ? (Main.rand.Next(2) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(305, 315), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 326, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 329, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 325, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(10) != 0 || NPC.AnyNPCs(325) ? (Main.rand.Next(8) != 0 ? (Main.rand.Next(5) != 0 ? (Main.rand.Next(2) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(305, 315), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 326, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 329, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 330, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 325, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(7) != 0 || NPC.CountNPCS(325) >= 2 ? (Main.rand.Next(6) != 0 ? (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 326, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 329, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 330, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 325, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(10) != 0 || NPC.AnyNPCs(327) ? (Main.rand.Next(8) != 0 ? (Main.rand.Next(5) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(305, 315), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 329, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 330, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 327, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(10) != 0 || NPC.AnyNPCs(327) ? (Main.rand.Next(5) != 0 ? (Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 326, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 329, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 330, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 327, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(8) != 0 || NPC.AnyNPCs(327) ? (Main.rand.Next(8) != 0 || NPC.AnyNPCs(325) ? (Main.rand.Next(10) != 0 || NPC.AnyNPCs(315) ? NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(305, 315), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 315, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 325, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 327, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : (Main.rand.Next(10) != 0 || NPC.AnyNPCs(327) ? (Main.rand.Next(10) != 0 || NPC.AnyNPCs(325) ? (Main.rand.Next(10) != 0 || NPC.AnyNPCs(315) ? (Main.rand.Next(8) != 0 ? (Main.rand.Next(5) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 326, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 329, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 330, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 315, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 325, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 327, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue));
                            }
                            else if ((double)y <= Main.worldSurface && Main.dayTime && Main.eclipse)
                            {
                                bool flag16 = false;
                                if (NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3)
                                    flag16 = true;
                                number = !flag16 || Main.rand.Next(80) != 0 || NPC.AnyNPCs(477) ? (Main.rand.Next(50) != 0 || NPC.AnyNPCs(251) ? (!NPC.downedPlantBoss || Main.rand.Next(5) != 0 || NPC.AnyNPCs(466) ? (!NPC.downedPlantBoss || Main.rand.Next(20) != 0 || NPC.AnyNPCs(463) ? (!NPC.downedPlantBoss || Main.rand.Next(20) != 0 || NPC.CountNPCS(467) >= 2 ? (Main.rand.Next(15) != 0 ? (!flag16 || Main.rand.Next(13) != 0 ? (Main.rand.Next(8) != 0 ? (!NPC.downedPlantBoss || Main.rand.Next(7) != 0 ? (!NPC.downedPlantBoss || Main.rand.Next(5) != 0 ? (Main.rand.Next(4) != 0 ? (Main.rand.Next(3) != 0 ? (Main.rand.Next(2) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 166, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 462, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 461, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 162, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 460, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 468, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 469, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 253, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 159, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 467, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 463, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 466, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 251, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 477, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if (Main.hardMode && num1 == 70 && flag6)
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 256, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (num1 == 70 && (double)y <= Main.worldSurface && Main.rand.Next(3) != 0)
                            {
                                if (!Main.hardMode && Main.rand.Next(6) == 0 || Main.rand.Next(12) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 360, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.rand.Next(3) == 0)
                                {
                                    if (Main.rand.Next(4) == 0)
                                    {
                                        if (Main.hardMode && Main.rand.Next(3) != 0)
                                        {
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 260, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            Main.npc[number].ai[0] = (float)index1;
                                            Main.npc[number].ai[1] = (float)y;
                                            Main.npc[number].netUpdate = true;
                                        }
                                        else
                                        {
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 259, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            Main.npc[number].ai[0] = (float)index1;
                                            Main.npc[number].ai[1] = (float)y;
                                            Main.npc[number].netUpdate = true;
                                        }
                                    }
                                    else
                                        number = Main.rand.Next(2) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 258, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 257, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else
                                    number = Main.rand.Next(2) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, (int)byte.MaxValue, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 254, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if (num1 == 70 && Main.hardMode && ((double)y >= Main.worldSurface && Main.rand.Next(3) != 0))
                            {
                                if (Main.hardMode && Main.rand.Next(5) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 374, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (!Main.hardMode && Main.rand.Next(4) == 0 || Main.rand.Next(8) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 360, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.rand.Next(4) == 0)
                                {
                                    if (Main.hardMode && Main.rand.Next(3) != 0)
                                    {
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 260, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        Main.npc[number].ai[0] = (float)index1;
                                        Main.npc[number].ai[1] = (float)y;
                                        Main.npc[number].netUpdate = true;
                                    }
                                    else
                                    {
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 259, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        Main.npc[number].ai[0] = (float)index1;
                                        Main.npc[number].ai[1] = (float)y;
                                        Main.npc[number].netUpdate = true;
                                    }
                                }
                                else
                                    number = Main.rand.Next(2) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 258, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 257, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if (Main.player[plr].ZoneCorrupt && Main.rand.Next(65) == 0 && !flag4)
                                number = !Main.hardMode || Main.rand.Next(4) == 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 7, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 98, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (Main.hardMode && (double)y > Main.worldSurface && Main.rand.Next(75) == 0)
                                number = Main.rand.Next(2) != 0 || !Main.player[plr].ZoneCorrupt || NPC.AnyNPCs(473) ? (Main.rand.Next(2) != 0 || !Main.player[plr].ZoneCrimson || NPC.AnyNPCs(474) ? (Main.rand.Next(2) != 0 || !Main.player[plr].ZoneHoly || NPC.AnyNPCs(475) ? NPC.NewNPC(index1 * 16 + 8, y * 16, 85, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 475, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 474, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 473, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (Main.hardMode && (int)Main.tile[index1, y - 1].wall == 2 && Main.rand.Next(20) == 0)
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 85, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (Main.hardMode && (double)y <= Main.worldSurface && !Main.dayTime && (Main.rand.Next(20) == 0 || Main.rand.Next(5) == 0 && Main.moonPhase == 4))
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 82, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (Main.hardMode && Main.halloween && ((double)y <= Main.worldSurface && !Main.dayTime) && Main.rand.Next(10) == 0)
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 304, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (index6 == 60 && Main.rand.Next(500) == 0 && !Main.dayTime)
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 52, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (index6 == 60 && (double)y > Main.worldSurface && Main.rand.Next(60) == 0)
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 219, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if ((double)y > Main.worldSurface && y < Main.maxTilesY - 210 && (!Main.player[plr].ZoneSnow && !Main.player[plr].ZoneCrimson) && (!Main.player[plr].ZoneCorrupt && !Main.player[plr].ZoneJungle && (!Main.player[plr].ZoneHoly && Main.rand.Next(8) == 0)))
                            {
                                if (Main.rand.Next(NPC.goldCritterChance) == 0)
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 448, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 357, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if ((double)y > Main.worldSurface && y < Main.maxTilesY - 210 && (!Main.player[plr].ZoneSnow && !Main.player[plr].ZoneCrimson) && (!Main.player[plr].ZoneCorrupt && !Main.player[plr].ZoneJungle && (!Main.player[plr].ZoneHoly && Main.rand.Next(13) == 0)))
                            {
                                if (Main.rand.Next(NPC.goldCritterChance) == 0)
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 447, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 300, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if ((double)y > Main.worldSurface && (double)y < (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && (!Main.player[plr].ZoneSnow && !Main.player[plr].ZoneCrimson) && (!Main.player[plr].ZoneCorrupt && !Main.player[plr].ZoneHoly && Main.rand.Next(13) == 0))
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 359, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if ((double)y < Main.worldSurface && Main.player[plr].ZoneJungle && Main.rand.Next(9) == 0)
                            {
                                if (Main.rand.Next(NPC.goldCritterChance) == 0)
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 445, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 361, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if (index6 == 60 && Main.hardMode && Main.rand.Next(3) != 0)
                            {
                                if ((double)y < Main.worldSurface && !Main.dayTime && Main.rand.Next(3) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 152, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if ((double)y < Main.worldSurface && Main.dayTime && Main.rand.Next(4) != 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 177, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if ((double)y > Main.worldSurface && Main.rand.Next(100) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 205, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if ((double)y > Main.worldSurface && Main.rand.Next(5) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 236, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if ((double)y > Main.worldSurface && Main.rand.Next(4) != 0)
                                {
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 176, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    if (Main.rand.Next(10) == 0)
                                        Main.npc[number].SetDefaults("Tiny Moss Hornet");
                                    if (Main.rand.Next(10) == 0)
                                        Main.npc[number].SetDefaults("Little Moss Hornet");
                                    if (Main.rand.Next(10) == 0)
                                        Main.npc[number].SetDefaults("Big Moss Hornet");
                                    if (Main.rand.Next(10) == 0)
                                        Main.npc[number].SetDefaults("Giant Moss Hornet");
                                }
                                else if (Main.rand.Next(3) == 0)
                                {
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 175, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    Main.npc[number].ai[0] = (float)index1;
                                    Main.npc[number].ai[1] = (float)y;
                                    Main.npc[number].netUpdate = true;
                                }
                                else
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 153, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if (index6 == 226 && flag3)
                                number = Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 198, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 226, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (index6 == 60 && (double)y > (Main.worldSurface + Main.rockLayer) / 2.0)
                            {
                                if (Main.rand.Next(4) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 204, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.rand.Next(4) == 0)
                                {
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 43, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    Main.npc[number].ai[0] = (float)index1;
                                    Main.npc[number].ai[1] = (float)y;
                                    Main.npc[number].netUpdate = true;
                                }
                                else
                                {
                                    switch (Main.rand.Next(8))
                                    {
                                        case 0:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 231, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            if (Main.rand.Next(4) == 0)
                                            {
                                                Main.npc[number].SetDefaults("Little Hornet Fatty");
                                                break;
                                            }
                                            if (Main.rand.Next(4) == 0)
                                            {
                                                Main.npc[number].SetDefaults("Big Hornet Fatty");
                                                break;
                                            }
                                            break;
                                        case 1:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 232, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            if (Main.rand.Next(4) == 0)
                                            {
                                                Main.npc[number].SetDefaults("Little Hornet Honey");
                                                break;
                                            }
                                            if (Main.rand.Next(4) == 0)
                                            {
                                                Main.npc[number].SetDefaults("Big Hornet Honey");
                                                break;
                                            }
                                            break;
                                        case 2:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 233, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            if (Main.rand.Next(4) == 0)
                                            {
                                                Main.npc[number].SetDefaults("Little Hornet Leafy");
                                                break;
                                            }
                                            if (Main.rand.Next(4) == 0)
                                            {
                                                Main.npc[number].SetDefaults("Big Hornet Leafy");
                                                break;
                                            }
                                            break;
                                        case 3:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 234, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            if (Main.rand.Next(4) == 0)
                                            {
                                                Main.npc[number].SetDefaults("Little Hornet Spikey");
                                                break;
                                            }
                                            if (Main.rand.Next(4) == 0)
                                            {
                                                Main.npc[number].SetDefaults("Big Hornet Spikey");
                                                break;
                                            }
                                            break;
                                        case 4:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 235, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            if (Main.rand.Next(4) == 0)
                                            {
                                                Main.npc[number].SetDefaults("Little Hornet Stingy");
                                                break;
                                            }
                                            if (Main.rand.Next(4) == 0)
                                            {
                                                Main.npc[number].SetDefaults("Big Hornet Stingy");
                                                break;
                                            }
                                            break;
                                        default:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 42, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            if (Main.rand.Next(4) == 0)
                                            {
                                                Main.npc[number].SetDefaults("Little Stinger");
                                                break;
                                            }
                                            if (Main.rand.Next(4) == 0)
                                            {
                                                Main.npc[number].SetDefaults("Big Stinger");
                                                break;
                                            }
                                            break;
                                    }
                                }
                            }
                            else if (index6 == 60 && Main.rand.Next(4) == 0)
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 51, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (index6 == 60 && Main.rand.Next(8) == 0)
                            {
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 56, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                Main.npc[number].ai[0] = (float)index1;
                                Main.npc[number].ai[1] = (float)y;
                                Main.npc[number].netUpdate = true;
                            }
                            else if (Main.hardMode && index6 == 53 && Main.rand.Next(3) == 0)
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 78, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (Main.hardMode && (index6 == 112 || index6 == 234) && Main.rand.Next(2) == 0)
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 79, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (Main.hardMode && index6 == 116 && Main.rand.Next(2) == 0)
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 80, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (Main.hardMode && !flag6 && (double)y < Main.rockLayer && (index6 == 116 || index6 == 117 || (index6 == 109 || index6 == 164)))
                                number = Main.dayTime || Main.rand.Next(2) != 0 ? (Main.rand.Next(10) == 0 || Main.player[plr].ZoneWaterCandle && Main.rand.Next(10) == 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 86, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 75, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 122, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (!flag4 && Main.hardMode && (Main.rand.Next(50) == 0 && !flag6) && (double)y >= Main.rockLayer && (index6 == 116 || index6 == 117 || (index6 == 109 || index6 == 164)))
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 84, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (index6 == 204 && Main.player[plr].ZoneCrimson || (index6 == 199 || index6 == 200) || (index6 == 203 || index6 == 234))
                            {
                                if (Main.hardMode && (double)y >= Main.rockLayer && (Main.rand.Next(5) == 0 && !flag4))
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 182, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode && (double)y >= Main.rockLayer && Main.rand.Next(2) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 268, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode && Main.rand.Next(3) == 0)
                                {
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 183, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    if (Main.rand.Next(3) == 0)
                                        Main.npc[number].SetDefaults("Little Crimslime");
                                    else if (Main.rand.Next(3) == 0)
                                        Main.npc[number].SetDefaults("Big Crimslime");
                                }
                                else if (Main.hardMode && (double)y >= Main.rockLayer && (Main.rand.Next(40) == 0 && !flag4))
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 179, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode && (Main.rand.Next(2) == 0 || (double)y > Main.worldSurface))
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 174, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if ((int)Main.tile[index1, y].wall > 0 && Main.rand.Next(4) != 0 || Main.rand.Next(8) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 239, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.rand.Next(2) == 0)
                                {
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 181, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else
                                {
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 173, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    if (Main.rand.Next(3) == 0)
                                        Main.npc[number].SetDefaults("Little Crimera");
                                    else if (Main.rand.Next(3) == 0)
                                        Main.npc[number].SetDefaults("Big Crimera");
                                }
                            }
                            else if (index6 == 22 && Main.player[plr].ZoneCorrupt || (index6 == 23 || index6 == 25) || (index6 == 112 || index6 == 163))
                            {
                                if (Main.hardMode && (double)y >= Main.rockLayer && Main.rand.Next(3) == 0)
                                {
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 101, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    Main.npc[number].ai[0] = (float)index1;
                                    Main.npc[number].ai[1] = (float)y;
                                    Main.npc[number].netUpdate = true;
                                }
                                else if (Main.hardMode && Main.rand.Next(3) == 0)
                                    number = Main.rand.Next(3) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 81, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 121, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode && (double)y >= Main.rockLayer && (Main.rand.Next(40) == 0 && !flag4))
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 83, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode && (Main.rand.Next(2) == 0 || (double)y > Main.rockLayer))
                                {
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 94, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else
                                {
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 6, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    if (Main.rand.Next(3) == 0)
                                        Main.npc[number].SetDefaults("Little Eater");
                                    else if (Main.rand.Next(3) == 0)
                                        Main.npc[number].SetDefaults("Big Eater");
                                }
                            }
                            else if ((double)y <= Main.worldSurface)
                            {
                                if (Main.player[plr].ZoneSnow && Main.hardMode && ((double)Main.cloudAlpha > 0.0 && !NPC.AnyNPCs(243)) && Main.rand.Next(20) == 0)
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 243, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.player[plr].ZoneHoly && Main.hardMode && ((double)Main.cloudAlpha > 0.0 && !NPC.AnyNPCs(244)) && Main.rand.Next(20) == 0)
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 244, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (!Main.player[plr].ZoneSnow && Main.hardMode && ((double)Main.cloudAlpha > 0.0 && NPC.CountNPCS(250) < 2) && Main.rand.Next(10) == 0)
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 250, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode && NPC.downedGolemBoss && (!NPC.downedMartians && Main.rand.Next(100) == 0 || Main.rand.Next(400) == 0) && !NPC.AnyNPCs(399))
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 399, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.dayTime)
                                {
                                    int num3 = Math.Abs(index1 - Main.spawnTileX);
                                    if (num3 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && (index6 == 2 || index6 == 109 || (index6 == 147 || index6 == 161)))
                                    {
                                        if (index6 == 147 || index6 == 161)
                                        {
                                            if (Main.rand.Next(2) == 0)
                                                NPC.NewNPC(index1 * 16 + 8, y * 16, 148, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            else
                                                NPC.NewNPC(index1 * 16 + 8, y * 16, 149, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        }
                                        else if (Main.dayTime && Main.rand.Next(NPC.butterflyChance) == 0 && (double)y <= Main.worldSurface)
                                        {
                                            if (Main.rand.Next(NPC.goldCritterChance) == 0)
                                                NPC.NewNPC(index1 * 16 + 8, y * 16, 444, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            else
                                                NPC.NewNPC(index1 * 16 + 8, y * 16, 356, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            if (Main.rand.Next(4) == 0)
                                                NPC.NewNPC(index1 * 16 + 8 - 16, y * 16, 356, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            if (Main.rand.Next(4) == 0)
                                                NPC.NewNPC(index1 * 16 + 8 + 16, y * 16, 356, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        }
                                        else if (Main.rand.Next(NPC.goldCritterChance) == 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 443, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else if (Main.rand.Next(NPC.goldCritterChance) == 0 && (double)y <= Main.worldSurface)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 539, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else if (Main.halloween && Main.rand.Next(3) != 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 303, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else if (Main.xMas && Main.rand.Next(3) != 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 337, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else if (Main.rand.Next(3) == 0 && (double)y <= Main.worldSurface)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, (int)Utils.SelectRandom<short>(Main.rand, (short)299, (short)538), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 46, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    }
                                    else if (num3 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && index6 == 53)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(366, 368), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (num3 < Main.maxTilesX / 3 && Main.dayTime && Main.time < 18000.0 && ((index6 == 2 || index6 == 109) && (Main.rand.Next(4) == 0 && (double)y <= Main.worldSurface)) && NPC.CountNPCS(74) + NPC.CountNPCS(297) + NPC.CountNPCS(298) < 6)
                                    {
                                        int num5 = Main.rand.Next(4);
                                        if (Main.rand.Next(NPC.goldCritterChance) == 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 442, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else if (num5 == 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 297, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else if (num5 == 1)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 298, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 74, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    }
                                    else if (num3 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && (index6 == 2 || index6 == 109 || index6 == 147))
                                    {
                                        int num5 = Main.rand.Next(4);
                                        if (Main.rand.Next(NPC.goldCritterChance) == 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 442, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else if (num5 == 0)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 297, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else if (num5 == 1)
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 298, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else
                                            NPC.NewNPC(index1 * 16 + 8, y * 16, 74, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    }
                                    else if (num3 > Main.maxTilesX / 3 && index6 == 2 && (Main.rand.Next(300) == 0 && !NPC.AnyNPCs(50)))
                                        NPC.SpawnOnPlayer(plr, 50);
                                    else if (index6 == 53 && Main.rand.Next(5) == 0 && !flag6)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 69, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (index6 == 53 && Main.rand.Next(3) == 0 && !flag6)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 537, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (NPC.downedBoss1 && index6 == 53 && (Main.rand.Next(5) == 0 && !flag6))
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 509, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (index6 == 53 && !flag6)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 61, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (num3 > Main.maxTilesX / 3 && (Main.rand.Next(15) == 0 || !NPC.downedGoblins && WorldGen.shadowOrbSmashed && Main.rand.Next(7) == 0))
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 73, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.raining && Main.rand.Next(3) == 0)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 224, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.raining && Main.rand.Next(2) == 0)
                                    {
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 225, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    }
                                    else
                                    {
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 1, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        if (index6 == 60)
                                            Main.npc[number].SetDefaults("Jungle Slime");
                                        else if (index6 == 161 || index6 == 147)
                                            Main.npc[number].SetDefaults("Ice Slime");
                                        else if (Main.halloween && Main.rand.Next(3) != 0)
                                            Main.npc[number].SetDefaults(302, -1f);
                                        else if (Main.xMas && Main.rand.Next(3) != 0)
                                            Main.npc[number].SetDefaults(Main.rand.Next(333, 337), -1f);
                                        else if (Main.rand.Next(3) == 0 || num3 < 200 && !Main.expertMode)
                                            Main.npc[number].SetDefaults("Green Slime");
                                        else if (Main.rand.Next(10) == 0 && (num3 > 400 || Main.expertMode))
                                            Main.npc[number].SetDefaults("Purple Slime");
                                    }
                                }
                                else if ((num1 == 2 || num1 == 109) && (Main.rand.Next(NPC.fireFlyChance) == 0 && (double)y <= Main.worldSurface))
                                {
                                    int Type = 355;
                                    if (index6 == 109)
                                        Type = 358;
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
                                        NPC.NewNPC(index1 * 16 + 8 - 16, y * 16, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
                                        NPC.NewNPC(index1 * 16 + 8 + 16, y * 16, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16 - 16, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
                                        NPC.NewNPC(index1 * 16 + 8, y * 16 + 16, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else if (Main.rand.Next(10) == 0 && Main.halloween)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 301, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.rand.Next(6) == 0 || Main.moonPhase == 4 && Main.rand.Next(2) == 0)
                                {
                                    if (Main.hardMode && Main.rand.Next(3) == 0)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 133, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.halloween && Main.rand.Next(2) == 0)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(317, 319), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.rand.Next(2) == 0)
                                    {
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 2, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        if (Main.rand.Next(4) == 0)
                                            Main.npc[number].SetDefaults("Demon Eye 2");
                                    }
                                    else
                                    {
                                        switch (Main.rand.Next(5))
                                        {
                                            case 0:
                                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 190, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                                if (Main.rand.Next(3) == 0)
                                                {
                                                    Main.npc[number].SetDefaults("Cataract Eye 2");
                                                    break;
                                                }
                                                break;
                                            case 1:
                                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 191, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                                if (Main.rand.Next(3) == 0)
                                                {
                                                    Main.npc[number].SetDefaults("Sleepy Eye 2");
                                                    break;
                                                }
                                                break;
                                            case 2:
                                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 192, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                                if (Main.rand.Next(3) == 0)
                                                {
                                                    Main.npc[number].SetDefaults("Dialated Eye 2");
                                                    break;
                                                }
                                                break;
                                            case 3:
                                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 193, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                                if (Main.rand.Next(3) == 0)
                                                {
                                                    Main.npc[number].SetDefaults("Green Eye 2");
                                                    break;
                                                }
                                                break;
                                            case 4:
                                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 194, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                                if (Main.rand.Next(3) == 0)
                                                {
                                                    Main.npc[number].SetDefaults("Purple Eye 2");
                                                    break;
                                                }
                                                break;
                                        }
                                    }
                                }
                                else if (Main.hardMode && Main.rand.Next(50) == 0 && (Main.bloodMoon && !NPC.AnyNPCs(109)))
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 109, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.rand.Next(250) == 0 && Main.bloodMoon)
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 53, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.rand.Next(250) == 0 && Main.bloodMoon)
                                    NPC.NewNPC(index1 * 16 + 8, y * 16, 536, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.moonPhase == 0 && Main.hardMode && Main.rand.Next(3) != 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 104, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode && Main.rand.Next(3) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 140, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.bloodMoon && Main.rand.Next(5) < 2)
                                    number = Main.rand.Next(2) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 490, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 489, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (num1 == 147 || num1 == 161 || (num1 == 163 || num1 == 164) || num1 == 162)
                                    number = !Main.hardMode || Main.rand.Next(4) != 0 ? (!Main.hardMode || Main.rand.Next(3) != 0 ? (!Main.expertMode || Main.rand.Next(2) != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 161, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 431, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 155, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 169, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.raining && Main.rand.Next(2) == 0)
                                {
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 223, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    if (Main.rand.Next(3) == 0)
                                    {
                                        if (Main.rand.Next(2) == 0)
                                            Main.npc[number].SetDefaults("Small Rain Zombie");
                                        else
                                            Main.npc[number].SetDefaults("Big Rain Zombie");
                                    }
                                }
                                else
                                {
                                    int num3 = Main.rand.Next(7);
                                    if (Main.halloween && Main.rand.Next(2) == 0)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(319, 322), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (Main.xMas && Main.rand.Next(2) == 0)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(331, 333), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (num3 == 0 && Main.expertMode && Main.rand.Next(3) == 0)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 430, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (num3 == 2 && Main.expertMode && Main.rand.Next(3) == 0)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 432, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (num3 == 3 && Main.expertMode && Main.rand.Next(3) == 0)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 433, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (num3 == 4 && Main.expertMode && Main.rand.Next(3) == 0)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 434, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (num3 == 5 && Main.expertMode && Main.rand.Next(3) == 0)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 435, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (num3 == 6 && Main.expertMode && Main.rand.Next(3) == 0)
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 436, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    else if (num3 == 0)
                                    {
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 3, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        if (Main.rand.Next(3) == 0)
                                        {
                                            if (Main.rand.Next(2) == 0)
                                                Main.npc[number].SetDefaults("Small Zombie");
                                            else
                                                Main.npc[number].SetDefaults("Big Zombie");
                                        }
                                    }
                                    else if (num3 == 1)
                                    {
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 132, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        if (Main.rand.Next(3) == 0)
                                        {
                                            if (Main.rand.Next(2) == 0)
                                                Main.npc[number].SetDefaults("Small Bald Zombie");
                                            else
                                                Main.npc[number].SetDefaults("Big Bald Zombie");
                                        }
                                    }
                                    else if (num3 == 2)
                                    {
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 186, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        if (Main.rand.Next(3) == 0)
                                        {
                                            if (Main.rand.Next(2) == 0)
                                                Main.npc[number].SetDefaults("Small Pincushion Zombie");
                                            else
                                                Main.npc[number].SetDefaults("Big Pincushion Zombie");
                                        }
                                    }
                                    else if (num3 == 3)
                                    {
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 187, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        if (Main.rand.Next(3) == 0)
                                        {
                                            if (Main.rand.Next(2) == 0)
                                                Main.npc[number].SetDefaults("Small Slimed Zombie");
                                            else
                                                Main.npc[number].SetDefaults("Big Slimed Zombie");
                                        }
                                    }
                                    else if (num3 == 4)
                                    {
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 188, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        if (Main.rand.Next(3) == 0)
                                        {
                                            if (Main.rand.Next(2) == 0)
                                                Main.npc[number].SetDefaults("Small Swamp Zombie");
                                            else
                                                Main.npc[number].SetDefaults("Big Swamp Zombie");
                                        }
                                    }
                                    else if (num3 == 5)
                                    {
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 189, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        if (Main.rand.Next(3) == 0)
                                        {
                                            if (Main.rand.Next(2) == 0)
                                                Main.npc[number].SetDefaults("Small Twiggy Zombie");
                                            else
                                                Main.npc[number].SetDefaults("Big Twiggy Zombie");
                                        }
                                    }
                                    else if (num3 == 6)
                                    {
                                        number = NPC.NewNPC(index1 * 16 + 8, y * 16, 200, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        if (Main.rand.Next(3) == 0)
                                        {
                                            if (Main.rand.Next(2) == 0)
                                                Main.npc[number].SetDefaults("Small Female Zombie");
                                            else
                                                Main.npc[number].SetDefaults("Big Female Zombie");
                                        }
                                    }
                                }
                            }
                            else if ((double)y <= Main.rockLayer)
                            {
                                if (!flag4 && Main.rand.Next(50) == 0 && !Main.player[plr].ZoneSnow)
                                    number = !Main.hardMode ? (!Main.player[plr].ZoneSnow ? NPC.NewNPC(index1 * 16 + 8, y * 16, 10, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 185, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 95, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode && Main.rand.Next(3) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 140, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode && Main.rand.Next(4) != 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 141, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (index6 == 147 || index6 == 161 || Main.player[plr].ZoneSnow)
                                {
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 147, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else
                                {
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 1, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                    if (Main.rand.Next(5) == 0)
                                        Main.npc[number].SetDefaults("Yellow Slime");
                                    else if (Main.rand.Next(2) == 0)
                                        Main.npc[number].SetDefaults("Blue Slime");
                                    else
                                        Main.npc[number].SetDefaults("Red Slime");
                                }
                            }
                            else if (y > Main.maxTilesY - 190)
                                number = !Main.hardMode || NPC.savedTaxCollector || (Main.rand.Next(20) != 0 || NPC.AnyNPCs(534)) ? (Main.rand.Next(40) != 0 || NPC.AnyNPCs(39) ? (Main.rand.Next(14) != 0 ? (Main.rand.Next(7) != 0 ? (Main.rand.Next(3) != 0 ? (!Main.hardMode || !NPC.downedMechBossAny || Main.rand.Next(5) == 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 60, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 151, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 59, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : (Main.rand.Next(7) != 0 ? (!Main.hardMode || !NPC.downedMechBossAny || Main.rand.Next(5) == 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 62, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 156, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 66, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue))) : NPC.NewNPC(index1 * 16 + 8, y * 16, 24, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 39, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 534, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (Main.rand.Next(60) == 0)
                                number = !Main.player[plr].ZoneSnow ? NPC.NewNPC(index1 * 16 + 8, y * 16, 217, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 218, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if ((index6 == 116 || index6 == 117 || index6 == 164) && (Main.hardMode && !flag4 && Main.rand.Next(8) == 0))
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 120, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if ((num1 == 147 || num1 == 161 || (num1 == 162 || num1 == 163) || num1 == 164) && (!flag4 && Main.hardMode && (Main.player[plr].ZoneCorrupt && Main.rand.Next(30) == 0)))
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 170, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if ((num1 == 147 || num1 == 161 || (num1 == 162 || num1 == 163) || num1 == 164) && (!flag4 && Main.hardMode && (Main.player[plr].ZoneHoly && Main.rand.Next(30) == 0)))
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 171, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if ((num1 == 147 || num1 == 161 || (num1 == 162 || num1 == 163) || num1 == 164) && (!flag4 && Main.hardMode && (Main.player[plr].ZoneCrimson && Main.rand.Next(30) == 0)))
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 180, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (Main.hardMode && Main.player[plr].ZoneSnow && Main.rand.Next(10) == 0)
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 154, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (!flag4 && Main.rand.Next(100) == 0 && !Main.player[plr].ZoneHoly)
                                number = !Main.hardMode ? (!Main.player[plr].ZoneSnow ? NPC.NewNPC(index1 * 16 + 8, y * 16, 10, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 185, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 95, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (Main.player[plr].ZoneSnow && Main.rand.Next(20) == 0)
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 185, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            else if (!Main.hardMode && Main.rand.Next(10) == 0)
                            {
                                if (Main.player[plr].ZoneSnow)
                                    Main.npc[number].SetDefaults(184, -1f);
                                else
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 16, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            }
                            else if (!Main.hardMode && Main.rand.Next(4) == 0)
                            {
                                number = NPC.NewNPC(index1 * 16 + 8, y * 16, 1, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                if (Main.player[plr].ZoneJungle)
                                    Main.npc[number].SetDefaults("Jungle Slime");
                                else if (Main.player[plr].ZoneSnow)
                                    Main.npc[number].SetDefaults(184, -1f);
                                else
                                    Main.npc[number].SetDefaults("Black Slime");
                            }
                            else if (Main.rand.Next(2) == 0)
                            {
                                if (Main.rand.Next(35) == 0 && NPC.CountNPCS(453) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 453, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (!Main.hardMode && Main.rand.Next(80) == 0 || Main.rand.Next(200) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 195, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode && (double)y > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && Main.rand.Next(300) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 172, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if ((double)y > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && (Main.rand.Next(200) == 0 || Main.rand.Next(50) == 0 && Main.player[plr].armor[1].itemId >= 1282 && (Main.player[plr].armor[1].itemId <= 1287 && Main.player[plr].armor[0].itemId != 238)))
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 45, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (flag9 && Main.rand.Next(5) != 0)
                                    number = Main.rand.Next(6) == 0 || NPC.AnyNPCs(480) ? NPC.NewNPC(index1 * 16 + 8, y * 16, 481, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 480, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (flag8 && Main.rand.Next(5) != 0)
                                    number = Main.rand.Next(6) == 0 || NPC.AnyNPCs(483) ? NPC.NewNPC(index1 * 16 + 8, y * 16, 482, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 483, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.hardMode && Main.rand.Next(10) != 0)
                                {
                                    if (Main.rand.Next(2) == 0)
                                    {
                                        if (Main.player[plr].ZoneSnow)
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 197, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        else if (Main.halloween && Main.rand.Next(5) == 0)
                                        {
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 316, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                        }
                                        else
                                        {
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 77, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            if ((double)y > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && Main.rand.Next(5) == 0)
                                                Main.npc[number].SetDefaults("Heavy Skeleton");
                                        }
                                    }
                                    else
                                        number = !Main.player[plr].ZoneSnow ? NPC.NewNPC(index1 * 16 + 8, y * 16, 110, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 206, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else if (Main.rand.Next(20) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 44, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (num1 == 147 || num1 == 161 || num1 == 162)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 167, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.player[plr].ZoneSnow)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, 185, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.rand.Next(3) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, NPC.cavernMonsterType[Main.rand.Next(2), Main.rand.Next(3)], 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.halloween && Main.rand.Next(2) == 0)
                                    number = NPC.NewNPC(index1 * 16 + 8, y * 16, Main.rand.Next(322, 325), 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                else if (Main.expertMode && Main.rand.Next(3) == 0)
                                {
                                    int num3 = Main.rand.Next(4);
                                    number = num3 != 0 ? (num3 != 0 ? (num3 != 0 ? NPC.NewNPC(index1 * 16 + 8, y * 16, 452, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 451, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 450, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 449, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                }
                                else
                                {
                                    switch (Main.rand.Next(4))
                                    {
                                        case 0:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 21, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            if (Main.rand.Next(3) == 0)
                                            {
                                                if (Main.rand.Next(2) == 0)
                                                {
                                                    Main.npc[number].SetDefaults("Big Skeleton");
                                                    break;
                                                }
                                                Main.npc[number].SetDefaults("Small Skeleton");
                                                break;
                                            }
                                            break;
                                        case 1:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 201, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            if (Main.rand.Next(3) == 0)
                                            {
                                                if (Main.rand.Next(2) == 0)
                                                {
                                                    Main.npc[number].SetDefaults("Big Headache Skeleton");
                                                    break;
                                                }
                                                Main.npc[number].SetDefaults("Small Headache Skeleton");
                                                break;
                                            }
                                            break;
                                        case 2:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 202, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            if (Main.rand.Next(3) == 0)
                                            {
                                                if (Main.rand.Next(2) == 0)
                                                {
                                                    Main.npc[number].SetDefaults("Big Misassembled Skeleton");
                                                    break;
                                                }
                                                Main.npc[number].SetDefaults("Small Misassembled Skeleton");
                                                break;
                                            }
                                            break;
                                        case 3:
                                            number = NPC.NewNPC(index1 * 16 + 8, y * 16, 203, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                                            if (Main.rand.Next(3) == 0)
                                            {
                                                if (Main.rand.Next(2) == 0)
                                                {
                                                    Main.npc[number].SetDefaults("Big Pantless Skeleton");
                                                    break;
                                                }
                                                Main.npc[number].SetDefaults("Small Pantless Skeleton");
                                                break;
                                            }
                                            break;
                                    }
                                }
                            }
                            else
                                number = !Main.hardMode || !(Main.player[plr].ZoneHoly & Main.rand.Next(2) == 0) ? (!Main.player[plr].ZoneJungle ? (!Main.hardMode || !Main.player[plr].ZoneHoly ? (!Main.hardMode || Main.rand.Next(6) <= 0 ? (num1 == 147 || num1 == 161 || num1 == 162 ? (!Main.hardMode ? NPC.NewNPC(index1 * 16 + 8, y * 16, 150, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue) : NPC.NewNPC(index1 * 16 + 8, y * 16, 169, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 49, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 93, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 137, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 51, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue)) : NPC.NewNPC(index1 * 16 + 8, y * 16, 138, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                            if (Main.npc[number].type == 1 && Main.rand.Next(180) == 0)
                                Main.npc[number].SetDefaults("Pinky");
                            if (Main.netMode != 2 || number >= 200)
                                break;
                            NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                            break;
                        }
                    }
                }
            }
        }

        public static void SpawnWOF(Vector2 pos)
        {
            if ((double)pos.Y / 16.0 < (double)(Main.maxTilesY - 205) || Main.wof >= 0 || Main.netMode == 1)
                return;
            int num1 = (int)Player.FindClosest(pos, 16, 16);
            int num2 = 1;
            if ((double)pos.X / 16.0 > (double)(Main.maxTilesX / 2))
                num2 = -1;
            bool flag = false;
            int X = (int)pos.X;
            while (!flag)
            {
                flag = true;
                for (int index = 0; index < (int)byte.MaxValue; ++index)
                {
                    if (Main.player[index].active && (double)Main.player[index].position.X > (double)(X - 1200) && (double)Main.player[index].position.X < (double)(X + 1200))
                    {
                        X -= num2 * 16;
                        flag = false;
                    }
                }
                if (X / 16 < 20 || X / 16 > Main.maxTilesX - 20)
                    flag = true;
            }
            int num3 = (int)pos.Y;
            int i = X / 16;
            int num4 = num3 / 16;
            int num5 = 0;
            try
            {
                for (; WorldGen.SolidTile(i, num4 - num5) || (int)Main.tile[i, num4 - num5].liquid >= 100; ++num5)
                {
                    if (!WorldGen.SolidTile(i, num4 + num5) && (int)Main.tile[i, num4 + num5].liquid < 100)
                    {
                        num4 += num5;
                        goto label_20;
                    }
                }
                num4 -= num5;
            }
            catch
            {
            }
        label_20:
            int Y = num4 * 16;
            int index1 = NPC.NewNPC(X, Y, 113, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
            if (Main.npc[index1].displayName == "")
                Main.npc[index1].displayName = Main.npc[index1].name;
            if (Main.netMode == 0)
            {
                Main.NewText(Main.npc[index1].displayName + " " + Lang.misc[16], (byte)175, (byte)75, byte.MaxValue, false);
            }
            else
            {
                if (Main.netMode != 2)
                    return;
                NetMessage.SendData(25, -1, -1, Main.npc[index1].displayName + " " + Lang.misc[16], (int)byte.MaxValue, 175f, 75f, (float)byte.MaxValue, 0, 0, 0);
            }
        }

        public static void SpawnSkeletron()
        {
            bool flag1 = true;
            bool flag2 = false;
            Vector2 vector2 = Vector2.Zero;
            int num1 = 0;
            int num2 = 0;
            for (int index = 0; index < 200; ++index)
            {
                if (Main.npc[index].active && Main.npc[index].type == 35)
                {
                    flag1 = false;
                    break;
                }
            }
            for (int number = 0; number < 200; ++number)
            {
                if (Main.npc[number].active)
                {
                    if (Main.npc[number].type == 37)
                    {
                        flag2 = true;
                        Main.npc[number].ai[3] = 1f;
                        vector2 = Main.npc[number].position;
                        num1 = Main.npc[number].width;
                        num2 = Main.npc[number].height;
                        if (Main.netMode == 2)
                            NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                    }
                    else if (Main.npc[number].type == 54)
                    {
                        flag2 = true;
                        vector2 = Main.npc[number].position;
                        num1 = Main.npc[number].width;
                        num2 = Main.npc[number].height;
                    }
                }
            }
            if (!flag1 || !flag2)
                return;
            int index1 = NPC.NewNPC((int)vector2.X + num1 / 2, (int)vector2.Y + num2 / 2, 35, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
            Main.npc[index1].netUpdate = true;
            string str = "Skeletron";
            if (Main.netMode == 0)
            {
                Main.NewText(str + " " + Lang.misc[16], (byte)175, (byte)75, byte.MaxValue, false);
            }
            else
            {
                if (Main.netMode != 2)
                    return;
                NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[16], (int)byte.MaxValue, 175f, 75f, (float)byte.MaxValue, 0, 0, 0);
            }
        }

        public static void SpawnOnPlayer(int plr, int Type)
        {
            if (Main.netMode == 1 || Type == 262 && NPC.AnyNPCs(262))
                return;
            if (Type == 245)
            {
                if (NPC.AnyNPCs(245))
                    return;
                try
                {
                    int num1 = (int)Main.player[plr].Center.X / 16;
                    int num2 = (int)Main.player[plr].Center.Y / 16;
                    int i = 0;
                    int num3 = 0;
                    for (int index1 = num1 - 20; index1 < num1 + 20; ++index1)
                    {
                        for (int index2 = num2 - 20; index2 < num2 + 20; ++index2)
                        {
                            if (Main.tile[index1, index2].active() && (int)Main.tile[index1, index2].type == 237 && ((int)Main.tile[index1, index2].frameX == 18 && (int)Main.tile[index1, index2].frameY == 0))
                            {
                                i = index1;
                                num3 = index2;
                            }
                        }
                    }
                    if (i <= 0 || num3 <= 0)
                        return;
                    int num4 = num3 - 15;
                    int num5 = num3 - 15;
                    for (int j = num3; j > num3 - 100; --j)
                    {
                        if (WorldGen.SolidTile(i, j))
                        {
                            num4 = j;
                            break;
                        }
                    }
                    for (int j = num3; j < num3 + 100; ++j)
                    {
                        if (WorldGen.SolidTile(i, j))
                        {
                            num5 = j;
                            break;
                        }
                    }
                    int num6 = (num4 + num4 + num5) / 3;
                    int index = NPC.NewNPC(i * 16 + 8, num6 * 16, 245, 100, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                    Main.npc[index].target = plr;
                    string str = Main.npc[index].name;
                    if (Main.netMode == 0)
                    {
                        Main.NewText(str + " " + Lang.misc[16], (byte)175, (byte)75, byte.MaxValue, false);
                    }
                    else
                    {
                        if (Main.netMode != 2)
                            return;
                        NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[16], (int)byte.MaxValue, 175f, 75f, (float)byte.MaxValue, 0, 0, 0);
                    }
                }
                catch
                {
                }
            }
            else if (Type == 370)
            {
                Player player = Main.player[plr];
                if (!player.active || player.dead)
                    return;
                for (int index1 = 0; index1 < 1000; ++index1)
                {
                    Projectile projectile = Main.projectile[index1];
                    if (projectile.active && projectile.bobber && projectile.owner == plr)
                    {
                        int index2 = NPC.NewNPC((int)projectile.Center.X, (int)projectile.Center.Y + 100, 370, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                        string str = Main.npc[index2].name;
                        if (Main.netMode == 0)
                        {
                            Main.NewText(str + " " + Lang.misc[16], (byte)175, (byte)75, byte.MaxValue, false);
                            break;
                        }
                        if (Main.netMode != 2)
                            break;
                        NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[16], (int)byte.MaxValue, 175f, 75f, (float)byte.MaxValue, 0, 0, 0);
                        break;
                    }
                }
            }
            else if (Type == 398)
            {
                if (NPC.AnyNPCs(Type))
                    return;
                Player player = Main.player[plr];
                NPC.NewNPC((int)player.Center.X, (int)player.Center.Y - 150, Type, 0, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                if (Main.netMode == 0)
                {
                    Main.NewText("Moon Lord " + Lang.misc[16], (byte)175, (byte)75, byte.MaxValue, false);
                }
                else
                {
                    if (Main.netMode != 2)
                        return;
                    NetMessage.SendData(25, -1, -1, "Moon Lord " + Lang.misc[16], (int)byte.MaxValue, 175f, 75f, (float)byte.MaxValue, 0, 0, 0);
                }
            }
            else
            {
                bool flag = false;
                int num1 = 0;
                int num2 = 0;
                int minValue1 = (int)((double)Main.player[plr].position.X / 16.0) - NPC.spawnRangeX * 2;
                int maxValue1 = (int)((double)Main.player[plr].position.X / 16.0) + NPC.spawnRangeX * 2;
                int minValue2 = (int)((double)Main.player[plr].position.Y / 16.0) - NPC.spawnRangeY * 2;
                int maxValue2 = (int)((double)Main.player[plr].position.Y / 16.0) + NPC.spawnRangeY * 2;
                int num3 = (int)((double)Main.player[plr].position.X / 16.0) - NPC.safeRangeX;
                int num4 = (int)((double)Main.player[plr].position.X / 16.0) + NPC.safeRangeX;
                int num5 = (int)((double)Main.player[plr].position.Y / 16.0) - NPC.safeRangeY;
                int num6 = (int)((double)Main.player[plr].position.Y / 16.0) + NPC.safeRangeY;
                if (minValue1 < 0)
                    minValue1 = 0;
                if (maxValue1 > Main.maxTilesX)
                    maxValue1 = Main.maxTilesX;
                if (minValue2 < 0)
                    minValue2 = 0;
                if (maxValue2 > Main.maxTilesY)
                    maxValue2 = Main.maxTilesY;
                for (int index1 = 0; index1 < 1000; ++index1)
                {
                    for (int index2 = 0; index2 < 100; ++index2)
                    {
                        int index3 = Main.rand.Next(minValue1, maxValue1);
                        int index4 = Main.rand.Next(minValue2, maxValue2);
                        if (!Main.tile[index3, index4].nactive() || !Main.tileSolid[(int)Main.tile[index3, index4].type])
                        {
                            if ((!Main.wallHouse[(int)Main.tile[index3, index4].wall] || index1 >= 999) && (Type != 50 || index1 >= 500 || (int)Main.tile[index4, index4].wall <= 0))
                            {
                                for (int index5 = index4; index5 < Main.maxTilesY; ++index5)
                                {
                                    if (Main.tile[index3, index5].nactive() && Main.tileSolid[(int)Main.tile[index3, index5].type])
                                    {
                                        if (index3 < num3 || index3 > num4 || (index5 < num5 || index5 > num6) || index1 == 999)
                                        {
                                            int num7 = (int)Main.tile[index3, index5].type;
                                            num1 = index3;
                                            num2 = index5;
                                            flag = true;
                                            break;
                                        }
                                        break;
                                    }
                                }
                                if (flag && Type == 50 && index1 < 900)
                                {
                                    int num7 = 20;
                                    if (!Collision.CanHit(new Vector2((float)num1, (float)(num2 - 1)) * 16f, 16, 16, new Vector2((float)num1, (float)(num2 - 1 - num7)) * 16f, 16, 16) || !Collision.CanHit(new Vector2((float)num1, (float)(num2 - 1 - num7)) * 16f, 16, 16, Main.player[plr].Center, 0, 0))
                                    {
                                        num1 = 0;
                                        num2 = 0;
                                        flag = false;
                                    }
                                }
                                if (flag && index1 < 999)
                                {
                                    int num7 = num1 - NPC.spawnSpaceX / 2;
                                    int num8 = num1 + NPC.spawnSpaceX / 2;
                                    int num9 = num2 - NPC.spawnSpaceY;
                                    int num10 = num2;
                                    if (num7 < 0)
                                        flag = false;
                                    if (num8 > Main.maxTilesX)
                                        flag = false;
                                    if (num9 < 0)
                                        flag = false;
                                    if (num10 > Main.maxTilesY)
                                        flag = false;
                                    if (flag)
                                    {
                                        for (int index5 = num7; index5 < num8; ++index5)
                                        {
                                            for (int index6 = num9; index6 < num10; ++index6)
                                            {
                                                if (Main.tile[index5, index6].nactive() && Main.tileSolid[(int)Main.tile[index5, index6].type])
                                                {
                                                    flag = false;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            else
                                continue;
                        }
                        if (flag || flag)
                            break;
                    }
                    if (flag && index1 < 999)
                    {
                        Rectangle rectangle1 = new Rectangle(num1 * 16, num2 * 16, 16, 16);
                        for (int index2 = 0; index2 < (int)byte.MaxValue; ++index2)
                        {
                            if (Main.player[index2].active)
                            {
                                Rectangle rectangle2 = new Rectangle((int)((double)Main.player[index2].position.X + (double)(Main.player[index2].width / 2) - (double)(NPC.sWidth / 2) - (double)NPC.safeRangeX), (int)((double)Main.player[index2].position.Y + (double)(Main.player[index2].height / 2) - (double)(NPC.sHeight / 2) - (double)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
                                if (rectangle1.Intersects(rectangle2))
                                    flag = false;
                            }
                        }
                    }
                    if (flag)
                        break;
                }
                if (!flag)
                    return;
                int number = NPC.NewNPC(num1 * 16 + 8, num2 * 16, Type, 1, 0.0f, 0.0f, 0.0f, 0.0f, (int)byte.MaxValue);
                if (number == 200)
                    return;
                Main.npc[number].target = plr;
                Main.npc[number].timeLeft *= 20;
                string str = Main.npc[number].name;
                if (Main.npc[number].displayName != "")
                    str = Main.npc[number].displayName;
                if (Main.netMode == 2 && number < 200)
                    NetMessage.SendData(23, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                if (Type == 134 || Type == (int)sbyte.MaxValue || (Type == 126 || Type == 125))
                    AchievementsHelper.CheckMechaMayhem(-1);
                if (Type == 125)
                {
                    if (Main.netMode == 0)
                    {
                        Main.NewText(Lang.misc[48], (byte)175, (byte)75, byte.MaxValue, false);
                    }
                    else
                    {
                        if (Main.netMode != 2)
                            return;
                        NetMessage.SendData(25, -1, -1, Lang.misc[48], (int)byte.MaxValue, 175f, 75f, (float)byte.MaxValue, 0, 0, 0);
                    }
                }
                else
                {
                    if (Type == 82 || Type == 126 || (Type == 50 || Type == 398))
                        return;
                    if (Main.netMode == 0)
                    {
                        Main.NewText(str + " " + Lang.misc[16], (byte)175, (byte)75, byte.MaxValue, false);
                    }
                    else
                    {
                        if (Main.netMode != 2)
                            return;
                        NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[16], (int)byte.MaxValue, 175f, 75f, (float)byte.MaxValue, 0, 0, 0);
                    }
                }
            }
        }

        public static int NewNPC(int X, int Y, int Type, int Start = 0, float ai0 = 0.0f, float ai1 = 0.0f, float ai2 = 0.0f, float ai3 = 0.0f, int Target = 255)
        {
            int index1 = -1;
            if (Type == 222)
            {
                for (int index2 = 199; index2 >= 0; --index2)
                {
                    if (!Main.npc[index2].active)
                    {
                        index1 = index2;
                        break;
                    }
                }
            }
            else
            {
                for (int index2 = Start; index2 < 200; ++index2)
                {
                    if (!Main.npc[index2].active)
                    {
                        index1 = index2;
                        break;
                    }
                }
            }
            if (index1 < 0)
                return 200;
            Main.npc[index1] = new NPC();
            Main.npc[index1].SetDefaults(Type, -1f);
            if (NPC.TypeToNum(Type) != -1 || Type == 453)
                Main.npc[index1].displayName = NPC.getNewNPCName(Type);
            Main.npc[index1].position.X = (float)(X - Main.npc[index1].width / 2);
            Main.npc[index1].position.Y = (float)(Y - Main.npc[index1].height);
            Main.npc[index1].active = true;
            Main.npc[index1].timeLeft = (int)((double)NPC.activeTime * 1.25);
            Main.npc[index1].wet = Collision.WetCollision(Main.npc[index1].position, Main.npc[index1].width, Main.npc[index1].height);
            Main.npc[index1].ai[0] = ai0;
            Main.npc[index1].ai[1] = ai1;
            Main.npc[index1].ai[2] = ai2;
            Main.npc[index1].ai[3] = ai3;
            Main.npc[index1].target = Target;
            if (Type == 50)
            {
                if (Main.netMode == 0)
                    Main.NewText(Main.npc[index1].name + " " + Lang.misc[16], (byte)175, (byte)75, byte.MaxValue, false);
                else if (Main.netMode == 2)
                    NetMessage.SendData(25, -1, -1, Main.npc[index1].name + " " + Lang.misc[16], (int)byte.MaxValue, 175f, 75f, (float)byte.MaxValue, 0, 0, 0);
            }
            return index1;
        }

        public void TransformVisuals(int oldType, int newType)
        {
            if (oldType == 158 && newType == 159 || oldType == 159 && newType == 158)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                int index1 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), this.velocity, 99, this.scale);
                Main.gore[index1].velocity *= 0.3f;
                int index2 = Gore.NewGore(new Vector2(this.position.X, (float)((double)this.position.Y + (double)(this.height / 2) - 10.0)), this.velocity, 99, this.scale);
                Main.gore[index2].velocity *= 0.3f;
                int index3 = Gore.NewGore(new Vector2(this.position.X, (float)((double)this.position.Y + (double)this.height - 10.0)), this.velocity, 99, this.scale);
                Main.gore[index3].velocity *= 0.3f;
            }
            else if (oldType == 478 && newType == 479)
            {
                for (int index1 = 0; index1 < 30; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 238, 0.0f, -2f, 0, new Color(), 1f);
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].noGravity = true;
                }
                Gore.NewGore(this.position, this.velocity, 684, this.scale);
                Gore.NewGore(this.position, this.velocity, 685, this.scale);
                Gore.NewGore(this.position, this.velocity, 686, this.scale);
                Gore.NewGore(this.position, this.velocity, 684 + Main.rand.Next(3), this.scale);
            }
            else if (oldType == 406 && newType == 405)
            {
                float num1 = (float)Main.rand.Next(10, 21);
                float num2 = 6.283185f * Utils.NextFloat(Main.rand);
                Vector2 vector2_1 = new Vector2(22f, 22f);
                for (float num3 = 0.0f; (double)num3 < (double)num1; ++num3)
                {
                    Dust dust = Main.dust[Dust.NewDust(this.Center, 0, 0, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                    Vector2 vector2_2 = Utils.RotatedBy(Vector2.UnitY, (double)num3 * 6.28318548202515 / (double)num1 + (double)num2, new Vector2());
                    dust.position = this.Center + vector2_2 * vector2_1 / 2f;
                    dust.velocity = vector2_2;
                    dust.noGravity = true;
                    dust.scale = (float)(0.600000023841858 + (double)Utils.NextFloat(Main.rand) * 1.79999995231628);
                    dust.velocity *= dust.scale;
                    dust.fadeIn = Utils.NextFloat(Main.rand) * 2f;
                }
            }
            if (oldType == 428 && newType == 427)
            {
                for (int index = 0; index < 20; ++index)
                {
                    int Type = Utils.SelectRandom<int>(Main.rand, 229, 240);
                    Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, Type, 0.0f, 0.0f, 0, new Color(), 1f)];
                    dust.noGravity = true;
                    dust.scale = (float)(0.600000023841858 + (double)Utils.NextFloat(Main.rand) * 1.79999995231628);
                    dust.fadeIn = 0.25f;
                    dust.velocity *= dust.scale / 2f;
                }
            }
            if (oldType != 427 || newType != 426)
                return;
            for (int index = 0; index < 30; ++index)
            {
                int Type = Utils.SelectRandom<int>(Main.rand, 229, 240, 240);
                Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, Type, 0.0f, 0.0f, 0, new Color(), 1f)];
                dust.noGravity = true;
                dust.scale = (float)(0.600000023841858 + (double)Utils.NextFloat(Main.rand) * 1.79999995231628);
                dust.fadeIn = 0.25f;
                dust.velocity *= dust.scale * 0.75f;
            }
        }

        public void Teleport(Vector2 newPos, int Style = 0, int extraInfo = 0)
        {
            int extraInfo1 = 0;
            if (Style == 4)
                extraInfo1 = this.lastPortalColorIndex;
            Main.TeleportEffect(this.getRect(), Style, extraInfo1);
            this.position = newPos;
            if (Style == 4)
            {
                this.lastPortalColorIndex = extraInfo;
                extraInfo1 = this.lastPortalColorIndex;
            }
            Main.TeleportEffect(this.getRect(), Style, extraInfo1);
            this.teleportTime = 1f;
            this.teleportStyle = Style;
            if (Main.netMode != 2 || Style == 4)
                return;
            NetMessage.SendData(65, -1, -1, "", 1, (float)this.whoAmI, newPos.X, newPos.Y, Style, 0, 0);
        }

        public void Transform(int newType)
        {
            if (Main.netMode == 1)
                return;
            bool flag = false;
            if ((double)this.value == 0.0)
                flag = true;
            int[] numArray1 = new int[5];
            int[] numArray2 = new int[5];
            for (int index = 0; index < 5; ++index)
            {
                numArray1[index] = this.buffType[index];
                numArray2[index] = this.buffTime[index];
            }
            int num1 = this.height;
            int oldType = this.type;
            int num2 = this.life;
            int num3 = this.lifeMax;
            Vector2 vector2 = this.velocity;
            this.position.Y += (float)this.height;
            int num4 = this.spriteDirection;
            this.SetDefaults(newType, -1f);
            this.spriteDirection = num4;
            this.TargetClosest(true);
            this.velocity = vector2;
            this.position.Y -= (float)this.height;
            if (flag)
                this.value = 0.0f;
            if (this.lifeMax == num3)
                this.life = num2;
            if (newType == 107 || newType == 108)
            {
                this.homeTileX = (int)((double)this.position.X + (double)(this.width / 2)) / 16;
                this.homeTileY = (int)((double)this.position.Y + (double)this.height) / 16;
                this.homeless = true;
            }
            for (int index = 0; index < 5; ++index)
            {
                this.buffType[index] = numArray1[index];
                this.buffTime[index] = numArray2[index];
            }
            if (Main.netMode == 2)
            {
                this.netUpdate = true;
                NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0.0f, 0.0f, 0.0f, 0, 0, 0);
            }
            this.TransformVisuals(oldType, newType);
            if (NPC.TypeToNum(this.type) != -1)
                Main.npc[this.whoAmI].displayName = NPC.getNewNPCName(this.type);
            this.npcNameLookup = (byte)0;
            if (!this.townNPC)
                return;
            this.homeless = true;
        }

        public int checkArmorPenetration(int armorPenetration)
        {
            if (armorPenetration <= 0)
                return 0;
            if (armorPenetration > this.defense)
                return this.defense / 2;
            return armorPenetration / 2;
        }

        public double StrikeNPCNoInteraction(int Damage, float knockBack, int hitDirection, bool crit = false, bool noEffect = false, bool fromNet = false)
        {
            if (Main.netMode == 0)
                ++NPC.ignorePlayerInteractions;
            return this.StrikeNPC(Damage, knockBack, hitDirection, crit, noEffect, fromNet);
        }

        public double StrikeNPC(int Damage, float knockBack, int hitDirection, bool crit = false, bool noEffect = false, bool fromNet = false)
        {
            bool flag = Main.netMode == 0;
            if (flag && NPC.ignorePlayerInteractions > 0)
            {
                --NPC.ignorePlayerInteractions;
                flag = false;
            }
            if (!this.active || this.life <= 0)
                return 0.0;
            double num1 = (double)Damage;
            int Defense = this.defense;
            if (this.ichor)
                Defense -= 20;
            if (Defense < 0)
                Defense = 0;
            double dmg = Main.CalculateDamage((int)num1, Defense);
            if (crit)
                dmg *= 2.0;
            if ((double)this.takenDamageMultiplier > 1.0)
                dmg *= (double)this.takenDamageMultiplier;
            if (((double)this.takenDamageMultiplier > 1.0 || Damage != 9999) && this.lifeMax > 1)
            {
                if (this.friendly)
                {
                    CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), crit ? CombatText.DamagedFriendlyCrit : CombatText.DamagedFriendly, string.Concat((object)(int)dmg), crit, false);
                }
                else
                {
                    Color color = crit ? CombatText.DamagedHostileCrit : CombatText.DamagedHostile;
                    if (fromNet)
                        color = crit ? CombatText.OthersDamagedHostileCrit : CombatText.OthersDamagedHostile;
                    CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), color, string.Concat((object)(int)dmg), crit, false);
                }
            }
            if (dmg < 1.0)
                return 0.0;
            if (flag)
                this.PlayerInteraction(Main.myPlayer);
            this.justHit = true;
            if (this.townNPC)
            {
                if (this.aiStyle == 7 && ((double)this.ai[0] == 3.0 || (double)this.ai[0] == 4.0 || (double)this.ai[0] == 16.0 || (double)this.ai[0] == 17.0))
                {
                    NPC npc = Main.npc[(int)this.ai[2]];
                    if (npc.active)
                    {
                        npc.ai[0] = 1f;
                        npc.ai[1] = (float)(300 + Main.rand.Next(300));
                        npc.ai[2] = 0.0f;
                        npc.localAI[3] = 0.0f;
                        npc.direction = hitDirection;
                        npc.netUpdate = true;
                    }
                }
                this.ai[0] = 1f;
                this.ai[1] = (float)(300 + Main.rand.Next(300));
                this.ai[2] = 0.0f;
                this.localAI[3] = 0.0f;
                this.direction = hitDirection;
                this.netUpdate = true;
            }
            if (this.aiStyle == 8 && Main.netMode != 1)
            {
                if (this.type == 172)
                    this.ai[0] = 450f;
                else if (this.type == 283 || this.type == 284)
                {
                    if (Main.rand.Next(2) == 0)
                    {
                        this.ai[0] = 390f;
                        this.netUpdate = true;
                    }
                }
                else if (this.type == 533)
                {
                    if (Main.rand.Next(3) != 0)
                    {
                        this.ai[0] = 181f;
                        this.netUpdate = true;
                    }
                }
                else
                    this.ai[0] = 400f;
                this.TargetClosest(true);
            }
            if (this.aiStyle == 97 && Main.netMode != 1)
            {
                this.localAI[1] = 1f;
                this.TargetClosest(true);
            }
            if (this.type == 371)
            {
                dmg = 0.0;
                this.ai[0] = 1f;
                this.ai[1] = 4f;
                this.dontTakeDamage = true;
            }
            if (this.type == 346 && (double)this.life >= (double)this.lifeMax * 0.5 && (double)this.life - dmg < (double)this.lifeMax * 0.5)
                Gore.NewGore(this.position, this.velocity, 517, 1f);
            if (this.type == 184)
                this.localAI[0] = 60f;
            if (this.type == 535)
                this.localAI[0] = 60f;
            if (this.type == 185)
                this.localAI[0] = 1f;
            if (!this.immortal)
            {
                if (this.realLife >= 0)
                {
                    Main.npc[this.realLife].life -= (int)dmg;
                    this.life = Main.npc[this.realLife].life;
                    this.lifeMax = Main.npc[this.realLife].lifeMax;
                }
                else
                    this.life -= (int)dmg;
            }
            if ((double)knockBack > 0.0 && (double)this.knockBackResist > 0.0)
            {
                float num2 = knockBack * this.knockBackResist;
                if ((double)num2 > 8.0)
                    num2 = 8f + (num2 - 8f) * 0.9f;
                if ((double)num2 > 10.0)
                    num2 = 10f + (num2 - 10f) * 0.8f;
                if ((double)num2 > 12.0)
                    num2 = 12f + (num2 - 12f) * 0.7f;
                if ((double)num2 > 14.0)
                    num2 = 14f + (num2 - 14f) * 0.6f;
                if ((double)num2 > 16.0)
                    num2 = 16f;
                if (crit)
                    num2 *= 1.4f;
                int num3 = (int)dmg * 10;
                if (Main.expertMode)
                    num3 = (int)dmg * 15;
                if (num3 > this.lifeMax)
                {
                    if (hitDirection < 0 && (double)this.velocity.X > -(double)num2)
                    {
                        if ((double)this.velocity.X > 0.0)
                            this.velocity.X -= num2;
                        this.velocity.X -= num2;
                        if ((double)this.velocity.X < -(double)num2)
                            this.velocity.X = -num2;
                    }
                    else if (hitDirection > 0 && (double)this.velocity.X < (double)num2)
                    {
                        if ((double)this.velocity.X < 0.0)
                            this.velocity.X += num2;
                        this.velocity.X += num2;
                        if ((double)this.velocity.X > (double)num2)
                            this.velocity.X = num2;
                    }
                    if (this.type == 185)
                        num2 *= 1.5f;
                    float num4 = this.noGravity ? num2 * -0.5f : num2 * -0.75f;
                    if ((double)this.velocity.Y > (double)num4)
                    {
                        this.velocity.Y += num4;
                        if ((double)this.velocity.Y < (double)num4)
                            this.velocity.Y = num4;
                    }
                }
                else
                {
                    if (!this.noGravity)
                        this.velocity.Y = (float)(-(double)num2 * 0.75) * this.knockBackResist;
                    else
                        this.velocity.Y = (float)(-(double)num2 * 0.5) * this.knockBackResist;
                    this.velocity.X = num2 * (float)hitDirection * this.knockBackResist;
                }
            }
            if ((this.type == 113 || this.type == 114) && this.life <= 0)
            {
                for (int index = 0; index < 200; ++index)
                {
                    if (Main.npc[index].active && (Main.npc[index].type == 113 || Main.npc[index].type == 114))
                        Main.npc[index].HitEffect(hitDirection, dmg);
                }
            }
            else
                this.HitEffect(hitDirection, dmg);
            if (this.soundHit > 0)
                Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, this.soundHit);
            if (this.realLife >= 0)
                Main.npc[this.realLife].checkDead();
            else
                this.checkDead();
            return dmg;
        }

        public void HitEffect(int hitDirection = 0, double dmg = 10.0)
        {
            // ISSUE: unable to decompile the method.
        }

        public static int CountNPCS(int Type)
        {
            int num = 0;
            for (int index = 0; index < 200; ++index)
            {
                if (Main.npc[index].active && Main.npc[index].type == Type)
                    ++num;
            }
            return num;
        }

        public static bool AnyNPCs(int Type)
        {
            for (int index = 0; index < 200; ++index)
            {
                if (Main.npc[index].active && Main.npc[index].type == Type)
                    return true;
            }
            return false;
        }

        public static int FindFirstNPC(int Type)
        {
            for (int index = 0; index < 200; ++index)
            {
                if (Main.npc[index].active && Main.npc[index].type == Type)
                    return index;
            }
            return -1;
        }

        public static bool NearSpikeBall(int x, int y)
        {
            Rectangle rectangle1 = new Rectangle(x * 16 - 300, y * 16 - 300, 600, 600);
            for (int index = 0; index < 200; ++index)
            {
                if (Main.npc[index].active && Main.npc[index].aiStyle == 20)
                {
                    Rectangle rectangle2 = new Rectangle((int)Main.npc[index].ai[1], (int)Main.npc[index].ai[2], 20, 20);
                    if (rectangle1.Intersects(rectangle2))
                        return true;
                }
            }
            return false;
        }

        public int HasBuff(int type)
        {
            if (this.buffImmune[type])
                return -1;
            for (int index = 0; index < 5; ++index)
            {
                if (this.buffTime[index] >= 1 && this.buffType[index] == type)
                    return index;
            }
            return -1;
        }

        public void AddBuff(int type, int time, bool quiet = false)
        {
            if (this.buffImmune[type])
                return;
            if (!quiet)
            {
                if (Main.netMode == 1)
                    NetMessage.SendData(53, -1, -1, "", this.whoAmI, (float)type, (float)time, 0.0f, 0, 0, 0);
                else if (Main.netMode == 2)
                    NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0.0f, 0.0f, 0.0f, 0, 0, 0);
            }
            int index1 = -1;
            for (int index2 = 0; index2 < 5; ++index2)
            {
                if (this.buffType[index2] == type)
                {
                    if (this.buffTime[index2] >= time)
                        return;
                    this.buffTime[index2] = time;
                    return;
                }
            }
            while (index1 == -1)
            {
                int b = -1;
                for (int index2 = 0; index2 < 5; ++index2)
                {
                    if (!Main.debuff[this.buffType[index2]])
                    {
                        b = index2;
                        break;
                    }
                }
                if (b == -1)
                    return;
                for (int index2 = b; index2 < 5; ++index2)
                {
                    if (this.buffType[index2] == 0)
                    {
                        index1 = index2;
                        break;
                    }
                }
                if (index1 == -1)
                    this.DelBuff(b);
            }
            this.buffType[index1] = type;
            this.buffTime[index1] = time;
        }

        public void DelBuff(int b)
        {
            this.buffTime[b] = 0;
            this.buffType[b] = 0;
            for (int index1 = 0; index1 < 4; ++index1)
            {
                if (this.buffTime[index1] == 0 || this.buffType[index1] == 0)
                {
                    for (int index2 = index1 + 1; index2 < 5; ++index2)
                    {
                        this.buffTime[index2 - 1] = this.buffTime[index2];
                        this.buffType[index2 - 1] = this.buffType[index2];
                        this.buffTime[index2] = 0;
                        this.buffType[index2] = 0;
                    }
                }
            }
            if (Main.netMode != 2)
                return;
            NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0.0f, 0.0f, 0.0f, 0, 0, 0);
        }

        public Rectangle getRect()
        {
            return new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
        }

        public bool CanBeChasedBy(object attacker = null, bool ignoreDontTakeDamage = false)
        {
            if (this.active && this.chaseable && this.lifeMax > 5 && ((!this.dontTakeDamage || ignoreDontTakeDamage) && !this.friendly))
                return !this.immortal;
            return false;
        }

        public void moneyPing(Vector2 pos)
        {
            Main.PlaySound(38, pos, 1);
            int Type = 244;
            if ((double)this.extraValue >= 1000000.0)
                Type = 247;
            else if ((double)this.extraValue >= 10000.0)
                Type = 246;
            else if ((double)this.extraValue >= 100.0)
                Type = 245;
            for (int index1 = 0; index1 < 20; ++index1)
            {
                int index2 = Dust.NewDust(pos - new Vector2(1f, 2f), 10, 14, Type, 0.0f, 0.0f, 254, new Color(), 0.25f);
                Main.dust[index2].velocity *= 0.2f;
            }
        }

        public void IdleSounds()
        {
            if ((this.type == 239 || this.type == 240) && Main.rand.Next(900) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(24, 26));
            else if ((this.type == 62 || this.type == 156) && Main.rand.Next(700) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(26, 30));
            else if (this.type == 177 && Main.rand.Next(600) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(30, 32));
            else if (this.type == 226 && Main.rand.Next(800) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 32);
            else if (this.type == 153 && Main.rand.Next(1000) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 33);
            else if (this.wet && (this.type == 63 || this.type == 64 || this.type == 103) && Main.rand.Next(1000) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(34, 36));
            else if ((this.type == 198 || this.type == 199) && Main.rand.Next(1000) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(36, 38));
            else if ((this.type == 170 || this.type == 180 || this.type == 171) && Main.rand.Next(600) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(38, 41));
            else if (this.type == 250 && Main.rand.Next(700) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(41, 44));
            else if (this.type == 508 && Main.rand.Next(800) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 44);
            else if (this.type == 509 && Main.rand.Next(800) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(44, 47));
            else if (this.type == 494 && Main.rand.Next(600) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 47);
            else if (this.type == 467 && Main.rand.Next(700) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(48, 50));
            else if (this.type == 468 && Main.rand.Next(700) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(50, 53));
            else if (this.type == 288 && Main.rand.Next(400) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(53, 55));
            else if ((this.type == 524 || this.type == 525 || (this.type == 526 || this.type == 527)) && Main.rand.Next(700) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(55, 57));
            else if ((this.type == 496 || this.type == 497) && Main.rand.Next(600) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(57, 59));
            else if (this.type == 389 && Main.rand.Next(800) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(59, 61));
            else if (this.type == 471 && Main.rand.Next(600) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(61, 63));
            else if (this.type == 482 && Main.rand.Next(600) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(63, 66));
            else if (this.type == 388 && Main.rand.Next(700) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(66, 69));
            else if (this.type == 520 && Main.rand.Next(800) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(69, 73));
            else if (this.type == 477 && Main.rand.Next(600) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 73);
            else if (this.type == 258 && Main.rand.Next(700) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(74, 78));
            else if (this.type == 252 && Main.rand.Next(700) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 78);
            else if (this.type == 469 && Main.rand.Next(700) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(79, 81));
            else if ((this.type == 253 || this.type == 82) && Main.rand.Next(700) == 0)
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(81, 84));
            else if (this.type >= 498 && this.type <= 506 && Main.rand.Next(600) == 0)
            {
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(84, 86));
            }
            else
            {
                if (this.type != 391 || Main.rand.Next(700) != 0)
                    return;
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(86, 87));
            }
        }

        public void UpdateNPC(int i)
        {
            this.whoAmI = i;
            if (!this.active)
                return;
            if (this.type == 368)
                NPC.travelNPC = true;
            if (this.type >= 442 && this.type <= 448 || this.type == 539)
            {
                Color color = Lighting.GetColor((int)this.Center.X / 16, (int)this.Center.Y / 16);
                if ((int)color.R > 20 || (int)color.B > 20 || (int)color.G > 20)
                {
                    int num1 = (int)color.R;
                    if ((int)color.G > num1)
                        num1 = (int)color.G;
                    if ((int)color.B > num1)
                        num1 = (int)color.B;
                    int num2 = num1 / 30;
                    if (Main.rand.Next(300) < num2)
                    {
                        int index = Dust.NewDust(this.position, this.width, this.height, 43, 0.0f, 0.0f, 254, new Color((int)byte.MaxValue, (int)byte.MaxValue, 0), 0.5f);
                        Main.dust[index].velocity *= 0.0f;
                    }
                }
            }
            if (this.type >= 254 && this.type <= 261 || this.type == 160)
            {
                float num1 = (float)Main.rand.Next(28, 42) * 0.005f + (float)(270 - (int)Main.mouseTextColor) / 500f;
                float num2 = 0.1f;
                float num3 = (float)(0.300000011920929 + (double)num1 / 2.0);
                float num4 = 0.6f + num1;
                float num5 = 0.35f;
                Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, num2 * num5, num3 * num5, num4 * num5);
            }
            if (this.type == 209)
            {
                float num1 = (float)Main.rand.Next(28, 42) * 0.005f + (float)(270 - (int)Main.mouseTextColor) / 500f;
                float num2 = 0.1f;
                float num3 = (float)(0.300000011920929 + (double)num1 / 2.0);
                float num4 = (float)(0.400000005960464 + (double)num1 / 2.0);
                float num5 = 0.35f;
                Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, num2 * num5, num3 * num5, num4 * num5);
                if ((double)this.ai[0] == 12.0)
                    Lighting.AddLight(this.Top, 0.3f, 0.1f, 0.1f);
            }
            if (this.type == 44)
                Lighting.AddLight((int)((double)this.position.X + (double)(this.width / 2)) / 16, (int)((double)this.position.Y + 4.0) / 16, 0.9f, 0.75f, 0.5f);
            if ((double)this.teleportTime > 0.0)
            {
                if (this.teleportStyle == 0)
                {
                    if ((double)Main.rand.Next(100) <= 100.0 * (double)this.teleportTime * 2.0)
                    {
                        int index = Dust.NewDust(new Vector2((float)this.getRect().X, (float)this.getRect().Y), this.getRect().Width, this.getRect().Height, 159, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index].scale = this.teleportTime * 1.5f;
                        Main.dust[index].noGravity = true;
                        Main.dust[index].velocity *= 1.1f;
                    }
                }
                else if (this.teleportStyle == 4)
                {
                    this.teleportTime -= 0.02f;
                    if ((double)Main.rand.Next(100) <= 100.0 * (double)this.teleportTime)
                    {
                        Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, 263, 0.0f, 0.0f, 0, new Color(), 1f)];
                        dust.color = PortalHelper.GetPortalColor(this.lastPortalColorIndex);
                        dust.noLight = true;
                        dust.noGravity = true;
                        dust.scale = 1.2f;
                        dust.fadeIn = 0.4f;
                    }
                }
                this.teleportTime -= 0.005f;
            }
            if (Main.netMode != 2)
            {
                if (this.type >= 362 && this.type <= 365)
                {
                    if (Main.dayTime && Main.rand.Next(200) == 0)
                        Main.PlaySound(30, (int)this.position.X, (int)this.position.Y, 1);
                }
                else if (this.type == 361 || this.type == 445)
                {
                    if ((double)Math.Abs(this.velocity.X) < 0.5 && (!Main.dayTime || (double)this.position.Y > Main.worldSurface * 16.0) && Main.rand.Next(200) == 0)
                        Main.PlaySound(31, (int)this.position.X, (int)this.position.Y, 1);
                }
                else if (this.type == 74 || this.type == 297 || (this.type == 298 || this.type == 442))
                {
                    if (Main.dayTime && Main.time < 18000.0 && Main.rand.Next(400) == 0)
                    {
                        if (this.type == 74)
                        {
                            if (Main.rand.Next(3) != 0)
                                Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 14);
                            else
                                Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 18);
                        }
                        if (this.type == 297)
                            Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 16);
                        if (this.type == 298)
                        {
                            if (Main.rand.Next(3) != 0)
                                Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 17);
                            else
                                Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 19);
                        }
                        if (this.type == 442)
                        {
                            switch (Main.rand.Next(5))
                            {
                                case 0:
                                    Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 16);
                                    break;
                                case 1:
                                    Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 17);
                                    break;
                                case 2:
                                    Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 19);
                                    break;
                                case 3:
                                    Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 14);
                                    break;
                                default:
                                    Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 18);
                                    break;
                            }
                        }
                    }
                }
                else if ((this.type == 300 || this.type == 447) && Main.rand.Next(1800) == 0)
                    Main.PlaySound(33, (int)this.position.X, (int)this.position.Y, 1);
            }
            if (Main.netMode == 1 && (this.townNPC || this.type == 453) && (this.type != 37 && (int)this.npcNameLookup == 0))
            {
                this.npcNameLookup = (byte)1;
                int number = -1;
                for (int index = 0; index < 200; ++index)
                {
                    if (Main.npc[index] == this)
                    {
                        number = index;
                        break;
                    }
                }
                NetMessage.SendData(56, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
            }
            if (this.displayName == "" && Main.netMode != 1)
                this.displayName = this.name;
            if (Main.netMode == 1)
            {
                bool flag = false;
                int index1 = (int)((double)this.position.X + (double)(this.width / 2)) / 16;
                int index2 = (int)((double)this.position.Y + (double)(this.height / 2)) / 16;
                try
                {
                    if (index1 >= 4)
                    {
                        if (index1 <= Main.maxTilesX - 4)
                        {
                            if (index2 >= 4)
                            {
                                if (index2 <= Main.maxTilesY - 4)
                                {
                                    if (Main.tile[index1, index2] == null)
                                        flag = true;
                                    else if (Main.tile[index1 - 3, index2] == null)
                                        flag = true;
                                    else if (Main.tile[index1 + 3, index2] == null)
                                        flag = true;
                                    else if (Main.tile[index1, index2 - 3] == null)
                                        flag = true;
                                    else if (Main.tile[index1, index2 + 3] == null)
                                        flag = true;
                                }
                            }
                        }
                    }
                }
                catch
                {
                    flag = true;
                }
                if (flag)
                    return;
            }
            this.lifeRegen = 0;
            this.soulDrain = false;
            this.poisoned = false;
            this.venom = false;
            this.shadowFlame = false;
            this.onFire = false;
            this.midas = false;
            this.ichor = false;
            this.onFrostBurn = false;
            this.onFire2 = false;
            this.confused = false;
            this.loveStruck = false;
            this.dryadWard = false;
            this.stinky = false;
            this.dripping = false;
            this.drippingSlime = false;
            this.daybreak = false;
            this.javelined = false;
            this.celled = false;
            this.dryadBane = false;
            for (int index = 0; index < 5; ++index)
            {
                if (this.buffType[index] > 0 && this.buffTime[index] > 0)
                {
                    --this.buffTime[index];
                    if (this.buffType[index] == 20)
                        this.poisoned = true;
                    if (this.buffType[index] == 70)
                        this.venom = true;
                    if (this.buffType[index] == 24)
                        this.onFire = true;
                    if (this.buffType[index] == 72)
                        this.midas = true;
                    if (this.buffType[index] == 69)
                        this.ichor = true;
                    if (this.buffType[index] == 31)
                        this.confused = true;
                    if (this.buffType[index] == 39)
                        this.onFire2 = true;
                    if (this.buffType[index] == 44)
                        this.onFrostBurn = true;
                    if (this.buffType[index] == 103)
                        this.dripping = true;
                    if (this.buffType[index] == 137)
                        this.drippingSlime = true;
                    if (this.buffType[index] == 119)
                        this.loveStruck = true;
                    if (this.buffType[index] == 120)
                        this.stinky = true;
                    if (this.buffType[index] == 151)
                        this.soulDrain = true;
                    if (this.buffType[index] == 153)
                        this.shadowFlame = true;
                    if (this.buffType[index] == 165)
                        this.dryadWard = true;
                    if (this.buffType[index] == 169)
                        this.javelined = true;
                    if (this.buffType[index] == 183)
                        this.celled = true;
                    if (this.buffType[index] == 186)
                        this.dryadBane = true;
                    if (this.buffType[index] == 189)
                        this.daybreak = true;
                }
            }
            if (this.soulDrain)
            {
                int num = 1100;
                for (int index1 = 0; index1 < (int)byte.MaxValue; ++index1)
                {
                    if (Main.player[index1].active && !Main.player[index1].dead && ((double)(this.Center - Main.player[index1].position).Length() < (double)num && Main.player[index1].inventory[Main.player[index1].selectedItem].itemId == 3006 && Main.player[index1].itemAnimation > 0))
                    {
                        if (index1 == Main.myPlayer)
                            ++Main.player[index1].soulDrain;
                        if (Main.rand.Next(3) != 0)
                        {
                            Vector2 center = this.Center;
                            center.X += (float)Main.rand.Next(-100, 100) * 0.05f;
                            center.Y += (float)Main.rand.Next(-100, 100) * 0.05f;
                            center += this.velocity;
                            int index2 = Dust.NewDust(center, 1, 1, 235, 0.0f, 0.0f, 0, new Color(), 1f);
                            Main.dust[index2].velocity *= 0.0f;
                            Main.dust[index2].scale = (float)Main.rand.Next(70, 85) * 0.01f;
                            Main.dust[index2].fadeIn = (float)(index1 + 1);
                        }
                    }
                }
            }
            if (Main.netMode != 1)
            {
                for (int b = 0; b < 5; ++b)
                {
                    if (this.buffType[b] > 0 && this.buffTime[b] <= 0)
                    {
                        this.DelBuff(b);
                        if (Main.netMode == 2)
                            NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                    }
                }
            }
            if (!this.dontTakeDamage)
            {
                int num1 = -1;
                if (this.poisoned)
                {
                    if (this.lifeRegen > 0)
                        this.lifeRegen = 0;
                    this.lifeRegen -= 4;
                }
                if (this.onFire)
                {
                    if (this.lifeRegen > 0)
                        this.lifeRegen = 0;
                    this.lifeRegen -= 8;
                }
                if (this.onFrostBurn)
                {
                    if (this.lifeRegen > 0)
                        this.lifeRegen = 0;
                    this.lifeRegen -= 16;
                    if (num1 < 2)
                        num1 = 2;
                }
                if (this.onFire2)
                {
                    if (this.lifeRegen > 0)
                        this.lifeRegen = 0;
                    this.lifeRegen -= 12;
                }
                if (this.venom)
                {
                    if (this.lifeRegen > 0)
                        this.lifeRegen = 0;
                    this.lifeRegen -= 12;
                    if (num1 < 2)
                        num1 = 2;
                }
                if (this.shadowFlame)
                {
                    if (this.lifeRegen > 0)
                        this.lifeRegen = 0;
                    this.lifeRegen -= 30;
                    if (num1 < 5)
                        num1 = 5;
                }
                if (this.javelined)
                {
                    if (this.lifeRegen > 0)
                        this.lifeRegen = 0;
                    int num2 = 0;
                    int num3 = 1;
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (Main.projectile[index].active && Main.projectile[index].type == 598 && ((double)Main.projectile[index].ai[0] == 1.0 && (double)Main.projectile[index].ai[1] == (double)this.whoAmI))
                            ++num2;
                    }
                    this.lifeRegen -= num2 * 2 * 3;
                    if (num1 < num2 * 3 / num3)
                        num1 = num2 * 3 / num3;
                }
                if (this.daybreak)
                {
                    if (this.lifeRegen > 0)
                        this.lifeRegen = 0;
                    int num2 = 0;
                    int num3 = 4;
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (Main.projectile[index].active && Main.projectile[index].type == 636 && ((double)Main.projectile[index].ai[0] == 1.0 && (double)Main.projectile[index].ai[1] == (double)this.whoAmI))
                            ++num2;
                    }
                    if (num2 == 0)
                        num2 = 1;
                    this.lifeRegen -= num2 * 2 * 100;
                    if (num1 < num2 * 100 / num3)
                        num1 = num2 * 100 / num3;
                }
                if (this.celled)
                {
                    if (this.lifeRegen > 0)
                        this.lifeRegen = 0;
                    int num2 = 0;
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (Main.projectile[index].active && Main.projectile[index].type == 614 && ((double)Main.projectile[index].ai[0] == 1.0 && (double)Main.projectile[index].ai[1] == (double)this.whoAmI))
                            ++num2;
                    }
                    this.lifeRegen -= num2 * 2 * 20;
                    if (num1 < num2 * 20)
                        num1 = num2 * 20 / 2;
                }
                if (this.dryadBane)
                {
                    int num2 = 4;
                    float num3 = 1f;
                    if (this.lifeRegen > 0)
                        this.lifeRegen = 0;
                    if (NPC.downedBoss1)
                        num3 += 0.1f;
                    if (NPC.downedBoss2)
                        num3 += 0.1f;
                    if (NPC.downedBoss3)
                        num3 += 0.1f;
                    if (NPC.downedQueenBee)
                        num3 += 0.1f;
                    if (Main.hardMode)
                        num3 += 0.4f;
                    if (NPC.downedMechBoss1)
                        num3 += 0.15f;
                    if (NPC.downedMechBoss2)
                        num3 += 0.15f;
                    if (NPC.downedMechBoss3)
                        num3 += 0.15f;
                    if (NPC.downedPlantBoss)
                        num3 += 0.15f;
                    if (NPC.downedGolemBoss)
                        num3 += 0.15f;
                    if (NPC.downedAncientCultist)
                        num3 += 0.15f;
                    if (Main.expertMode)
                        num3 *= Main.expertNPCDamage;
                    int num4 = (int)((double)num2 * (double)num3);
                    this.lifeRegen -= 2 * num4;
                    if (num1 < num4)
                        num1 = num4 / 3;
                }
                if (this.soulDrain && this.realLife == -1)
                {
                    if (this.lifeRegen > 0)
                        this.lifeRegen = 0;
                    this.lifeRegen -= 50;
                    if (num1 < 5)
                        num1 = 5;
                }
                if (this.lifeRegen <= -240 && num1 < 2)
                    num1 = 2;
                this.lifeRegenCount += this.lifeRegen;
                while (this.lifeRegenCount >= 120)
                {
                    this.lifeRegenCount -= 120;
                    if (!this.immortal)
                    {
                        if (this.life < this.lifeMax)
                            ++this.life;
                        if (this.life > this.lifeMax)
                            this.life = this.lifeMax;
                    }
                }
                if (num1 > 0)
                {
                    while (this.lifeRegenCount <= -120 * num1)
                    {
                        this.lifeRegenCount += 120 * num1;
                        int number = this.whoAmI;
                        if (this.realLife >= 0)
                            number = this.realLife;
                        if (!Main.npc[number].immortal)
                            Main.npc[number].life -= num1;
                        CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), CombatText.LifeRegenNegative, string.Concat((object)num1), false, true);
                        if (Main.npc[number].life <= 0 && !Main.npc[number].immortal)
                        {
                            Main.npc[number].life = 1;
                            if (Main.netMode != 1)
                            {
                                Main.npc[number].StrikeNPCNoInteraction(9999, 0.0f, 0, false, false, false);
                                if (Main.netMode == 2)
                                    NetMessage.SendData(28, -1, -1, "", number, 9999f, 0.0f, 0.0f, 0, 0, 0);
                            }
                        }
                    }
                }
                else
                {
                    while (this.lifeRegenCount <= -120)
                    {
                        this.lifeRegenCount += 120;
                        int number = this.whoAmI;
                        if (this.realLife >= 0)
                            number = this.realLife;
                        if (!Main.npc[number].immortal)
                            --Main.npc[number].life;
                        CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), CombatText.LifeRegenNegative, string.Concat((object)1), false, true);
                        if (Main.npc[number].life <= 0 && !Main.npc[number].immortal)
                        {
                            Main.npc[number].life = 1;
                            if (Main.netMode != 1)
                            {
                                Main.npc[number].StrikeNPCNoInteraction(9999, 0.0f, 0, false, false, false);
                                if (Main.netMode == 2)
                                    NetMessage.SendData(28, -1, -1, "", number, 9999f, 0.0f, 0.0f, 0, 0, 0);
                            }
                        }
                    }
                }
            }
            if (Main.netMode != 1 && Main.bloodMoon)
            {
                bool flag = false;
                if ((double)this.value == 0.0)
                    flag = true;
                if (this.type == 46 || this.type == 303 || (this.type == 337 || this.type == 443))
                {
                    if (WorldGen.crimson)
                        this.Transform(464);
                    else
                        this.Transform(47);
                }
                else if (this.type == 55 || this.type == 230)
                {
                    if (WorldGen.crimson)
                        this.Transform(465);
                    else
                        this.Transform(57);
                }
                else if (this.type == 148 || this.type == 149)
                {
                    if (WorldGen.crimson)
                        this.Transform(470);
                    else
                        this.Transform(168);
                }
                if (flag)
                    this.value = 0.0f;
            }
            float num6 = 10f;
            NPC.gravity = 0.3f;
            if (this.type == 258)
            {
                NPC.gravity = 0.1f;
                if ((double)this.velocity.Y > 3.0)
                    this.velocity.Y = 3f;
            }
            else if (this.type == 425 && (double)this.ai[2] == 1.0)
            {
                NPC.gravity = 0.1f;
                if ((double)this.velocity.Y > 2.0)
                    this.velocity.Y = 2f;
            }
            else if (this.type == 427 && (double)this.ai[2] == 1.0)
            {
                NPC.gravity = 0.1f;
                if ((double)this.velocity.Y > 4.0)
                    this.velocity.Y = 4f;
            }
            else if (this.type == 426)
            {
                NPC.gravity = 0.1f;
                if ((double)this.velocity.Y > 3.0)
                    this.velocity.Y = 3f;
            }
            float num7 = (float)(Main.maxTilesX / 4200);
            float num8 = (float)(((double)this.position.Y / 16.0 - (60.0 + 10.0 * (double)(num7 * num7))) / (Main.worldSurface / 6.0));
            if ((double)num8 < 0.25)
                num8 = 0.25f;
            if ((double)num8 > 1.0)
                num8 = 1f;
            NPC.gravity *= num8;
            if (this.wet)
            {
                if (this.honeyWet)
                {
                    NPC.gravity = 0.1f;
                    num6 = 4f;
                }
                else
                {
                    NPC.gravity = 0.2f;
                    num6 = 7f;
                }
            }
            if (this.soundDelay > 0)
                --this.soundDelay;
            if (this.life <= 0)
                this.active = false;
            this.oldTarget = this.target;
            this.oldDirection = this.direction;
            this.oldDirectionY = this.directionY;
            float num9 = (float)(1.0 + (double)Math.Abs(this.velocity.X) / 3.0);
            if ((double)this.gfxOffY > 0.0)
            {
                this.gfxOffY -= num9 * this.stepSpeed;
                if ((double)this.gfxOffY < 0.0)
                    this.gfxOffY = 0.0f;
            }
            else if ((double)this.gfxOffY < 0.0)
            {
                this.gfxOffY += num9 * this.stepSpeed;
                if ((double)this.gfxOffY > 0.0)
                    this.gfxOffY = 0.0f;
            }
            if ((double)this.gfxOffY > 16.0)
                this.gfxOffY = 16f;
            if ((double)this.gfxOffY < -16.0)
                this.gfxOffY = -16f;
            this.TryPortalJumping();
            this.IdleSounds();
            this.AI();
            if (Main.netMode != 2 && (double)this.extraValue > 0.0)
            {
                int Type = 244;
                float num1 = 30f;
                if ((double)this.extraValue >= 1000000.0)
                {
                    Type = 247;
                    num1 *= 0.25f;
                }
                else if ((double)this.extraValue >= 10000.0)
                {
                    Type = 246;
                    num1 *= 0.5f;
                }
                else if ((double)this.extraValue >= 100.0)
                {
                    Type = 245;
                    num1 *= 0.75f;
                }
                if (Main.rand.Next((int)num1) == 0)
                {
                    int index = Dust.NewDust(this.position, this.width, this.height, Type, 0.0f, 0.0f, 254, new Color(), 0.25f);
                    Main.dust[index].velocity *= 0.1f;
                }
            }
            for (int index = 0; index < 256; ++index)
            {
                if (this.immune[index] > 0)
                    --this.immune[index];
            }
            if (!this.noGravity && !this.noTileCollide)
            {
                int index1 = (int)((double)this.position.X + (double)(this.width / 2)) / 16;
                int index2 = (int)((double)this.position.Y + (double)(this.height / 2)) / 16;
                if (index1 > 0 && index2 > 0 && Main.tile[index1, index2] == null)
                {
                    NPC.gravity = 0.0f;
                    this.velocity.X = 0.0f;
                    this.velocity.Y = 0.0f;
                }
            }
            if (!this.noGravity)
            {
                this.velocity.Y += NPC.gravity;
                if ((double)this.velocity.Y > (double)num6)
                    this.velocity.Y = num6;
            }
            if ((double)this.velocity.X < 0.005 && (double)this.velocity.X > -0.005)
                this.velocity.X = 0.0f;
            if (Main.netMode != 1 && this.type != 37 && (this.friendly || this.type == 46 || (this.type == 55 || this.type == 74) || (this.type == 148 || this.type == 149 || (this.type == 230 || this.type == 297)) || (this.type == 298 || this.type == 299 || (this.type == 303 || this.type == 355) || (this.type == 356 || this.type == 358 || (this.type == 359 || this.type == 360))) || (this.type == 361 || this.type == 362 || (this.type == 363 || this.type == 364) || (this.type == 365 || this.type == 366 || (this.type == 367 || this.type == 377)) || (this.type == 357 || this.type == 374 || this.type >= 442 && this.type <= 448 && this.type != 447))) || (this.type == 538 || this.type == 539 || this.type == 337 || this.type >= 484 && this.type <= 487))
            {
                if (this.townNPC)
                    this.CheckDrowning();
                if (this.life < this.lifeMax)
                {
                    ++this.friendlyRegen;
                    if (this.dryadWard)
                        this.friendlyRegen += 10;
                    if (this.friendlyRegen > 180)
                    {
                        this.friendlyRegen = 0;
                        ++this.life;
                        this.netUpdate = true;
                    }
                }
                if (this.immune[(int)byte.MaxValue] == 0)
                {
                    Rectangle rectangle1 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
                    for (int number = 0; number < 200; ++number)
                    {
                        if (Main.npc[number].active && !Main.npc[number].friendly && Main.npc[number].damage > 0)
                        {
                            Rectangle rectangle2 = new Rectangle((int)Main.npc[number].position.X, (int)Main.npc[number].position.Y, Main.npc[number].width, Main.npc[number].height);
                            if (rectangle1.Intersects(rectangle2) && (this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[number].netID)))
                            {
                                int Damage1 = Main.npc[number].damage;
                                int num1 = 6;
                                int hitDirection1 = 1;
                                if ((double)Main.npc[number].position.X + (double)(Main.npc[number].width / 2) > (double)this.position.X + (double)(this.width / 2))
                                    hitDirection1 = -1;
                                double num2 = Main.npc[i].StrikeNPCNoInteraction(Damage1, (float)num1, hitDirection1, false, false, false);
                                if (Main.netMode != 0)
                                    NetMessage.SendData(28, -1, -1, "", i, (float)Damage1, (float)num1, (float)hitDirection1, 0, 0, 0);
                                this.netUpdate = true;
                                this.immune[(int)byte.MaxValue] = 30;
                                if (this.dryadWard)
                                {
                                    int Damage2 = (int)num2 / 3;
                                    int num3 = 6;
                                    int hitDirection2 = hitDirection1 * -1;
                                    Main.npc[number].StrikeNPCNoInteraction(Damage2, (float)num3, hitDirection2, false, false, false);
                                    if (Main.netMode != 0)
                                        NetMessage.SendData(28, -1, -1, "", number, (float)Damage2, (float)num3, (float)hitDirection2, 0, 0, 0);
                                    Main.npc[number].netUpdate = true;
                                    Main.npc[number].immune[(int)byte.MaxValue] = 30;
                                }
                            }
                        }
                    }
                }
            }
            if (!this.noTileCollide)
            {
                double num1 = (double)this.velocity.Y;
                Vector4 vector4_1 = Collision.WalkDownSlope(this.position, this.velocity, this.width, this.height, NPC.gravity);
                this.position.X = vector4_1.X;
                this.position.Y = vector4_1.Y;
                this.velocity.X = vector4_1.Z;
                this.velocity.Y = vector4_1.W;
                bool flag1 = Collision.LavaCollision(this.position, this.width, this.height);
                if (flag1)
                {
                    this.lavaWet = true;
                    if (!this.lavaImmune && !this.dontTakeDamage && (Main.netMode != 1 && this.immune[(int)byte.MaxValue] == 0))
                    {
                        this.AddBuff(24, 420, false);
                        this.immune[(int)byte.MaxValue] = 30;
                        this.StrikeNPCNoInteraction(50, 0.0f, 0, false, false, false);
                        if (Main.netMode == 2 && Main.netMode != 0)
                            NetMessage.SendData(28, -1, -1, "", this.whoAmI, 50f, 0.0f, 0.0f, 0, 0, 0);
                    }
                }
                bool flag2;
                if (this.type == 72 || this.aiStyle == 21 || (this.aiStyle == 67 || this.type == 376))
                {
                    flag2 = false;
                    this.wetCount = (byte)0;
                    flag1 = false;
                }
                else
                {
                    flag2 = Collision.WetCollision(this.position, this.width, this.height);
                    if (Collision.honey)
                        this.honeyWet = true;
                }
                if (flag2)
                {
                    if (this.onFire && !this.lavaWet && Main.netMode != 1)
                    {
                        for (int b = 0; b < 5; ++b)
                        {
                            if (this.buffType[b] == 24)
                                this.DelBuff(b);
                        }
                    }
                    if (!this.wet && (int)this.wetCount == 0)
                    {
                        this.wetCount = (byte)10;
                        if (!flag1)
                        {
                            if (this.honeyWet)
                            {
                                for (int index1 = 0; index1 < 10; ++index1)
                                {
                                    int index2 = Dust.NewDust(new Vector2(this.position.X - 6f, (float)((double)this.position.Y + (double)(this.height / 2) - 8.0)), this.width + 12, 24, 152, 0.0f, 0.0f, 0, new Color(), 1f);
                                    --Main.dust[index2].velocity.Y;
                                    Main.dust[index2].velocity.X *= 2.5f;
                                    Main.dust[index2].scale = 1.3f;
                                    Main.dust[index2].alpha = 100;
                                    Main.dust[index2].noGravity = true;
                                }
                                if (this.aiStyle != 1 && this.type != 1 && (this.type != 16 && this.type != 147) && (this.type != 59 && this.type != 300 && (this.aiStyle != 39 && !this.noGravity)))
                                    Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
                            }
                            else
                            {
                                for (int index1 = 0; index1 < 30; ++index1)
                                {
                                    int index2 = Dust.NewDust(new Vector2(this.position.X - 6f, (float)((double)this.position.Y + (double)(this.height / 2) - 8.0)), this.width + 12, 24, Dust.dustWater(), 0.0f, 0.0f, 0, new Color(), 1f);
                                    Main.dust[index2].velocity.Y -= 4f;
                                    Main.dust[index2].velocity.X *= 2.5f;
                                    Main.dust[index2].scale *= 0.8f;
                                    Main.dust[index2].alpha = 100;
                                    Main.dust[index2].noGravity = true;
                                }
                                if (this.type != 376 && this.aiStyle != 1 && (this.type != 1 && this.type != 16) && (this.type != 147 && this.type != 59 && (this.type != 300 && this.aiStyle != 39)) && (this.aiStyle != 68 && this.type != 362 && (this.type != 364 && this.type != 361) && (this.type != 445 && !this.noGravity)))
                                    Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0);
                            }
                        }
                        else
                        {
                            for (int index1 = 0; index1 < 10; ++index1)
                            {
                                int index2 = Dust.NewDust(new Vector2(this.position.X - 6f, (float)((double)this.position.Y + (double)(this.height / 2) - 8.0)), this.width + 12, 24, 35, 0.0f, 0.0f, 0, new Color(), 1f);
                                Main.dust[index2].velocity.Y -= 1.5f;
                                Main.dust[index2].velocity.X *= 2.5f;
                                Main.dust[index2].scale = 1.3f;
                                Main.dust[index2].alpha = 100;
                                Main.dust[index2].noGravity = true;
                            }
                            if (this.aiStyle != 1 && this.type != 1 && (this.type != 16 && this.type != 147) && (this.type != 59 && this.type != 300 && (this.aiStyle != 39 && !this.noGravity)))
                                Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
                        }
                    }
                    this.wet = true;
                }
                else if (this.wet)
                {
                    this.velocity.X *= 0.5f;
                    this.wet = false;
                    if ((int)this.wetCount == 0)
                    {
                        this.wetCount = (byte)10;
                        if (!this.lavaWet)
                        {
                            if (this.honeyWet)
                            {
                                for (int index1 = 0; index1 < 10; ++index1)
                                {
                                    int index2 = Dust.NewDust(new Vector2(this.position.X - 6f, (float)((double)this.position.Y + (double)(this.height / 2) - 8.0)), this.width + 12, 24, 152, 0.0f, 0.0f, 0, new Color(), 1f);
                                    --Main.dust[index2].velocity.Y;
                                    Main.dust[index2].velocity.X *= 2.5f;
                                    Main.dust[index2].scale = 1.3f;
                                    Main.dust[index2].alpha = 100;
                                    Main.dust[index2].noGravity = true;
                                }
                                if (this.aiStyle != 1 && this.type != 1 && (this.type != 16 && this.type != 147) && (this.type != 300 && this.type != 59 && (this.aiStyle != 39 && !this.noGravity)))
                                    Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
                            }
                            else
                            {
                                for (int index1 = 0; index1 < 30; ++index1)
                                {
                                    int index2 = Dust.NewDust(new Vector2(this.position.X - 6f, (float)((double)this.position.Y + (double)(this.height / 2) - 8.0)), this.width + 12, 24, Dust.dustWater(), 0.0f, 0.0f, 0, new Color(), 1f);
                                    Main.dust[index2].velocity.Y -= 4f;
                                    Main.dust[index2].velocity.X *= 2.5f;
                                    Main.dust[index2].scale *= 0.8f;
                                    Main.dust[index2].alpha = 100;
                                    Main.dust[index2].noGravity = true;
                                }
                                if (this.type != 376 && this.aiStyle != 1 && (this.type != 1 && this.type != 16) && (this.type != 59 && this.type != 300 && (this.aiStyle != 39 && this.aiStyle != 68)) && (this.type != 362 && this.type != 364 && (this.type != 361 && this.type != 445) && !this.noGravity))
                                    Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0);
                            }
                        }
                        else
                        {
                            for (int index1 = 0; index1 < 10; ++index1)
                            {
                                int index2 = Dust.NewDust(new Vector2(this.position.X - 6f, (float)((double)this.position.Y + (double)(this.height / 2) - 8.0)), this.width + 12, 24, 35, 0.0f, 0.0f, 0, new Color(), 1f);
                                Main.dust[index2].velocity.Y -= 1.5f;
                                Main.dust[index2].velocity.X *= 2.5f;
                                Main.dust[index2].scale = 1.3f;
                                Main.dust[index2].alpha = 100;
                                Main.dust[index2].noGravity = true;
                            }
                            if (this.aiStyle != 1 && this.type != 1 && (this.type != 16 && this.type != 59) && (this.type != 300 && this.aiStyle != 39 && !this.noGravity))
                                Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
                        }
                    }
                }
                if (!this.wet)
                {
                    this.lavaWet = false;
                    this.honeyWet = false;
                }
                if ((int)this.wetCount > 0)
                    --this.wetCount;
                bool flag3 = false;
                if (this.type == 2 || this.type == -43 || (this.type == 317 || this.type == 318) || this.type == 133)
                    flag3 = true;
                if (this.aiStyle == 10)
                    flag3 = true;
                if (this.aiStyle == 40)
                    flag3 = true;
                if (this.type == 467)
                    flag3 = true;
                if (this.type == 477)
                    flag3 = true;
                if (this.aiStyle == 14)
                    flag3 = true;
                if (this.type == 173)
                    flag3 = true;
                if (this.type == 469 && (double)this.ai[2] == 1.0)
                    flag3 = true;
                if (this.aiStyle == 3 && this.directionY == 1)
                    flag3 = true;
                if (this.type == 210 || this.type == 211)
                    flag3 = true;
                if (this.type == 50 && this.target >= 0 && (double)Main.player[this.target].position.Y > (double)this.position.Y + (double)this.height)
                    flag3 = true;
                if (this.type == 247 || this.type == 248)
                    flag3 = true;
                if (this.type == 245 && this.target >= 0 && (double)Main.player[this.target].position.Y > (double)this.position.Y + (double)this.height)
                    flag3 = true;
                if (this.type == 418)
                    flag3 = true;
                if (this.aiStyle == 87 && (double)Main.player[this.target].position.Y > (double)this.position.Y + (double)this.height)
                    flag3 = true;
                this.oldVelocity = this.velocity;
                this.collideX = false;
                this.collideY = false;
                int num2 = 16;
                if (this.aiStyle == 7)
                {
                    bool flag4 = false;
                    if (!Main.dayTime || Main.invasionType > 0 || Main.eclipse)
                        flag4 = true;
                    else if (this.homeTileY - (int)((double)this.position.Y + (double)this.height) / 16 > num2)
                        flag3 = true;
                    if (flag4 && ((double)this.position.Y + (double)this.height - 8.0) / 16.0 < (double)(this.homeTileY - 1))
                        flag3 = true;
                }
                if (Main.netMode != 1)
                {
                    if (this.type == 230 && this.wet)
                    {
                        int num3 = this.direction;
                        Vector2 vector2 = this.velocity;
                        this.Transform(55);
                        this.direction = num3;
                        this.velocity = vector2;
                        this.wet = true;
                        if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y = 0.0f;
                    }
                    else if (this.type == 55 && !this.wet && Main.raining)
                    {
                        int num3 = this.direction;
                        Vector2 vector2 = this.velocity;
                        this.Transform(230);
                        this.direction = num3;
                        this.velocity = vector2;
                        this.homeTileX = (int)((double)this.position.X / 16.0) + 10 * this.direction;
                    }
                }
                Vector2 Position1 = this.position;
                int Width1 = this.width;
                int Height1 = this.height;
                if (this.type == 243)
                    Height1 = 90;
                if (this.type == 290)
                    Height1 = 40;
                if (this.type == 351)
                    Height1 = 40;
                if (this.type == 482)
                    Height1 = 40;
                if (this.type == 351 || this.type == 343 || (this.type == 348 || this.type == 349))
                    Height1 = 40;
                if (this.type == 391)
                {
                    for (int index = 0; index < 200; ++index)
                    {
                        if (Main.npc[index].active && Main.npc[index].type == 390 && (double)Main.npc[index].ai[0] == (double)this.whoAmI)
                        {
                            Height1 = 62;
                            break;
                        }
                    }
                }
                if (this.type == 415)
                {
                    for (int index = 0; index < 200; ++index)
                    {
                        if (Main.npc[index].active && Main.npc[index].type == 416 && (double)Main.npc[index].ai[0] == (double)this.whoAmI)
                        {
                            Height1 = 62;
                            break;
                        }
                    }
                }
                if (Height1 != this.height)
                    Position1.Y += (float)(this.height - Height1);
                if (this.wet)
                {
                    if (this.honeyWet)
                    {
                        Vector2 vector2_1 = this.velocity;
                        this.velocity = Collision.TileCollision(Position1, this.velocity, Width1, Height1, flag3, flag3, 1);
                        if (Collision.up)
                            this.velocity.Y = 0.01f;
                        Vector2 vector2_2 = this.velocity * 0.25f;
                        if ((double)this.velocity.X != (double)vector2_1.X)
                        {
                            vector2_2.X = this.velocity.X;
                            this.collideX = true;
                        }
                        if ((double)this.velocity.Y != (double)vector2_1.Y)
                        {
                            vector2_2.Y = this.velocity.Y;
                            this.collideY = true;
                        }
                        this.oldPosition = this.position;
                        this.oldDirection = this.direction;
                        NPC npc = this;
                        Vector2 vector2_3 = npc.position + vector2_2;
                        npc.position = vector2_3;
                    }
                    else
                    {
                        Vector2 vector2_1 = this.velocity;
                        this.velocity = Collision.TileCollision(Position1, this.velocity, Width1, Height1, flag3, flag3, 1);
                        if (Collision.up)
                            this.velocity.Y = 0.01f;
                        Vector2 vector2_2 = this.velocity * 0.5f;
                        if ((double)this.velocity.X != (double)vector2_1.X)
                        {
                            vector2_2.X = this.velocity.X;
                            this.collideX = true;
                        }
                        if ((double)this.velocity.Y != (double)vector2_1.Y)
                        {
                            vector2_2.Y = this.velocity.Y;
                            this.collideY = true;
                        }
                        this.oldPosition = this.position;
                        this.oldDirection = this.direction;
                        NPC npc = this;
                        Vector2 vector2_3 = npc.position + vector2_2;
                        npc.position = vector2_3;
                    }
                }
                else
                {
                    if (this.type == 72)
                    {
                        Vector2 Position2 = new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2));
                        int Width2 = 12;
                        int Height2 = 12;
                        Position2.X -= (float)(Width2 / 2);
                        Position2.Y -= (float)(Height2 / 2);
                        this.velocity = Collision.noSlopeCollision(Position2, this.velocity, Width2, Height2, true, true);
                    }
                    else if (this.type == 405 || this.type == 406)
                    {
                        this.velocity = Collision.TileCollision(Position1, this.velocity, Width1, Height1, flag3, flag3, 1);
                        if (this.velocity != this.oldVelocity)
                        {
                            if ((double)this.velocity.X != 0.0 && (double)this.velocity.X != (double)this.oldVelocity.X)
                                this.velocity.X = (float)(-(double)this.oldVelocity.X * 0.800000011920929);
                            if ((double)this.velocity.Y != 0.0 && (double)this.velocity.Y != (double)this.oldVelocity.Y)
                                this.velocity.Y = (float)(-(double)this.oldVelocity.Y * 0.800000011920929);
                        }
                    }
                    else if (this.type == 417)
                    {
                        this.velocity = Collision.TileCollision(Position1, this.velocity, Width1, Height1, flag3, flag3, 1);
                        if ((double)this.ai[0] == 6.0 && this.velocity != this.oldVelocity)
                        {
                            --this.ai[2];
                            this.ai[3] = 1f;
                            if ((double)this.ai[2] > 0.0)
                            {
                                if ((double)this.velocity.X != 0.0 && (double)this.velocity.X != (double)this.oldVelocity.X)
                                {
                                    this.velocity.X = (float)(-(double)this.oldVelocity.X * 0.899999976158142);
                                    this.direction *= -1;
                                }
                                if ((double)this.velocity.Y != 0.0 && (double)this.velocity.Y != (double)this.oldVelocity.Y)
                                    this.velocity.Y = (float)(-(double)this.oldVelocity.Y * 0.899999976158142);
                            }
                        }
                    }
                    else
                        this.velocity = Collision.TileCollision(Position1, this.velocity, Width1, Height1, flag3, flag3, 1);
                    if (Collision.up)
                        this.velocity.Y = 0.01f;
                    if ((double)this.oldVelocity.X != (double)this.velocity.X)
                        this.collideX = true;
                    if ((double)this.oldVelocity.Y != (double)this.velocity.Y)
                        this.collideY = true;
                    this.oldPosition = this.position;
                    this.oldDirection = this.direction;
                    NPC npc = this;
                    Vector2 vector2 = npc.position + this.velocity;
                    npc.position = vector2;
                }
                if (this.aiStyle == 67)
                {
                    Vector4 vector4_2 = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, NPC.gravity, false);
                    if ((double)this.position.X != (double)vector4_2.X || (double)this.position.Y != (double)vector4_2.Y)
                    {
                        if ((double)this.ai[2] == 0.0 && (double)this.velocity.Y > 0.0 && (this.direction < 0 && (double)this.rotation == 1.57000005245209 && this.spriteDirection == 1 || this.direction > 0 && (double)this.rotation == 4.71000003814697 && this.spriteDirection == -1))
                            this.direction *= -this.direction;
                        this.ai[2] = 2f;
                        this.directionY = 1;
                        this.rotation = 0.0f;
                    }
                    this.position.X = vector4_2.X;
                    this.position.Y = vector4_2.Y;
                    this.velocity.X = vector4_2.Z;
                    this.velocity.Y = vector4_2.W;
                }
                else if (this.type != 72 && this.type != 247 && this.type != 248)
                {
                    if (flag3)
                        this.stairFall = true;
                    if (this.aiStyle == 7)
                    {
                        int x = (int)this.Center.X / 16;
                        int y = (int)this.position.Y / 16;
                        if (WorldGen.InWorld(x, y, 0))
                        {
                            bool flag4 = false;
                            if (Main.tile[x, y] != null && Main.tile[x, y].active() && Main.tileSolid[(int)Main.tile[x, y].type])
                                flag4 = true;
                            if (!Main.dayTime || Main.eclipse)
                                flag4 = true;
                            else if (this.homeTileY - (int)((double)this.position.Y + (double)this.height) / 16 > num2)
                                flag4 = true;
                            if (flag4)
                                this.stairFall = ((double)this.position.Y + (double)this.height - 8.0) / 16.0 < (double)this.homeTileY;
                        }
                    }
                    Vector4 vector4_2 = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, NPC.gravity, this.stairFall);
                    if (Collision.stairFall)
                        this.stairFall = true;
                    else if (!flag3)
                        this.stairFall = false;
                    if (Collision.stair && (double)Math.Abs(vector4_2.Y - this.position.Y) > 8.0)
                    {
                        this.gfxOffY -= vector4_2.Y - this.position.Y;
                        this.stepSpeed = 2f;
                    }
                    this.position.X = vector4_2.X;
                    this.position.Y = vector4_2.Y;
                    this.velocity.X = vector4_2.Z;
                    this.velocity.Y = vector4_2.W;
                }
            }
            else
            {
                this.oldPosition = this.position;
                this.oldDirection = this.direction;
                NPC npc = this;
                Vector2 vector2 = npc.position + this.velocity;
                npc.position = vector2;
            }
            if (Main.netMode != 1 && !this.noTileCollide && (this.lifeMax > 1 && Collision.SwitchTiles(this.position, this.width, this.height, this.oldPosition, 2)) && (this.type == 46 || this.type == 148 || (this.type == 149 || this.type == 303) || (this.type == 361 || this.type == 362 || (this.type == 364 || this.type == 366)) || (this.type == 367 || this.type >= 442 && this.type <= 448)))
            {
                this.ai[0] = 1f;
                this.ai[1] = 400f;
                this.ai[2] = 0.0f;
            }
            this.FindFrame();
            if (this.type == 439 || this.type == 440)
            {
                if ((double)this.localAI[3] <= 0.0)
                {
                    this.localAI[3] = 2f;
                    for (int index = this.oldPos.Length - 1; index > 0; --index)
                        this.oldPos[index] = this.oldPos[index - 1];
                    this.oldPos[0] = this.position;
                }
                --this.localAI[3];
            }
            if (this.type == 370 || this.type == 372 || (this.type == 373 || this.type == 396) || (this.type == 400 || this.type == 401))
            {
                for (int index = this.oldPos.Length - 1; index > 0; --index)
                    this.oldPos[index] = this.oldPos[index - 1];
                this.oldPos[0] = this.position;
            }
            if (this.aiStyle == 87)
            {
                if ((int)this.ai[0] == 4 || (double)this.ai[0] == 5.0 || (double)this.ai[0] == 6.0)
                {
                    for (int index = this.oldPos.Length - 1; index > 0; --index)
                    {
                        this.oldPos[index] = this.oldPos[index - 1];
                        this.oldRot[index] = this.oldRot[index - 1];
                    }
                    this.oldPos[0] = this.position;
                    this.oldRot[0] = this.rotation;
                }
                else
                {
                    for (int index = this.oldPos.Length - 1; index >= 0; --index)
                    {
                        this.oldPos[index] = this.position;
                        this.oldRot[index] = this.rotation;
                    }
                }
            }
            if (this.type == 4 || this.type == 471 || (this.type == 477 || this.type == 479))
            {
                for (int index = this.oldPos.Length - 1; index > 0; --index)
                {
                    this.oldPos[index] = this.oldPos[index - 1];
                    this.oldRot[index] = this.oldRot[index - 1];
                }
                this.oldPos[0] = this.position;
                this.oldRot[0] = this.rotation;
            }
            if (this.type == 120 || this.type == 137 || this.type == 138)
            {
                for (int index = this.oldPos.Length - 1; index > 0; --index)
                {
                    this.oldPos[index] = this.oldPos[index - 1];
                    Lighting.AddLight((int)this.position.X / 16, (int)this.position.Y / 16, 0.3f, 0.0f, 0.2f);
                }
                this.oldPos[0] = this.position;
            }
            else if (this.type == 94)
            {
                for (int index = this.oldPos.Length - 1; index > 0; --index)
                    this.oldPos[index] = this.oldPos[index - 1];
                this.oldPos[0] = this.position;
            }
            else if (this.type == 125 || this.type == 126 || (this.type == (int)sbyte.MaxValue || this.type == 128) || (this.type == 129 || this.type == 130 || (this.type == 131 || this.type == 139)) || (this.type == 140 || this.type == 407 || (this.type == 420 || this.type == 425) || (this.type == 427 || this.type == 426 || (this.type == 509 || this.type == 516))))
            {
                for (int index = this.oldPos.Length - 1; index > 0; --index)
                    this.oldPos[index] = this.oldPos[index - 1];
                this.oldPos[0] = this.position;
            }
            else if (this.type == 402 || this.type == 417 || (this.type == 419 || this.type == 418) || (this.type == 519 || this.type == 521 || this.type == 522))
            {
                for (int index = this.oldPos.Length - 1; index > 0; --index)
                {
                    this.oldPos[index] = this.oldPos[index - 1];
                    this.oldRot[index] = this.oldRot[index - 1];
                }
                this.oldPos[0] = this.position;
                this.oldRot[0] = this.rotation;
            }
            if (!this.active)
                this.netUpdate = true;
            if (Main.netMode == 2)
            {
                if (Main.npcStreamSpeed > 0 && !this.townNPC && (double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) > 1.0)
                {
                    ++this.netStream;
                    if ((int)this.netStream > Main.npcStreamSpeed)
                    {
                        for (int remoteClient = 0; remoteClient < (int)byte.MaxValue; ++remoteClient)
                        {
                            if (Main.player[remoteClient].active)
                            {
                                float num1 = Math.Abs(this.Center.X - Main.player[remoteClient].Center.X) + Math.Abs(this.Center.Y - Main.player[remoteClient].Center.Y);
                                if ((double)num1 < 250.0)
                                    this.streamPlayer[remoteClient] -= (byte)8;
                                else if ((double)num1 < 500.0)
                                    this.streamPlayer[remoteClient] -= (byte)4;
                                else if ((double)num1 < 1000.0)
                                    this.streamPlayer[remoteClient] -= (byte)2;
                                else if ((double)num1 < 1500.0)
                                    --this.streamPlayer[remoteClient];
                                if ((int)this.streamPlayer[remoteClient] <= 0)
                                {
                                    this.streamPlayer[remoteClient] = (byte)8;
                                    NetMessage.SendData(23, remoteClient, -1, "", i, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                                }
                            }
                        }
                    }
                }
                if (this.townNPC)
                    this.netSpam = 0;
                if (this.netUpdate2)
                    this.netUpdate = true;
                if (!this.active)
                    this.netSpam = 0;
                if (this.netUpdate)
                {
                    if (this.boss)
                    {
                        Vector2 vector2 = this.oldPosition - this.position;
                        if (this.netSpam <= 15)
                        {
                            this.netSpam += 5;
                            NetMessage.SendData(23, -1, -1, "", i, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                            this.netUpdate2 = false;
                        }
                        else
                            this.netUpdate2 = true;
                    }
                    else if (this.netSpam <= 90)
                    {
                        this.netSpam += 30;
                        NetMessage.SendData(23, -1, -1, "", i, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                        this.netUpdate2 = false;
                    }
                    else
                        this.netUpdate2 = true;
                }
                if (this.netSpam > 0)
                    --this.netSpam;
                if (this.active && this.townNPC && NPC.TypeToNum(this.type) != -1)
                {
                    if (this.homeless != this.oldHomeless || this.homeTileX != this.oldHomeTileX || this.homeTileY != this.oldHomeTileY)
                    {
                        int num1 = 0;
                        if (this.homeless)
                            num1 = 1;
                        NetMessage.SendData(60, -1, -1, "", i, (float)Main.npc[i].homeTileX, (float)Main.npc[i].homeTileY, (float)num1, 0, 0, 0);
                    }
                    this.oldHomeless = this.homeless;
                    this.oldHomeTileX = this.homeTileX;
                    this.oldHomeTileY = this.homeTileY;
                }
            }
            this.CheckActive();
            this.netUpdate = false;
            this.justHit = false;
        }

        public static void setFireFlyChance()
        {
            if (Main.rand == null)
                Main.rand = new Random((int)DateTime.Now.Ticks);
            if (WorldGen.genRand.Next(9) == 0)
            {
                NPC.fireFlyChance = Main.rand.Next(5, 10);
                NPC.fireFlyFriendly = Main.rand.Next(1, 4);
                NPC.fireFlyMultiple = Main.rand.Next(3, 8);
            }
            else if (WorldGen.genRand.Next(3) == 0)
            {
                NPC.fireFlyChance = 999999;
                NPC.fireFlyFriendly = 999999;
                NPC.fireFlyMultiple = 999999;
            }
            else
            {
                NPC.fireFlyChance = Main.rand.Next(10, 60);
                NPC.fireFlyFriendly = Main.rand.Next(2, 15);
                NPC.fireFlyMultiple = Main.rand.Next(6, 30);
            }
            NPC.butterflyChance = Main.rand.Next(1, 25);
            if (WorldGen.genRand.Next(3) != 0)
                return;
            NPC.butterflyChance = 999999;
        }

        public Color GetAlpha(Color newColor)
        {
            float num1 = (float)((int)byte.MaxValue - this.alpha) / (float)byte.MaxValue;
            int r1 = (int)((double)newColor.R * (double)num1);
            int g1 = (int)((double)newColor.G * (double)num1);
            int b1 = (int)((double)newColor.B * (double)num1);
            int a = (int)newColor.A - this.alpha;
            if (this.type == 402)
                return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue);
            if (this.type == 484)
                return new Color(250, 250, 250, 200);
            if (this.type >= 454 && this.type <= 459 || this.type == 521)
            {
                newColor = Color.Lerp(newColor, Color.White, 0.4f);
                newColor.A = (byte)150;
                newColor *= (float)a / (float)byte.MaxValue;
                return newColor;
            }
            if (this.type == 440)
            {
                byte num2 = (byte)180;
                if (Main.expertMode)
                    num2 = (byte)210;
                byte num3 = (byte)((double)num2 * (double)num1);
                return new Color((int)num3, (int)num3, (int)num3, (int)num3);
            }
            if (this.type == 516)
                return new Color(this.alpha, this.alpha, this.alpha, this.alpha);
            if (this.type == 522)
                return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha);
            if (this.type == 523)
                return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha);
            if (this.type == 395 || this.type == 519)
            {
                newColor = Color.Lerp(newColor, Color.White, 0.4f);
                return newColor;
            }
            if (this.type == 370 && (double)this.ai[0] != -1.0 && (double)this.ai[0] < 9.0)
            {
                float num2 = MathHelper.Lerp(num1, 1f, 0.25f);
                if ((double)num2 > 1.0)
                    num2 = 1f;
                b1 = (int)((double)newColor.B * (double)num2);
            }
            if (this.type == 30)
                return new Color(250, 250, 250, 100);
            if (this.type == 25 || this.type == 30 || (this.type == 59 || this.type == 60))
                return new Color(200, 200, 200, 0);
            if (this.type == 360)
            {
                int r2 = (int)newColor.R;
                int g2 = (int)newColor.G;
                int b2 = (int)newColor.B;
                if (r2 < 75)
                    r2 = 75;
                if (g2 < 175)
                    g2 = 175;
                if (b2 < (int)byte.MaxValue)
                    b2 = (int)byte.MaxValue;
                return new Color(r2, g2, b2, (int)byte.MaxValue);
            }
            if (this.type == 352)
                return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 200);
            if (this.type == 72)
            {
                r1 = (int)newColor.R;
                g1 = (int)newColor.G;
                b1 = (int)newColor.B;
            }
            else
            {
                if (this.type == 288)
                    return new Color(200, 200, 200, 0);
                if (this.type == 289)
                    return new Color(250, 250, 250, 50);
                if (this.type >= 254 && this.type <= 261)
                {
                    b1 = (int)byte.MaxValue;
                    if (r1 < 100)
                        r1 = 100;
                    if (g1 < 150)
                        g1 = 150;
                }
                else if (this.type == 374)
                {
                    b1 = (int)byte.MaxValue;
                    if (r1 < 100)
                        r1 = 100;
                    if (g1 < 150)
                        g1 = 150;
                }
                else if (this.type == 64 || this.type == 63 || (this.type == 75 || this.type == 103) || this.type == 400)
                {
                    r1 = (int)((double)newColor.R * 1.5);
                    g1 = (int)((double)newColor.G * 1.5);
                    b1 = (int)((double)newColor.B * 1.5);
                    if (r1 > (int)byte.MaxValue)
                        r1 = (int)byte.MaxValue;
                    if (g1 > (int)byte.MaxValue)
                        g1 = (int)byte.MaxValue;
                    if (b1 > (int)byte.MaxValue)
                        b1 = (int)byte.MaxValue;
                }
            }
            if (a < 0)
                a = 0;
            if (a > (int)byte.MaxValue)
                a = (int)byte.MaxValue;
            return new Color(r1, g1, b1, a);
        }

        public Color GetColor(Color newColor)
        {
            int r = (int)this.color.R - ((int)byte.MaxValue - (int)newColor.R);
            int g = (int)this.color.G - ((int)byte.MaxValue - (int)newColor.G);
            int b = (int)this.color.B - ((int)byte.MaxValue - (int)newColor.B);
            int a = (int)this.color.A - ((int)byte.MaxValue - (int)newColor.A);
            if (r < 0)
                r = 0;
            if (r > (int)byte.MaxValue)
                r = (int)byte.MaxValue;
            if (g < 0)
                g = 0;
            if (g > (int)byte.MaxValue)
                g = (int)byte.MaxValue;
            if (b < 0)
                b = 0;
            if (b > (int)byte.MaxValue)
                b = (int)byte.MaxValue;
            if (a < 0)
                a = 0;
            if (a > (int)byte.MaxValue)
                a = (int)byte.MaxValue;
            return new Color(r, g, b, a);
        }

        public string GetChat()
        {
            Recipe.FindRecipes();
            bool flag1 = false;
            bool flag2 = false;
            bool flag3 = false;
            bool flag4 = false;
            bool flag5 = false;
            bool flag6 = false;
            bool flag7 = false;
            bool flag8 = false;
            bool flag9 = false;
            bool flag10 = false;
            bool flag11 = false;
            bool flag12 = false;
            bool flag13 = false;
            bool flag14 = false;
            bool flag15 = false;
            bool flag16 = false;
            bool flag17 = false;
            for (int index = 0; index < 200; ++index)
            {
                if (Main.npc[index].active)
                {
                    if (Main.npc[index].type == 17)
                        flag1 = true;
                    else if (Main.npc[index].type == 18)
                        flag2 = true;
                    else if (Main.npc[index].type == 19)
                        flag3 = true;
                    else if (Main.npc[index].type == 20)
                        flag4 = true;
                    else if (Main.npc[index].type == 37)
                        flag5 = true;
                    else if (Main.npc[index].type == 38)
                        flag6 = true;
                    else if (Main.npc[index].type == 124)
                        flag7 = true;
                    else if (Main.npc[index].type == 107)
                        flag8 = true;
                    else if (Main.npc[index].type == 54)
                        flag9 = true;
                    else if (Main.npc[index].type == 160)
                        flag10 = true;
                    else if (Main.npc[index].type == 178)
                        flag11 = true;
                    else if (Main.npc[index].type == 229)
                        flag12 = true;
                    else if (Main.npc[index].type == 209)
                        flag13 = true;
                    else if (Main.npc[index].type == 208)
                        flag14 = true;
                    else if (Main.npc[index].type == 353)
                        flag15 = true;
                    else if (Main.npc[index].type == 22)
                        flag16 = true;
                    else if (Main.npc[index].type == 2)
                        flag17 = true;
                }
            }
            string str1 = "";
            string str2;
            if (this.type == 17)
            {
                if (!NPC.downedBoss1 && Main.rand.Next(3) == 0)
                    str1 = Main.player[Main.myPlayer].statLifeMax >= 200 ? (Main.player[Main.myPlayer].statDefense > 10 ? Lang.dialog(3, false) : Lang.dialog(2, false)) : Lang.dialog(1, false);
                else if (Main.dayTime)
                {
                    if (Main.time < 16200.0)
                    {
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                str1 = Lang.dialog(4, false);
                                break;
                            case 1:
                                str1 = Lang.dialog(5, false);
                                break;
                            default:
                                str1 = Lang.dialog(6, false);
                                break;
                        }
                    }
                    else if (Main.time > 37800.0)
                    {
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                str1 = Lang.dialog(7, false);
                                break;
                            case 1:
                                str1 = Lang.dialog(8, false);
                                break;
                            default:
                                str1 = Lang.dialog(9, false);
                                break;
                        }
                    }
                    else
                    {
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                str1 = Lang.dialog(10, false);
                                break;
                            case 1:
                                str1 = Lang.dialog(11, false);
                                break;
                            default:
                                str1 = Lang.dialog(12, false);
                                break;
                        }
                    }
                }
                else if (Main.bloodMoon)
                {
                    if (flag2 && flag7 && Main.rand.Next(3) == 0)
                    {
                        str1 = Lang.dialog(13, false);
                    }
                    else
                    {
                        switch (Main.rand.Next(4))
                        {
                            case 0:
                                str1 = Lang.dialog(14, false);
                                break;
                            case 1:
                                str1 = Lang.dialog(15, false);
                                break;
                            case 2:
                                str1 = Lang.dialog(16, false);
                                break;
                            default:
                                str1 = Lang.dialog(17, false);
                                break;
                        }
                    }
                }
                else if (Main.time < 9720.0)
                    str1 = Main.rand.Next(2) != 0 ? Lang.dialog(19, false) : Lang.dialog(18, false);
                else if (Main.time > 22680.0)
                {
                    str1 = Main.rand.Next(2) != 0 ? Lang.dialog(21, false) : Lang.dialog(20, false);
                }
                else
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            str1 = Lang.dialog(22, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(23, false);
                            break;
                        default:
                            str1 = Lang.dialog(24, false);
                            break;
                    }
                }
            }
            else if (this.type == 18)
            {
                if (Main.bloodMoon)
                {
                    if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.66)
                    {
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                str1 = Lang.dialog(25, false);
                                break;
                            case 1:
                                str1 = Lang.dialog(26, false);
                                break;
                            default:
                                str1 = Lang.dialog(27, false);
                                break;
                        }
                    }
                    else
                    {
                        switch (Main.rand.Next(4))
                        {
                            case 0:
                                str1 = Lang.dialog(28, false);
                                break;
                            case 1:
                                str1 = Lang.dialog(29, false);
                                break;
                            case 2:
                                str1 = Lang.dialog(30, false);
                                break;
                            default:
                                str1 = Lang.dialog(31, false);
                                break;
                        }
                    }
                }
                else if (Main.rand.Next(3) == 0 && !NPC.downedBoss3)
                    str1 = Lang.dialog(32, false);
                else if (flag6 && Main.rand.Next(4) == 0)
                    str1 = Lang.dialog(33, false);
                else if (flag3 && Main.rand.Next(4) == 0)
                    str1 = Lang.dialog(34, false);
                else if (flag17 && Main.rand.Next(4) == 0)
                    str1 = Lang.dialog(35, false);
                else if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.33)
                {
                    switch (Main.rand.Next(5))
                    {
                        case 0:
                            str1 = Lang.dialog(36, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(37, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(38, false);
                            break;
                        case 3:
                            str1 = Lang.dialog(39, false);
                            break;
                        default:
                            str1 = Lang.dialog(40, false);
                            break;
                    }
                }
                else if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.66)
                {
                    switch (Main.rand.Next(7))
                    {
                        case 0:
                            str1 = Lang.dialog(41, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(42, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(43, false);
                            break;
                        case 3:
                            str1 = Lang.dialog(44, false);
                            break;
                        case 4:
                            str1 = Lang.dialog(45, false);
                            break;
                        case 5:
                            str1 = Lang.dialog(46, false);
                            break;
                        default:
                            str1 = Lang.dialog(47, false);
                            break;
                    }
                }
                else
                {
                    switch (Main.rand.Next(4))
                    {
                        case 0:
                            str1 = Lang.dialog(48, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(49, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(50, false);
                            break;
                        default:
                            str1 = Lang.dialog(51, false);
                            break;
                    }
                }
            }
            else if (this.type == 19)
            {
                if (NPC.downedBoss3 && !Main.hardMode)
                    str1 = Lang.dialog(58, false);
                else if (flag2 && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(59, false);
                else if (flag2 && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(60, false);
                else if (flag4 && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(61, false);
                else if (flag6 && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(62, false);
                else if (flag6 && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(63, false);
                else if (Main.bloodMoon)
                {
                    str1 = Main.rand.Next(2) != 0 ? Lang.dialog(65, false) : Lang.dialog(64, false);
                }
                else
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            str1 = Lang.dialog(66, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(67, false);
                            break;
                        default:
                            str1 = Lang.dialog(68, false);
                            break;
                    }
                }
            }
            else if (this.type == 20)
            {
                if (!NPC.downedBoss2 && Main.rand.Next(3) == 0)
                    str1 = !WorldGen.crimson ? Lang.dialog(69, false) : Lang.dialog(332, false);
                else if (flag3 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(70, false);
                else if (flag1 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(71, false);
                else if (flag5 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(72, false);
                else if (flag10 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(238, false);
                else if (Main.bloodMoon)
                {
                    switch (Main.rand.Next(4))
                    {
                        case 0:
                            str1 = Lang.dialog(73, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(74, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(75, false);
                            break;
                        default:
                            str1 = Lang.dialog(76, false);
                            break;
                    }
                }
                else
                {
                    switch (Main.rand.Next(5))
                    {
                        case 0:
                            str1 = !WorldGen.crimson ? Lang.dialog(77, false) : Lang.dialog(333, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(78, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(79, false);
                            break;
                        case 3:
                            str1 = Lang.dialog(80, false);
                            break;
                        default:
                            str1 = Lang.dialog(81, false);
                            break;
                    }
                }
            }
            else if (this.type == 37)
            {
                if (Main.dayTime)
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            str1 = Lang.dialog(82, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(83, false);
                            break;
                        default:
                            str1 = Lang.dialog(84, false);
                            break;
                    }
                }
                else if (Main.player[Main.myPlayer].statLifeMax < 300 || Main.player[Main.myPlayer].statDefense < 10)
                {
                    switch (Main.rand.Next(4))
                    {
                        case 0:
                            str1 = Lang.dialog(85, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(86, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(87, false);
                            break;
                        default:
                            str1 = Lang.dialog(88, false);
                            break;
                    }
                }
                else
                {
                    switch (Main.rand.Next(4))
                    {
                        case 0:
                            str1 = Lang.dialog(89, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(90, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(91, false);
                            break;
                        default:
                            str1 = Lang.dialog(92, false);
                            break;
                    }
                }
            }
            else if (this.type == 38)
            {
                if (!NPC.downedBoss2 && Main.rand.Next(3) == 0)
                    str2 = Lang.dialog(93, false);
                if (Main.bloodMoon)
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            str1 = Lang.dialog(94, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(95, false);
                            break;
                        default:
                            str1 = Lang.dialog(96, false);
                            break;
                    }
                }
                else if (flag3 && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(97, false);
                else if (flag3 && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(98, false);
                else if (flag2 && Main.rand.Next(4) == 0)
                    str1 = Lang.dialog(99, false);
                else if (flag4 && Main.rand.Next(4) == 0)
                    str1 = Lang.dialog(100, false);
                else if (!Main.dayTime)
                {
                    switch (Main.rand.Next(4))
                    {
                        case 0:
                            str1 = Lang.dialog(101, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(102, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(103, false);
                            break;
                        default:
                            str1 = Lang.dialog(104, false);
                            break;
                    }
                }
                else
                {
                    switch (Main.rand.Next(5))
                    {
                        case 0:
                            str1 = Lang.dialog(105, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(106, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(107, false);
                            break;
                        case 3:
                            str1 = Lang.dialog(108, false);
                            break;
                        default:
                            str1 = Lang.dialog(109, false);
                            break;
                    }
                }
            }
            else if (this.type == 54)
            {
                if (!flag7 && Main.rand.Next(2) == 0)
                    str1 = Lang.dialog(110, false);
                else if (flag10 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(237, false);
                else if (Main.bloodMoon)
                    str1 = Lang.dialog(111, false);
                else if (flag2 && Main.rand.Next(4) == 0)
                    str1 = Lang.dialog(112, false);
                else if (Main.player[Main.myPlayer].head == 24)
                {
                    str1 = Lang.dialog(113, false);
                }
                else
                {
                    switch (Main.rand.Next(6))
                    {
                        case 0:
                            str1 = Lang.dialog(114, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(115, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(116, false);
                            break;
                        case 3:
                            str1 = Lang.dialog(117, false);
                            break;
                        case 4:
                            str1 = Lang.dialog(118, false);
                            break;
                        default:
                            str1 = Lang.dialog(119, false);
                            break;
                    }
                }
            }
            else if (this.type == 105)
                str1 = Lang.dialog(120, false);
            else if (this.type == 107)
            {
                if (this.homeless)
                {
                    switch (Main.rand.Next(5))
                    {
                        case 0:
                            str1 = Lang.dialog(121, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(122, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(123, false);
                            break;
                        case 3:
                            str1 = Lang.dialog(124, false);
                            break;
                        default:
                            str1 = Lang.dialog(125, false);
                            break;
                    }
                }
                else if (flag7 && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(126, false);
                else if (flag15 && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(309, false);
                else if (!Main.dayTime)
                {
                    switch (Main.rand.Next(5))
                    {
                        case 0:
                            str1 = Lang.dialog((int)sbyte.MaxValue, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(128, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(129, false);
                            break;
                        case 3:
                            str1 = Lang.dialog(130, false);
                            break;
                        default:
                            str1 = Lang.dialog(131, false);
                            break;
                    }
                }
                else
                {
                    switch (Main.rand.Next(5))
                    {
                        case 0:
                            str1 = Lang.dialog(132, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(133, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(134, false);
                            break;
                        case 3:
                            str1 = Lang.dialog(135, false);
                            break;
                        default:
                            str1 = Lang.dialog(136, false);
                            break;
                    }
                }
            }
            else if (this.type == 106)
                str1 = Lang.dialog(137, false);
            else if (this.type == 108)
            {
                if (this.homeless)
                {
                    int num = Main.rand.Next(3);
                    if (num == 0)
                        str1 = Lang.dialog(138, false);
                    else if (num == 1 && !Main.player[Main.myPlayer].Male)
                        str1 = Lang.dialog(139, false);
                    else if (num == 1)
                        str1 = Lang.dialog(140, false);
                    else if (num == 2)
                        str1 = Lang.dialog(141, false);
                }
                else if (Main.player[Main.myPlayer].Male && flag17 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(142, false);
                else if (Main.player[Main.myPlayer].Male && flag6 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(143, false);
                else if (Main.player[Main.myPlayer].Male && flag8 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(144, false);
                else if (!Main.player[Main.myPlayer].Male && flag2 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(145, false);
                else if (!Main.player[Main.myPlayer].Male && flag7 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(146, false);
                else if (!Main.player[Main.myPlayer].Male && flag4 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(147, false);
                else if (!Main.dayTime)
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            str1 = Lang.dialog(148, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(149, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(150, false);
                            break;
                    }
                }
                else
                {
                    switch (Main.rand.Next(5))
                    {
                        case 0:
                            str1 = Lang.dialog(151, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(152, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(153, false);
                            break;
                        case 3:
                            str1 = Lang.dialog(154, false);
                            break;
                        default:
                            str1 = Lang.dialog(155, false);
                            break;
                    }
                }
            }
            else if (this.type == 123)
                str1 = Lang.dialog(156, false);
            else if (this.type == 124)
            {
                if (this.homeless)
                {
                    switch (Main.rand.Next(4))
                    {
                        case 0:
                            str1 = Lang.dialog(157, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(158, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(159, false);
                            break;
                        default:
                            str1 = Lang.dialog(160, false);
                            break;
                    }
                }
                else if (Main.bloodMoon)
                {
                    switch (Main.rand.Next(4))
                    {
                        case 0:
                            str1 = Lang.dialog(161, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(162, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(163, false);
                            break;
                        default:
                            str1 = Lang.dialog(164, false);
                            break;
                    }
                }
                else if (flag8 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(165, false);
                else if (flag3 && Main.rand.Next(6) == 0)
                {
                    str1 = Lang.dialog(166, false);
                }
                else
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            str1 = Lang.dialog(167, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(168, false);
                            break;
                        default:
                            str1 = Lang.dialog(169, false);
                            break;
                    }
                }
            }
            else if (this.type == 22)
            {
                if (Main.bloodMoon)
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            str1 = Lang.dialog(170, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(171, false);
                            break;
                        default:
                            str1 = Lang.dialog(172, false);
                            break;
                    }
                }
                else if (!Main.dayTime)
                {
                    str1 = Lang.dialog(173, false);
                }
                else
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            str1 = Lang.dialog(174, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(175, false);
                            break;
                        default:
                            str1 = Lang.dialog(176, false);
                            break;
                    }
                }
            }
            else if (this.type == 142)
            {
                switch (Main.rand.Next(3))
                {
                    case 0:
                        str1 = Lang.dialog(224, false);
                        break;
                    case 1:
                        str1 = Lang.dialog(225, false);
                        break;
                    case 2:
                        str1 = Lang.dialog(226, false);
                        break;
                }
            }
            else if (this.type == 160)
            {
                int num = Main.rand.Next(6);
                if (flag4 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(232, false);
                else if (flag9 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(236, false);
                else if (num == 0)
                    str1 = Lang.dialog(231, false);
                else if (num == 1)
                    str1 = Lang.dialog(233, false);
                else if (num == 2)
                    str1 = Lang.dialog(234, false);
                else if (num == 3)
                    str1 = Lang.dialog(235, false);
                else if (num == 4)
                    str1 = Lang.dialog(240, false);
                else if (num == 5)
                    str1 = Lang.dialog(241, false);
            }
            else if (this.type == 178)
            {
                int num = Main.rand.Next(5);
                if (Main.bloodMoon && Main.rand.Next(3) == 0)
                    str1 = Lang.dialog(245, false);
                else if (flag13 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(246, false);
                else if (flag12 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(247, false);
                else if (num == 0)
                    str1 = Lang.dialog(242, false);
                else if (num == 1)
                    str1 = Lang.dialog(243, false);
                else if (num == 2)
                    str1 = Lang.dialog(244, false);
                else if (num == 3)
                    str1 = Lang.dialog(248, false);
                else if (num == 4)
                    str1 = Lang.dialog(249, false);
            }
            else if (this.type == 207)
            {
                int num = Main.rand.Next(3);
                if (flag12 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(260, false);
                else if (num == 0)
                    str1 = Lang.dialog(257, false);
                else if (num == 1)
                    str1 = Lang.dialog(258, false);
                else if (num == 2)
                    str1 = Lang.dialog(259, false);
            }
            else if (this.type == 208)
            {
                int num = Main.rand.Next(7);
                if (Main.player[Main.myPlayer].Male && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(268, false);
                else if (flag15 && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(310, false);
                else if (num == 0)
                    str1 = Lang.dialog(265, false);
                else if (num == 1)
                    str1 = Lang.dialog(266, false);
                else if (num == 2)
                    str1 = Lang.dialog(267, false);
                else if (num == 3)
                    str1 = Lang.dialog(269, false);
                else if (num == 4)
                    str1 = Lang.dialog(270, false);
                else if (num == 5)
                    str1 = Lang.dialog(271, false);
                else if (num == 6)
                    str1 = Lang.dialog(272, false);
            }
            else if (this.type == 209)
            {
                int num = Main.rand.Next(5);
                if (flag12 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(284, false);
                else if (flag11 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(283, false);
                else if (num == 0)
                    str1 = Lang.dialog(280, false);
                else if (num == 1)
                    str1 = Lang.dialog(281, false);
                else if (num == 2)
                    str1 = Lang.dialog(282, false);
                else if (num == 3)
                    str1 = Lang.dialog(285, false);
                else if (num == 4)
                    str1 = Lang.dialog(286, false);
            }
            else if (this.type == 227)
            {
                int num = Main.rand.Next(5);
                if (Main.hardMode && Main.rand.Next(7) == 0)
                    str1 = Lang.dialog(250, false);
                else if (flag14 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(251, false);
                else if (num == 0)
                    str1 = Lang.dialog(252, false);
                else if (num == 1)
                    str1 = Lang.dialog(253, false);
                else if (num == 2)
                    str1 = Lang.dialog(254, false);
                else if (num == 3)
                    str1 = Lang.dialog((int)byte.MaxValue, false);
                else if (num == 4)
                    str1 = Lang.dialog(256, false);
            }
            else if (this.type == 228)
            {
                int num = Main.rand.Next(3);
                if (flag2 && Main.rand.Next(6) == 0)
                    str1 = Lang.dialog(263, false);
                else if (num == 0)
                    str1 = Lang.dialog(261, false);
                else if (num == 1)
                    str1 = Lang.dialog(262, false);
                else if (num == 2)
                    str1 = Lang.dialog(264, false);
            }
            else if (this.type == 229)
            {
                int num = Main.rand.Next(6);
                if (!Main.player[Main.myPlayer].Male && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(276, false);
                else if (num == 0)
                    str1 = Lang.dialog(273, false);
                else if (num == 1)
                    str1 = Lang.dialog(274, false);
                else if (num == 2)
                    str1 = Lang.dialog(275, false);
                else if (num == 3)
                    str1 = Lang.dialog(277, false);
                else if (num == 4)
                    str1 = Lang.dialog(278, false);
                else if (num == 5)
                    str1 = Lang.dialog(279, false);
            }
            else if (this.type == 354)
                str1 = Lang.dialog(Main.rand.Next(315, 319), false);
            else if (this.type == 353)
            {
                if (Main.bloodMoon)
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            str1 = Lang.dialog(304, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(305, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(306, false);
                            break;
                    }
                }
                else if (Main.dayTime && Main.time < 16200.0 && Main.rand.Next(3) == 0)
                    str1 = Lang.dialog(311, false);
                else if (Main.player[Main.myPlayer].Male && Main.rand.Next(3) == 0)
                {
                    switch (Main.rand.Next(2))
                    {
                        case 0:
                            str1 = Lang.dialog(293, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(300, false);
                            break;
                    }
                }
                else if (!Main.player[Main.myPlayer].Male && Main.rand.Next(3) == 0)
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            str1 = Lang.dialog(291, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(292, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(312, false);
                            break;
                    }
                }
                else if (flag14 && flag7 && (flag2 && flag3) && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(307, false);
                else if (flag14 && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(302, false);
                else if (flag6 && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(303, false);
                else if (flag13 && Main.rand.Next(5) == 0)
                    str1 = Lang.dialog(308, false);
                else if (Main.moonPhase < 3)
                {
                    switch (Main.rand.Next(5))
                    {
                        case 0:
                            str1 = Lang.dialog(287, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(288, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(289, false);
                            break;
                        case 3:
                            str1 = Lang.dialog(290, false);
                            break;
                        case 4:
                            str1 = Lang.dialog(294, false);
                            break;
                    }
                }
                else if (Main.moonPhase < 6)
                {
                    switch (Main.rand.Next(4))
                    {
                        case 0:
                            str1 = Lang.dialog(295, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(296, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(297, false);
                            break;
                        case 3:
                            str1 = Lang.dialog(298, false);
                            break;
                    }
                }
                else
                {
                    switch (Main.rand.Next(4))
                    {
                        case 0:
                            str1 = Lang.dialog(299, false);
                            break;
                        case 1:
                            str1 = Lang.dialog(301, false);
                            break;
                        case 2:
                            str1 = Lang.dialog(313, false);
                            break;
                        case 3:
                            str1 = Lang.dialog(314, false);
                            break;
                    }
                }
            }
            else if (this.type == 368)
                str1 = !flag16 || Main.rand.Next(5) != 0 ? (!flag1 || Main.rand.Next(5) != 0 ? (!flag9 || Main.rand.Next(5) != 0 ? Lang.dialog(Main.rand.Next(322, 331), false) : Lang.dialog(321, false)) : Lang.dialog(320, false)) : Lang.dialog(319, false);
            else if (this.type == 376)
                str1 = Lang.dialog(Main.rand.Next(353, 356), false);
            else if (this.type == 369)
                str1 = !Main.bloodMoon ? (Main.anglerQuestFinished ? (!flag4 || Main.rand.Next(5) != 0 ? Lang.dialog(Main.rand.Next(338, 347), false) : Lang.dialog(347, false)) : Lang.dialog(Main.rand.Next(334, 338), false)) : (Main.anglerQuestFinished ? Lang.dialog(Main.rand.Next(350, 353), false) : Lang.dialog(Main.rand.Next(348, 350), false));
            else if (this.type == 453)
                str1 = Lang.dialog(Main.rand.Next(356, 364), false);
            else if (this.type == 441)
            {
                if (Main.rand.Next(6) == 0 && flag4)
                    str2 = Lang.dialog(371, false);
                if (Main.rand.Next(6) == 0 && flag3)
                    str2 = Lang.dialog(372, false);
                if (Main.rand.Next(6) == 0 && flag6)
                    str2 = Lang.dialog(373, false);
                str1 = Main.rand.Next(6) != 0 || !flag1 ? Lang.dialog(Main.rand.Next(364, 370), false) : Lang.dialog(374, false);
            }
            return str1;
        }

        public object Clone()
        {
            return this.MemberwiseClone();
        }

        public void CheckDrowning()
        {
            bool flag = Collision.DrownCollision(this.position, this.width, this.height, 1f);
            if (Main.netMode != 1)
            {
                if (flag)
                {
                    if (++this.breathCounter >= 7)
                    {
                        this.breathCounter = 0;
                        --this.breath;
                        if (this.breath <= 0)
                        {
                            this.friendlyRegen = 0;
                            this.breath = 0;
                            this.life -= 2;
                            if (this.life % 24 < 2)
                                this.netUpdate = true;
                            if (this.life <= 0)
                            {
                                this.life = 1;
                                this.StrikeNPCNoInteraction(2, 0.0f, 0, false, false, false);
                                if (Main.netMode != 0)
                                    NetMessage.SendData(28, -1, -1, "", this.whoAmI, 2f, 0.0f, 0.0f, 0, 0, 0);
                            }
                        }
                    }
                }
                else
                {
                    this.breath += 3;
                    if (this.breath > 200)
                        this.breath = 200;
                    this.breathCounter = 0;
                }
            }
            if (!flag || Main.rand.Next(20) != 0 || (this.lavaWet || this.honeyWet))
                return;
            int num1 = 0;
            int num2 = 0;
            if (this.type == 369)
                num2 = 8;
            Dust.NewDust(new Vector2(this.position.X + (float)((10 + num1) * this.direction), (float)((double)this.position.Y + (double)num2 + 4.0)), this.width - 8, 8, 34, 0.0f, 0.0f, 0, new Color(), 1.2f);
        }

        public void TryPortalJumping()
        {
            if (!this.townNPC || Main.netMode == 1)
                return;
            PortalHelper.TryGoingThroughPortals((Entity)this);
        }

        public override string ToString()
        {
            return "name:" + (object)this.name + ", active:" + (string)(object)(this.active ? 1 : 0) + ", whoAmI:" + (string)(object)this.whoAmI;
        }
    }
}
