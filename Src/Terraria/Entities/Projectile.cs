// Projectile

using Microsoft.Xna.Framework;
using System;
using GameManager.GameContent;
using GameManager.GameContent.Achievements;
using GameManager.Graphics.Shaders;
using GameManager.ID;

namespace GameManager
{
    public class Projectile : Entity
    {
        public static int maxAI = 2;
        public float scale = 1f;
        public int owner = 255;
        public float[] ai = new float[maxAI];
        public float[] localAI = new float[maxAI];
        public float stepSpeed = 1f;
        public int spriteDirection = 1;
        public int penetrate = 1;
        private int[] npcImmune = new int[200];
        public int maxPenetrate = 1;
        public Vector2[] oldPos = new Vector2[10];
        public float[] oldRot = new float[10];
        public int[] oldSpriteDirection = new int[10];
        public int[] playerImmune = new int[255];
        public string miscText = "";
        public bool arrow;
        public int numHits;
        public bool bobber;
        public bool netImportant;
        public bool noDropItem;
        public bool counterweight;
        public float rotation;
        public int type;
        public int alpha;
        public short glowMask;
        public float gfxOffY;
        public int aiStyle;
        public int timeLeft;
        public int soundDelay;
        public int damage;
        public bool hostile;
        public float knockBack;
        public bool friendly;
        private bool updatedNPCImmunity;
        public int identity;
        public float light;
        public bool netUpdate;
        public bool netUpdate2;
        public int netSpam;
        public bool minion;
        public float minionSlots;
        public int minionPos;
        public int restrikeDelay;
        public bool tileCollide;
        public int extraUpdates;
        public int numUpdates;
        public bool ignoreWater;
        public bool hide;
        public bool ownerHitCheck;
        public bool melee;
        public bool ranged;
        public bool thrown;
        public bool magic;
        public bool coldDamage;
        public bool noEnchantments;
        public bool trap;
        public bool npcProj;
        public int frameCounter;
        public int frame;
        public bool manualDirectionChange;

        public float Opacity
        {
            get {return (float)(1.0 - alpha / 255);}
            set {alpha = (int)MathHelper.Clamp((float)((1.0 - value) * 255), 0.0f, 255);}
        }

        public int MaxUpdates
        {
            get {return extraUpdates + 1;}
            set {extraUpdates = value - 1;}
        }

        public void SetDefaults(int Type)
        {
            counterweight = false;
            arrow = false;
            bobber = false;
            numHits = 0;
            netImportant = false;
            manualDirectionChange = false;
            int newSize = 10;
            if (Type >= 0)
                newSize = ProjectileID.Sets.TrailCacheLength[Type];
            if (newSize != oldPos.Length)
            {
                Array.Resize(ref oldPos, newSize);
                Array.Resize(ref oldRot, newSize);
                Array.Resize(ref oldSpriteDirection, newSize);
            }
            for (int index = 0; index < oldPos.Length; ++index)
            {
                oldPos[index].X = 0.0f;
                oldPos[index].Y = 0.0f;
                oldRot[index] = 0.0f;
                oldSpriteDirection[index] = 0;
            }
            for (int index = 0; index < maxAI; ++index)
            {
                ai[index] = 0.0f;
                localAI[index] = 0.0f;
            }
            for (int index = 0; index < 255; ++index)
                playerImmune[index] = 0;
            for (int index = 0; index < 200; ++index)
                npcImmune[index] = 0;
            noDropItem = false;
            minion = false;
            minionSlots = 0.0f;
            soundDelay = 0;
            spriteDirection = 1;
            melee = false;
            ranged = false;
            thrown = false;
            magic = false;
            ownerHitCheck = false;
            hide = false;
            lavaWet = false;
            wetCount = 0;
            wet = false;
            ignoreWater = false;
            hostile = false;
            netUpdate = false;
            netUpdate2 = false;
            netSpam = 0;
            numUpdates = 0;
            extraUpdates = 0;
            identity = 0;
            restrikeDelay = 0;
            light = 0.0f;
            penetrate = 1;
            tileCollide = true;
            position = Vector2.Zero;
            velocity = Vector2.Zero;
            aiStyle = 0;
            alpha = 0;
            glowMask = -1;
            type = Type;
            active = true;
            rotation = 0.0f;
            scale = 1f;
            owner = 255;
            timeLeft = 3600;
            name = "";
            friendly = false;
            damage = 0;
            knockBack = 0.0f;
            miscText = "";
            coldDamage = false;
            noEnchantments = false;
            trap = false;
            npcProj = false;
            frame = 0;
            frameCounter = 0;
            if (type == 1)
            {
                arrow = true;
                name = "Wooden Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                ranged = true;
            }
            else if (type == 2)
            {
                arrow = true;
                name = "Fire Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                light = 1f;
                ranged = true;
            }
            else if (type == 3)
            {
                name = "Shuriken";
                width = 22;
                height = 22;
                aiStyle = 2;
                friendly = true;
                penetrate = 4;
                thrown = true;
            }
            else if (type == 4)
            {
                arrow = true;
                name = "Unholy Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                light = 0.35f;
                penetrate = 5;
                ranged = true;
            }
            else if (type == 5)
            {
                arrow = true;
                name = "Jester's Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                light = 0.4f;
                penetrate = -1;
                timeLeft = 120;
                alpha = 100;
                ignoreWater = true;
                ranged = true;
                extraUpdates = 1;
            }
            else if (type == 6)
            {
                name = "Enchanted Boomerang";
                width = 22;
                height = 22;
                aiStyle = 3;
                friendly = true;
                penetrate = -1;
                melee = true;
                light = 0.4f;
            }
            else if (type == 7 || type == 8)
            {
                name = "Vilethorn";
                width = 28;
                height = 28;
                aiStyle = 4;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                alpha = 255;
                ignoreWater = true;
                magic = true;
            }
            else if (type == 9)
            {
                name = "Starfury";
                width = 24;
                height = 24;
                aiStyle = 5;
                friendly = true;
                penetrate = 2;
                alpha = 50;
                scale = 0.8f;
                tileCollide = false;
                melee = true;
            }
            else if (type == 10)
            {
                name = "Purification Powder";
                width = 64;
                height = 64;
                aiStyle = 6;
                friendly = true;
                tileCollide = false;
                penetrate = -1;
                alpha = 255;
                ignoreWater = true;
            }
            else if (type == 11)
            {
                name = "Vile Powder";
                width = 48;
                height = 48;
                aiStyle = 6;
                friendly = true;
                tileCollide = false;
                penetrate = -1;
                alpha = 255;
                ignoreWater = true;
            }
            else if (type == 12)
            {
                name = "Falling Star";
                width = 16;
                height = 16;
                aiStyle = 5;
                friendly = true;
                penetrate = -1;
                alpha = 50;
                light = 1f;
            }
            else if (type == 13)
            {
                netImportant = true;
                name = "Hook";
                width = 18;
                height = 18;
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft *= 10;
            }
            else if (type == 14)
            {
                name = "Bullet";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                light = 0.5f;
                alpha = 255;
                scale = 1.2f;
                timeLeft = 600;
                ranged = true;
                extraUpdates = 1;
            }
            else if (type == 15)
            {
                name = "Ball of Fire";
                width = 16;
                height = 16;
                aiStyle = 8;
                friendly = true;
                light = 0.8f;
                alpha = 100;
                magic = true;
            }
            else if (type == 16)
            {
                name = "Magic Missile";
                width = 10;
                height = 10;
                aiStyle = 9;
                friendly = true;
                light = 0.8f;
                alpha = 100;
                magic = true;
            }
            else if (type == 17)
            {
                name = "Dirt Ball";
                width = 10;
                height = 10;
                aiStyle = 10;
                friendly = true;
                ignoreWater = true;
            }
            else if (type == 18)
            {
                netImportant = true;
                name = "Shadow Orb";
                width = 32;
                height = 32;
                aiStyle = 11;
                friendly = true;
                light = 0.9f;
                alpha = 150;
                tileCollide = false;
                penetrate = -1;
                timeLeft *= 5;
                ignoreWater = true;
                scale = 0.8f;
            }
            else if (type == 19)
            {
                name = "Flamarang";
                width = 22;
                height = 22;
                aiStyle = 3;
                friendly = true;
                penetrate = -1;
                light = 1f;
                melee = true;
            }
            else if (type == 20)
            {
                name = "Green Laser";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 3;
                light = 0.75f;
                alpha = 255;
                extraUpdates = 2;
                scale = 1.4f;
                timeLeft = 600;
                magic = true;
            }
            else if (type == 21)
            {
                name = "Bone";
                width = 16;
                height = 16;
                aiStyle = 2;
                scale = 1.2f;
                friendly = true;
                thrown = true;
            }
            else if (type == 22)
            {
                name = "Water Stream";
                width = 18;
                height = 18;
                aiStyle = 12;
                friendly = true;
                alpha = 255;
                penetrate = -1;
                extraUpdates = 2;
                ignoreWater = true;
                magic = true;
            }
            else if (type == 23)
            {
                name = "Harpoon";
                width = 4;
                height = 4;
                aiStyle = 13;
                friendly = true;
                penetrate = -1;
                alpha = 255;
                ranged = true;
            }
            else if (type == 24)
            {
                name = "Spiky Ball";
                width = 14;
                height = 14;
                aiStyle = 14;
                friendly = true;
                penetrate = 6;
                thrown = true;
            }
            else if (type == 25)
            {
                name = "Ball 'O Hurt";
                width = 22;
                height = 22;
                aiStyle = 15;
                friendly = true;
                penetrate = -1;
                melee = true;
                scale = 0.8f;
            }
            else if (type == 26)
            {
                name = "Blue Moon";
                width = 22;
                height = 22;
                aiStyle = 15;
                friendly = true;
                penetrate = -1;
                melee = true;
                scale = 0.8f;
            }
            else if (type == 27)
            {
                name = "Water Bolt";
                width = 16;
                height = 16;
                aiStyle = 8;
                friendly = true;
                alpha = 255;
                timeLeft /= 2;
                penetrate = 10;
                magic = true;
            }
            else if (type == 28)
            {
                name = "Bomb";
                width = 22;
                height = 22;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
            }
            else if (type == 29)
            {
                name = "Dynamite";
                width = 10;
                height = 10;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
            }
            else if (type == 30)
            {
                name = "Grenade";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                thrown = true;
            }
            else if (type == 31)
            {
                name = "Sand Ball";
                knockBack = 6f;
                width = 10;
                height = 10;
                aiStyle = 10;
                friendly = true;
                hostile = true;
                penetrate = -1;
            }
            else if (type == 32)
            {
                name = "Ivy Whip";
                width = 18;
                height = 18;
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft *= 10;
            }
            else if (type == 33)
            {
                name = "Thorn Chakram";
                width = 38;
                height = 38;
                aiStyle = 3;
                friendly = true;
                scale = 0.9f;
                penetrate = -1;
                melee = true;
            }
            else if (type == 34)
            {
                name = "Flamelash";
                width = 14;
                height = 14;
                aiStyle = 9;
                friendly = true;
                light = 0.8f;
                alpha = 100;
                penetrate = 1;
                magic = true;
            }
            else if (type == 35)
            {
                name = "Sunfury";
                width = 22;
                height = 22;
                aiStyle = 15;
                friendly = true;
                penetrate = -1;
                melee = true;
                scale = 0.8f;
            }
            else if (type == 36)
            {
                name = "Meteor Shot";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 2;
                light = 0.6f;
                alpha = 255;
                scale = 1.4f;
                timeLeft = 600;
                ranged = true;
                extraUpdates = 1;
            }
            else if (type == 37)
            {
                name = "Sticky Bomb";
                width = 22;
                height = 22;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
            }
            else if (type == 38)
            {
                name = "Harpy Feather";
                width = 14;
                height = 14;
                aiStyle = 0;
                hostile = true;
                penetrate = -1;
                aiStyle = 1;
                tileCollide = true;
            }
            else if (type == 39)
            {
                name = "Mud Ball";
                knockBack = 6f;
                width = 10;
                height = 10;
                aiStyle = 10;
                friendly = true;
                hostile = true;
                penetrate = -1;
            }
            else if (type == 40)
            {
                name = "Ash Ball";
                knockBack = 6f;
                width = 10;
                height = 10;
                aiStyle = 10;
                friendly = true;
                hostile = true;
                penetrate = -1;
            }
            else if (type == 41)
            {
                arrow = true;
                name = "Hellfire Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                penetrate = -1;
                ranged = true;
                light = 0.3f;
            }
            else if (type == 42)
            {
                name = "Sand Ball";
                knockBack = 8f;
                width = 10;
                height = 10;
                aiStyle = 10;
                friendly = true;
                extraUpdates = 1;
            }
            else if (type == 43)
            {
                name = "Tombstone";
                knockBack = 12f;
                width = 24;
                height = 24;
                aiStyle = 17;
                penetrate = -1;
            }
            else if (type == 44)
            {
                name = "Demon Sickle";
                width = 48;
                height = 48;
                alpha = 100;
                light = 0.2f;
                aiStyle = 18;
                hostile = true;
                penetrate = -1;
                tileCollide = true;
                scale = 0.9f;
            }
            else if (type == 45)
            {
                name = "Demon Scythe";
                width = 48;
                height = 48;
                alpha = 100;
                light = 0.2f;
                aiStyle = 18;
                friendly = true;
                penetrate = 5;
                tileCollide = true;
                scale = 0.9f;
                magic = true;
            }
            else if (type == 46)
            {
                name = "Dark Lance";
                width = 20;
                height = 20;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                scale = 1.1f;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 47)
            {
                name = "Trident";
                width = 18;
                height = 18;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                scale = 1.1f;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 48)
            {
                name = "Throwing Knife";
                width = 12;
                height = 12;
                aiStyle = 2;
                friendly = true;
                penetrate = 2;
                thrown = true;
            }
            else if (type == 49)
            {
                name = "Spear";
                width = 18;
                height = 18;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                scale = 1.2f;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 50)
            {
                netImportant = true;
                name = "Glowstick";
                width = 6;
                height = 6;
                aiStyle = 14;
                penetrate = -1;
                alpha = 75;
                light = 1f;
                timeLeft *= 5;
            }
            else if (type == 51)
            {
                name = "Seed";
                width = 8;
                height = 8;
                aiStyle = 1;
                friendly = true;
            }
            else if (type == 52)
            {
                name = "Wooden Boomerang";
                width = 22;
                height = 22;
                aiStyle = 3;
                friendly = true;
                penetrate = -1;
                melee = true;
            }
            else if (type == 53)
            {
                netImportant = true;
                name = "Sticky Glowstick";
                width = 6;
                height = 6;
                aiStyle = 14;
                penetrate = -1;
                alpha = 75;
                light = 1f;
                timeLeft *= 5;
                tileCollide = false;
            }
            else if (type == 54)
            {
                name = "Poisoned Knife";
                width = 12;
                height = 12;
                aiStyle = 2;
                friendly = true;
                penetrate = 2;
                thrown = true;
            }
            else if (type == 55)
            {
                name = "Stinger";
                width = 10;
                height = 10;
                aiStyle = 0;
                hostile = true;
                penetrate = -1;
                aiStyle = 1;
                tileCollide = true;
            }
            else if (type == 56)
            {
                name = "Ebonsand Ball";
                knockBack = 6f;
                width = 10;
                height = 10;
                aiStyle = 10;
                friendly = true;
                hostile = true;
                penetrate = -1;
            }
            else if (type == 57)
            {
                name = "Cobalt Chainsaw";
                width = 18;
                height = 18;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 58)
            {
                name = "Mythril Chainsaw";
                width = 18;
                height = 18;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                scale = 1.08f;
            }
            else if (type == 59)
            {
                name = "Cobalt Drill";
                width = 22;
                height = 22;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                scale = 0.9f;
            }
            else if (type == 60)
            {
                name = "Mythril Drill";
                width = 22;
                height = 22;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                scale = 0.9f;
            }
            else if (type == 61)
            {
                name = "Adamantite Chainsaw";
                width = 18;
                height = 18;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                scale = 1.16f;
            }
            else if (type == 62)
            {
                name = "Adamantite Drill";
                width = 22;
                height = 22;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                scale = 0.9f;
            }
            else if (type == 63)
            {
                name = "The Dao of Pow";
                width = 22;
                height = 22;
                aiStyle = 15;
                friendly = true;
                penetrate = -1;
                melee = true;
            }
            else if (type == 64)
            {
                name = "Mythril Halberd";
                width = 18;
                height = 18;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                scale = 1.25f;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 65)
            {
                name = "Ebonsand Ball";
                knockBack = 6f;
                width = 10;
                height = 10;
                aiStyle = 10;
                friendly = true;
                penetrate = -1;
                extraUpdates = 1;
            }
            else if (type == 66)
            {
                name = "Adamantite Glaive";
                width = 18;
                height = 18;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                scale = 1.27f;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 67)
            {
                name = "Pearl Sand Ball";
                knockBack = 6f;
                width = 10;
                height = 10;
                aiStyle = 10;
                friendly = true;
                hostile = true;
                penetrate = -1;
            }
            else if (type == 68)
            {
                name = "Pearl Sand Ball";
                knockBack = 6f;
                width = 10;
                height = 10;
                aiStyle = 10;
                friendly = true;
                penetrate = -1;
                extraUpdates = 1;
            }
            else if (type == 69)
            {
                name = "Holy Water";
                width = 14;
                height = 14;
                aiStyle = 2;
                friendly = true;
                penetrate = 1;
            }
            else if (type == 70)
            {
                name = "Unholy Water";
                width = 14;
                height = 14;
                aiStyle = 2;
                friendly = true;
                penetrate = 1;
            }
            else if (type == 621)
            {
                name = "Blood Water";
                width = 14;
                height = 14;
                aiStyle = 2;
                friendly = true;
                penetrate = 1;
            }
            else if (type == 71)
            {
                name = "Silt Ball";
                knockBack = 6f;
                width = 10;
                height = 10;
                aiStyle = 10;
                friendly = true;
                hostile = true;
                penetrate = -1;
            }
            else if (type == 72)
            {
                netImportant = true;
                name = "Blue Fairy";
                width = 18;
                height = 18;
                aiStyle = 11;
                friendly = true;
                light = 0.9f;
                tileCollide = false;
                penetrate = -1;
                timeLeft *= 5;
                ignoreWater = true;
                scale = 0.8f;
            }
            else if (type == 73 || type == 74)
            {
                netImportant = true;
                name = "Hook";
                width = 18;
                height = 18;
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft *= 10;
                light = 0.4f;
            }
            else if (type == 75)
            {
                name = "Happy Bomb";
                width = 22;
                height = 22;
                aiStyle = 16;
                hostile = true;
                penetrate = -1;
            }
            else if (type == 76 || type == 77 || type == 78)
            {
                if (type == 76)
                {
                    width = 10;
                    height = 22;
                }
                else if (type == 77)
                {
                    width = 18;
                    height = 24;
                }
                else
                {
                    width = 22;
                    height = 24;
                }
                name = "Note";
                aiStyle = 21;
                friendly = true;
                ranged = true;
                alpha = 100;
                light = 0.3f;
                penetrate = -1;
                timeLeft = 180;
                magic = true;
            }
            else if (type == 79)
            {
                name = "Rainbow";
                width = 10;
                height = 10;
                aiStyle = 9;
                friendly = true;
                light = 0.8f;
                alpha = 255;
                magic = true;
            }
            else if (type == 80)
            {
                name = "Ice Block";
                width = 16;
                height = 16;
                aiStyle = 22;
                friendly = true;
                magic = true;
                tileCollide = false;
                light = 0.5f;
                coldDamage = true;
            }
            else if (type == 81)
            {
                name = "Wooden Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                hostile = true;
                ranged = true;
            }
            else if (type == 82)
            {
                name = "Flaming Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                hostile = true;
                ranged = true;
            }
            else if (type == 83)
            {
                name = "Eye Laser";
                width = 4;
                height = 4;
                aiStyle = 1;
                hostile = true;
                penetrate = 3;
                light = 0.75f;
                alpha = 255;
                extraUpdates = 2;
                scale = 1.7f;
                timeLeft = 600;
                magic = true;
            }
            else if (type == 84)
            {
                name = "Pink Laser";
                width = 4;
                height = 4;
                aiStyle = 1;
                hostile = true;
                penetrate = 3;
                light = 0.75f;
                alpha = 255;
                extraUpdates = 2;
                scale = 1.2f;
                timeLeft = 600;
                magic = true;
            }
            else if (type == 85)
            {
                name = "Flames";
                width = 6;
                height = 6;
                aiStyle = 23;
                friendly = true;
                alpha = 255;
                penetrate = 3;
                extraUpdates = 2;
                ranged = true;
            }
            else if (type == 86)
            {
                netImportant = true;
                name = "Pink Fairy";
                width = 18;
                height = 18;
                aiStyle = 11;
                friendly = true;
                light = 0.9f;
                tileCollide = false;
                penetrate = -1;
                timeLeft *= 5;
                ignoreWater = true;
                scale = 0.8f;
            }
            else if (type == 87)
            {
                netImportant = true;
                name = "Pink Fairy";
                width = 18;
                height = 18;
                aiStyle = 11;
                friendly = true;
                light = 0.9f;
                tileCollide = false;
                penetrate = -1;
                timeLeft *= 5;
                ignoreWater = true;
                scale = 0.8f;
            }
            else if (type == 88)
            {
                name = "Purple Laser";
                width = 6;
                height = 6;
                aiStyle = 1;
                friendly = true;
                penetrate = 3;
                light = 0.75f;
                alpha = 255;
                extraUpdates = 4;
                scale = 1.4f;
                timeLeft = 600;
                magic = true;
            }
            else if (type == 89)
            {
                name = "Crystal Bullet";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                light = 0.5f;
                alpha = 255;
                scale = 1.2f;
                timeLeft = 600;
                ranged = true;
                extraUpdates = 1;
            }
            else if (type == 90)
            {
                name = "Crystal Shard";
                width = 6;
                height = 6;
                aiStyle = 24;
                friendly = true;
                penetrate = 1;
                light = 0.5f;
                alpha = 50;
                scale = 1.2f;
                timeLeft = 600;
                ranged = true;
                tileCollide = false;
            }
            else if (type == 91)
            {
                arrow = true;
                name = "Holy Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                ranged = true;
            }
            else if (type == 92)
            {
                name = "Hallow Star";
                width = 24;
                height = 24;
                aiStyle = 5;
                friendly = true;
                penetrate = 2;
                alpha = 50;
                scale = 0.8f;
                tileCollide = false;
                magic = true;
            }
            else if (type == 93)
            {
                light = 0.15f;
                name = "Magic Dagger";
                width = 12;
                height = 12;
                aiStyle = 2;
                friendly = true;
                penetrate = 2;
                magic = true;
            }
            else if (type == 94)
            {
                ignoreWater = true;
                name = "Crystal Storm";
                width = 8;
                height = 8;
                aiStyle = 24;
                friendly = true;
                light = 0.5f;
                alpha = 50;
                scale = 1.2f;
                timeLeft = 600;
                magic = true;
                tileCollide = true;
                penetrate = 1;
            }
            else if (type == 95)
            {
                name = "Cursed Flame";
                width = 16;
                height = 16;
                aiStyle = 8;
                friendly = true;
                light = 0.8f;
                alpha = 100;
                magic = true;
                penetrate = 2;
            }
            else if (type == 96)
            {
                name = "Cursed Flame";
                width = 16;
                height = 16;
                aiStyle = 8;
                hostile = true;
                light = 0.8f;
                alpha = 100;
                magic = true;
                penetrate = -1;
                scale = 0.9f;
                scale = 1.3f;
            }
            else if (type == 97)
            {
                name = "Cobalt Naginata";
                width = 18;
                height = 18;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                scale = 1.1f;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 98)
            {
                name = "Poison Dart";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                hostile = true;
                penetrate = -1;
                trap = true;
            }
            else if (type == 99)
            {
                name = "Boulder";
                width = 31;
                height = 31;
                aiStyle = 25;
                friendly = true;
                hostile = true;
                ranged = true;
                penetrate = -1;
                trap = true;
            }
            else if (type == 100)
            {
                name = "Death Laser";
                width = 4;
                height = 4;
                aiStyle = 1;
                hostile = true;
                penetrate = 3;
                light = 0.75f;
                alpha = 255;
                extraUpdates = 2;
                scale = 1.8f;
                timeLeft = 2700;
                magic = true;
            }
            else if (type == 101)
            {
                name = "Eye Fire";
                width = 6;
                height = 6;
                aiStyle = 23;
                hostile = true;
                alpha = 255;
                penetrate = -1;
                extraUpdates = 3;
                magic = true;
            }
            else if (type == 102)
            {
                name = "Bomb";
                width = 22;
                height = 22;
                aiStyle = 16;
                hostile = true;
                penetrate = -1;
                ranged = true;
            }
            else if (type == 103)
            {
                arrow = true;
                name = "Cursed Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                light = 1f;
                ranged = true;
            }
            else if (type == 104)
            {
                name = "Cursed Bullet";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                light = 0.5f;
                alpha = 255;
                scale = 1.2f;
                timeLeft = 600;
                ranged = true;
                extraUpdates = 1;
            }
            else if (type == 105)
            {
                name = "Gungnir";
                width = 18;
                height = 18;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                scale = 1.3f;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 106)
            {
                name = "Light Disc";
                width = 32;
                height = 32;
                aiStyle = 3;
                friendly = true;
                penetrate = -1;
                melee = true;
                light = 0.4f;
            }
            else if (type == 107)
            {
                name = "Hamdrax";
                width = 22;
                height = 22;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                scale = 1.1f;
            }
            else if (type == 108)
            {
                name = "Explosives";
                width = 260;
                height = 260;
                aiStyle = 16;
                friendly = true;
                hostile = true;
                penetrate = -1;
                tileCollide = false;
                alpha = 255;
                timeLeft = 2;
                trap = true;
            }
            else if (type == 109)
            {
                name = "Snow Ball";
                knockBack = 6f;
                width = 10;
                height = 10;
                aiStyle = 10;
                hostile = true;
                scale = 0.9f;
                penetrate = -1;
                coldDamage = true;
                thrown = true;
            }
            else if (type == 110)
            {
                name = "Bullet";
                width = 4;
                height = 4;
                aiStyle = 1;
                hostile = true;
                penetrate = -1;
                light = 0.5f;
                alpha = 255;
                scale = 1.2f;
                timeLeft = 600;
                ranged = true;
                extraUpdates = 1;
            }
            else if (type == 111)
            {
                netImportant = true;
                name = "Bunny";
                width = 18;
                height = 18;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 112)
            {
                netImportant = true;
                name = "Penguin";
                width = 18;
                height = 18;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 113)
            {
                name = "Ice Boomerang";
                width = 22;
                height = 22;
                aiStyle = 3;
                friendly = true;
                penetrate = -1;
                melee = true;
                light = 0.4f;
                coldDamage = true;
            }
            else if (type == 114)
            {
                name = "Unholy Trident";
                width = 16;
                height = 16;
                aiStyle = 27;
                magic = true;
                penetrate = 3;
                light = 0.5f;
                alpha = 255;
                friendly = true;
            }
            else if (type == 115)
            {
                name = "Unholy Trident";
                width = 16;
                height = 16;
                aiStyle = 27;
                hostile = true;
                magic = true;
                penetrate = -1;
                light = 0.5f;
                alpha = 255;
            }
            else if (type == 116)
            {
                name = "Sword Beam";
                width = 16;
                height = 16;
                aiStyle = 27;
                melee = true;
                penetrate = 1;
                light = 0.5f;
                alpha = 255;
                friendly = true;
            }
            else if (type == 117)
            {
                arrow = true;
                name = "Bone Arrow";
                extraUpdates = 2;
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                ranged = true;
            }
            else if (type == 118)
            {
                name = "Ice Bolt";
                width = 10;
                height = 10;
                aiStyle = 28;
                alpha = 255;
                melee = true;
                penetrate = 1;
                friendly = true;
                coldDamage = true;
            }
            else if (type == 119)
            {
                name = "Frost Bolt";
                width = 14;
                height = 14;
                aiStyle = 28;
                alpha = 255;
                melee = true;
                penetrate = 2;
                friendly = true;
            }
            else if (type == 120)
            {
                arrow = true;
                name = "Frost Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                ranged = true;
                coldDamage = true;
                extraUpdates = 1;
            }
            else if (type == 121)
            {
                name = "Amethyst Bolt";
                width = 10;
                height = 10;
                aiStyle = 29;
                alpha = 255;
                magic = true;
                penetrate = 1;
                friendly = true;
            }
            else if (type == 122)
            {
                name = "Topaz Bolt";
                width = 10;
                height = 10;
                aiStyle = 29;
                alpha = 255;
                magic = true;
                penetrate = 1;
                friendly = true;
            }
            else if (type == 123)
            {
                name = "Sapphire Bolt";
                width = 10;
                height = 10;
                aiStyle = 29;
                alpha = 255;
                magic = true;
                penetrate = 1;
                friendly = true;
            }
            else if (type == 124)
            {
                name = "Emerald Bolt";
                width = 10;
                height = 10;
                aiStyle = 29;
                alpha = 255;
                magic = true;
                penetrate = 2;
                friendly = true;
            }
            else if (type == 125)
            {
                name = "Ruby Bolt";
                width = 10;
                height = 10;
                aiStyle = 29;
                alpha = 255;
                magic = true;
                penetrate = 2;
                friendly = true;
            }
            else if (type == 126)
            {
                name = "Diamond Bolt";
                width = 10;
                height = 10;
                aiStyle = 29;
                alpha = 255;
                magic = true;
                penetrate = 2;
                friendly = true;
            }
            else if (type == 127)
            {
                netImportant = true;
                name = "Turtle";
                width = 22;
                height = 22;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 128)
            {
                name = "Frost Blast";
                width = 14;
                height = 14;
                aiStyle = 28;
                alpha = 255;
                penetrate = -1;
                friendly = false;
                hostile = true;
                coldDamage = true;
            }
            else if (type == 129)
            {
                name = "Rune Blast";
                width = 14;
                height = 14;
                aiStyle = 28;
                alpha = 255;
                penetrate = -1;
                friendly = false;
                hostile = true;
                tileCollide = false;
            }
            else if (type == 130)
            {
                name = "Mushroom Spear";
                width = 22;
                height = 22;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                scale = 1.2f;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 131)
            {
                name = "Mushroom";
                width = 22;
                height = 22;
                aiStyle = 30;
                friendly = true;
                penetrate = 1;
                tileCollide = false;
                melee = true;
                light = 0.5f;
            }
            else if (type == 132)
            {
                name = "Terra Beam";
                width = 16;
                height = 16;
                aiStyle = 27;
                melee = true;
                penetrate = 3;
                light = 0.5f;
                alpha = 255;
                friendly = true;
            }
            else if (type == 133)
            {
                name = "Grenade";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                ranged = true;
            }
            else if (type == 134)
            {
                name = "Rocket";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                ranged = true;
            }
            else if (type == 135)
            {
                name = "Proximity Mine";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                ranged = true;
            }
            else if (type == 136)
            {
                name = "Grenade";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                ranged = true;
            }
            else if (type == 137)
            {
                name = "Rocket";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                ranged = true;
            }
            else if (type == 138)
            {
                name = "Proximity Mine";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                ranged = true;
            }
            else if (type == 139)
            {
                name = "Grenade";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                ranged = true;
            }
            else if (type == 140)
            {
                name = "Rocket";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                ranged = true;
            }
            else if (type == 141)
            {
                name = "Proximity Mine";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                ranged = true;
            }
            else if (type == 142)
            {
                name = "Grenade";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                ranged = true;
            }
            else if (type == 143)
            {
                name = "Rocket";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                ranged = true;
            }
            else if (type == 144)
            {
                name = "Proximity Mine";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                ranged = true;
            }
            else if (type == 145)
            {
                name = "Pure Spray";
                width = 6;
                height = 6;
                aiStyle = 31;
                friendly = true;
                alpha = 255;
                penetrate = -1;
                extraUpdates = 2;
                tileCollide = false;
                ignoreWater = true;
            }
            else if (type == 146)
            {
                name = "Hallow Spray";
                width = 6;
                height = 6;
                aiStyle = 31;
                friendly = true;
                alpha = 255;
                penetrate = -1;
                extraUpdates = 2;
                tileCollide = false;
                ignoreWater = true;
            }
            else if (type == 147)
            {
                name = "Corrupt Spray";
                width = 6;
                height = 6;
                aiStyle = 31;
                friendly = true;
                alpha = 255;
                penetrate = -1;
                extraUpdates = 2;
                tileCollide = false;
                ignoreWater = true;
            }
            else if (type == 148)
            {
                name = "Mushroom Spray";
                width = 6;
                height = 6;
                aiStyle = 31;
                friendly = true;
                alpha = 255;
                penetrate = -1;
                extraUpdates = 2;
                tileCollide = false;
                ignoreWater = true;
            }
            else if (type == 149)
            {
                name = "Crimson Spray";
                width = 6;
                height = 6;
                aiStyle = 31;
                friendly = true;
                alpha = 255;
                penetrate = -1;
                extraUpdates = 2;
                tileCollide = false;
                ignoreWater = true;
            }
            else if (type == 150 || type == 151 || type == 152)
            {
                name = "Nettle Burst";
                width = 28;
                height = 28;
                aiStyle = 4;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                alpha = 255;
                ignoreWater = true;
                magic = true;
            }
            else if (type == 153)
            {
                name = "The Rotted Fork";
                width = 18;
                height = 18;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                scale = 1.1f;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 154)
            {
                name = "The Meatball";
                width = 22;
                height = 22;
                aiStyle = 15;
                friendly = true;
                penetrate = -1;
                melee = true;
                scale = 0.8f;
            }
            else if (type == 155)
            {
                netImportant = true;
                name = "Beach Ball";
                width = 44;
                height = 44;
                aiStyle = 32;
                friendly = true;
            }
            else if (type == 156)
            {
                name = "Light Beam";
                width = 16;
                height = 16;
                aiStyle = 27;
                melee = true;
                light = 0.5f;
                alpha = 255;
                friendly = true;
            }
            else if (type == 157)
            {
                name = "Night Beam";
                width = 32;
                height = 32;
                aiStyle = 27;
                melee = true;
                light = 0.5f;
                alpha = 255;
                friendly = true;
                scale = 1.2f;
            }
            else if (type == 158)
            {
                name = "Copper Coin";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                alpha = 255;
                timeLeft = 600;
                ranged = true;
                extraUpdates = 1;
            }
            else if (type == 159)
            {
                name = "Silver Coin";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                alpha = 255;
                timeLeft = 600;
                ranged = true;
                extraUpdates = 1;
            }
            else if (type == 160)
            {
                name = "Gold Coin";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                alpha = 255;
                timeLeft = 600;
                ranged = true;
                extraUpdates = 1;
            }
            else if (type == 161)
            {
                name = "Platinum Coin";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                alpha = 255;
                timeLeft = 600;
                ranged = true;
                extraUpdates = 1;
            }
            else if (type == 162)
            {
                name = "Cannonball";
                width = 16;
                height = 16;
                aiStyle = 2;
                friendly = true;
                penetrate = 4;
                alpha = 255;
            }
            else if (type == 163)
            {
                netImportant = true;
                name = "Flare";
                width = 6;
                height = 6;
                aiStyle = 33;
                friendly = true;
                penetrate = -1;
                alpha = 255;
                timeLeft = 36000;
            }
            else if (type == 164)
            {
                name = "Landmine";
                width = 128;
                height = 128;
                aiStyle = 16;
                friendly = true;
                hostile = true;
                penetrate = -1;
                tileCollide = false;
                alpha = 255;
                timeLeft = 2;
            }
            else if (type == 165)
            {
                netImportant = true;
                name = "Web";
                width = 12;
                height = 12;
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft *= 10;
            }
            else if (type == 166)
            {
                name = "Snow Ball";
                width = 14;
                height = 14;
                aiStyle = 2;
                friendly = true;
                ranged = true;
                coldDamage = true;
            }
            else if (type == 167 || type == 168 || (type == 169 || type == 170))
            {
                name = "Rocket";
                width = 14;
                height = 14;
                aiStyle = 34;
                friendly = true;
                ranged = true;
                timeLeft = 45;
            }
            else if (type == 171 || type == 505 || type == 506)
            {
                name = "Rope Coil";
                width = 14;
                height = 14;
                aiStyle = 35;
                penetrate = -1;
                tileCollide = false;
                timeLeft = 400;
            }
            else if (type == 172)
            {
                arrow = true;
                name = "Frostburn Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                light = 1f;
                ranged = true;
                coldDamage = true;
            }
            else if (type == 173)
            {
                name = "Enchanted Beam";
                width = 16;
                height = 16;
                aiStyle = 27;
                melee = true;
                penetrate = 1;
                light = 0.2f;
                alpha = 255;
                friendly = true;
            }
            else if (type == 174)
            {
                name = "Ice Spike";
                alpha = 255;
                width = 6;
                height = 6;
                aiStyle = 1;
                hostile = true;
                penetrate = -1;
                coldDamage = true;
            }
            else if (type == 175)
            {
                name = "Baby Eater";
                width = 34;
                height = 34;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 176)
            {
                name = "Jungle Spike";
                alpha = 255;
                width = 6;
                height = 6;
                aiStyle = 1;
                hostile = true;
                penetrate = -1;
            }
            else if (type == 177)
            {
                name = "Icewater Spit";
                width = 10;
                height = 10;
                aiStyle = 28;
                alpha = 255;
                penetrate = -1;
                friendly = false;
                hostile = true;
                coldDamage = true;
            }
            else if (type == 178)
            {
                name = "Confetti";
                width = 10;
                height = 10;
                aiStyle = 1;
                alpha = 255;
                penetrate = -1;
                timeLeft = 2;
            }
            else if (type == 179)
            {
                name = "Slush Ball";
                knockBack = 6f;
                width = 10;
                height = 10;
                aiStyle = 10;
                friendly = true;
                hostile = true;
                penetrate = -1;
            }
            else if (type == 180)
            {
                name = "Bullet";
                width = 4;
                height = 4;
                aiStyle = 1;
                hostile = true;
                penetrate = -1;
                light = 0.5f;
                alpha = 255;
                scale = 1.2f;
                timeLeft = 600;
                ranged = true;
                extraUpdates = 1;
            }
            else if (type == 181)
            {
                name = "Bee";
                width = 8;
                height = 8;
                aiStyle = 36;
                friendly = true;
                penetrate = 3;
                alpha = 255;
                timeLeft = 600;
                extraUpdates = 3;
            }
            else if (type == 182)
            {
                light = 0.15f;
                name = "Possessed Hatchet";
                width = 30;
                height = 30;
                aiStyle = 3;
                friendly = true;
                penetrate = 10;
                melee = true;
                extraUpdates = 1;
            }
            else if (type == 183)
            {
                name = "Beenade";
                width = 14;
                height = 22;
                aiStyle = 14;
                penetrate = 1;
                ranged = true;
                timeLeft = 180;
                thrown = true;
                friendly = true;
            }
            else if (type == 184)
            {
                name = "Poison Dart";
                width = 6;
                height = 6;
                aiStyle = 1;
                friendly = true;
                hostile = true;
                penetrate = -1;
                trap = true;
            }
            else if (type == 185)
            {
                name = "Spiky Ball";
                width = 14;
                height = 14;
                aiStyle = 14;
                friendly = true;
                hostile = true;
                penetrate = -1;
                timeLeft = 900;
                trap = true;
            }
            else if (type == 186)
            {
                name = "Spear";
                width = 10;
                height = 14;
                aiStyle = 37;
                friendly = true;
                tileCollide = false;
                ignoreWater = true;
                hostile = true;
                penetrate = -1;
                timeLeft = 300;
                trap = true;
            }
            else if (type == 187)
            {
                name = "Flamethrower";
                width = 6;
                height = 6;
                aiStyle = 38;
                alpha = 255;
                tileCollide = false;
                ignoreWater = true;
                timeLeft = 60;
                trap = true;
            }
            else if (type == 188)
            {
                name = "Flames";
                width = 6;
                height = 6;
                aiStyle = 23;
                friendly = true;
                hostile = true;
                alpha = 255;
                penetrate = -1;
                extraUpdates = 2;
                trap = true;
            }
            else if (type == 189)
            {
                name = "Wasp";
                width = 8;
                height = 8;
                aiStyle = 36;
                friendly = true;
                penetrate = 4;
                alpha = 255;
                timeLeft = 600;
                magic = true;
                extraUpdates = 3;
            }
            else if (type == 190)
            {
                name = "Mechanical Piranha";
                width = 22;
                height = 22;
                aiStyle = 39;
                friendly = true;
                penetrate = -1;
                alpha = 255;
                ranged = true;
            }
            else if (type >= 191 && type <= 194)
            {
                netImportant = true;
                name = "Pygmy";
                width = 18;
                height = 18;
                aiStyle = 26;
                penetrate = -1;
                timeLeft *= 5;
                minion = true;
                minionSlots = 1f;
                if (type == 192)
                    scale = 1.025f;
                if (type == 193)
                    scale = 1.05f;
                if (type == 194)
                    scale = 1.075f;
            }
            else if (type == 195)
            {
                tileCollide = false;
                name = "Pygmy";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
            }
            else if (type == 196)
            {
                name = "Smoke Bomb";
                width = 16;
                height = 16;
                aiStyle = 14;
                penetrate = -1;
                scale = 0.8f;
            }
            else if (type == 197)
            {
                netImportant = true;
                name = "Baby Skeletron Head";
                width = 42;
                height = 42;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 198)
            {
                netImportant = true;
                name = "Baby Hornet";
                width = 26;
                height = 26;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 199)
            {
                netImportant = true;
                name = "Tiki Spirit";
                width = 28;
                height = 28;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 200)
            {
                netImportant = true;
                name = "Pet Lizard";
                width = 28;
                height = 28;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 201)
            {
                name = "Tombstone";
                knockBack = 12f;
                width = 24;
                height = 24;
                aiStyle = 17;
                penetrate = -1;
            }
            else if (type == 202)
            {
                name = "Tombstone";
                knockBack = 12f;
                width = 24;
                height = 24;
                aiStyle = 17;
                penetrate = -1;
            }
            else if (type == 203)
            {
                name = "Tombstone";
                knockBack = 12f;
                width = 24;
                height = 24;
                aiStyle = 17;
                penetrate = -1;
            }
            else if (type == 204)
            {
                name = "Tombstone";
                knockBack = 12f;
                width = 24;
                height = 24;
                aiStyle = 17;
                penetrate = -1;
            }
            else if (type == 205)
            {
                name = "Tombstone";
                knockBack = 12f;
                width = 24;
                height = 24;
                aiStyle = 17;
                penetrate = -1;
            }
            else if (type == 206)
            {
                name = "Leaf";
                width = 14;
                height = 14;
                aiStyle = 40;
                friendly = true;
                penetrate = 1;
                alpha = 255;
                timeLeft = 600;
                magic = true;
            }
            else if (type == 207)
            {
                name = "Bullet";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                light = 0.5f;
                alpha = 255;
                extraUpdates = 2;
                scale = 1.2f;
                timeLeft = 600;
                ranged = true;
            }
            else if (type == 208)
            {
                netImportant = true;
                name = "Parrot";
                width = 18;
                height = 36;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 209)
            {
                name = "Truffle";
                width = 12;
                height = 32;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
                light = 0.5f;
            }
            else if (type == 210)
            {
                netImportant = true;
                name = "Sapling";
                width = 14;
                height = 30;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 211)
            {
                netImportant = true;
                name = "Wisp";
                width = 24;
                height = 24;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
                light = 1f;
                ignoreWater = true;
            }
            else if (type == 212)
            {
                name = "Palladium Pike";
                width = 18;
                height = 18;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                scale = 1.12f;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 213)
            {
                name = "Palladium Drill";
                width = 22;
                height = 22;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                scale = 0.92f;
            }
            else if (type == 214)
            {
                name = "Palladium Chainsaw";
                width = 18;
                height = 18;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 215)
            {
                name = "Orichalcum Halberd";
                width = 18;
                height = 18;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                scale = 1.27f;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 216)
            {
                name = "Orichalcum Drill";
                width = 22;
                height = 22;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                scale = 0.93f;
            }
            else if (type == 217)
            {
                name = "Orichalcum Chainsaw";
                width = 18;
                height = 18;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                scale = 1.12f;
            }
            else if (type == 218)
            {
                name = "Titanium Trident";
                width = 18;
                height = 18;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                scale = 1.28f;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 219)
            {
                name = "Titanium Drill";
                width = 22;
                height = 22;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                scale = 0.95f;
            }
            else if (type == 220)
            {
                name = "Titanium Chainsaw";
                width = 18;
                height = 18;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                scale = 1.2f;
            }
            else if (type == 221)
            {
                name = "Flower Petal";
                width = 20;
                height = 20;
                aiStyle = 41;
                friendly = true;
                tileCollide = false;
                ignoreWater = true;
                timeLeft = 120;
                penetrate = -1;
                scale = (float)(1.0 + Main.rand.Next(30) * 0.00999999977648258);
                extraUpdates = 2;
            }
            else if (type == 222)
            {
                name = "Chlorophyte Partisan";
                width = 18;
                height = 18;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                scale = 1.3f;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 223)
            {
                name = "Chlorophyte Drill";
                width = 22;
                height = 22;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                scale = 1f;
            }
            else if (type == 224)
            {
                name = "Chlorophyte Chainsaw";
                width = 18;
                height = 18;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                scale = 1.1f;
            }
            else if (type == 225)
            {
                arrow = true;
                penetrate = 2;
                name = "Chlorophyte Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                ranged = true;
            }
            else if (type == 226)
            {
                netImportant = true;
                name = "Crystal Leaf";
                width = 22;
                height = 42;
                aiStyle = 42;
                friendly = true;
                tileCollide = false;
                penetrate = -1;
                timeLeft *= 5;
                light = 0.4f;
                ignoreWater = true;
            }
            else if (type == 227)
            {
                netImportant = true;
                tileCollide = false;
                light = 0.1f;
                name = "Crystal Leaf";
                width = 14;
                height = 14;
                aiStyle = 43;
                friendly = true;
                penetrate = 1;
                timeLeft = 180;
            }
            else if (type == 228)
            {
                tileCollide = false;
                name = "Spore Cloud";
                width = 30;
                height = 30;
                aiStyle = 44;
                friendly = true;
                scale = 1.1f;
                penetrate = -1;
            }
            else if (type == 229)
            {
                name = "Chlorophyte Orb";
                width = 30;
                height = 30;
                aiStyle = 44;
                friendly = true;
                penetrate = -1;
                light = 0.2f;
            }
            else if (type >= 230 && type <= 235)
            {
                netImportant = true;
                name = "Gem Hook";
                width = 18;
                height = 18;
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft *= 10;
            }
            else if (type == 236)
            {
                netImportant = true;
                name = "Baby Dino";
                width = 34;
                height = 34;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 237)
            {
                netImportant = true;
                name = "Rain Cloud";
                width = 28;
                height = 28;
                aiStyle = 45;
                penetrate = -1;
            }
            else if (type == 238)
            {
                tileCollide = false;
                ignoreWater = true;
                name = "Rain Cloud";
                width = 54;
                height = 28;
                aiStyle = 45;
                penetrate = -1;
            }
            else if (type == 239)
            {
                ignoreWater = true;
                name = "Rain";
                width = 4;
                height = 40;
                aiStyle = 45;
                friendly = true;
                penetrate = -1;
                timeLeft = 300;
                scale = 1.1f;
                magic = true;
                extraUpdates = 1;
            }
            else if (type == 240)
            {
                name = "Cannonball";
                width = 16;
                height = 16;
                aiStyle = 2;
                hostile = true;
                penetrate = -1;
                alpha = 255;
            }
            else if (type == 241)
            {
                name = "Crimsand Ball";
                knockBack = 6f;
                width = 10;
                height = 10;
                aiStyle = 10;
                friendly = true;
                hostile = true;
                penetrate = -1;
            }
            else if (type == 242)
            {
                name = "Bullet";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                light = 0.5f;
                alpha = 255;
                extraUpdates = 7;
                scale = 1.18f;
                timeLeft = 600;
                ranged = true;
                ignoreWater = true;
            }
            else if (type == 243)
            {
                name = "Blood Cloud";
                width = 28;
                height = 28;
                aiStyle = 45;
                penetrate = -1;
            }
            else if (type == 244)
            {
                tileCollide = false;
                ignoreWater = true;
                name = "Blood Cloud";
                width = 54;
                height = 28;
                aiStyle = 45;
                penetrate = -1;
            }
            else if (type == 245)
            {
                ignoreWater = true;
                name = "Blood Rain";
                width = 4;
                height = 40;
                aiStyle = 45;
                friendly = true;
                penetrate = 2;
                timeLeft = 300;
                scale = 1.1f;
                magic = true;
                extraUpdates = 1;
            }
            else if (type == 246)
            {
                name = "Stynger";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                ranged = true;
                alpha = 255;
                extraUpdates = 1;
            }
            else if (type == 247)
            {
                name = "Flower Pow";
                width = 34;
                height = 34;
                aiStyle = 15;
                friendly = true;
                penetrate = -1;
                melee = true;
            }
            else if (type == 248)
            {
                name = "Flower Pow";
                width = 18;
                height = 18;
                aiStyle = 1;
                friendly = true;
                melee = true;
            }
            else if (type == 249)
            {
                name = "Stynger";
                width = 12;
                height = 12;
                aiStyle = 2;
                friendly = true;
                ranged = true;
            }
            else if (type == 250)
            {
                name = "Rainbow";
                width = 12;
                height = 12;
                aiStyle = 46;
                penetrate = -1;
                magic = true;
                alpha = 255;
                ignoreWater = true;
                scale = 1.25f;
            }
            else if (type == 251)
            {
                name = "Rainbow";
                width = 14;
                height = 14;
                aiStyle = 46;
                friendly = true;
                penetrate = -1;
                magic = true;
                alpha = 255;
                light = 0.3f;
                tileCollide = false;
                ignoreWater = true;
                scale = 1.25f;
            }
            else if (type == 252)
            {
                name = "Chlorophyte Jackhammer";
                width = 18;
                height = 18;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                scale = 1.1f;
            }
            else if (type == 253)
            {
                name = "Ball of Frost";
                width = 16;
                height = 16;
                aiStyle = 8;
                friendly = true;
                light = 0.8f;
                alpha = 100;
                magic = true;
            }
            else if (type == 254)
            {
                name = "Magnet Sphere";
                width = 38;
                height = 38;
                aiStyle = 47;
                magic = true;
                timeLeft = 660;
                light = 0.5f;
            }
            else if (type == 255)
            {
                name = "Magnet Sphere";
                width = 8;
                height = 8;
                aiStyle = 48;
                friendly = true;
                magic = true;
                extraUpdates = 100;
                timeLeft = 100;
            }
            else if (type == 256)
            {
                netImportant = true;
                tileCollide = false;
                name = "Skeletron Hand";
                width = 6;
                height = 6;
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                scale = 1f;
                timeLeft *= 10;
            }
            else if (type == 257)
            {
                name = "Frost Beam";
                ignoreWater = true;
                width = 4;
                height = 4;
                aiStyle = 1;
                hostile = true;
                penetrate = -1;
                light = 0.75f;
                alpha = 255;
                scale = 1.2f;
                timeLeft = 600;
                magic = true;
                coldDamage = true;
                extraUpdates = 1;
            }
            else if (type == 258)
            {
                name = "Fireball";
                width = 16;
                height = 16;
                aiStyle = 8;
                hostile = true;
                penetrate = -1;
                alpha = 100;
                timeLeft = 300;
            }
            else if (type == 259)
            {
                name = "Eye Beam";
                ignoreWater = true;
                tileCollide = false;
                width = 8;
                height = 8;
                aiStyle = 1;
                hostile = true;
                penetrate = -1;
                light = 0.3f;
                scale = 1.1f;
                magic = true;
                extraUpdates = 1;
            }
            else if (type == 260)
            {
                name = "Heat Ray";
                width = 8;
                height = 8;
                aiStyle = 48;
                friendly = true;
                magic = true;
                extraUpdates = 100;
                timeLeft = 200;
                penetrate = -1;
            }
            else if (type == 261)
            {
                name = "Boulder";
                width = 32;
                height = 34;
                aiStyle = 14;
                friendly = true;
                penetrate = 6;
                magic = true;
                ignoreWater = true;
            }
            else if (type == 262)
            {
                name = "Golem Fist";
                width = 30;
                height = 30;
                aiStyle = 13;
                friendly = true;
                penetrate = -1;
                alpha = 255;
                melee = true;
                extraUpdates = 1;
            }
            else if (type == 263)
            {
                name = "Ice Sickle";
                width = 34;
                height = 34;
                alpha = 100;
                light = 0.5f;
                aiStyle = 18;
                friendly = true;
                penetrate = 5;
                tileCollide = true;
                scale = 1f;
                melee = true;
                timeLeft = 180;
                coldDamage = true;
            }
            else if (type == 264)
            {
                ignoreWater = true;
                name = "Rain";
                width = 4;
                height = 40;
                aiStyle = 45;
                hostile = true;
                penetrate = -1;
                timeLeft = 120;
                scale = 1.1f;
                extraUpdates = 1;
            }
            else if (type == 265)
            {
                name = "Poison Fang";
                width = 12;
                height = 12;
                aiStyle = 1;
                alpha = 255;
                friendly = true;
                magic = true;
                penetrate = 4;
            }
            else if (type == 266)
            {
                netImportant = true;
                alpha = 75;
                name = "Baby Slime";
                width = 24;
                height = 16;
                aiStyle = 26;
                penetrate = -1;
                timeLeft *= 5;
                minion = true;
                minionSlots = 1f;
            }
            else if (type == 267)
            {
                alpha = 255;
                name = "Poison Dart";
                width = 14;
                height = 14;
                aiStyle = 1;
                friendly = true;
                ranged = true;
            }
            else if (type == 268)
            {
                netImportant = true;
                name = "Eye Spring";
                width = 18;
                height = 32;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 269)
            {
                netImportant = true;
                name = "Baby Snowman";
                width = 20;
                height = 26;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 270)
            {
                name = "Skull";
                width = 26;
                height = 26;
                aiStyle = 1;
                alpha = 255;
                friendly = true;
                magic = true;
                penetrate = 3;
            }
            else if (type == 271)
            {
                name = "Boxing Glove";
                width = 20;
                height = 20;
                aiStyle = 13;
                friendly = true;
                penetrate = -1;
                alpha = 255;
                melee = true;
                scale = 1.2f;
            }
            else if (type == 272)
            {
                name = "Bananarang";
                width = 32;
                height = 32;
                aiStyle = 3;
                friendly = true;
                scale = 0.9f;
                penetrate = -1;
                melee = true;
            }
            else if (type == 273)
            {
                name = "Chain Knife";
                width = 26;
                height = 26;
                aiStyle = 13;
                friendly = true;
                penetrate = -1;
                alpha = 255;
                melee = true;
            }
            else if (type == 274)
            {
                name = "Death Sickle";
                width = 42;
                height = 42;
                alpha = 100;
                light = 0.5f;
                aiStyle = 18;
                friendly = true;
                penetrate = 5;
                tileCollide = false;
                scale = 1.1f;
                melee = true;
                timeLeft = 180;
            }
            else if (type == 275)
            {
                alpha = 255;
                name = "Seed";
                width = 14;
                height = 14;
                aiStyle = 1;
                hostile = true;
            }
            else if (type == 276)
            {
                alpha = 255;
                name = "Poison Seed";
                width = 14;
                height = 14;
                aiStyle = 1;
                hostile = true;
            }
            else if (type == 277)
            {
                alpha = 255;
                name = "Thorn Ball";
                width = 38;
                height = 38;
                aiStyle = 14;
                hostile = true;
            }
            else if (type == 278)
            {
                arrow = true;
                name = "Ichor Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                light = 1f;
                ranged = true;
                extraUpdates = 1;
            }
            else if (type == 279)
            {
                name = "Ichor Bullet";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                light = 0.5f;
                alpha = 255;
                extraUpdates = 2;
                scale = 1.25f;
                timeLeft = 600;
                ranged = true;
            }
            else if (type == 280)
            {
                name = "Golden Shower";
                width = 32;
                height = 32;
                aiStyle = 12;
                friendly = true;
                alpha = 255;
                penetrate = 5;
                extraUpdates = 2;
                ignoreWater = true;
                magic = true;
            }
            else if (type == 281)
            {
                name = "Explosive Bunny";
                width = 28;
                height = 28;
                aiStyle = 49;
                friendly = true;
                penetrate = 1;
                alpha = 255;
                timeLeft = 600;
            }
            else if (type == 282)
            {
                arrow = true;
                name = "Venom Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                ranged = true;
                extraUpdates = 1;
            }
            else if (type == 283)
            {
                name = "Venom Bullet";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                light = 0.5f;
                alpha = 255;
                extraUpdates = 2;
                scale = 1.25f;
                timeLeft = 600;
                ranged = true;
            }
            else if (type == 284)
            {
                name = "Party Bullet";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                light = 0.5f;
                alpha = 255;
                extraUpdates = 2;
                scale = 1.3f;
                timeLeft = 600;
                ranged = true;
            }
            else if (type == 285)
            {
                name = "Nano Bullet";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                light = 0.5f;
                alpha = 255;
                extraUpdates = 2;
                scale = 1.3f;
                timeLeft = 600;
                ranged = true;
            }
            else if (type == 286)
            {
                name = "Explosive Bullet";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                light = 0.5f;
                alpha = 255;
                extraUpdates = 2;
                scale = 1.3f;
                timeLeft = 600;
                ranged = true;
            }
            else if (type == 287)
            {
                name = "Golden Bullet";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                light = 0.5f;
                alpha = 255;
                extraUpdates = 2;
                scale = 1.3f;
                timeLeft = 600;
                ranged = true;
            }
            else if (type == 288)
            {
                name = "Golden Shower";
                width = 32;
                height = 32;
                aiStyle = 12;
                hostile = true;
                alpha = 255;
                penetrate = -1;
                extraUpdates = 2;
                ignoreWater = true;
                magic = true;
            }
            else if (type == 289)
            {
                name = "Confetti";
                width = 10;
                height = 10;
                aiStyle = 1;
                alpha = 255;
                penetrate = -1;
                timeLeft = 2;
            }
            else if (type == 290)
            {
                name = "Shadow Beam";
                width = 4;
                height = 4;
                aiStyle = 48;
                hostile = true;
                magic = true;
                extraUpdates = 100;
                timeLeft = 100;
                penetrate = -1;
            }
            else if (type == 291)
            {
                name = "Inferno";
                width = 12;
                height = 12;
                aiStyle = 50;
                hostile = true;
                alpha = 255;
                magic = true;
                tileCollide = false;
                penetrate = -1;
            }
            else if (type == 292)
            {
                name = "Inferno";
                width = 130;
                height = 130;
                aiStyle = 50;
                hostile = true;
                alpha = 255;
                magic = true;
                tileCollide = false;
                penetrate = -1;
            }
            else if (type == 293)
            {
                name = "Lost Soul";
                width = 12;
                height = 12;
                aiStyle = 51;
                hostile = true;
                alpha = 255;
                magic = true;
                tileCollide = false;
                penetrate = -1;
                extraUpdates = 1;
            }
            else if (type == 294)
            {
                name = "Shadow Beam";
                width = 4;
                height = 4;
                aiStyle = 48;
                friendly = true;
                magic = true;
                extraUpdates = 100;
                timeLeft = 300;
                penetrate = -1;
            }
            else if (type == 295)
            {
                name = "Inferno";
                width = 12;
                height = 12;
                aiStyle = 50;
                friendly = true;
                alpha = 255;
                magic = true;
                tileCollide = true;
            }
            else if (type == 296)
            {
                name = "Inferno";
                width = 150;
                height = 150;
                aiStyle = 50;
                friendly = true;
                alpha = 255;
                magic = true;
                tileCollide = false;
                penetrate = -1;
            }
            else if (type == 297)
            {
                name = "Lost Soul";
                width = 12;
                height = 12;
                aiStyle = 51;
                friendly = true;
                alpha = 255;
                magic = true;
                extraUpdates = 1;
            }
            else if (type == 298)
            {
                name = "Spirit Heal";
                width = 6;
                height = 6;
                aiStyle = 52;
                alpha = 255;
                magic = true;
                tileCollide = false;
                extraUpdates = 3;
            }
            else if (type == 299)
            {
                name = "Shadowflames";
                width = 6;
                height = 6;
                aiStyle = 1;
                hostile = true;
                alpha = 255;
                penetrate = -1;
                extraUpdates = 2;
                magic = true;
                ignoreWater = true;
                tileCollide = false;
            }
            else if (type == 300)
            {
                name = "Paladin's Hammer";
                width = 38;
                height = 38;
                aiStyle = 2;
                hostile = true;
                penetrate = -1;
                ignoreWater = true;
                tileCollide = false;
            }
            else if (type == 301)
            {
                name = "Paladin's Hammer";
                width = 38;
                height = 38;
                aiStyle = 3;
                friendly = true;
                penetrate = -1;
                melee = true;
                extraUpdates = 2;
            }
            else if (type == 302)
            {
                name = "Sniper Bullet";
                width = 4;
                height = 4;
                aiStyle = 1;
                hostile = true;
                penetrate = -1;
                light = 0.3f;
                alpha = 255;
                extraUpdates = 7;
                scale = 1.18f;
                timeLeft = 300;
                ranged = true;
                ignoreWater = true;
            }
            else if (type == 303)
            {
                name = "Rocket";
                width = 14;
                height = 14;
                aiStyle = 16;
                hostile = true;
                penetrate = -1;
                ranged = true;
            }
            else if (type == 304)
            {
                name = "Vampire Knife";
                alpha = 255;
                width = 30;
                height = 30;
                aiStyle = 2;
                friendly = true;
                penetrate = 1;
                melee = true;
                light = 0.2f;
                ignoreWater = true;
                extraUpdates = 0;
            }
            else if (type == 305)
            {
                name = "Vampire Heal";
                width = 6;
                height = 6;
                aiStyle = 52;
                alpha = 255;
                tileCollide = false;
                extraUpdates = 10;
            }
            else if (type == 306)
            {
                name = "Eater's Bite";
                alpha = 255;
                width = 14;
                height = 14;
                aiStyle = 2;
                friendly = true;
                penetrate = 1;
                melee = true;
                ignoreWater = true;
                extraUpdates = 1;
            }
            else if (type == 307)
            {
                name = "Tiny Eater";
                width = 16;
                height = 16;
                aiStyle = 36;
                penetrate = 1;
                alpha = 255;
                timeLeft = 600;
                melee = true;
                extraUpdates = 3;
            }
            else if (type == 308)
            {
                name = "Frost Hydra";
                width = 80;
                height = 74;
                aiStyle = 53;
                timeLeft = 7200;
                light = 0.25f;
                ignoreWater = true;
                coldDamage = true;
            }
            else if (type == 309)
            {
                name = "Frost Blast";
                width = 14;
                height = 14;
                aiStyle = 28;
                alpha = 255;
                penetrate = 1;
                friendly = true;
                extraUpdates = 3;
                coldDamage = true;
            }
            else if (type == 310)
            {
                netImportant = true;
                name = "Blue Flare";
                width = 6;
                height = 6;
                aiStyle = 33;
                friendly = true;
                penetrate = -1;
                alpha = 255;
                timeLeft = 36000;
            }
            else if (type == 311)
            {
                name = "Candy Corn";
                width = 10;
                height = 12;
                aiStyle = 1;
                friendly = true;
                penetrate = 3;
                alpha = 255;
                timeLeft = 600;
                ranged = true;
            }
            else if (type == 312)
            {
                name = "Jack 'O Lantern";
                alpha = 255;
                width = 32;
                height = 32;
                aiStyle = 1;
                friendly = true;
                ranged = true;
                timeLeft = 300;
            }
            else if (type == 313)
            {
                netImportant = true;
                name = "Spider";
                width = 30;
                height = 30;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 314)
            {
                netImportant = true;
                name = "Squashling";
                width = 24;
                height = 40;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 315)
            {
                netImportant = true;
                name = "Bat Hook";
                width = 14;
                height = 14;
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft *= 10;
            }
            else if (type == 316)
            {
                alpha = 255;
                name = "Bat";
                width = 16;
                height = 16;
                aiStyle = 36;
                friendly = true;
                penetrate = 1;
                timeLeft = 600;
                magic = true;
            }
            else if (type == 317)
            {
                netImportant = true;
                name = "Raven";
                width = 28;
                height = 28;
                aiStyle = 54;
                penetrate = 1;
                timeLeft *= 5;
                minion = true;
                minionSlots = 1f;
            }
            else if (type == 318)
            {
                name = "Rotten Egg";
                width = 12;
                height = 14;
                aiStyle = 2;
                friendly = true;
                thrown = true;
            }
            else if (type == 319)
            {
                netImportant = true;
                name = "Black Cat";
                width = 36;
                height = 30;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 320)
            {
                name = "Bloody Machete";
                width = 34;
                height = 34;
                aiStyle = 3;
                friendly = true;
                penetrate = -1;
                melee = true;
            }
            else if (type == 321)
            {
                name = "Flaming Jack";
                width = 30;
                height = 30;
                aiStyle = 55;
                friendly = true;
                melee = true;
                tileCollide = false;
                ignoreWater = true;
            }
            else if (type == 322)
            {
                netImportant = true;
                name = "Wood Hook";
                width = 14;
                height = 14;
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft *= 10;
            }
            else if (type == 323)
            {
                penetrate = 10;
                name = "Stake";
                extraUpdates = 3;
                width = 14;
                height = 14;
                aiStyle = 1;
                alpha = 255;
                friendly = true;
                ranged = true;
                scale = 0.8f;
            }
            else if (type == 324)
            {
                netImportant = true;
                name = "Cursed Sapling";
                width = 26;
                height = 38;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 325)
            {
                alpha = 255;
                penetrate = -1;
                name = "Flaming Wood";
                width = 14;
                height = 14;
                aiStyle = 1;
                hostile = true;
                tileCollide = false;
            }
            else if (type >= 326 && type <= 328)
            {
                name = "Greek Fire";
                if (type == 326)
                {
                    width = 14;
                    height = 16;
                }
                else if (type == 327)
                {
                    width = 12;
                    height = 14;
                }
                else
                {
                    width = 6;
                    height = 12;
                }
                aiStyle = 14;
                hostile = true;
                penetrate = -1;
                timeLeft = 360;
            }
            else if (type == 329)
            {
                name = "Flaming Scythe";
                width = 80;
                height = 80;
                light = 0.25f;
                aiStyle = 56;
                hostile = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft = 420;
            }
            else if (type == 330)
            {
                name = "Star Anise";
                width = 22;
                height = 22;
                aiStyle = 2;
                friendly = true;
                penetrate = 6;
                thrown = true;
            }
            else if (type == 331)
            {
                netImportant = true;
                name = "Candy Cane Hook";
                width = 18;
                height = 18;
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft *= 10;
            }
            else if (type == 332)
            {
                netImportant = true;
                name = "Christmas Hook";
                width = 18;
                height = 18;
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft *= 10;
                light = 0.5f;
            }
            else if (type == 333)
            {
                name = "Fruitcake Chakram";
                width = 38;
                height = 38;
                aiStyle = 3;
                friendly = true;
                scale = 0.9f;
                penetrate = -1;
                melee = true;
            }
            else if (type == 334)
            {
                netImportant = true;
                name = "Puppy";
                width = 28;
                height = 28;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 335)
            {
                name = "Ornament";
                width = 22;
                height = 22;
                aiStyle = 2;
                friendly = true;
                penetrate = 1;
                melee = true;
            }
            else if (type == 336)
            {
                name = "Pine Needle";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                magic = true;
                scale = 0.8f;
                extraUpdates = 1;
            }
            else if (type == 337)
            {
                name = "Blizzard";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                magic = true;
                tileCollide = false;
                coldDamage = true;
                extraUpdates = 1;
            }
            else if (type == 338 || type == 339 || (type == 340 || type == 341))
            {
                name = "Rocket";
                width = 14;
                height = 14;
                aiStyle = 16;
                penetrate = -1;
                friendly = true;
                ranged = true;
                scale = 0.9f;
            }
            else if (type == 342)
            {
                name = "North Pole";
                width = 22;
                height = 2;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                scale = 1.1f;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                coldDamage = true;
            }
            else if (type == 343)
            {
                alpha = 255;
                name = "North Pole";
                width = 10;
                height = 10;
                aiStyle = 57;
                friendly = true;
                melee = true;
                scale = 1.1f;
                penetrate = 3;
                coldDamage = true;
            }
            else if (type == 344)
            {
                name = "North Pole";
                width = 26;
                height = 26;
                aiStyle = 1;
                friendly = true;
                scale = 0.9f;
                alpha = 255;
                melee = true;
                coldDamage = true;
            }
            else if (type == 345)
            {
                name = "Pine Needle";
                width = 4;
                height = 4;
                aiStyle = 1;
                hostile = true;
                scale = 0.8f;
            }
            else if (type == 346)
            {
                name = "Ornament";
                width = 18;
                height = 18;
                aiStyle = 14;
                hostile = true;
                penetrate = -1;
                timeLeft = 300;
            }
            else if (type == 347)
            {
                name = "Ornament";
                width = 6;
                height = 6;
                aiStyle = 2;
                hostile = true;
                penetrate = -1;
            }
            else if (type == 348)
            {
                name = "Frost Wave";
                aiStyle = 1;
                width = 48;
                height = 48;
                hostile = true;
                penetrate = -1;
                tileCollide = false;
                coldDamage = true;
                extraUpdates = 1;
            }
            else if (type == 349)
            {
                name = "Frost Shard";
                aiStyle = 1;
                width = 12;
                height = 12;
                hostile = true;
                penetrate = -1;
                coldDamage = true;
            }
            else if (type == 350)
            {
                alpha = 255;
                penetrate = -1;
                name = "Missile";
                width = 14;
                height = 14;
                aiStyle = 1;
                hostile = true;
                tileCollide = false;
                timeLeft /= 2;
            }
            else if (type == 351)
            {
                alpha = 255;
                penetrate = -1;
                name = "Present";
                width = 24;
                height = 24;
                aiStyle = 58;
                hostile = true;
                tileCollide = false;
            }
            else if (type == 352)
            {
                name = "Spike";
                width = 30;
                height = 30;
                aiStyle = 14;
                hostile = true;
                penetrate = -1;
                timeLeft /= 3;
            }
            else if (type == 353)
            {
                netImportant = true;
                name = "Baby Grinch";
                width = 18;
                height = 28;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 354)
            {
                name = "Crimsand Ball";
                knockBack = 6f;
                width = 10;
                height = 10;
                aiStyle = 10;
                friendly = true;
                penetrate = -1;
                extraUpdates = 1;
            }
            else if (type == 355)
            {
                name = "Venom Fang";
                width = 12;
                height = 12;
                aiStyle = 1;
                alpha = 255;
                friendly = true;
                magic = true;
                penetrate = 7;
            }
            else if (type == 356)
            {
                name = "Spectre Wrath";
                width = 6;
                height = 6;
                aiStyle = 59;
                alpha = 255;
                magic = true;
                tileCollide = false;
                extraUpdates = 3;
            }
            else if (type == 357)
            {
                name = "Pulse Bolt";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 6;
                alpha = 255;
                extraUpdates = 2;
                scale = 1.2f;
                timeLeft = 600;
                ranged = true;
            }
            else if (type == 358)
            {
                name = "Water Gun";
                width = 18;
                height = 18;
                aiStyle = 60;
                alpha = 255;
                penetrate = -1;
                extraUpdates = 2;
                ignoreWater = true;
            }
            else if (type == 359)
            {
                name = "Frost Bolt";
                width = 14;
                height = 14;
                aiStyle = 28;
                alpha = 255;
                magic = true;
                penetrate = 2;
                friendly = true;
                coldDamage = true;
            }
            else if (type >= 360 && type <= 366 || (type == 381 || type == 382))
            {
                name = "Bobber";
                width = 14;
                height = 14;
                aiStyle = 61;
                penetrate = -1;
                bobber = true;
            }
            else if (type == 367)
            {
                name = "Obsidian Swordfish";
                width = 18;
                height = 18;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                scale = 1.1f;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 368)
            {
                name = "Swordfish";
                width = 18;
                height = 18;
                aiStyle = 19;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 369)
            {
                name = "Sawtooth Shark";
                width = 22;
                height = 22;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 370)
            {
                name = "Love Potion";
                width = 14;
                height = 14;
                aiStyle = 2;
                friendly = true;
                penetrate = 1;
            }
            else if (type == 371)
            {
                name = "Foul Potion";
                width = 14;
                height = 14;
                aiStyle = 2;
                friendly = true;
                penetrate = 1;
            }
            else if (type == 372)
            {
                name = "Fish Hook";
                width = 18;
                height = 18;
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft *= 10;
            }
            else if (type == 373)
            {
                netImportant = true;
                name = "Hornet";
                width = 24;
                height = 26;
                aiStyle = 62;
                penetrate = -1;
                timeLeft *= 5;
                minion = true;
                minionSlots = 1f;
                tileCollide = false;
                ignoreWater = true;
            }
            else if (type == 374)
            {
                name = "Hornet Stinger";
                width = 10;
                height = 10;
                aiStyle = 0;
                friendly = true;
                penetrate = 1;
                aiStyle = 1;
                tileCollide = true;
                scale *= 0.9f;
            }
            else if (type == 375)
            {
                netImportant = true;
                name = "Flying Imp";
                width = 34;
                height = 26;
                aiStyle = 62;
                penetrate = -1;
                timeLeft *= 5;
                minion = true;
                minionSlots = 1f;
                tileCollide = false;
                ignoreWater = true;
            }
            else if (type == 376)
            {
                name = "Imp Fireball";
                width = 12;
                height = 12;
                aiStyle = 0;
                friendly = true;
                penetrate = -1;
                aiStyle = 1;
                tileCollide = true;
                timeLeft = 100;
                alpha = 255;
                extraUpdates = 1;
            }
            else if (type == 377)
            {
                name = "Spider Turret";
                width = 66;
                height = 50;
                aiStyle = 53;
                timeLeft = 7200;
                ignoreWater = true;
            }
            else if (type == 378)
            {
                name = "Spider Egg";
                width = 16;
                height = 16;
                aiStyle = 14;
                friendly = true;
                penetrate = -1;
                timeLeft = 60;
                scale = 0.9f;
            }
            else if (type == 379)
            {
                name = "Baby Spider";
                width = 14;
                height = 10;
                aiStyle = 63;
                friendly = true;
                timeLeft = 300;
                penetrate = 1;
            }
            else if (type == 380)
            {
                netImportant = true;
                name = "Zephyr Fish";
                width = 26;
                height = 26;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 383)
            {
                name = "Anchor";
                width = 34;
                height = 34;
                aiStyle = 3;
                friendly = true;
                penetrate = -1;
                melee = true;
            }
            else if (type == 384)
            {
                name = "Sharknado";
                width = 150;
                height = 42;
                hostile = true;
                penetrate = -1;
                aiStyle = 64;
                tileCollide = false;
                ignoreWater = true;
                alpha = 255;
                timeLeft = 540;
            }
            else if (type == 385)
            {
                name = "Sharknado Bolt";
                width = 30;
                height = 30;
                hostile = true;
                penetrate = -1;
                aiStyle = 65;
                alpha = 255;
                timeLeft = 300;
            }
            else if (type == 386)
            {
                name = "Cthulunado";
                width = 150;
                height = 42;
                hostile = true;
                penetrate = -1;
                aiStyle = 64;
                tileCollide = false;
                ignoreWater = true;
                alpha = 255;
                timeLeft = 840;
            }
            else if (type == 387)
            {
                netImportant = true;
                name = "Retanimini";
                width = 40;
                height = 20;
                aiStyle = 66;
                penetrate = -1;
                timeLeft *= 5;
                minion = true;
                minionSlots = 0.5f;
                tileCollide = false;
                ignoreWater = true;
                friendly = true;
            }
            else if (type == 388)
            {
                netImportant = true;
                name = "Spazmamini";
                width = 40;
                height = 20;
                aiStyle = 66;
                penetrate = -1;
                timeLeft *= 5;
                minion = true;
                minionSlots = 0.5f;
                tileCollide = false;
                ignoreWater = true;
                friendly = true;
            }
            else if (type == 389)
            {
                name = "Mini Retina Laser";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                penetrate = 3;
                light = 0.75f;
                alpha = 255;
                extraUpdates = 2;
                scale = 1.2f;
                timeLeft = 600;
            }
            else if (type == 390 || type == 391 || type == 392)
            {
                name = "Venom Spider";
                width = 18;
                height = 18;
                aiStyle = 26;
                penetrate = -1;
                netImportant = true;
                timeLeft *= 5;
                minion = true;
                minionSlots = 0.75f;
                if (type == 391)
                    name = "Jumper Spider";
                if (type == 392)
                    name = "Dangerous Spider";
            }
            else if (type == 393 || type == 394 || type == 395)
            {
                name = "One Eyed Pirate";
                width = 20;
                height = 30;
                aiStyle = 67;
                penetrate = -1;
                netImportant = true;
                timeLeft *= 5;
                minion = true;
                minionSlots = 1f;
                if (type == 394)
                    name = "Soulscourge Pirate";
                if (type == 395)
                    name = "Pirate Captain";
            }
            else if (type == 396)
            {
                name = "Slime Hook";
                width = 18;
                height = 18;
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft *= 10;
                alpha = 100;
            }
            else if (type == 397)
            {
                name = "Sticky Grenade";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                thrown = true;
                tileCollide = false;
            }
            else if (type == 398)
            {
                netImportant = true;
                name = "Mini Minotaur";
                width = 18;
                height = 38;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 399)
            {
                name = "Molotov Cocktail";
                width = 14;
                height = 14;
                aiStyle = 68;
                friendly = true;
                penetrate = 1;
                alpha = 255;
                thrown = true;
                noEnchantments = true;
            }
            else if (type >= 400 && type <= 402)
            {
                name = "Molotov Fire";
                if (type == 400)
                {
                    width = 14;
                    height = 16;
                }
                else if (type == 401)
                {
                    width = 12;
                    height = 14;
                }
                else
                {
                    width = 6;
                    height = 12;
                }
                penetrate = 3;
                aiStyle = 14;
                friendly = true;
                timeLeft = 360;
                ranged = true;
                noEnchantments = true;
            }
            else if (type == 403)
            {
                netImportant = true;
                name = "Track Hook";
                width = 18;
                height = 18;
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft *= 10;
            }
            else if (type == 404)
            {
                name = "Flairon";
                width = 26;
                height = 26;
                aiStyle = 69;
                friendly = true;
                penetrate = -1;
                alpha = 255;
                melee = true;
            }
            else if (type == 405)
            {
                name = "Flairon Bubble";
                width = 14;
                height = 14;
                aiStyle = 70;
                friendly = true;
                penetrate = 1;
                alpha = 255;
                timeLeft = 90;
                melee = true;
                noEnchantments = true;
            }
            else if (type == 406)
            {
                name = "Slime Gun";
                width = 14;
                height = 14;
                aiStyle = 60;
                alpha = 255;
                penetrate = -1;
                extraUpdates = 2;
                ignoreWater = true;
            }
            else if (type == 407)
            {
                netImportant = true;
                name = "Tempest";
                width = 28;
                height = 40;
                aiStyle = 62;
                penetrate = -1;
                timeLeft *= 5;
                minion = true;
                friendly = true;
                minionSlots = 1f;
                tileCollide = false;
                ignoreWater = true;
            }
            else if (type == 408)
            {
                name = "Mini Sharkron";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                alpha = 255;
                ignoreWater = true;
            }
            else if (type == 409)
            {
                name = "Typhoon";
                width = 30;
                height = 30;
                penetrate = -1;
                aiStyle = 71;
                alpha = 255;
                timeLeft = 360;
                friendly = true;
                tileCollide = true;
                extraUpdates = 2;
                magic = true;
                ignoreWater = true;
            }
            else if (type == 410)
            {
                name = "Bubble";
                width = 14;
                height = 14;
                aiStyle = 72;
                friendly = true;
                penetrate = 1;
                alpha = 255;
                timeLeft = 50;
                magic = true;
                ignoreWater = true;
            }
            else if (type >= 411 && type <= 414)
            {
                switch (type)
                {
                    case 411:
                        name = "Copper Coins";
                        break;
                    case 412:
                        name = "Silver Coins";
                        break;
                    case 413:
                        name = "Gold Coins";
                        break;
                    case 414:
                        name = "Platinum Coins";
                        break;
                }
                width = 10;
                height = 10;
                aiStyle = 10;
            }
            else if (type == 415 || type == 416 || (type == 417 || type == 418))
            {
                name = "Rocket";
                width = 14;
                height = 14;
                aiStyle = 34;
                friendly = true;
                ranged = true;
                timeLeft = 45;
            }
            else if (type >= 419 && type <= 422)
            {
                name = "Firework Fountain";
                width = 4;
                height = 4;
                aiStyle = 73;
                friendly = true;
            }
            else if (type == 423)
            {
                netImportant = true;
                name = "UFO";
                width = 28;
                height = 28;
                aiStyle = 62;
                penetrate = -1;
                timeLeft *= 5;
                minion = true;
                friendly = true;
                minionSlots = 1f;
                ignoreWater = true;
            }
            else if (type >= 424 && type <= 426)
            {
                name = "Meteor";
                width = 24;
                height = 24;
                aiStyle = 1;
                friendly = true;
                magic = true;
                tileCollide = false;
                extraUpdates = 2;
            }
            else if (type == 427)
            {
                name = "Vortex Chainsaw";
                width = 22;
                height = 56;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                glowMask = (short)2;
            }
            else if (type == 428)
            {
                name = "Vortex Drill";
                width = 26;
                height = 54;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                glowMask = (short)3;
            }
            else if (type == 429)
            {
                name = "Nebula Chainsaw";
                width = 18;
                height = 56;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                glowMask = (short)7;
            }
            else if (type == 430)
            {
                name = "Nebula Drill";
                width = 30;
                height = 54;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                glowMask = (short)8;
            }
            else if (type == 431)
            {
                name = "Solar Flare Chainsaw";
                width = 28;
                height = 64;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 432)
            {
                name = "Solar Flare Drill";
                width = 30;
                height = 54;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
            }
            else if (type == 610)
            {
                name = "Stardust Chainsaw";
                width = 28;
                height = 64;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                glowMask = (short)179;
            }
            else if (type == 609)
            {
                name = "Stardust Drill";
                width = 30;
                height = 54;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                glowMask = (short)180;
            }
            else if (type == 433)
            {
                name = "UFO Ray";
                width = 8;
                height = 8;
                aiStyle = 48;
                friendly = true;
                extraUpdates = 100;
                timeLeft = 100;
                ignoreWater = true;
            }
            else if (type == 434)
            {
                name = "Scutlix Laser";
                width = 1;
                height = 1;
                aiStyle = 74;
                friendly = true;
                extraUpdates = 100;
                penetrate = -1;
            }
            else if (type == 435)
            {
                name = "Electric Bolt";
                width = 10;
                height = 10;
                aiStyle = 1;
                hostile = true;
                ignoreWater = true;
            }
            else if (type == 436)
            {
                name = "Brain Scrambling Bolt";
                width = 10;
                height = 10;
                aiStyle = 1;
                hostile = true;
                ignoreWater = true;
            }
            else if (type == 437)
            {
                name = "Gigazapper Spearhead";
                width = 10;
                height = 10;
                aiStyle = 1;
                hostile = true;
                extraUpdates = 2;
                ignoreWater = true;
            }
            else if (type == 438)
            {
                name = "Laser Ray";
                width = 8;
                height = 8;
                aiStyle = 1;
                hostile = true;
                alpha = 255;
                extraUpdates = 3;
                ignoreWater = true;
            }
            else if (type == 439)
            {
                name = "Laser Machinegun";
                width = 22;
                height = 22;
                aiStyle = 75;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                magic = true;
                ignoreWater = true;
            }
            else if (type == 440)
            {
                name = "Laser";
                width = 5;
                height = 5;
                aiStyle = 1;
                friendly = true;
                alpha = 255;
                extraUpdates = 2;
                scale = 1f;
                timeLeft = 600;
                magic = true;
                ignoreWater = true;
            }
            else if (type == 441)
            {
                name = "Scutlix Crosshair";
                width = 1;
                height = 1;
                aiStyle = 76;
                ignoreWater = true;
                tileCollide = false;
            }
            else if (type == 442)
            {
                name = "Electrosphere Missile";
                width = 14;
                height = 14;
                aiStyle = 1;
                friendly = true;
                alpha = 255;
                scale = 1f;
                timeLeft = 600;
                ranged = true;
            }
            else if (type == 443)
            {
                name = "Electrosphere";
                width = 80;
                height = 80;
                aiStyle = 77;
                friendly = true;
                alpha = 255;
                scale = 1f;
                ranged = true;
                ignoreWater = true;
                tileCollide = false;
                penetrate = -1;
            }
            else if (type == 444)
            {
                name = "Xenopopper";
                width = 10;
                height = 10;
                aiStyle = 78;
                friendly = true;
                alpha = 255;
                scale = 1f;
                ranged = true;
                ignoreWater = true;
                extraUpdates = 1;
            }
            else if (type == 445)
            {
                name = "Laser Drill";
                width = 10;
                height = 10;
                aiStyle = 75;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                melee = true;
                ignoreWater = true;
                ownerHitCheck = true;
            }
            else if (type == 446)
            {
                netImportant = true;
                name = "Anti-Gravity Hook";
                width = 14;
                height = 14;
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft *= 10;
                light = 0.7f;
            }
            else if (type == 447)
            {
                name = "Martian Deathray";
                width = 30;
                height = 30;
                aiStyle = 79;
                hostile = true;
                penetrate = -1;
                tileCollide = false;
                ignoreWater = true;
                timeLeft = 240;
            }
            else if (type == 448)
            {
                name = "Martian Rocket";
                width = 14;
                height = 14;
                aiStyle = 80;
                hostile = true;
                penetrate = -1;
                tileCollide = false;
            }
            else if (type == 449)
            {
                name = "Saucer Laser";
                width = 5;
                height = 5;
                aiStyle = 1;
                hostile = true;
                alpha = 255;
                extraUpdates = 1;
                scale = 1f;
                timeLeft = 600;
                ignoreWater = true;
            }
            else if (type == 450)
            {
                name = "Saucer Scrap";
                width = 14;
                height = 14;
                aiStyle = 14;
                hostile = true;
                penetrate = -1;
                timeLeft = 360;
            }
            else if (type == 451)
            {
                name = "Influx Waver";
                width = 16;
                height = 16;
                aiStyle = 81;
                melee = true;
                penetrate = 3;
                light = 0.2f;
                alpha = 255;
                friendly = true;
            }
            else if (type == 452)
            {
                name = "Phantasmal Eye";
                width = 14;
                height = 14;
                aiStyle = 82;
                hostile = true;
                penetrate = -1;
                alpha = 255;
                timeLeft = 600;
            }
            else if (type == 453)
            {
                name = "Drill Crosshair";
                width = 1;
                height = 1;
                aiStyle = 76;
                ignoreWater = true;
                tileCollide = false;
            }
            else if (type == 454)
            {
                name = "Phantasmal Sphere";
                width = 46;
                height = 46;
                aiStyle = 83;
                hostile = true;
                penetrate = -1;
                alpha = 255;
                timeLeft = 600;
                tileCollide = false;
            }
            else if (type == 455)
            {
                name = "Phantasmal Deathray";
                width = 36;
                height = 36;
                aiStyle = 84;
                hostile = true;
                penetrate = -1;
                alpha = 255;
                timeLeft = 600;
                tileCollide = false;
            }
            else if (type == 456)
            {
                name = "Moon Leech";
                width = 16;
                height = 16;
                aiStyle = 85;
                hostile = true;
                penetrate = -1;
                alpha = 255;
                timeLeft = 600;
                tileCollide = false;
            }
            else if (type == 459)
            {
                name = "Charged Blaster Orb";
                width = 22;
                height = 22;
                aiStyle = 1;
                friendly = true;
                magic = true;
                alpha = 255;
                scale = 1f;
                ignoreWater = true;
                extraUpdates = 1;
            }
            else if (type == 460)
            {
                name = "Charged Blaster Cannon";
                width = 14;
                height = 18;
                aiStyle = 75;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                magic = true;
                ignoreWater = true;
            }
            else if (type == 461)
            {
                name = "Charged Blaster Laser";
                width = 18;
                height = 18;
                aiStyle = 84;
                friendly = true;
                magic = true;
                penetrate = -1;
                alpha = 255;
                tileCollide = false;
                hide = true;
            }
            else if (type == 462)
            {
                name = "Phantasmal Bolt";
                width = 8;
                height = 8;
                aiStyle = 1;
                hostile = true;
                alpha = 255;
                extraUpdates = 3;
                ignoreWater = true;
                tileCollide = false;
            }
            else if (type == 463)
            {
                name = "Vicious Powder";
                width = 48;
                height = 48;
                aiStyle = 6;
                friendly = true;
                tileCollide = false;
                penetrate = -1;
                alpha = 255;
                ignoreWater = true;
            }
            else if (type == 464)
            {
                name = "Ice Mist";
                width = 60;
                height = 60;
                aiStyle = 86;
                hostile = true;
                tileCollide = false;
                penetrate = -1;
                alpha = 255;
                ignoreWater = true;
            }
            else if (type == 467)
            {
                name = "Fireball";
                width = 40;
                height = 40;
                aiStyle = 1;
                hostile = true;
                alpha = 255;
                ignoreWater = true;
                extraUpdates = 1;
            }
            else if (type == 468)
            {
                name = "Shadow Fireball";
                width = 40;
                height = 40;
                aiStyle = 1;
                hostile = true;
                alpha = 255;
                ignoreWater = true;
                extraUpdates = 1;
            }
            else if (type == 465)
            {
                name = "Lightning Orb";
                width = 80;
                height = 80;
                aiStyle = 88;
                hostile = true;
                alpha = 255;
                ignoreWater = true;
                tileCollide = false;
            }
            else if (type == 466)
            {
                name = "Lightning Orb Arc";
                width = 14;
                height = 14;
                aiStyle = 88;
                hostile = true;
                alpha = 255;
                ignoreWater = true;
                tileCollide = true;
                extraUpdates = 4;
                timeLeft = 120 * (extraUpdates + 1);
            }
            else if (type == 491)
            {
                name = "Flying Knife";
                width = 26;
                height = 26;
                aiStyle = 9;
                friendly = true;
                melee = true;
                penetrate = -1;
            }
            else if (type == 500)
            {
                name = "Crimson Heart";
                width = 20;
                height = 20;
                aiStyle = 67;
                penetrate = -1;
                netImportant = true;
                timeLeft *= 5;
                friendly = true;
                ignoreWater = true;
                scale = 0.8f;
            }
            else if (type == 499)
            {
                netImportant = true;
                name = "Baby Face Monster";
                width = 34;
                height = 34;
                aiStyle = 26;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 469)
            {
                alpha = 255;
                arrow = true;
                name = "Bee Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                ranged = true;
            }
            else if (type == 470)
            {
                name = "Sticky Dynamite";
                width = 10;
                height = 10;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
            }
            else if (type == 471)
            {
                name = "Bone";
                width = 16;
                height = 16;
                aiStyle = 2;
                scale = 1.2f;
                hostile = true;
                ranged = true;
            }
            else if (type == 472)
            {
                name = "Web spit";
                width = 8;
                height = 8;
                aiStyle = 0;
                hostile = true;
                penetrate = -1;
                aiStyle = 1;
                tileCollide = true;
                timeLeft = 50;
            }
            else if (type == 474)
            {
                arrow = true;
                name = "Bone Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                ranged = true;
            }
            else if (type == 473)
            {
                netImportant = true;
                name = "Spelunker Glowstick";
                width = 8;
                height = 8;
                aiStyle = 14;
                penetrate = -1;
                alpha = 75;
                light = 1f;
                timeLeft *= 2;
            }
            else if (type == 475)
            {
                name = "Vine Rope Coil";
                width = 14;
                height = 14;
                aiStyle = 35;
                penetrate = -1;
                tileCollide = false;
                timeLeft = 400;
            }
            else if (type == 476)
            {
                name = "Soul Drain";
                width = 200;
                height = 200;
                aiStyle = -1;
                friendly = true;
                tileCollide = false;
                penetrate = -1;
                alpha = 255;
                ignoreWater = true;
                timeLeft = 3;
            }
            else if (type == 477)
            {
                alpha = 255;
                name = "Crystal Dart";
                width = 14;
                height = 14;
                aiStyle = 1;
                friendly = true;
                penetrate = 7;
                extraUpdates = 1;
                ranged = true;
            }
            else if (type == 478)
            {
                alpha = 255;
                name = "Cursed Dart";
                width = 14;
                height = 14;
                aiStyle = 1;
                friendly = true;
                timeLeft = 300;
                ranged = true;
            }
            else if (type == 479)
            {
                alpha = 255;
                name = "Ichor Dart";
                width = 14;
                height = 14;
                aiStyle = 1;
                friendly = true;
                ranged = true;
            }
            else if (type == 480)
            {
                alpha = 255;
                name = "Cursed Flame";
                width = 12;
                height = 12;
                penetrate = 3;
                aiStyle = 14;
                friendly = true;
                timeLeft = 120;
                ranged = true;
                noEnchantments = true;
            }
            else if (type == 481)
            {
                name = "Chain Guillotine";
                width = 22;
                height = 22;
                aiStyle = 13;
                friendly = true;
                penetrate = -1;
                alpha = 255;
                melee = true;
                extraUpdates = 0;
            }
            else if (type == 482)
            {
                name = "Cursed Flames";
                width = 16;
                height = 200;
                aiStyle = 87;
                friendly = true;
                tileCollide = false;
                penetrate = 20;
                alpha = 255;
                ignoreWater = true;
                timeLeft = 2700;
            }
            else if (type == 483)
            {
                arrow = true;
                name = "Seedler";
                width = 14;
                height = 14;
                aiStyle = 14;
                friendly = true;
                ranged = true;
            }
            else if (type == 484)
            {
                arrow = true;
                name = "Seedler";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                ranged = true;
                extraUpdates = 1;
            }
            else if (type == 485)
            {
                arrow = true;
                name = "Hellwing";
                width = 24;
                height = 24;
                aiStyle = 1;
                friendly = true;
                ranged = true;
                penetrate = -1;
            }
            else if (type >= 486 && type <= 489)
            {
                name = "Hook";
                if (type == 486)
                {
                    width = 12;
                    height = 12;
                }
                else if (type == 487)
                {
                    width = 22;
                    height = 22;
                }
                else if (type == 488)
                {
                    width = 12;
                    height = 12;
                    light = 0.3f;
                }
                else if (type == 489)
                {
                    width = 20;
                    height = 16;
                }
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft *= 10;
            }
            else if (type == 492)
            {
                netImportant = true;
                name = "Magic Lantern";
                width = 18;
                height = 32;
                aiStyle = 90;
                friendly = true;
                penetrate = -1;
                timeLeft *= 5;
            }
            else if (type == 490)
            {
                name = "Lightning Ritual";
                width = 14;
                height = 14;
                aiStyle = 89;
                hostile = true;
                alpha = 255;
                ignoreWater = true;
                tileCollide = false;
                timeLeft = 600;
                netImportant = true;
            }
            else if (type == 493 || type == 494)
            {
                name = "Crystal Vile Shard";
                width = 32;
                height = 32;
                aiStyle = 4;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                alpha = 255;
                ignoreWater = true;
                magic = true;
                light = 0.2f;
            }
            else if (type == 495)
            {
                arrow = true;
                name = "Shadowflame Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                ranged = true;
                penetrate = 3;
            }
            else if (type == 496)
            {
                alpha = 255;
                name = "Shadowflame";
                width = 40;
                height = 40;
                aiStyle = 91;
                friendly = true;
                magic = true;
                MaxUpdates = 3;
                penetrate = 3;
            }
            else if (type == 497)
            {
                name = "Shadowflame Knife";
                width = 30;
                height = 30;
                aiStyle = 2;
                friendly = true;
                penetrate = 3;
                melee = true;
            }
            else if (type == 498)
            {
                name = "Nail";
                width = 6;
                height = 6;
                aiStyle = 1;
                hostile = true;
                penetrate = -1;
                timeLeft = 180;
            }
            else if (type == 501)
            {
                name = "Flask";
                width = 14;
                height = 14;
                aiStyle = 2;
                scale = 1.1f;
                hostile = true;
                ranged = true;
            }
            else if (type == 502)
            {
                name = "Meowmere";
                width = 16;
                height = 16;
                aiStyle = 8;
                friendly = true;
                melee = true;
                penetrate = 5;
            }
            else if (type == 503)
            {
                name = "Star Wrath";
                width = 24;
                height = 24;
                aiStyle = 5;
                friendly = true;
                penetrate = 2;
                alpha = 255;
                tileCollide = false;
                melee = true;
                extraUpdates = 1;
            }
            else if (type == 504)
            {
                name = "Spark";
                width = 10;
                height = 10;
                aiStyle = 2;
                friendly = true;
                magic = true;
                alpha = 255;
                penetrate = 2;
            }
            else if (type == 507)
            {
                name = "Javelin";
                width = 16;
                height = 16;
                aiStyle = 1;
                friendly = true;
                melee = true;
                penetrate = 3;
            }
            else if (type == 508)
            {
                name = "Javelin";
                width = 16;
                height = 16;
                aiStyle = 1;
                hostile = true;
                melee = true;
                penetrate = -1;
            }
            else if (type == 509)
            {
                name = "Butcher's Chainsaw";
                width = 22;
                height = 22;
                aiStyle = 20;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ownerHitCheck = true;
                melee = true;
                scale = 1.2f;
            }
            else if (type == 510)
            {
                name = "Toxic Flask";
                width = 18;
                height = 18;
                aiStyle = 2;
                friendly = true;
                penetrate = 1;
                magic = true;
            }
            else if (type == 511)
            {
                name = "Toxic Cloud";
                width = 32;
                height = 32;
                aiStyle = 92;
                friendly = true;
                penetrate = -1;
                scale = 1.1f;
                magic = true;
            }
            else if (type == 512)
            {
                name = "Toxic Cloud";
                width = 40;
                height = 38;
                aiStyle = 92;
                friendly = true;
                penetrate = -1;
                scale = 1.1f;
                magic = true;
            }
            else if (type == 513)
            {
                name = "Toxic Cloud";
                width = 30;
                height = 28;
                aiStyle = 92;
                friendly = true;
                penetrate = -1;
                scale = 1.1f;
                magic = true;
            }
            else if (type == 514)
            {
                name = "Nail";
                width = 10;
                height = 10;
                aiStyle = 93;
                friendly = true;
                penetrate = 3;
                alpha = 255;
                ranged = true;
            }
            else if (type == 515)
            {
                netImportant = true;
                name = "Bouncy Glowstick";
                width = 6;
                height = 6;
                aiStyle = 14;
                penetrate = -1;
                alpha = 75;
                light = 1f;
                timeLeft *= 5;
            }
            else if (type == 516)
            {
                name = "Bouncy Bomb";
                width = 22;
                height = 22;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
            }
            else if (type == 517)
            {
                name = "Bouncy Grenade";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                thrown = true;
            }
            else if (type == 518)
            {
                name = "Coin Portal";
                width = 32;
                height = 32;
                aiStyle = 94;
                friendly = true;
                alpha = 255;
                tileCollide = false;
                ignoreWater = true;
            }
            else if (type == 519)
            {
                name = "Bomb Fish";
                width = 24;
                height = 24;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
            }
            else if (type == 520)
            {
                name = "Frost Daggerfish";
                width = 22;
                height = 22;
                aiStyle = 2;
                friendly = true;
                penetrate = 3;
                thrown = true;
            }
            else if (type == 521)
            {
                name = "Crystal Charge";
                width = 14;
                height = 14;
                aiStyle = 29;
                alpha = 255;
                magic = true;
                penetrate = 1;
                friendly = true;
            }
            else if (type == 522)
            {
                name = "Crystal Charge";
                width = 8;
                height = 8;
                aiStyle = 29;
                alpha = 255;
                magic = true;
                penetrate = 1;
                friendly = true;
            }
            else if (type == 523)
            {
                name = "Toxic Bubble";
                width = 32;
                height = 32;
                aiStyle = 95;
                alpha = 255;
                ranged = true;
                penetrate = 1;
                friendly = true;
            }
            else if (type == 524)
            {
                name = "Ichor Splash";
                width = 10;
                height = 10;
                aiStyle = 96;
                friendly = true;
                alpha = 255;
                penetrate = -1;
                ignoreWater = true;
                melee = true;
                extraUpdates = 5;
            }
            else if (type == 525)
            {
                name = "Flying Piggy Bank";
                width = 30;
                height = 24;
                aiStyle = 97;
                tileCollide = false;
                timeLeft = 10800;
            }
            else if (type == 526)
            {
                name = "Energy";
                width = 8;
                height = 8;
                aiStyle = 98;
                tileCollide = false;
                timeLeft = 120;
                alpha = 255;
            }
            else if (type >= 527 && type <= 531)
            {
                name = "Tombstone";
                knockBack = 12f;
                width = 24;
                height = 24;
                aiStyle = 17;
                penetrate = -1;
            }
            else if (type == 532)
            {
                name = "XBone";
                width = 16;
                height = 16;
                aiStyle = 1;
                scale = 1f;
                friendly = true;
                thrown = true;
                penetrate = 3;
                extraUpdates = 1;
            }
            else if (type == 533)
            {
                netImportant = true;
                name = "Deadly Sphere";
                width = 20;
                height = 20;
                aiStyle = 66;
                penetrate = -1;
                timeLeft *= 5;
                minion = true;
                minionSlots = 1f;
                tileCollide = false;
                ignoreWater = true;
                friendly = true;
            }
            else if (type == 534)
            {
                extraUpdates = 0;
                name = "Yoyo";
                width = 16;
                height = 16;
                aiStyle = 99;
                friendly = true;
                penetrate = -1;
                melee = true;
                scale = 1f;
            }
            else if (type >= 541 && type <= 555)
            {
                extraUpdates = 0;
                name = "Yoyo";
                width = 16;
                height = 16;
                aiStyle = 99;
                friendly = true;
                penetrate = -1;
                melee = true;
                scale = 1f;
                if (type == 547)
                    scale = 1.1f;
                if (type == 554)
                    scale = 1.2f;
                if (type == 555)
                    scale = 1.15f;
                if (type == 551 || type == 550)
                    scale = 1.1f;
            }
            else if (type >= 562 && type <= 564)
            {
                extraUpdates = 0;
                name = "Yoyo";
                width = 16;
                height = 16;
                aiStyle = 99;
                friendly = true;
                penetrate = -1;
                melee = true;
                scale = 1f;
                if (type == 563)
                    scale = 1.05f;
                if (type == 564)
                    scale = 1.075f;
            }
            else if (type == 603)
            {
                extraUpdates = 0;
                name = "Terrarian";
                width = 16;
                height = 16;
                aiStyle = 99;
                friendly = true;
                penetrate = -1;
                melee = true;
                scale = 1.15f;
            }
            else if (type == 604)
            {
                extraUpdates = 0;
                name = "Terrarian";
                width = 16;
                height = 16;
                aiStyle = 115;
                friendly = true;
                penetrate = -1;
                melee = true;
                scale = 1.2f;
            }
            else if (type >= 556 && type <= 561)
            {
                extraUpdates = 0;
                name = "Counterweight";
                width = 10;
                height = 10;
                aiStyle = 99;
                friendly = true;
                penetrate = -1;
                melee = true;
                scale = 1f;
                counterweight = true;
            }
            else if (type == 535)
            {
                name = "Medusa Ray";
                width = 18;
                height = 18;
                aiStyle = 100;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                magic = true;
                ignoreWater = true;
            }
            else if (type == 536)
            {
                name = "Medusa Ray";
                width = 10;
                height = 10;
                aiStyle = 101;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                magic = true;
                ignoreWater = true;
            }
            else if (type == 537)
            {
                name = "Stardust Laser";
                width = 22;
                height = 22;
                aiStyle = 84;
                hostile = true;
                penetrate = -1;
                alpha = 255;
                timeLeft = 240;
                tileCollide = false;
            }
            else if (type == 538)
            {
                name = "Twinkle";
                width = 12;
                height = 12;
                aiStyle = 14;
                hostile = true;
                penetrate = -1;
                timeLeft = 120;
                extraUpdates = 1;
                alpha = 255;
            }
            else if (type == 539)
            {
                name = "Flow Invader";
                width = 18;
                height = 30;
                aiStyle = 102;
                hostile = true;
                penetrate = -1;
                timeLeft = 600;
            }
            else if (type == 540)
            {
                name = "Starmark";
                width = 20;
                height = 20;
                aiStyle = 103;
                hostile = true;
                penetrate = -1;
                timeLeft = 300;
                alpha = 255;
            }
            else if (type == 565)
            {
                name = "Brain of Confusion";
                width = 28;
                height = 28;
                aiStyle = 104;
                penetrate = -1;
                tileCollide = false;
                ignoreWater = true;
                alpha = 255;
                scale = 0.8f;
            }
            else if (type == 566)
            {
                name = "Bee";
                width = 16;
                height = 16;
                aiStyle = 36;
                friendly = true;
                penetrate = 4;
                alpha = 255;
                timeLeft = 660;
                extraUpdates = 3;
            }
            else if (type == 567 || type == 568)
            {
                name = "Spore";
                if (type == 567)
                {
                    width = 14;
                    height = 14;
                }
                else
                {
                    width = 16;
                    height = 16;
                }
                aiStyle = 105;
                friendly = true;
                penetrate = 1;
                alpha = 255;
                timeLeft = 3600;
                tileCollide = false;
                ignoreWater = true;
            }
            else if (type >= 569 && type <= 571)
            {
                name = "Spore";
                width = 32;
                height = 32;
                aiStyle = 106;
                friendly = true;
                penetrate = -1;
                alpha = 255;
                timeLeft = 3600;
                tileCollide = false;
                ignoreWater = true;
            }
            else if (type == 575)
            {
                name = "Nebula Sphere";
                width = 24;
                height = 24;
                aiStyle = 107;
                hostile = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft = 420;
                alpha = 255;
            }
            else if (type == 573)
            {
                name = "Nebula Piercer";
                width = 18;
                height = 30;
                aiStyle = 102;
                hostile = true;
                penetrate = -1;
                timeLeft = 600;
            }
            else if (type == 574)
            {
                name = "Nebula Eye";
                width = 18;
                height = 18;
                aiStyle = 102;
                hostile = true;
                timeLeft = 600;
                tileCollide = false;
            }
            else if (type == 572)
            {
                name = "Poison Spit";
                width = 10;
                height = 10;
                aiStyle = 1;
                alpha = 255;
                penetrate = -1;
                friendly = false;
                hostile = true;
            }
            else if (type == 576)
            {
                name = "Nebula Laser";
                width = 4;
                height = 4;
                aiStyle = 1;
                hostile = true;
                penetrate = -1;
                alpha = 255;
                extraUpdates = 2;
                scale = 1.2f;
                timeLeft = 600;
            }
            else if (type == 577)
            {
                name = "Vortex Laser";
                width = 4;
                height = 4;
                aiStyle = 1;
                hostile = true;
                penetrate = -1;
                alpha = 255;
                extraUpdates = 2;
                scale = 1.2f;
                timeLeft = 600;
            }
            else if (type == 578 || type == 579)
            {
                name = "Vortex";
                width = 32;
                height = 32;
                aiStyle = 108;
                friendly = true;
                alpha = 255;
                tileCollide = false;
                ignoreWater = true;
                hostile = true;
                hide = true;
            }
            else if (type == 580)
            {
                name = "Vortex Lightning";
                width = 14;
                height = 14;
                aiStyle = 88;
                hostile = true;
                alpha = 255;
                ignoreWater = true;
                tileCollide = true;
                extraUpdates = 4;
                timeLeft = 600;
            }
            else if (type == 581)
            {
                name = "Alien Goop";
                width = 10;
                height = 10;
                aiStyle = 1;
                alpha = 255;
                penetrate = -1;
                friendly = false;
                hostile = true;
            }
            else if (type == 582)
            {
                name = "Mechanic's Wrench";
                width = 20;
                height = 20;
                aiStyle = 109;
                friendly = true;
                penetrate = -1;
                MaxUpdates = 2;
            }
            else if (type == 583)
            {
                name = "Syringe";
                width = 10;
                height = 10;
                aiStyle = 2;
                friendly = true;
                scale = 0.8f;
            }
            else if (type == 589)
            {
                name = "Christmas Ornament";
                width = 10;
                height = 10;
                aiStyle = 2;
                friendly = true;
            }
            else if (type == 584)
            {
                name = "Syringe";
                width = 10;
                height = 10;
                aiStyle = 110;
                friendly = true;
                scale = 0.8f;
                penetrate = 3;
            }
            else if (type == 585)
            {
                name = "Skull";
                width = 26;
                height = 26;
                aiStyle = 1;
                alpha = 255;
                friendly = true;
                penetrate = 3;
            }
            else if (type == 586)
            {
                name = "Dryad's ward";
                width = 26;
                height = 26;
                aiStyle = 111;
                alpha = 255;
                friendly = true;
                penetrate = -1;
            }
            else if (type == 587)
            {
                name = "Paintball";
                width = 10;
                height = 10;
                aiStyle = 1;
                alpha = 255;
                friendly = true;
            }
            else if (type == 588)
            {
                name = "Confetti Grenade";
                width = 14;
                height = 14;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
            }
            else if (type == 590)
            {
                name = "Truffle Spore";
                width = 14;
                height = 14;
                aiStyle = 112;
                friendly = true;
                penetrate = 1;
                alpha = 255;
                timeLeft = 900;
                tileCollide = false;
                ignoreWater = true;
            }
            else if (type == 591)
            {
                name = "Minecart Laser";
                width = 8;
                height = 8;
                aiStyle = 101;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ignoreWater = true;
            }
            else if (type == 592)
            {
                name = "Laser Ray";
                width = 8;
                height = 8;
                aiStyle = 1;
                hostile = true;
                alpha = 255;
                extraUpdates = 3;
                ignoreWater = true;
            }
            else if (type == 593)
            {
                name = "Prophecy's End";
                width = 16;
                height = 16;
                aiStyle = 1;
                hostile = true;
                alpha = 255;
                extraUpdates = 1;
                ignoreWater = true;
            }
            else if (type == 594)
            {
                name = "Blowup Smoke";
                width = 40;
                height = 40;
                aiStyle = 1;
                alpha = 255;
                extraUpdates = 2;
            }
            else if (type == 595)
            {
                name = "Arkhalis";
                width = 68;
                height = 64;
                aiStyle = 75;
                friendly = true;
                tileCollide = false;
                melee = true;
                penetrate = -1;
                ownerHitCheck = true;
            }
            else if (type == 596)
            {
                name = "Desert Spirit's Curse";
                width = 8;
                height = 8;
                aiStyle = 107;
                hostile = true;
                alpha = 255;
                ignoreWater = true;
                timeLeft = 180;
                tileCollide = false;
            }
            else if (type == 597)
            {
                name = "Ember Bolt";
                width = 10;
                height = 10;
                aiStyle = 29;
                alpha = 255;
                magic = true;
                penetrate = 2;
                friendly = true;
            }
            else if (type == 598)
            {
                name = "Bone Javelin";
                width = 16;
                height = 16;
                aiStyle = 113;
                friendly = true;
                melee = true;
                penetrate = -1;
                alpha = 255;
                hide = true;
            }
            else if (type == 599)
            {
                name = "Bone Dagger";
                width = 22;
                height = 22;
                aiStyle = 2;
                friendly = true;
                penetrate = 6;
                thrown = true;
            }
            else if (type == 600)
            {
                name = "Portal Gun";
                width = 14;
                height = 14;
                aiStyle = 75;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ignoreWater = true;
            }
            else if (type == 601)
            {
                name = "Portal Bolt";
                width = 10;
                height = 10;
                aiStyle = 1;
                alpha = 255;
                friendly = true;
                extraUpdates = 7;
            }
            else if (type == 602)
            {
                name = "Portal Gate";
                width = 10;
                height = 10;
                aiStyle = 114;
                alpha = 255;
                friendly = true;
                tileCollide = false;
            }
            else if (type == 605)
            {
                name = "Slime Spike";
                alpha = 255;
                width = 6;
                height = 6;
                aiStyle = 1;
                hostile = true;
                penetrate = -1;
            }
            else if (type == 606)
            {
                name = "Laser";
                width = 5;
                height = 5;
                aiStyle = 1;
                friendly = true;
                alpha = 255;
                extraUpdates = 2;
                scale = 1f;
                timeLeft = 600;
                ignoreWater = true;
            }
            else if (type == 607)
            {
                name = "Solar Flare";
                width = 10;
                height = 10;
                aiStyle = 116;
                friendly = true;
                alpha = 255;
                timeLeft = 600;
                ignoreWater = true;
                tileCollide = false;
                penetrate = -1;
            }
            else if (type == 608)
            {
                name = "Solar Radiance";
                width = 160;
                height = 160;
                aiStyle = 117;
                friendly = true;
                alpha = 255;
                timeLeft = 3;
                ignoreWater = true;
                tileCollide = false;
                penetrate = -1;
                hide = true;
            }
            else if (type == 611)
            {
                name = "Solar Eruption";
                width = 16;
                height = 16;
                aiStyle = 75;
                friendly = true;
                melee = true;
                penetrate = -1;
                alpha = 255;
                hide = true;
                tileCollide = false;
                ignoreWater = true;
                updatedNPCImmunity = true;
            }
            else if (type == 612)
            {
                name = "Solar Eruption";
                width = 8;
                height = 8;
                aiStyle = 117;
                friendly = true;
                alpha = 255;
                ignoreWater = true;
                timeLeft = 60;
                tileCollide = false;
                penetrate = -1;
                updatedNPCImmunity = true;
            }
            else if (type == 613)
            {
                netImportant = true;
                name = "Stardust Cell";
                width = 24;
                height = 24;
                aiStyle = 62;
                penetrate = -1;
                timeLeft *= 5;
                minion = true;
                friendly = true;
                minionSlots = 1f;
                ignoreWater = true;
            }
            else if (type == 614)
            {
                name = "Stardust Cell";
                width = 16;
                height = 16;
                aiStyle = 113;
                friendly = true;
                penetrate = -1;
                alpha = 255;
            }
            else if (type == 615)
            {
                name = "Vortex Beater";
                width = 22;
                height = 22;
                aiStyle = 75;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ranged = true;
                ignoreWater = true;
            }
            else if (type == 616)
            {
                name = "Vortex Rocket";
                width = 14;
                height = 14;
                aiStyle = 1;
                friendly = true;
                penetrate = 1;
                alpha = 255;
                ranged = true;
                extraUpdates = 2;
                timeLeft = 90 * MaxUpdates;
            }
            else if (type == 617)
            {
                name = "Nebula Arcanum";
                width = 32;
                height = 32;
                aiStyle = 118;
                friendly = true;
                alpha = 255;
                ignoreWater = true;
                hide = true;
                magic = true;
                penetrate = 3;
            }
            else if (type == 618)
            {
                name = "Nebula Arcanum";
                tileCollide = false;
                width = 18;
                height = 30;
                aiStyle = 119;
                penetrate = -1;
                timeLeft = 420;
                magic = true;
                friendly = true;
            }
            else if (type == 619)
            {
                name = "Nebula Arcanum";
                width = 14;
                height = 14;
                aiStyle = 29;
                alpha = 255;
                magic = true;
                penetrate = 1;
                friendly = true;
            }
            else if (type == 620)
            {
                name = "Nebula Arcanum";
                width = 8;
                height = 8;
                aiStyle = 29;
                alpha = 255;
                magic = true;
                penetrate = 1;
                friendly = true;
            }
            else if (type == 622)
            {
                name = "Blowup Smoke";
                width = 10;
                height = 10;
                aiStyle = 1;
                alpha = 255;
                extraUpdates = 2;
            }
            else if (type == 623)
            {
                netImportant = true;
                name = "Stardust Guardian";
                width = 50;
                height = 80;
                aiStyle = 120;
                penetrate = -1;
                timeLeft *= 5;
                minion = true;
                friendly = true;
                minionSlots = 0.0f;
                ignoreWater = true;
                tileCollide = false;
            }
            else if (type == 624)
            {
                name = "Starburst";
                width = 8;
                height = 8;
                aiStyle = 117;
                friendly = true;
                alpha = 255;
                ignoreWater = true;
                timeLeft = 60;
                tileCollide = false;
                penetrate = -1;
            }
            else if (type >= 625 && type <= 628)
            {
                if (type == 625 || type == 628)
                    netImportant = true;
                if (type == 626 || type == 627)
                    minionSlots = 0.5f;
                name = "Stardust Dragon";
                width = 24;
                height = 24;
                aiStyle = 121;
                penetrate = -1;
                timeLeft *= 5;
                minion = true;
                friendly = true;
                ignoreWater = true;
                tileCollide = false;
                alpha = 255;
                hide = true;
            }
            else if (type == 629)
            {
                name = "Released Energy";
                width = 8;
                height = 8;
                aiStyle = 122;
                hostile = true;
                alpha = 255;
                ignoreWater = true;
                timeLeft = 3600;
                tileCollide = false;
                penetrate = -1;
                extraUpdates = 2;
            }
            else if (type == 630)
            {
                name = "Phantasm";
                width = 22;
                height = 22;
                aiStyle = 75;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                hide = true;
                ranged = true;
                ignoreWater = true;
            }
            else if (type == 631)
            {
                arrow = true;
                name = "Phantasm";
                width = 10;
                height = 10;
                aiStyle = 122;
                friendly = true;
                ranged = true;
                tileCollide = false;
                alpha = 255;
                ignoreWater = true;
                extraUpdates = 1;
            }
            else if (type == 633)
            {
                name = "Last Prism";
                width = 14;
                height = 18;
                aiStyle = 75;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                magic = true;
                ignoreWater = true;
            }
            else if (type == 632)
            {
                name = "Last Prism";
                width = 18;
                height = 18;
                aiStyle = 84;
                friendly = true;
                magic = true;
                penetrate = -1;
                alpha = 255;
                tileCollide = false;
            }
            else if (type == 634)
            {
                name = "Nebula Blaze";
                width = 40;
                height = 40;
                aiStyle = 1;
                friendly = true;
                alpha = 255;
                ignoreWater = true;
                extraUpdates = 2;
                magic = true;
            }
            else if (type == 635)
            {
                name = "Nebula Blaze Ex";
                width = 40;
                height = 40;
                aiStyle = 1;
                friendly = true;
                alpha = 255;
                friendly = true;
                extraUpdates = 3;
                magic = true;
            }
            else if (type == 636)
            {
                name = "Daybreak";
                width = 16;
                height = 16;
                aiStyle = 113;
                friendly = true;
                melee = true;
                penetrate = -1;
                alpha = 255;
                hide = true;
                MaxUpdates = 2;
            }
            else if (type == 637)
            {
                name = "Bouncy Dynamite";
                width = 10;
                height = 10;
                aiStyle = 16;
                friendly = true;
                penetrate = -1;
            }
            else if (type == 638)
            {
                name = "Luminite Bullet";
                width = 4;
                height = 4;
                aiStyle = 1;
                friendly = true;
                alpha = 255;
                extraUpdates = 5;
                timeLeft = 600;
                ranged = true;
                ignoreWater = true;
                updatedNPCImmunity = true;
                penetrate = -1;
            }
            else if (type == 639)
            {
                arrow = true;
                name = "Luminite Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                ranged = true;
                MaxUpdates = 2;
                timeLeft = MaxUpdates * 45;
                ignoreWater = true;
                updatedNPCImmunity = true;
                alpha = 255;
                penetrate = 4;
            }
            else if (type == 640)
            {
                name = "Luminite Arrow";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                ranged = true;
                MaxUpdates = 3;
                timeLeft = 90;
                ignoreWater = true;
                updatedNPCImmunity = true;
                alpha = 255;
                penetrate = 4;
            }
            else if (type == 642)
            {
                name = "Lunar Portal Laser";
                width = 18;
                height = 18;
                aiStyle = 84;
                friendly = true;
                penetrate = -1;
                alpha = 255;
                tileCollide = false;
                updatedNPCImmunity = true;
            }
            else if (type == 641)
            {
                name = "Lunar Portal";
                width = 32;
                height = 32;
                aiStyle = 123;
                timeLeft = 7200;
                ignoreWater = true;
                tileCollide = false;
                alpha = 255;
                hide = true;
            }
            else if (type == 643)
            {
                name = "Rainbow Crystal";
                width = 32;
                height = 32;
                aiStyle = 123;
                timeLeft = 7200;
                ignoreWater = true;
                tileCollide = false;
                alpha = 255;
            }
            else if (type == 644)
            {
                name = "Rainbow Explosion";
                width = 14;
                height = 14;
                aiStyle = 112;
                penetrate = 1;
                timeLeft = 900;
                tileCollide = false;
                ignoreWater = true;
                alpha = 255;
            }
            else if (type == 645)
            {
                name = "Lunar Flare";
                width = 10;
                height = 10;
                aiStyle = 1;
                friendly = true;
                magic = true;
                tileCollide = false;
                extraUpdates = 5;
                penetrate = -1;
                updatedNPCImmunity = true;
            }
            else if (type >= 646 && type <= 649)
            {
                name = "Lunar Hook";
                width = 18;
                height = 18;
                aiStyle = 7;
                friendly = true;
                penetrate = -1;
                tileCollide = false;
                timeLeft *= 10;
            }
            else if (type == 650)
            {
                name = "Suspicious Looking Tentacle";
                width = 20;
                height = 20;
                aiStyle = 124;
                penetrate = -1;
                netImportant = true;
                timeLeft *= 5;
                friendly = true;
                ignoreWater = true;
                tileCollide = false;
                manualDirectionChange = true;
            }
            else
                active = false;
            width = (int)(width * scale);
            height = (int)(height * scale);
            maxPenetrate = penetrate;
        }

        public static int GetNextSlot()
        {
            int num = 1000;
            for (int index = 0; index < 1000; ++index)
            {
                if (!Main.projectile[index].active)
                {
                    num = index;
                    break;
                }
            }
            return num;
        }

        public static int NewProjectile(float X, float Y, float SpeedX, float SpeedY, int Type, int Damage, float KnockBack, int Owner = 255, float ai0 = 0.0f, float ai1 = 0.0f)
        {
            int number = 1000;
            for (int index = 0; index < 1000; ++index)
            {
                if (!Main.projectile[index].active)
                {
                    number = index;
                    break;
                }
            }
            if (number == 1000)
                return number;
            Projectile projectile = Main.projectile[number];
            projectile.SetDefaults(Type);
            projectile.position.X = X - projectile.width * 0.5f;
            projectile.position.Y = Y - projectile.height * 0.5f;
            projectile.owner = Owner;
            projectile.velocity.X = SpeedX;
            projectile.velocity.Y = SpeedY;
            projectile.damage = Damage;
            projectile.knockBack = KnockBack;
            projectile.identity = number;
            projectile.gfxOffY = 0.0f;
            projectile.stepSpeed = 1f;
            projectile.wet = Collision.WetCollision(projectile.position, projectile.width, projectile.height);
            if (projectile.ignoreWater)
                projectile.wet = false;
            projectile.honeyWet = Collision.honey;
            if (projectile.aiStyle == 1)
            {
                while (projectile.velocity.X >= 16.0 || projectile.velocity.X <= -16.0 || (projectile.velocity.Y >= 16.0 || projectile.velocity.Y < -16.0))
                {
                    projectile.velocity.X *= 0.97f;
                    projectile.velocity.Y *= 0.97f;
                }
            }
            if (Owner == Main.myPlayer)
            {
                if (Type == 206)
                {
                    projectile.ai[0] = Main.rand.Next(-100, 101) * 0.0005f;
                    projectile.ai[1] = Main.rand.Next(-100, 101) * 0.0005f;
                }
                else if (Type == 335)
                    projectile.ai[1] = Main.rand.Next(4);
                else if (Type == 358)
                    projectile.ai[1] = Main.rand.Next(10, 31) * 0.1f;
                else if (Type == 406)
                {
                    projectile.ai[1] = Main.rand.Next(10, 21) * 0.1f;
                }
                else
                {
                    projectile.ai[0] = ai0;
                    projectile.ai[1] = ai1;
                }
            }
            if (Type == 434)
            {
                projectile.ai[0] = projectile.position.X;
                projectile.ai[1] = projectile.position.Y;
            }
            if (Main.netMode != 0 && Owner == Main.myPlayer)
                NetMessage.SendData(27, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
            if (Owner == Main.myPlayer)
            {
                if (Type == 28)
                    projectile.timeLeft = 180;
                if (Type == 516)
                    projectile.timeLeft = 180;
                if (Type == 519)
                    projectile.timeLeft = 180;
                if (Type == 29)
                    projectile.timeLeft = 300;
                if (Type == 470)
                    projectile.timeLeft = 300;
                if (Type == 637)
                    projectile.timeLeft = 300;
                if (Type == 30)
                    projectile.timeLeft = 180;
                if (Type == 517)
                    projectile.timeLeft = 180;
                if (Type == 37)
                    projectile.timeLeft = 180;
                if (Type == 75)
                    projectile.timeLeft = 180;
                if (Type == 133)
                    projectile.timeLeft = 180;
                if (Type == 136)
                    projectile.timeLeft = 180;
                if (Type == 139)
                    projectile.timeLeft = 180;
                if (Type == 142)
                    projectile.timeLeft = 180;
                if (Type == 397)
                    projectile.timeLeft = 180;
                if (Type == 419)
                    projectile.timeLeft = 600;
                if (Type == 420)
                    projectile.timeLeft = 600;
                if (Type == 421)
                    projectile.timeLeft = 600;
                if (Type == 422)
                    projectile.timeLeft = 600;
                if (Type == 588)
                    projectile.timeLeft = 180;
                if (Type == 443)
                    projectile.timeLeft = 300;
            }
            if (Type == 249)
                projectile.frame = Main.rand.Next(5);
            return number;
        }

        public void StatusNPC(int i)
        {
            if (melee && Main.player[owner].meleeEnchant > 0 && !noEnchantments)
            {
                int num = Main.player[owner].meleeEnchant;
                if (num == 1)
                    Main.npc[i].AddBuff(70, 60 * Main.rand.Next(5, 10), false);
                if (num == 2)
                    Main.npc[i].AddBuff(39, 60 * Main.rand.Next(3, 7), false);
                if (num == 3)
                    Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
                if (num == 5)
                    Main.npc[i].AddBuff(69, 60 * Main.rand.Next(10, 20), false);
                if (num == 6)
                    Main.npc[i].AddBuff(31, 60 * Main.rand.Next(1, 4), false);
                if (num == 8)
                    Main.npc[i].AddBuff(20, 60 * Main.rand.Next(5, 10), false);
                if (num == 4)
                    Main.npc[i].AddBuff(72, 120, false);
            }
            if (type == 195)
            {
                if (Main.rand.Next(3) == 0)
                    Main.npc[i].AddBuff(70, 60 * Main.rand.Next(10, 21), false);
                else
                    Main.npc[i].AddBuff(20, 60 * Main.rand.Next(10, 21), false);
            }
            if (type == 567 || type == 568)
                Main.npc[i].AddBuff(20, 60 * Main.rand.Next(5, 11), false);
            if (type == 598)
                Main.npc[i].AddBuff(169, 900, false);
            if (type == 636)
                Main.npc[i].AddBuff(189, 300, false);
            if (type == 611)
                Main.npc[i].AddBuff(189, 300, false);
            if (type == 612)
                Main.npc[i].AddBuff(189, 300, false);
            if (type == 614)
                Main.npc[i].AddBuff(183, 900, false);
            if (type == 585)
                Main.npc[i].AddBuff(153, 60 * Main.rand.Next(5, 11), false);
            if (type == 583)
                Main.npc[i].AddBuff(20, 60 * Main.rand.Next(3, 6), false);
            if (type == 524)
                Main.npc[i].AddBuff(69, 60 * Main.rand.Next(3, 8), false);
            if (type == 504 && Main.rand.Next(3) == 0)
            {
                if (Main.rand.Next(3) == 0)
                    Main.npc[i].AddBuff(24, Main.rand.Next(60, 180), false);
                else
                    Main.npc[i].AddBuff(24, Main.rand.Next(30, 120), false);
            }
            if (type == 545 && Main.rand.Next(3) == 0)
                Main.npc[i].AddBuff(24, Main.rand.Next(60, 240), false);
            if (type == 553)
                Main.npc[i].AddBuff(24, Main.rand.Next(180, 480), false);
            if (type == 552 && Main.rand.Next(3) != 0)
                Main.npc[i].AddBuff(44, Main.rand.Next(120, 320), false);
            if (type == 495)
                Main.npc[i].AddBuff(153, Main.rand.Next(120, 300), false);
            if (type == 497)
                Main.npc[i].AddBuff(153, Main.rand.Next(60, 180), false);
            if (type == 496)
                Main.npc[i].AddBuff(153, Main.rand.Next(240, 480), false);
            if (type == 476)
                Main.npc[i].AddBuff(151, 30, false);
            if (type == 523)
                Main.npc[i].AddBuff(20, 60 * Main.rand.Next(10, 30), false);
            if (type == 478 || type == 480)
                Main.npc[i].AddBuff(39, 60 * Main.rand.Next(3, 7), false);
            if (type == 479)
                Main.npc[i].AddBuff(69, 60 * Main.rand.Next(7, 15), false);
            if (type == 379)
                Main.npc[i].AddBuff(70, 60 * Main.rand.Next(4, 7), false);
            if (type >= 390 && type <= 392)
                Main.npc[i].AddBuff(70, 60 * Main.rand.Next(2, 5), false);
            if (type == 374)
                Main.npc[i].AddBuff(20, 60 * Main.rand.Next(4, 7), false);
            if (type == 376)
                Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
            if (type >= 399 && type <= 402)
                Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
            if (type == 295 || type == 296)
                Main.npc[i].AddBuff(24, 60 * Main.rand.Next(8, 16), false);
            if ((melee || ranged) && (Main.player[owner].frostBurn && !noEnchantments))
                Main.npc[i].AddBuff(44, 60 * Main.rand.Next(5, 15), false);
            if (melee && Main.player[owner].magmaStone && !noEnchantments)
            {
                if (Main.rand.Next(7) == 0)
                    Main.npc[i].AddBuff(24, 360, false);
                else if (Main.rand.Next(3) == 0)
                    Main.npc[i].AddBuff(24, 120, false);
                else
                    Main.npc[i].AddBuff(24, 60, false);
            }
            if (type == 287)
                Main.npc[i].AddBuff(72, 120, false);
            if (type == 285)
            {
                if (Main.rand.Next(3) == 0)
                    Main.npc[i].AddBuff(31, 180, false);
                else
                    Main.npc[i].AddBuff(31, 60, false);
            }
            if (type == 2 && Main.rand.Next(3) == 0)
                Main.npc[i].AddBuff(24, 180, false);
            if (type == 172)
            {
                if (Main.rand.Next(3) == 0)
                    Main.npc[i].AddBuff(44, 180, false);
            }
            else if (type == 15)
            {
                if (Main.rand.Next(2) == 0)
                    Main.npc[i].AddBuff(24, 300, false);
            }
            else if (type == 253)
            {
                if (Main.rand.Next(2) == 0)
                    Main.npc[i].AddBuff(44, 480, false);
            }
            else if (type == 19)
            {
                if (Main.rand.Next(5) == 0)
                    Main.npc[i].AddBuff(24, 180, false);
            }
            else if (type == 33)
            {
                if (Main.rand.Next(5) == 0)
                    Main.npc[i].AddBuff(20, 420, false);
            }
            else if (type == 34)
            {
                if (Main.rand.Next(2) == 0)
                    Main.npc[i].AddBuff(24, Main.rand.Next(240, 480), false);
            }
            else if (type == 35)
            {
                if (Main.rand.Next(4) == 0)
                    Main.npc[i].AddBuff(24, 180, false);
            }
            else if (type == 54)
            {
                if (Main.rand.Next(2) == 0)
                    Main.npc[i].AddBuff(20, 600, false);
            }
            else if (type == 267)
            {
                if (Main.rand.Next(3) == 0)
                    Main.npc[i].AddBuff(20, 3600, false);
                else
                    Main.npc[i].AddBuff(20, 1800, false);
            }
            else if (type == 63)
            {
                if (Main.rand.Next(5) != 0)
                    Main.npc[i].AddBuff(31, 60 * Main.rand.Next(2, 5), false);
            }
            else if (type == 85 || type == 188)
                Main.npc[i].AddBuff(24, 1200, false);
            else if (type == 95 || type == 103 || type == 104)
                Main.npc[i].AddBuff(39, 420, false);
            else if (type == 278 || type == 279 || type == 280)
                Main.npc[i].AddBuff(69, 600, false);
            else if (type == 282 || type == 283)
                Main.npc[i].AddBuff(70, 600, false);
            if (type == 163 || type == 310)
            {
                if (Main.rand.Next(3) == 0)
                    Main.npc[i].AddBuff(24, 600, false);
                else
                    Main.npc[i].AddBuff(24, 300, false);
            }
            else if (type == 98)
                Main.npc[i].AddBuff(20, 600, false);
            else if (type == 184)
                Main.npc[i].AddBuff(20, 900, false);
            else if (type == 265)
            {
                Main.npc[i].AddBuff(20, 1800, false);
            }
            else
            {
                if (type != 355)
                    return;
                Main.npc[i].AddBuff(70, 1800, false);
            }
        }

        public void StatusPvP(int i)
        {
            if (melee && Main.player[owner].meleeEnchant > 0 && !noEnchantments)
            {
                int num = Main.player[owner].meleeEnchant;
                if (num == 1)
                    Main.player[i].AddBuff(70, 60 * Main.rand.Next(5, 10), true);
                if (num == 2)
                    Main.player[i].AddBuff(39, 60 * Main.rand.Next(3, 7), true);
                if (num == 3)
                    Main.player[i].AddBuff(24, 60 * Main.rand.Next(3, 7), true);
                if (num == 5)
                    Main.player[i].AddBuff(69, 60 * Main.rand.Next(10, 20), true);
                if (num == 6)
                    Main.player[i].AddBuff(31, 60 * Main.rand.Next(1, 4), true);
                if (num == 8)
                    Main.player[i].AddBuff(20, 60 * Main.rand.Next(5, 10), true);
            }
            if (type == 295 || type == 296)
                Main.player[i].AddBuff(24, 60 * Main.rand.Next(8, 16), true);
            if (type == 478 || type == 480)
                Main.player[i].AddBuff(39, 60 * Main.rand.Next(3, 7), true);
            if ((melee || ranged) && (Main.player[owner].frostBurn && !noEnchantments))
                Main.player[i].AddBuff(44, 60 * Main.rand.Next(1, 8), false);
            if (melee && Main.player[owner].magmaStone && !noEnchantments)
            {
                if (Main.rand.Next(4) == 0)
                    Main.player[i].AddBuff(24, 360, true);
                else if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(24, 240, true);
                else
                    Main.player[i].AddBuff(24, 120, true);
            }
            if (type == 2 && Main.rand.Next(3) == 0)
                Main.player[i].AddBuff(24, 180, false);
            if (type == 172)
            {
                if (Main.rand.Next(3) == 0)
                    Main.player[i].AddBuff(44, 240, false);
            }
            else if (type == 15)
            {
                if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(24, 300, false);
            }
            else if (type == 253)
            {
                if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(44, 480, false);
            }
            else if (type == 19)
            {
                if (Main.rand.Next(5) == 0)
                    Main.player[i].AddBuff(24, 180, false);
            }
            else if (type == 33)
            {
                if (Main.rand.Next(5) == 0)
                    Main.player[i].AddBuff(20, 420, false);
            }
            else if (type == 34)
            {
                if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(24, 240, false);
            }
            else if (type == 35)
            {
                if (Main.rand.Next(4) == 0)
                    Main.player[i].AddBuff(24, 180, false);
            }
            else if (type == 54)
            {
                if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(20, 600, false);
            }
            else if (type == 267)
            {
                if (Main.rand.Next(3) == 0)
                    Main.player[i].AddBuff(20, 3600, true);
                else
                    Main.player[i].AddBuff(20, 1800, true);
            }
            else if (type == 63)
            {
                if (Main.rand.Next(3) != 0)
                    Main.player[i].AddBuff(31, 120, true);
            }
            else if (type == 85 || type == 188)
                Main.player[i].AddBuff(24, 1200, false);
            else if (type == 95 || type == 103 || type == 104)
                Main.player[i].AddBuff(39, 420, true);
            else if (type == 278 || type == 279 || type == 280)
                Main.player[i].AddBuff(69, 900, true);
            else if (type == 282 || type == 283)
                Main.player[i].AddBuff(70, 600, true);
            if (type == 163 || type == 310)
            {
                if (Main.rand.Next(3) == 0)
                    Main.player[i].AddBuff(24, 600, true);
                else
                    Main.player[i].AddBuff(24, 300, true);
            }
            else if (type == 265)
            {
                Main.player[i].AddBuff(20, 1200, true);
            }
            else
            {
                if (type != 355)
                    return;
                Main.player[i].AddBuff(70, 1800, true);
            }
        }

        public void ghostHurt(int dmg, Vector2 Position)
        {
            if (!magic)
                return;
            int Damage = damage / 2;
            if (dmg / 2 <= 1)
                return;
            int num1 = 1000;
            if (Main.player[Main.myPlayer].ghostDmg > num1)
                return;
            Main.player[Main.myPlayer].ghostDmg += Damage;
            int[] numArray = new int[200];
            int maxValue1 = 0;
            int maxValue2 = 0;
            for (int index = 0; index < 200; ++index)
            {
                if (Main.npc[index].CanBeChasedBy(this, false))
                {
                    float num2 = Math.Abs(Main.npc[index].position.X + (Main.npc[index].width / 2) - position.X + (width / 2)) + Math.Abs(Main.npc[index].position.Y + (Main.npc[index].height / 2) - position.Y + (height / 2));
                    if (num2 < 800.0)
                    {
                        if (Collision.CanHit(position, 1, 1, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height) && num2 > 50.0)
                        {
                            numArray[maxValue2] = index;
                            ++maxValue2;
                        }
                        else if (maxValue2 == 0)
                        {
                            numArray[maxValue1] = index;
                            ++maxValue1;
                        }
                    }
                }
            }
            if (maxValue1 == 0 && maxValue2 == 0)
                return;
            int ai0 = maxValue2 <= 0 ? numArray[Main.rand.Next(maxValue1)] : numArray[Main.rand.Next(maxValue2)];
            float num4 = 4f;
            float num5 = Main.rand.Next(-100, 101);
            float num6 = Main.rand.Next(-100, 101);
            float num7 = (float)Math.Sqrt(num5 * num5 + num6 * num6);
            float num8 = num4 / num7;
            float SpeedX = num5 * num8;
            float SpeedY = num6 * num8;
            NewProjectile(Position.X, Position.Y, SpeedX, SpeedY, 356, Damage, 0.0f, owner, ai0, 0.0f);
        }

        public void ghostHeal(int dmg, Vector2 Position)
        {
            float num1 = 0.2f - numHits * 0.05f;
            if (num1 <= 0.0)
                return;
            float ai1 = dmg * num1;
            if ((int)ai1 <= 0 || Main.player[Main.myPlayer].lifeSteal <= 0.0)
                return;
            Main.player[Main.myPlayer].lifeSteal -= ai1;
            if (!magic)
                return;
            float num2 = 0.0f;
            int ai0 = owner;
            for (int index = 0; index < 255; ++index)
            {
                if (Main.player[index].active && !Main.player[index].dead && (!Main.player[owner].hostile && !Main.player[index].hostile || Main.player[owner].team == Main.player[index].team) && ((Math.Abs(Main.player[index].position.X + (Main.player[index].width / 2) - position.X + (width / 2)) + Math.Abs(Main.player[index].position.Y + (Main.player[index].height / 2) - position.Y + (height / 2))) < 1200.0 && (Main.player[index].statLifeMax2 - Main.player[index].statLife) > num2))
                {
                    num2 = (Main.player[index].statLifeMax2 - Main.player[index].statLife);
                    ai0 = index;
                }
            }
            NewProjectile(Position.X, Position.Y, 0.0f, 0.0f, 298, 0, 0.0f, owner, ai0, ai1);
        }

        public void vampireHeal(int dmg, Vector2 Position)
        {
            float ai1 = dmg * 0.075f;
            if ((int)ai1 == 0 || Main.player[Main.myPlayer].lifeSteal <= 0.0)
                return;
            Main.player[Main.myPlayer].lifeSteal -= ai1;
            int ai0 = owner;
            NewProjectile(Position.X, Position.Y, 0.0f, 0.0f, 305, 0, 0.0f, owner, ai0, ai1);
        }

        public void StatusPlayer(int i)
        {
            if (type == 472)
                Main.player[i].AddBuff(149, Main.rand.Next(30, 150), true);
            if (type == 467)
                Main.player[i].AddBuff(24, Main.rand.Next(30, 150), true);
            if (type == 581)
            {
                if (Main.expertMode)
                    Main.player[i].AddBuff(164, Main.rand.Next(300, 540), true);
                else if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(164, Main.rand.Next(360, 720), true);
            }
            if (type == 572 && Main.rand.Next(3) != 0)
                Main.player[i].AddBuff(20, Main.rand.Next(120, 240), true);
            if (type == 276)
            {
                if (Main.expertMode)
                    Main.player[i].AddBuff(20, Main.rand.Next(120, 540), true);
                else if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(20, Main.rand.Next(180, 420), true);
            }
            if (type == 436 && Main.rand.Next(5) >= 2)
                Main.player[i].AddBuff(31, 300, true);
            if (type == 435 && Main.rand.Next(3) != 0)
                Main.player[i].AddBuff(144, 300, true);
            if (type == 437)
                Main.player[i].AddBuff(144, 60 * Main.rand.Next(4, 9), true);
            if (type == 348)
            {
                if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(46, 600, true);
                else
                    Main.player[i].AddBuff(46, 300, true);
                if (Main.rand.Next(3) != 0)
                {
                    if (Main.rand.Next(16) == 0)
                        Main.player[i].AddBuff(47, 60, true);
                    else if (Main.rand.Next(12) == 0)
                        Main.player[i].AddBuff(47, 40, true);
                    else if (Main.rand.Next(8) == 0)
                        Main.player[i].AddBuff(47, 20, true);
                }
            }
            if (type == 349)
            {
                if (Main.rand.Next(3) == 0)
                    Main.player[i].AddBuff(46, 600, true);
                else if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(46, 300, true);
            }
            if (type >= 399 && type <= 402)
                Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
            if (type == 55)
            {
                if (Main.rand.Next(3) == 0)
                    Main.player[i].AddBuff(20, 600, true);
                else if (Main.expertMode)
                    Main.player[i].AddBuff(20, Main.rand.Next(60, 300), true);
            }
            if (type == 44 && Main.rand.Next(3) == 0)
                Main.player[i].AddBuff(22, 900, true);
            if (type == 293)
                Main.player[i].AddBuff(80, 60 * Main.rand.Next(2, 7), true);
            if (type == 82 && Main.rand.Next(3) == 0)
                Main.player[i].AddBuff(24, 420, true);
            if (type == 285)
            {
                if (Main.rand.Next(3) == 0)
                    Main.player[i].AddBuff(31, 180, true);
                else
                    Main.player[i].AddBuff(31, 60, true);
            }
            if (type == 96 || type == 101)
            {
                if (Main.rand.Next(6) == 0)
                    Main.player[i].AddBuff(39, 480, true);
                else if (Main.rand.Next(4) == 0)
                    Main.player[i].AddBuff(39, 300, true);
                else if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(39, 180, true);
            }
            else if (type == 288)
                Main.player[i].AddBuff(69, 900, true);
            else if (type == 253 && Main.rand.Next(2) == 0)
                Main.player[i].AddBuff(44, 600, true);
            if (type == 291 || type == 292)
                Main.player[i].AddBuff(24, 60 * Main.rand.Next(8, 16), true);
            if (type == 98)
                Main.player[i].AddBuff(20, 600, true);
            if (type == 184)
                Main.player[i].AddBuff(20, 900, true);
            if (type == 290)
                Main.player[i].AddBuff(32, 60 * Main.rand.Next(5, 16), true);
            if (type == 174)
            {
                Main.player[i].AddBuff(46, 1200, true);
                if (!Main.player[i].frozen && Main.rand.Next(20) == 0)
                    Main.player[i].AddBuff(47, 90, true);
                else if (!Main.player[i].frozen && Main.expertMode && Main.rand.Next(20) == 0)
                    Main.player[i].AddBuff(47, 60, true);
            }
            if (type == 257)
            {
                Main.player[i].AddBuff(46, 2700, true);
                if (!Main.player[i].frozen && Main.rand.Next(5) == 0)
                    Main.player[i].AddBuff(47, 60, true);
            }
            if (type == 177)
            {
                Main.player[i].AddBuff(46, 1500, true);
                if (!Main.player[i].frozen && Main.rand.Next(10) == 0)
                    Main.player[i].AddBuff(47, Main.rand.Next(30, 120), true);
            }
            if (type != 176)
                return;
            if (Main.rand.Next(4) == 0)
            {
                Main.player[i].AddBuff(20, 1200, true);
            }
            else
            {
                if (Main.rand.Next(2) != 0)
                    return;
                Main.player[i].AddBuff(20, 300, true);
            }
        }

        public void Damage()
        {
            if (type == 18 || type == 72 || (type == 86 || type == 87) || (aiStyle == 31 || aiStyle == 32 || (type == 226 || type == 378)) || (type == 613 || type == 650 || type == 434 && localAI[0] != 0.0 || (type == 439 || type == 444)) || (type == 451 && ((int)(ai[0] - 1.0) / penetrate == 0 || ai[1] < 5.0) && ai[0] != 0.0 || (type == 500 || type == 460 || (type == 633 || type == 600) || (type == 601 || type == 602 || type == 535))) || (type == 631 && localAI[1] == 0.0 || aiStyle == 93 && ai[0] != 0.0 && ai[0] != 2.0 || aiStyle == 10 && localAI[1] == -1.0) || Main.projPet[type] && type != 266 && (type != 407 && type != 317) && ((type != 388 || ai[0] != 2.0) && (type < 390 || type > 392)) && ((type < 393 || type > 395) && (type != 533 || ai[0] < 6.0 || ai[0] > 8.0)) && (type < 625 || type > 628))
                return;
            Rectangle myRect = new Rectangle((int)position.X, (int)position.Y, width, height);
            if (type == 85 || type == 101)
            {
                int num = 30;
                myRect.X -= num;
                myRect.Y -= num;
                myRect.Width += num * 2;
                myRect.Height += num * 2;
            }
            if (type == 188)
            {
                int num = 20;
                myRect.X -= num;
                myRect.Y -= num;
                myRect.Width += num * 2;
                myRect.Height += num * 2;
            }
            if (aiStyle == 29)
            {
                int num = 4;
                myRect.X -= num;
                myRect.Y -= num;
                myRect.Width += num * 2;
                myRect.Height += num * 2;
            }
            if (friendly && owner == Main.myPlayer && !npcProj)
            {
                if (aiStyle == 16 && type != 338 && (type != 339 && type != 340) && type != 341 && (timeLeft <= 1 || type == 108 || type == 164) || type == 286 && localAI[1] == -1.0)
                {
                    int index = Main.myPlayer;
                    if (Main.player[index].active && !Main.player[index].dead && !Main.player[index].immune && (!ownerHitCheck || Collision.CanHit(Main.player[owner].position, Main.player[owner].width, Main.player[owner].height, Main.player[index].position, Main.player[index].width, Main.player[index].height)))
                    {
                        Rectangle rectangle = new Rectangle((int)Main.player[index].position.X, (int)Main.player[index].position.Y, Main.player[index].width, Main.player[index].height);
                        if (myRect.Intersects(rectangle))
                        {
                            if (Main.player[index].position.X + (Main.player[index].width / 2) < position.X + (width / 2))
                                direction = -1;
                            else
                                direction = 1;
                            int Damage = Main.DamageVar(damage);
                            StatusPlayer(index);
                            Main.player[index].Hurt(Damage, direction, true, false, Lang.deathMsg(owner, -1, whoAmI, -1), false);
                            if (trap)
                            {
                                Main.player[index].trapDebuffSource = true;
                                if (Main.player[index].dead)
                                    AchievementsHelper.HandleSpecialEvent(Main.player[index], 4);
                            }
                            if (Main.netMode != 0)
                                NetMessage.SendData(26, -1, -1, Lang.deathMsg(owner, -1, whoAmI, -1), index, direction, Damage, 1f, 0, 0, 0);
                        }
                    }
                }
                if (aiStyle != 45 && aiStyle != 92 && (aiStyle != 105 && aiStyle != 106) && (type != 463 && type != 69 && (type != 70 && type != 621)) && (type != 10 && type != 11 && (type != 379 && type != 407) && (type != 476 && type != 623 && (type < 625 || type > 628))))
                {
                    int num1 = (int)(position.X / 16.0);
                    int num2 = (int)((position.X + width) / 16.0) + 1;
                    int num3 = (int)(position.Y / 16.0);
                    int num4 = (int)((position.Y + height) / 16.0) + 1;
                    if (num1 < 0)
                        num1 = 0;
                    if (num2 > Main.maxTilesX)
                        num2 = Main.maxTilesX;
                    if (num3 < 0)
                        num3 = 0;
                    if (num4 > Main.maxTilesY)
                        num4 = Main.maxTilesY;
                    AchievementsHelper.CurrentlyMining = true;
                    for (int i = num1; i < num2; ++i)
                    {
                        for (int j = num3; j < num4; ++j)
                        {
                            if (Main.tile[i, j] != null && Main.tileCut[Main.tile[i, j].type] && (Main.tile[i, j + 1] != null && Main.tile[i, j + 1].type != 78) && Main.tile[i, j + 1].type != 380)
                            {
                                WorldGen.KillTile(i, j, false, false, false);
                                if (Main.netMode != 0)
                                    NetMessage.SendData(17, -1, -1, "", 0, i, j, 0.0f, 0, 0, 0);
                            }
                        }
                    }
                    if (type == 461 || type == 632 || type == 642)
                        Utils.PlotTileLine(Center, Center + velocity * localAI[1], width * scale, new Utils.PerLinePoint(DelegateMethods.CutTiles));
                    else if (type == 611)
                        Utils.PlotTileLine(Center, Center + velocity, width * scale, new Utils.PerLinePoint(DelegateMethods.CutTiles));
                    AchievementsHelper.CurrentlyMining = false;
                }
            }
            if (owner == Main.myPlayer)
            {
                if (damage > 0)
                {
                    for (int index1 = 0; index1 < 200; ++index1)
                    {
                        bool flag1 = !updatedNPCImmunity || npcImmune[index1] == 0;
                        if (Main.npc[index1].active && !Main.npc[index1].dontTakeDamage && flag1 && (friendly && (!Main.npc[index1].friendly || type == 318 || Main.npc[index1].type == 22 && owner < 255 && Main.player[owner].killGuide || Main.npc[index1].type == 54 && owner < 255 && Main.player[owner].killClothier) || hostile && Main.npc[index1].friendly) && (owner < 0 || Main.npc[index1].immune[owner] == 0 || maxPenetrate == 1))
                        {
                            bool flag2 = false;
                            if (type == 11 && (Main.npc[index1].type == 47 || Main.npc[index1].type == 57))
                                flag2 = true;
                            else if (type == 31 && Main.npc[index1].type == 69)
                                flag2 = true;
                            else if (Main.npc[index1].trapImmune && trap)
                                flag2 = true;
                            else if (Main.npc[index1].immortal && npcProj)
                                flag2 = true;
                            if (!flag2 && (Main.npc[index1].noTileCollide || !ownerHitCheck || Collision.CanHit(Main.player[owner].position, Main.player[owner].width, Main.player[owner].height, Main.npc[index1].position, Main.npc[index1].width, Main.npc[index1].height)))
                            {
                                bool flag3;
                                if (Main.npc[index1].type == 414)
                                {
                                    Rectangle rect = Main.npc[index1].getRect();
                                    int num = 8;
                                    rect.X -= num;
                                    rect.Y -= num;
                                    rect.Width += num * 2;
                                    rect.Height += num * 2;
                                    flag3 = Colliding(myRect, rect);
                                }
                                else
                                    flag3 = Colliding(myRect, Main.npc[index1].getRect());
                                if (flag3)
                                {
                                    if (type == 604)
                                        Main.player[owner].Counterweight(Main.npc[index1].Center, damage, knockBack);
                                    if (Main.npc[index1].reflectingProjectiles && CanReflect())
                                    {
                                        Main.npc[index1].ReflectProjectile(whoAmI);
                                        return;
                                    }
                                    int Damage1 = Main.DamageVar(damage);
                                    if (type == 604)
                                    {
                                        friendly = false;
                                        ai[1] = 1000f;
                                    }
                                    if ((type == 400 || type == 401 || type == 402) && (Main.npc[index1].type >= 13 && Main.npc[index1].type <= 15))
                                    {
                                        Damage1 = (int)(Damage1 * 0.65);
                                        if (penetrate > 1)
                                            --penetrate;
                                    }
                                    if (type == 504)
                                        ai[0] += (float)((60.0 - ai[0]) / 2.0);
                                    if (aiStyle == 3 && type != 301)
                                    {
                                        if (ai[0] == 0.0)
                                        {
                                            velocity.X = -velocity.X;
                                            velocity.Y = -velocity.Y;
                                            netUpdate = true;
                                        }
                                        ai[0] = 1f;
                                    }
                                    else if (type == 582)
                                    {
                                        if (ai[0] != 0.0)
                                            direction *= -1;
                                    }
                                    else if (type == 612)
                                        direction = Main.player[owner].direction;
                                    else if (type == 624)
                                    {
                                        float num = 1f;
                                        if (Main.npc[index1].knockBackResist > 0.0)
                                            num = 1f / Main.npc[index1].knockBackResist;
                                        knockBack = 4f * num;
                                        if (Main.npc[index1].Center.X < Center.X)
                                            direction = 1;
                                        else
                                            direction = -1;
                                    }
                                    else if (aiStyle == 16)
                                    {
                                        if (timeLeft > 3)
                                            timeLeft = 3;
                                        if (Main.npc[index1].position.X + (Main.npc[index1].width / 2) < position.X + (width / 2))
                                            direction = -1;
                                        else
                                            direction = 1;
                                    }
                                    else if (aiStyle == 68)
                                    {
                                        if (timeLeft > 3)
                                            timeLeft = 3;
                                        if (Main.npc[index1].position.X + (Main.npc[index1].width / 2) < position.X + (width / 2))
                                            direction = -1;
                                        else
                                            direction = 1;
                                    }
                                    else if (aiStyle == 50)
                                    {
                                        if (Main.npc[index1].position.X + (Main.npc[index1].width / 2) < position.X + (width / 2))
                                            direction = -1;
                                        else
                                            direction = 1;
                                    }
                                    if (type == 509)
                                    {
                                        int num = Main.rand.Next(2, 6);
                                        for (int index2 = 0; index2 < num; ++index2)
                                        {
                                            Vector2 vector2 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
                                            vector2 += velocity * 3f;
                                            vector2.Normalize();
                                            vector2 *= Main.rand.Next(35, 81) * 0.1f;
                                            int Damage2 = (int)(damage * 0.5);
                                            NewProjectile(Center.X, Center.Y, vector2.X, vector2.Y, 504, Damage2, knockBack * 0.2f, owner, 0.0f, 0.0f);
                                        }
                                    }
                                    if (type == 598 || type == 636 || type == 614)
                                    {
                                        ai[0] = 1f;
                                        ai[1] = index1;
                                        velocity = (Main.npc[index1].Center - Center) * 0.75f;
                                        netUpdate = true;
                                    }
                                    if (type >= 511 && type <= 513)
                                        timeLeft = 0;
                                    if (type == 524)
                                    {
                                        netUpdate = true;
                                        ai[0] += 50f;
                                    }
                                    if (aiStyle == 39)
                                    {
                                        if (ai[1] == 0.0)
                                        {
                                            ai[1] = (index1 + 1);
                                            netUpdate = true;
                                        }
                                        if (Main.player[owner].position.X + (Main.player[owner].width / 2) < position.X + (width / 2))
                                            direction = 1;
                                        else
                                            direction = -1;
                                    }
                                    if (type == 41 && timeLeft > 1)
                                        timeLeft = 1;
                                    bool crit = false;
                                    if (!npcProj && !trap)
                                    {
                                        if (melee && Main.rand.Next(1, 101) <= Main.player[owner].meleeCrit)
                                            crit = true;
                                        if (ranged && Main.rand.Next(1, 101) <= Main.player[owner].rangedCrit)
                                            crit = true;
                                        if (magic && Main.rand.Next(1, 101) <= Main.player[owner].magicCrit)
                                            crit = true;
                                        if (thrown && Main.rand.Next(1, 101) <= Main.player[owner].thrownCrit)
                                            crit = true;
                                    }
                                    if (aiStyle == 99)
                                    {
                                        Main.player[owner].Counterweight(Main.npc[index1].Center, damage, knockBack);
                                        if (Main.npc[index1].Center.X < Main.player[owner].Center.X)
                                            direction = -1;
                                        else
                                            direction = 1;
                                        if (ai[0] >= 0.0)
                                        {
                                            Vector2 vector2_1 = Center - Main.npc[index1].Center;
                                            vector2_1.Normalize();
                                            float num = 16f;
                                            Projectile projectile1 = this;
                                            Vector2 vector2_2 = projectile1.velocity * -0.5f;
                                            projectile1.velocity = vector2_2;
                                            Projectile projectile2 = this;
                                            Vector2 vector2_3 = projectile2.velocity + vector2_1 * num;
                                            projectile2.velocity = vector2_3;
                                            netUpdate = true;
                                            localAI[0] += 20f;
                                            if (!Collision.CanHit(position, width, height, Main.player[owner].position, Main.player[owner].width, Main.player[owner].height))
                                            {
                                                localAI[0] += 40f;
                                                Damage1 = (int)(Damage1 * 0.75);
                                            }
                                        }
                                    }
                                    if (aiStyle == 93)
                                    {
                                        if (ai[0] == 0.0)
                                        {
                                            ai[1] = 0.0f;
                                            ai[0] = (-index1 - 1);
                                            velocity = Main.npc[index1].Center - Center;
                                        }
                                        Damage1 = ai[0] != 2.0 ? (int)(Damage1 * 0.15) : (int)(Damage1 * 1.35);
                                    }
                                    if (!npcProj)
                                    {
                                        int num = Item.NPCtoBanner(Main.npc[index1].BannerID());
                                        if (num >= 0)
                                            Main.player[Main.myPlayer].lastCreatureHit = num;
                                    }
                                    if (Main.netMode != 2)
                                    {
                                        int index2 = Item.NPCtoBanner(Main.npc[index1].BannerID());
                                        if (index2 > 0 && Main.player[owner].NPCBannerBuff[index2])
                                        {
                                            if (Main.expertMode)
                                                Damage1 *= 2;
                                            else
                                                Damage1 = (int)(Damage1 * 1.5);
                                        }
                                    }
                                    if (Main.expertMode)
                                    {
                                        if ((type == 30 || type == 28 || (type == 29 || type == 470) || (type == 517 || type == 588 || type == 637)) && (Main.npc[index1].type >= 13 && Main.npc[index1].type <= 15))
                                            Damage1 /= 5;
                                        if (type == 280 && (Main.npc[index1].type >= 134 && Main.npc[index1].type <= 136 || Main.npc[index1].type == 139))
                                            Damage1 = (int)(Damage1 * 0.75);
                                    }
                                    if (Main.netMode != 2 && Main.npc[index1].type == 439 && (type >= 0 && type <= 651) && ProjectileID.Sets.Homing[type])
                                        Damage1 = (int)(Damage1 * 0.75);
                                    if (type == 497 && penetrate != 1)
                                    {
                                        ai[0] = 25f;
                                        float num = velocity.Length();
                                        Vector2 vector2 = Main.npc[index1].Center - Center;
                                        vector2.Normalize();
                                        velocity = -(vector2 * num) * 0.9f;
                                        netUpdate = true;
                                    }
                                    if (type == 323 && (Main.npc[index1].type == 158 || Main.npc[index1].type == 159))
                                        Damage1 *= 10;
                                    if (type == 294)
                                        damage = (int)(damage * 0.8);
                                    if (type == 477 && penetrate > 1)
                                    {
                                        int[] numArray = new int[10];
                                        int maxValue = 0;
                                        int num1 = 700;
                                        int num2 = 20;
                                        for (int index2 = 0; index2 < 200; ++index2)
                                        {
                                            if (index2 != index1 && Main.npc[index2].CanBeChasedBy(this, false))
                                            {
                                                float num3 = (Center - Main.npc[index2].Center).Length();
                                                if (num3 > num2 && num3 < num1 && Collision.CanHitLine(Center, 1, 1, Main.npc[index2].Center, 1, 1))
                                                {
                                                    numArray[maxValue] = index2;
                                                    ++maxValue;
                                                    if (maxValue >= 9)
                                                        break;
                                                }
                                            }
                                        }
                                        if (maxValue > 0)
                                        {
                                            int index2 = Main.rand.Next(maxValue);
                                            Vector2 vector2 = Main.npc[numArray[index2]].Center - Center;
                                            float num3 = velocity.Length();
                                            vector2.Normalize();
                                            velocity = vector2 * num3;
                                            netUpdate = true;
                                        }
                                    }
                                    if (type == 261)
                                    {
                                        float num = (float)Math.Sqrt(velocity.X * velocity.X + velocity.Y * velocity.Y);
                                        if (num < 1.0)
                                            num = 1f;
                                        Damage1 = (int)(Damage1 * num / 8.0);
                                    }
                                    StatusNPC(index1);
                                    if (type != 221 && type != 227 && type != 614)
                                        Main.player[owner].OnHit(Main.npc[index1].Center.X, Main.npc[index1].Center.Y, Main.npc[index1]);
                                    if (type == 317)
                                    {
                                        ai[1] = -1f;
                                        netUpdate = true;
                                    }
                                    if (!npcProj && !hostile && Main.player[owner].armorPenetration > 0)
                                        Damage1 += Main.npc[index1].checkArmorPenetration(Main.player[owner].armorPenetration);
                                    int dmg = npcProj ? (int)Main.npc[index1].StrikeNPCNoInteraction(Damage1, knockBack, direction, crit, false, false) : (int)Main.npc[index1].StrikeNPC(Damage1, knockBack, direction, crit, false, false);
                                    if (!npcProj && Main.player[owner].accDreamCatcher)
                                        Main.player[owner].addDPS(dmg);
                                    if (!npcProj && !Main.npc[index1].immortal)
                                    {
                                        if (type == 304 && dmg > 0 && (Main.npc[index1].lifeMax > 5 && !Main.player[owner].moonLeech))
                                            vampireHeal(dmg, new Vector2(Main.npc[index1].Center.X, Main.npc[index1].Center.Y));
                                        if (Main.npc[index1].value > 0.0 && Main.player[owner].coins && Main.rand.Next(5) == 0)
                                        {
                                            int Type = 71;
                                            if (Main.rand.Next(10) == 0)
                                                Type = 72;
                                            if (Main.rand.Next(100) == 0)
                                                Type = 73;
                                            int number = Item.NewItem((int)Main.npc[index1].position.X, (int)Main.npc[index1].position.Y, Main.npc[index1].width, Main.npc[index1].height, Type, 1, false, 0, false);
                                            Main.item[number].stack = Main.rand.Next(1, 11);
                                            Main.item[number].velocity.Y = Main.rand.Next(-20, 1) * 0.2f;
                                            Main.item[number].velocity.X = Main.rand.Next(10, 31) * 0.2f * direction;
                                            if (Main.netMode == 1)
                                                NetMessage.SendData(21, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                                        }
                                        if (dmg > 0 && Main.npc[index1].lifeMax > 5 && (friendly && !hostile) && aiStyle != 59)
                                        {
                                            if (Main.npc[index1].canGhostHeal)
                                            {
                                                if (Main.player[owner].ghostHeal && !Main.player[owner].moonLeech)
                                                    ghostHeal(dmg, new Vector2(Main.npc[index1].Center.X, Main.npc[index1].Center.Y));
                                                if (Main.player[owner].ghostHurt)
                                                    ghostHurt(dmg, new Vector2(Main.npc[index1].Center.X, Main.npc[index1].Center.Y));
                                                if (Main.player[owner].setNebula && Main.player[owner].nebulaCD == 0 && Main.rand.Next(3) == 0)
                                                {
                                                    Main.player[owner].nebulaCD = 30;
                                                    int Type = Utils.SelectRandom(Main.rand, 3453, 3454, 3455);
                                                    int number = Item.NewItem((int)Main.npc[index1].position.X, (int)Main.npc[index1].position.Y, Main.npc[index1].width, Main.npc[index1].height, Type, 1, false, 0, false);
                                                    Main.item[number].velocity.Y = Main.rand.Next(-20, 1) * 0.2f;
                                                    Main.item[number].velocity.X = Main.rand.Next(10, 31) * 0.2f * direction;
                                                    if (Main.netMode == 1)
                                                        NetMessage.SendData(21, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                                                }
                                            }
                                            if (melee && Main.player[owner].beetleOffense)
                                            {
                                                if (Main.player[owner].beetleOrbs == 0)
                                                    Main.player[owner].beetleCounter += (dmg * 3);
                                                else if (Main.player[owner].beetleOrbs == 1)
                                                    Main.player[owner].beetleCounter += (dmg * 2);
                                                else
                                                    Main.player[owner].beetleCounter += dmg;
                                                Main.player[owner].beetleCountdown = 0;
                                            }
                                            if (arrow && type != 631 && Main.player[owner].phantasmTime > 0)
                                            {
                                                Vector2 Source = Main.player[owner].position + Main.player[owner].Size * Utils.RandomVector2(Main.rand, 0.0f, 1f);
                                                Vector2 vector2 = Main.npc[index1].DirectionFrom(Source) * 6f;
                                                NewProjectile(Source.X, Source.Y, vector2.X, vector2.Y, 631, damage, 0.0f, owner, index1, 0.0f);
                                                NewProjectile(Source.X, Source.Y, vector2.X, vector2.Y, 631, damage, 0.0f, owner, index1, 15f);
                                                NewProjectile(Source.X, Source.Y, vector2.X, vector2.Y, 631, damage, 0.0f, owner, index1, 30f);
                                            }
                                        }
                                    }
                                    if (!npcProj && melee && Main.player[owner].meleeEnchant == 7)
                                        NewProjectile(Main.npc[index1].Center.X, Main.npc[index1].Center.Y, Main.npc[index1].velocity.X, Main.npc[index1].velocity.Y, 289, 0, 0.0f, owner, 0.0f, 0.0f);
                                    if (Main.netMode != 0)
                                    {
                                        if (crit)
                                            NetMessage.SendData(28, -1, -1, "", index1, Damage1, knockBack, direction, 1, 0, 0);
                                        else
                                            NetMessage.SendData(28, -1, -1, "", index1, Damage1, knockBack, direction, 0, 0, 0);
                                    }
                                    if (type >= 390 && type <= 392)
                                        localAI[1] = 20f;
                                    if (type == 434)
                                        numUpdates = 0;
                                    else if (type == 598 || type == 636 || type == 614)
                                    {
                                        damage = 0;
                                        int length = 6;
                                        if (type == 614)
                                            length = 10;
                                        if (type == 636)
                                            length = 8;
                                        Point[] pointArray = new Point[length];
                                        int num = 0;
                                        for (int x = 0; x < 1000; ++x)
                                        {
                                            if (x != whoAmI && Main.projectile[x].active && (Main.projectile[x].owner == Main.myPlayer && Main.projectile[x].type == type) && (Main.projectile[x].ai[0] == 1.0 && Main.projectile[x].ai[1] == index1))
                                            {
                                                pointArray[num++] = new Point(x, Main.projectile[x].timeLeft);
                                                if (num >= pointArray.Length)
                                                    break;
                                            }
                                        }
                                        if (num >= pointArray.Length)
                                        {
                                            int index2 = 0;
                                            for (int index3 = 1; index3 < pointArray.Length; ++index3)
                                            {
                                                if (pointArray[index3].Y < pointArray[index2].Y)
                                                    index2 = index3;
                                            }
                                            Main.projectile[pointArray[index2].X].Kill();
                                        }
                                    }
                                    else if (type == 632)
                                        Main.npc[index1].immune[owner] = 5;
                                    else if (type == 514)
                                        Main.npc[index1].immune[owner] = 1;
                                    else if (type == 617)
                                        Main.npc[index1].immune[owner] = 4;
                                    else if (type == 611)
                                    {
                                        if (localAI[1] <= 0.0)
                                            NewProjectile(Main.npc[index1].Center.X, Main.npc[index1].Center.Y, 0.0f, 0.0f, 612, damage, 10f, owner, 0.0f, (float)(0.850000023841858 + Utils.NextFloat(Main.rand) * 1.14999997615814));
                                        localAI[1] = 4f;
                                    }
                                    else if (type == 595)
                                        Main.npc[index1].immune[owner] = 5;
                                    else if (type >= 625 && type <= 628)
                                        Main.npc[index1].immune[owner] = 6;
                                    else if (type == 286)
                                        Main.npc[index1].immune[owner] = 5;
                                    else if (type == 514)
                                        Main.npc[index1].immune[owner] = 3;
                                    else if (type == 443)
                                        Main.npc[index1].immune[owner] = 8;
                                    else if (type >= 424 && type <= 426)
                                        Main.npc[index1].immune[owner] = 5;
                                    else if (type == 634 || type == 635)
                                        Main.npc[index1].immune[owner] = 5;
                                    else if (type == 246)
                                        Main.npc[index1].immune[owner] = 7;
                                    else if (type == 249)
                                        Main.npc[index1].immune[owner] = 7;
                                    else if (type == 190)
                                        Main.npc[index1].immune[owner] = 8;
                                    else if (type == 409)
                                        Main.npc[index1].immune[owner] = 6;
                                    else if (type == 407)
                                        Main.npc[index1].immune[owner] = 20;
                                    else if (type == 311)
                                        Main.npc[index1].immune[owner] = 7;
                                    else if (type == 582)
                                    {
                                        Main.npc[index1].immune[owner] = 7;
                                        if (ai[0] != 1.0)
                                        {
                                            ai[0] = 1f;
                                            netUpdate = true;
                                        }
                                    }
                                    else
                                    {
                                        if (type == 451)
                                        {
                                            if (ai[0] == 0.0)
                                                ai[0] += penetrate;
                                            else
                                                ai[0] -= (penetrate + 1);
                                            ai[1] = 0.0f;
                                            netUpdate = true;
                                            break;
                                        }
                                        if (penetrate != 1)
                                            Main.npc[index1].immune[owner] = 10;
                                    }
                                    if (penetrate > 0 && type != 317)
                                    {
                                        if (type == 357)
                                            damage = (int)(damage * 0.9);
                                        --penetrate;
                                        if (penetrate == 0)
                                            break;
                                    }
                                    if (aiStyle == 7)
                                    {
                                        ai[0] = 1f;
                                        damage = 0;
                                        netUpdate = true;
                                    }
                                    else if (aiStyle == 13)
                                    {
                                        ai[0] = 1f;
                                        netUpdate = true;
                                    }
                                    else if (aiStyle == 69)
                                    {
                                        ai[0] = 1f;
                                        netUpdate = true;
                                    }
                                    else if (type == 607)
                                    {
                                        ai[0] = 1f;
                                        netUpdate = true;
                                        friendly = false;
                                    }
                                    else if (type == 638 || type == 639 || type == 640)
                                    {
                                        npcImmune[index1] = -1;
                                        Main.npc[index1].immune[owner] = 0;
                                        damage = (int)(damage * 0.96);
                                    }
                                    else if (type == 642)
                                    {
                                        npcImmune[index1] = 10;
                                        Main.npc[index1].immune[owner] = 0;
                                    }
                                    else if (type == 611 || type == 612)
                                    {
                                        npcImmune[index1] = 6;
                                        Main.npc[index1].immune[owner] = 4;
                                    }
                                    else if (type == 645)
                                    {
                                        npcImmune[index1] = -1;
                                        Main.npc[index1].immune[owner] = 0;
                                        if (ai[1] != -1.0)
                                        {
                                            ai[0] = 0.0f;
                                            ai[1] = -1f;
                                            netUpdate = true;
                                        }
                                    }
                                    ++numHits;
                                }
                            }
                        }
                    }
                }
                if (damage > 0 && Main.player[Main.myPlayer].hostile)
                {
                    for (int index = 0; index < 255; ++index)
                    {
                        if (index != owner && Main.player[index].active && (!Main.player[index].dead && !Main.player[index].immune) && (Main.player[index].hostile && playerImmune[index] <= 0 && (Main.player[Main.myPlayer].team == 0 || Main.player[Main.myPlayer].team != Main.player[index].team)) && ((!ownerHitCheck || Collision.CanHit(Main.player[owner].position, Main.player[owner].width, Main.player[owner].height, Main.player[index].position, Main.player[index].width, Main.player[index].height)) && Colliding(myRect, Main.player[index].getRect())))
                        {
                            if (aiStyle == 3)
                            {
                                if (ai[0] == 0.0)
                                {
                                    velocity.X = -velocity.X;
                                    velocity.Y = -velocity.Y;
                                    netUpdate = true;
                                }
                                ai[0] = 1f;
                            }
                            else if (aiStyle == 16)
                            {
                                if (timeLeft > 3)
                                    timeLeft = 3;
                                if (Main.player[index].position.X + (Main.player[index].width / 2) < position.X + (width / 2))
                                    direction = -1;
                                else
                                    direction = 1;
                            }
                            else if (aiStyle == 68)
                            {
                                if (timeLeft > 3)
                                    timeLeft = 3;
                                if (Main.player[index].position.X + (Main.player[index].width / 2) < position.X + (width / 2))
                                    direction = -1;
                                else
                                    direction = 1;
                            }
                            if (type == 41 && timeLeft > 1)
                                timeLeft = 1;
                            bool Crit = false;
                            if (melee && Main.rand.Next(1, 101) <= Main.player[owner].meleeCrit)
                                Crit = true;
                            int Damage = Main.DamageVar(damage);
                            if (!Main.player[index].immune)
                                StatusPvP(index);
                            if (type != 221 && type != 227 && type != 614)
                                Main.player[owner].OnHit(Main.player[index].Center.X, Main.player[index].Center.Y, Main.player[index]);
                            int dmg = (int)Main.player[index].Hurt(Damage, direction, true, false, Lang.deathMsg(owner, -1, whoAmI, -1), Crit);
                            if (dmg > 0 && Main.player[owner].ghostHeal && (friendly && !hostile))
                                ghostHeal(dmg, new Vector2(Main.player[index].Center.X, Main.player[index].Center.Y));
                            if (type == 304 && dmg > 0)
                                vampireHeal(dmg, new Vector2(Main.player[index].Center.X, Main.player[index].Center.Y));
                            if (melee && Main.player[owner].meleeEnchant == 7)
                                NewProjectile(Main.player[index].Center.X, Main.player[index].Center.Y, Main.player[index].velocity.X, Main.player[index].velocity.Y, 289, 0, 0.0f, owner, 0.0f, 0.0f);
                            if (Main.netMode != 0)
                            {
                                if (Crit)
                                    NetMessage.SendData(26, -1, -1, Lang.deathMsg(owner, -1, whoAmI, -1), index, direction, Damage, 1f, 1, 0, 0);
                                else
                                    NetMessage.SendData(26, -1, -1, Lang.deathMsg(owner, -1, whoAmI, -1), index, direction, Damage, 1f, 0, 0, 0);
                            }
                            playerImmune[index] = 40;
                            if (penetrate > 0)
                            {
                                --penetrate;
                                if (penetrate == 0)
                                    break;
                            }
                            if (aiStyle == 7)
                            {
                                ai[0] = 1f;
                                damage = 0;
                                netUpdate = true;
                            }
                            else if (aiStyle == 13)
                            {
                                ai[0] = 1f;
                                netUpdate = true;
                            }
                            else if (aiStyle == 69)
                            {
                                ai[0] = 1f;
                                netUpdate = true;
                            }
                        }
                    }
                }
            }
            if (type == 10 && Main.netMode != 1)
            {
                for (int index = 0; index < 200; ++index)
                {
                    if (Main.npc[index].active && Main.npc[index].type == 534)
                    {
                        Rectangle rectangle = new Rectangle((int)Main.npc[index].position.X, (int)Main.npc[index].position.Y, Main.npc[index].width, Main.npc[index].height);
                        if (myRect.Intersects(rectangle))
                            Main.npc[index].Transform(441);
                    }
                }
            }
            if (type == 11 && Main.netMode != 1)
            {
                for (int index = 0; index < 200; ++index)
                {
                    if (Main.npc[index].active)
                    {
                        if (Main.npc[index].type == 46 || Main.npc[index].type == 303)
                        {
                            Rectangle rectangle = new Rectangle((int)Main.npc[index].position.X, (int)Main.npc[index].position.Y, Main.npc[index].width, Main.npc[index].height);
                            if (myRect.Intersects(rectangle))
                                Main.npc[index].Transform(47);
                        }
                        else if (Main.npc[index].type == 55)
                        {
                            Rectangle rectangle = new Rectangle((int)Main.npc[index].position.X, (int)Main.npc[index].position.Y, Main.npc[index].width, Main.npc[index].height);
                            if (myRect.Intersects(rectangle))
                                Main.npc[index].Transform(57);
                        }
                        else if (Main.npc[index].type == 148 || Main.npc[index].type == 149)
                        {
                            Rectangle rectangle = new Rectangle((int)Main.npc[index].position.X, (int)Main.npc[index].position.Y, Main.npc[index].width, Main.npc[index].height);
                            if (myRect.Intersects(rectangle))
                                Main.npc[index].Transform(168);
                        }
                    }
                }
            }
            if (type == 463 && Main.netMode != 1)
            {
                for (int index = 0; index < 200; ++index)
                {
                    if (Main.npc[index].active)
                    {
                        if (Main.npc[index].type == 46 || Main.npc[index].type == 303)
                        {
                            Rectangle rectangle = new Rectangle((int)Main.npc[index].position.X, (int)Main.npc[index].position.Y, Main.npc[index].width, Main.npc[index].height);
                            if (myRect.Intersects(rectangle))
                                Main.npc[index].Transform(464);
                        }
                        else if (Main.npc[index].type == 55)
                        {
                            Rectangle rectangle = new Rectangle((int)Main.npc[index].position.X, (int)Main.npc[index].position.Y, Main.npc[index].width, Main.npc[index].height);
                            if (myRect.Intersects(rectangle))
                                Main.npc[index].Transform(465);
                        }
                        else if (Main.npc[index].type == 148 || Main.npc[index].type == 149)
                        {
                            Rectangle rectangle = new Rectangle((int)Main.npc[index].position.X, (int)Main.npc[index].position.Y, Main.npc[index].width, Main.npc[index].height);
                            if (myRect.Intersects(rectangle))
                                Main.npc[index].Transform(470);
                        }
                    }
                }
            }
            if (Main.netMode == 2 || !hostile || (Main.myPlayer >= 255 || damage <= 0))
                return;
            int i1 = Main.myPlayer;
            if (!Main.player[i1].active || Main.player[i1].dead || (Main.player[i1].immune || !Colliding(myRect, Main.player[i1].getRect())))
                return;
            int num5 = direction;
            int hitDirection = Main.player[i1].position.X + (Main.player[i1].width / 2) >= position.X + (width / 2) ? 1 : -1;
            int num6 = Main.DamageVar(damage);
            if (!Main.player[i1].immune)
                StatusPlayer(i1);
            if (Main.player[i1].resistCold && coldDamage)
                num6 = (int)(num6 * 0.699999988079071);
            if (Main.expertMode)
                num6 = (int)(num6 * Main.expertDamage);
            Main.player[i1].Hurt(num6 * 2, hitDirection, false, false, Lang.deathMsg(-1, -1, whoAmI, -1), false);
            if (trap)
            {
                Main.player[i1].trapDebuffSource = true;
                if (Main.player[i1].dead)
                    AchievementsHelper.HandleSpecialEvent(Main.player[i1], 4);
            }
            if (type == 435)
                --penetrate;
            if (type == 436)
                --penetrate;
            if (type != 437)
                return;
            --penetrate;
        }

        public bool Colliding(Rectangle myRect, Rectangle targetRect)
        {
            if (type == 598 && targetRect.Width > 8 && targetRect.Height > 8)
                targetRect.Inflate(-targetRect.Width / 8, -targetRect.Height / 8);
            else if (type == 614 && targetRect.Width > 8 && targetRect.Height > 8)
                targetRect.Inflate(-targetRect.Width / 8, -targetRect.Height / 8);
            else if (type == 636 && targetRect.Width > 8 && targetRect.Height > 8)
                targetRect.Inflate(-targetRect.Width / 8, -targetRect.Height / 8);
            else if (type == 607)
            {
                myRect.X += (int)velocity.X;
                myRect.Y += (int)velocity.Y;
            }
            if (myRect.Intersects(targetRect))
                return true;
            if (type == 461)
            {
                float collisionPoint = 0.0f;
                if (Collision.CheckAABBvLineCollision(Utils.TopLeft(targetRect), Utils.Size(targetRect), Center, Center + velocity * localAI[1], 22f * scale, ref collisionPoint))
                    return true;
            }
            else if (type == 642)
            {
                float collisionPoint = 0.0f;
                if (Collision.CheckAABBvLineCollision(Utils.TopLeft(targetRect), Utils.Size(targetRect), Center, Center + velocity * localAI[1], 30f * scale, ref collisionPoint))
                    return true;
            }
            else if (type == 632)
            {
                float collisionPoint = 0.0f;
                if (Collision.CheckAABBvLineCollision(Utils.TopLeft(targetRect), Utils.Size(targetRect), Center, Center + velocity * localAI[1], 22f * scale, ref collisionPoint))
                    return true;
            }
            else if (type == 455)
            {
                float collisionPoint = 0.0f;
                if (Collision.CheckAABBvLineCollision(Utils.TopLeft(targetRect), Utils.Size(targetRect), Center, Center + velocity * localAI[1], 36f * scale, ref collisionPoint))
                    return true;
            }
            else if (type == 611)
            {
                float collisionPoint = 0.0f;
                if (Collision.CheckAABBvLineCollision(Utils.TopLeft(targetRect), Utils.Size(targetRect), Center, Center + velocity, 16f * scale, ref collisionPoint))
                    return true;
            }
            else if (type == 537)
            {
                float collisionPoint = 0.0f;
                if (Collision.CheckAABBvLineCollision(Utils.TopLeft(targetRect), Utils.Size(targetRect), Center, Center + velocity * localAI[1], 22f * scale, ref collisionPoint))
                    return true;
            }
            else if (type == 466 || type == 580)
            {
                for (int index = 0; index < oldPos.Length; ++index)
                {
                    myRect.X = (int)oldPos[index].X;
                    myRect.Y = (int)oldPos[index].Y;
                    if (myRect.Intersects(targetRect))
                        return true;
                }
            }
            else if (type == 464 && ai[1] != 1.0)
            {
                Vector2 spinningpoint = Utils.RotatedBy(new Vector2(0.0f, -720f), Utils.ToRotation(velocity), new Vector2()) * (float)(ai[0] % 45.0 / 45.0);
                for (int index = 0; index < 6; ++index)
                {
                    float num = (float)(index * 6.28318548202515 / 6.0);
                    if (Utils.CenteredRectangle(Center + Utils.RotatedBy(spinningpoint, num, new Vector2()), new Vector2(30f, 30f)).Intersects(targetRect))
                        return true;
                }
            }
            return false;
        }

        public void ProjLight()
        {
            if (light <= 0.0)
                return;
            float R = light;
            float G = light;
            float B = light;
            if (type == 446)
            {
                R *= 0.0f;
                B *= 0.8f;
            }
            else if (type == 493 || type == 494)
                G *= 0.3f;
            else if (type == 332)
            {
                B *= 0.1f;
                G *= 0.6f;
            }
            else if (type == 259)
                B *= 0.1f;
            else if (type == 329)
            {
                B *= 0.1f;
                G *= 0.9f;
            }
            else if (type == 2 || type == 82)
            {
                G *= 0.75f;
                B *= 0.55f;
            }
            else if (type == 172)
            {
                G *= 0.55f;
                R *= 0.35f;
            }
            else if (type == 308)
            {
                G *= 0.7f;
                R *= 0.1f;
            }
            else if (type == 304)
            {
                G *= 0.2f;
                B *= 0.1f;
            }
            else if (type == 263)
            {
                G *= 0.7f;
                R *= 0.1f;
            }
            else if (type == 274)
            {
                G *= 0.1f;
                R *= 0.7f;
            }
            else if (type == 254)
                R *= 0.1f;
            else if (type == 94)
            {
                R *= 0.5f;
                G *= 0.0f;
            }
            else if (type == 95 || type == 96 || (type == 103 || type == 104))
            {
                R *= 0.35f;
                G *= 1f;
                B *= 0.0f;
            }
            else if (type == 4)
            {
                G *= 0.1f;
                R *= 0.5f;
            }
            else if (type == 257)
            {
                G *= 0.9f;
                R *= 0.1f;
            }
            else if (type == 9)
            {
                G *= 0.1f;
                B *= 0.6f;
            }
            else if (type == 488)
            {
                R = 0.3f;
                B = 0.25f;
                G = 0.0f;
            }
            else if (type == 92)
            {
                G *= 0.6f;
                R *= 0.8f;
            }
            else if (type == 93)
            {
                G *= 1f;
                R *= 1f;
                B *= 0.01f;
            }
            else if (type == 12)
            {
                R *= 0.9f;
                G *= 0.8f;
                B *= 0.1f;
            }
            else if (type == 14 || type == 110 || (type == 180 || type == 242) || type == 302)
            {
                G *= 0.7f;
                B *= 0.1f;
            }
            else if (type == 15)
            {
                G *= 0.4f;
                B *= 0.1f;
                R = 1f;
            }
            else if (type == 16)
            {
                R *= 0.1f;
                G *= 0.4f;
                B = 1f;
            }
            else if (type == 18)
            {
                G *= 0.1f;
                R *= 0.6f;
            }
            else if (type == 19)
            {
                G *= 0.5f;
                B *= 0.1f;
            }
            else if (type == 20)
            {
                R *= 0.1f;
                B *= 0.3f;
            }
            else if (type == 22)
            {
                R = 0.0f;
                G = 0.0f;
            }
            else if (type == 27)
            {
                R *= 0.0f;
                G *= 0.3f;
                B = 1f;
            }
            else if (type == 34)
            {
                G *= 0.1f;
                B *= 0.1f;
            }
            else if (type == 36)
            {
                R = 0.8f;
                G *= 0.2f;
                B *= 0.6f;
            }
            else if (type == 41)
            {
                G *= 0.8f;
                B *= 0.6f;
            }
            else if (type == 44 || type == 45)
            {
                B = 1f;
                R *= 0.6f;
                G *= 0.1f;
            }
            else if (type == 50)
            {
                R *= 0.7f;
                B *= 0.8f;
            }
            else if (type == 515)
            {
                G *= 0.6f;
                B *= 0.85f;
            }
            else if (type == 53)
            {
                R *= 0.7f;
                G *= 0.8f;
            }
            else if (type == 473)
            {
                R *= 1.05f;
                G *= 0.95f;
                B *= 0.55f;
            }
            else if (type == 72)
            {
                R *= 0.45f;
                G *= 0.75f;
                B = 1f;
            }
            else if (type == 86)
            {
                R *= 1f;
                G *= 0.45f;
                B = 0.75f;
            }
            else if (type == 87)
            {
                R *= 0.45f;
                G = 1f;
                B *= 0.75f;
            }
            else if (type == 73)
            {
                R *= 0.4f;
                G *= 0.6f;
                B *= 1f;
            }
            else if (type == 74)
            {
                R *= 1f;
                G *= 0.4f;
                B *= 0.6f;
            }
            else if (type == 284)
            {
                R *= 1f;
                G *= 0.1f;
                B *= 0.8f;
            }
            else if (type == 285)
            {
                R *= 0.1f;
                G *= 0.5f;
                B *= 1f;
            }
            else if (type == 286)
            {
                R *= 1f;
                G *= 0.5f;
                B *= 0.1f;
            }
            else if (type == 287)
            {
                R *= 0.9f;
                G *= 1f;
                B *= 0.4f;
            }
            else if (type == 283)
            {
                R *= 0.8f;
                G *= 0.1f;
            }
            else if (type == 76 || type == 77 || type == 78)
            {
                R *= 1f;
                G *= 0.3f;
                B *= 0.6f;
            }
            else if (type == 79)
            {
                R = Main.DiscoR / 255;
                G = Main.DiscoG / 255;
                B = Main.DiscoB / 255;
            }
            else if (type == 80)
            {
                R *= 0.0f;
                G *= 0.8f;
                B *= 1f;
            }
            else if (type == 83 || type == 88)
            {
                R *= 0.7f;
                G *= 0.0f;
                B *= 1f;
            }
            else if (type == 100)
            {
                R *= 1f;
                G *= 0.5f;
                B *= 0.0f;
            }
            else if (type == 84 || type == 389)
            {
                R *= 0.8f;
                G *= 0.0f;
                B *= 0.5f;
            }
            else if (type == 89 || type == 90)
            {
                G *= 0.2f;
                B *= 1f;
                R *= 0.05f;
            }
            else if (type == 106)
            {
                R *= 0.0f;
                G *= 0.5f;
                B *= 1f;
            }
            else if (type == 113)
            {
                R *= 0.25f;
                G *= 0.75f;
                B *= 1f;
            }
            else if (type == 114 || type == 115)
            {
                R *= 0.5f;
                G *= 0.05f;
                B *= 1f;
            }
            else if (type == 116)
                B *= 0.25f;
            else if (type == 131)
            {
                R *= 0.1f;
                G *= 0.4f;
            }
            else if (type == 132 || type == 157)
            {
                R *= 0.2f;
                B *= 0.6f;
            }
            else if (type == 156)
            {
                R *= 1f;
                B *= 0.6f;
                G = 0.0f;
            }
            else if (type == 173)
            {
                R *= 0.3f;
                B *= 1f;
                G = 0.4f;
            }
            else if (type == 207)
            {
                R *= 0.4f;
                B *= 0.4f;
            }
            else if (type == 253)
            {
                R = 0.0f;
                G *= 0.4f;
            }
            else if (type == 211)
            {
                R *= 0.5f;
                G *= 0.9f;
                B *= 1f;
                light = localAI[0] != 0.0 ? 1f : 1.5f;
            }
            else if (type == 209)
            {
                float num1 = (float)((255 - alpha) / 255);
                float num2 = R * 0.3f;
                float num3 = G * 0.4f;
                B = B * 1.75f * num1;
                R = num2 * num1;
                G = num3 * num1;
            }
            else if (type == 226 || type == 227 | type == 229)
            {
                R *= 0.25f;
                G *= 1f;
                B *= 0.5f;
            }
            else if (type == 251)
            {
                float num1 = Main.DiscoR / 255;
                float num2 = Main.DiscoG / 255;
                float num3 = Main.DiscoB / 255;
                float num4 = (float)((num1 + 1.0) / 2.0);
                float num5 = (float)((num2 + 1.0) / 2.0);
                float num6 = (float)((num3 + 1.0) / 2.0);
                R = num4 * light;
                G = num5 * light;
                B = num6 * light;
            }
            else if (type == 278 || type == 279)
            {
                R *= 1f;
                G *= 1f;
                B *= 0.0f;
            }
            Lighting.AddLight((int)((position.X + (width / 2)) / 16.0), (int)((position.Y + (height / 2)) / 16.0), R, G, B);
        }

        public Rectangle getRect()
        {
            return new Rectangle((int)position.X, (int)position.Y, width, height);
        }

        public void Update(int i)
        {
            if (!active)
                return;
            numUpdates = extraUpdates;
            while (numUpdates >= 0)
            {
                --numUpdates;
                if (type == 640 && ai[1] > 0.0)
                {
                    --ai[1];
                }
                else
                {
                    if (position.X <= Main.leftWorld || position.X + width >= Main.rightWorld || (position.Y <= Main.topWorld || position.Y + height >= Main.bottomWorld))
                    {
                        active = false;
                        return;
                    }
                    if (type != 344 && !npcProj)
                    {
                        if (Main.player[owner].frostBurn && (melee || ranged) && (friendly && !hostile && (!noEnchantments && Main.rand.Next(2 * (1 + extraUpdates)) == 0)))
                        {
                            int index = Dust.NewDust(position, width, height, 135, velocity.X * 0.2f + (direction * 3), velocity.Y * 0.2f, 100, new Color(), 2f);
                            Main.dust[index].noGravity = true;
                            Main.dust[index].velocity *= 0.7f;
                            Main.dust[index].velocity.Y -= 0.5f;
                        }
                        if (melee && Main.player[owner].meleeEnchant > 0 && !noEnchantments)
                        {
                            if (Main.player[owner].meleeEnchant == 1 && Main.rand.Next(3) == 0)
                            {
                                int index = Dust.NewDust(position, width, height, 171, 0.0f, 0.0f, 100, new Color(), 1f);
                                Main.dust[index].noGravity = true;
                                Main.dust[index].fadeIn = 1.5f;
                                Main.dust[index].velocity *= 0.25f;
                            }
                            if (Main.player[owner].meleeEnchant == 1)
                            {
                                if (Main.rand.Next(3) == 0)
                                {
                                    int index = Dust.NewDust(position, width, height, 171, 0.0f, 0.0f, 100, new Color(), 1f);
                                    Main.dust[index].noGravity = true;
                                    Main.dust[index].fadeIn = 1.5f;
                                    Main.dust[index].velocity *= 0.25f;
                                }
                            }
                            else if (Main.player[owner].meleeEnchant == 2)
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int index = Dust.NewDust(position, width, height, 75, velocity.X * 0.2f + (direction * 3), velocity.Y * 0.2f, 100, new Color(), 2.5f);
                                    Main.dust[index].noGravity = true;
                                    Main.dust[index].velocity *= 0.7f;
                                    Main.dust[index].velocity.Y -= 0.5f;
                                }
                            }
                            else if (Main.player[owner].meleeEnchant == 3)
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int index = Dust.NewDust(position, width, height, 6, velocity.X * 0.2f + (direction * 3), velocity.Y * 0.2f, 100, new Color(), 2.5f);
                                    Main.dust[index].noGravity = true;
                                    Main.dust[index].velocity *= 0.7f;
                                    Main.dust[index].velocity.Y -= 0.5f;
                                }
                            }
                            else if (Main.player[owner].meleeEnchant == 4)
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int index = Dust.NewDust(position, width, height, 57, velocity.X * 0.2f + (direction * 3), velocity.Y * 0.2f, 100, new Color(), 1.1f);
                                    Main.dust[index].noGravity = true;
                                    Main.dust[index].velocity.X /= 2f;
                                    Main.dust[index].velocity.Y /= 2f;
                                }
                            }
                            else if (Main.player[owner].meleeEnchant == 5)
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int index = Dust.NewDust(position, width, height, 169, 0.0f, 0.0f, 100, new Color(), 1f);
                                    Main.dust[index].velocity.X += direction;
                                    Main.dust[index].velocity.Y += 0.2f;
                                    Main.dust[index].noGravity = true;
                                }
                            }
                            else if (Main.player[owner].meleeEnchant == 6)
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int index = Dust.NewDust(position, width, height, 135, 0.0f, 0.0f, 100, new Color(), 1f);
                                    Main.dust[index].velocity.X += direction;
                                    Main.dust[index].velocity.Y += 0.2f;
                                    Main.dust[index].noGravity = true;
                                }
                            }
                            else if (Main.player[owner].meleeEnchant == 7)
                            {
                                if (Main.rand.Next(20) == 0)
                                {
                                    int index = Dust.NewDust(position, width, height, Main.rand.Next(139, 143), velocity.X, velocity.Y, 0, new Color(), 1.2f);
                                    Main.dust[index].velocity.X *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                                    Main.dust[index].velocity.Y *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                                    Main.dust[index].velocity.X += Main.rand.Next(-50, 51) * 0.05f;
                                    Main.dust[index].velocity.Y += Main.rand.Next(-50, 51) * 0.05f;
                                    Main.dust[index].scale *= (float)(1.0 + Main.rand.Next(-30, 31) * 0.00999999977648258);
                                }
                                if (Main.rand.Next(40) == 0)
                                {
                                    int index = Gore.NewGore(position, velocity, Main.rand.Next(276, 283), 1f);
                                    Main.gore[index].velocity.X *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                                    Main.gore[index].velocity.Y *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                                    Main.gore[index].scale *= (float)(1.0 + Main.rand.Next(-20, 21) * 0.00999999977648258);
                                    Main.gore[index].velocity.X += Main.rand.Next(-50, 51) * 0.05f;
                                    Main.gore[index].velocity.Y += Main.rand.Next(-50, 51) * 0.05f;
                                }
                            }
                            else if (Main.player[owner].meleeEnchant == 8 && Main.rand.Next(4) == 0)
                            {
                                int index = Dust.NewDust(position, width, height, 46, 0.0f, 0.0f, 100, new Color(), 1f);
                                Main.dust[index].noGravity = true;
                                Main.dust[index].fadeIn = 1.5f;
                                Main.dust[index].velocity *= 0.25f;
                            }
                        }
                        if (melee && Main.player[owner].magmaStone && (!noEnchantments && Main.rand.Next(3) != 0))
                        {
                            int index = Dust.NewDust(new Vector2(position.X - 4f, position.Y - 4f), width + 8, height + 8, 6, velocity.X * 0.2f, velocity.Y * 0.2f, 100, new Color(), 2f);
                            if (Main.rand.Next(2) == 0)
                                Main.dust[index].scale = 1.5f;
                            Main.dust[index].noGravity = true;
                            Main.dust[index].velocity.X *= 2f;
                            Main.dust[index].velocity.Y *= 2f;
                        }
                    }
                    if (minion && numUpdates == -1 && (type != 625 && type != 628))
                    {
                        minionPos = Main.player[owner].numMinions;
                        if (Main.player[owner].slotsMinions + minionSlots > Main.player[owner].maxMinions && owner == Main.myPlayer)
                        {
                            if (type == 627 || type == 626)
                            {
                                Projectile projectile1 = Main.projectile[(int)ai[0]];
                                if (projectile1.type != 625)
                                    projectile1.localAI[1] = localAI[1];
                                Projectile projectile2 = Main.projectile[(int)localAI[1]];
                                projectile2.ai[0] = ai[0];
                                projectile2.ai[1] = 1f;
                                projectile2.netUpdate = true;
                            }
                            Kill();
                        }
                        else
                        {
                            ++Main.player[owner].numMinions;
                            Main.player[owner].slotsMinions += minionSlots;
                        }
                    }
                    float num1 = (float)(1.0 + Math.Abs(velocity.X) / 3.0);
                    if (gfxOffY > 0.0)
                    {
                        gfxOffY -= num1 * stepSpeed;
                        if (gfxOffY < 0.0)
                            gfxOffY = 0.0f;
                    }
                    else if (gfxOffY < 0.0)
                    {
                        gfxOffY += num1 * stepSpeed;
                        if (gfxOffY > 0.0)
                            gfxOffY = 0.0f;
                    }
                    if (gfxOffY > 16.0)
                        gfxOffY = 16f;
                    if (gfxOffY < -16.0)
                        gfxOffY = -16f;
                    Vector2 vector2_1 = velocity;
                    oldVelocity = velocity;
                    whoAmI = i;
                    if (soundDelay > 0)
                        --soundDelay;
                    netUpdate = false;
                    for (int index = 0; index < 255; ++index)
                    {
                        if (playerImmune[index] > 0)
                            --playerImmune[index];
                    }
                    if (updatedNPCImmunity)
                    {
                        for (int index = 0; index < 200; ++index)
                        {
                            if (npcImmune[index] > 0)
                                --npcImmune[index];
                        }
                    }
                    AI();
                    if (owner < 255 && !Main.player[owner].active)
                        Kill();
                    if (type == 242 || type == 302 || type == 638)
                        wet = false;
                    if (!ignoreWater)
                    {
                        bool flag1;
                        bool flag2;
                        try
                        {
                            flag1 = Collision.LavaCollision(position, width, height);
                            flag2 = Collision.WetCollision(position, width, height);
                            if (flag1)
                                lavaWet = true;
                            if (Collision.honey)
                                honeyWet = true;
                        }
                        catch
                        {
                            active = false;
                            return;
                        }
                        if (wet && !lavaWet)
                        {
                            if (type == 85 || type == 15 || (type == 34 || type == 188))
                                Kill();
                            if (type == 2)
                            {
                                type = 1;
                                light = 0.0f;
                            }
                        }
                        if (type == 80)
                        {
                            flag2 = false;
                            wet = false;
                            if (flag1 && ai[0] >= 0.0)
                                Kill();
                        }
                        if (flag2)
                        {
                            if (type != 155 && wetCount == 0 && !wet)
                            {
                                if (!flag1)
                                {
                                    if (honeyWet)
                                    {
                                        for (int index1 = 0; index1 < 10; ++index1)
                                        {
                                            int index2 = Dust.NewDust(new Vector2(position.X - 6f, (float)(position.Y + (height / 2) - 8.0)), width + 12, 24, 152, 0.0f, 0.0f, 0, new Color(), 1f);
                                            --Main.dust[index2].velocity.Y;
                                            Main.dust[index2].velocity.X *= 2.5f;
                                            Main.dust[index2].scale = 1.3f;
                                            Main.dust[index2].alpha = 100;
                                            Main.dust[index2].noGravity = true;
                                        }
                                        Main.PlaySound(19, (int)position.X, (int)position.Y, 1);
                                    }
                                    else
                                    {
                                        for (int index1 = 0; index1 < 10; ++index1)
                                        {
                                            int index2 = Dust.NewDust(new Vector2(position.X - 6f, (float)(position.Y + (height / 2) - 8.0)), width + 12, 24, Dust.dustWater(), 0.0f, 0.0f, 0, new Color(), 1f);
                                            Main.dust[index2].velocity.Y -= 4f;
                                            Main.dust[index2].velocity.X *= 2.5f;
                                            Main.dust[index2].scale = 1.3f;
                                            Main.dust[index2].alpha = 100;
                                            Main.dust[index2].noGravity = true;
                                        }
                                        Main.PlaySound(19, (int)position.X, (int)position.Y, 1);
                                    }
                                }
                                else
                                {
                                    for (int index1 = 0; index1 < 10; ++index1)
                                    {
                                        int index2 = Dust.NewDust(new Vector2(position.X - 6f, (float)(position.Y + (height / 2) - 8.0)), width + 12, 24, 35, 0.0f, 0.0f, 0, new Color(), 1f);
                                        Main.dust[index2].velocity.Y -= 1.5f;
                                        Main.dust[index2].velocity.X *= 2.5f;
                                        Main.dust[index2].scale = 1.3f;
                                        Main.dust[index2].alpha = 100;
                                        Main.dust[index2].noGravity = true;
                                    }
                                    Main.PlaySound(19, (int)position.X, (int)position.Y, 1);
                                }
                            }
                            wet = true;
                        }
                        else if (wet)
                        {
                            wet = false;
                            if (type == 155)
                                velocity.Y *= 0.5f;
                            else if (wetCount == 0)
                            {
                                wetCount = 10;
                                if (!lavaWet)
                                {
                                    if (honeyWet)
                                    {
                                        for (int index1 = 0; index1 < 10; ++index1)
                                        {
                                            int index2 = Dust.NewDust(new Vector2(position.X - 6f, (float)(position.Y + (height / 2) - 8.0)), width + 12, 24, 152, 0.0f, 0.0f, 0, new Color(), 1f);
                                            --Main.dust[index2].velocity.Y;
                                            Main.dust[index2].velocity.X *= 2.5f;
                                            Main.dust[index2].scale = 1.3f;
                                            Main.dust[index2].alpha = 100;
                                            Main.dust[index2].noGravity = true;
                                        }
                                        Main.PlaySound(19, (int)position.X, (int)position.Y, 1);
                                    }
                                    else
                                    {
                                        for (int index1 = 0; index1 < 10; ++index1)
                                        {
                                            int index2 = Dust.NewDust(new Vector2(position.X - 6f, position.Y + (height / 2)), width + 12, 24, Dust.dustWater(), 0.0f, 0.0f, 0, new Color(), 1f);
                                            Main.dust[index2].velocity.Y -= 4f;
                                            Main.dust[index2].velocity.X *= 2.5f;
                                            Main.dust[index2].scale = 1.3f;
                                            Main.dust[index2].alpha = 100;
                                            Main.dust[index2].noGravity = true;
                                        }
                                        Main.PlaySound(19, (int)position.X, (int)position.Y, 1);
                                    }
                                }
                                else
                                {
                                    for (int index1 = 0; index1 < 10; ++index1)
                                    {
                                        int index2 = Dust.NewDust(new Vector2(position.X - 6f, (float)(position.Y + (height / 2) - 8.0)), width + 12, 24, 35, 0.0f, 0.0f, 0, new Color(), 1f);
                                        Main.dust[index2].velocity.Y -= 1.5f;
                                        Main.dust[index2].velocity.X *= 2.5f;
                                        Main.dust[index2].scale = 1.3f;
                                        Main.dust[index2].alpha = 100;
                                        Main.dust[index2].noGravity = true;
                                    }
                                    Main.PlaySound(19, (int)position.X, (int)position.Y, 1);
                                }
                            }
                        }
                        if (!wet)
                        {
                            lavaWet = false;
                            honeyWet = false;
                        }
                        if (wetCount > 0)
                            --wetCount;
                    }
                    oldPosition = position;
                    oldDirection = direction;
                    bool flag3 = false;
                    if (tileCollide)
                    {
                        Vector2 vector2_2 = velocity;
                        bool flag1 = true;
                        int num2 = -1;
                        int num3 = -1;
                        if (Main.projPet[type])
                        {
                            flag1 = false;
                            if (Main.player[owner].position.Y + Main.player[owner].height - 12.0 > position.Y + height)
                                flag1 = true;
                        }
                        if (type == 500)
                        {
                            flag1 = false;
                            if (Main.player[owner].Bottom.Y > Bottom.Y + 4.0)
                                flag1 = true;
                        }
                        if (aiStyle == 62)
                            flag1 = true;
                        if (aiStyle == 66)
                            flag1 = true;
                        if (type == 317)
                            flag1 = true;
                        if (type == 373)
                            flag1 = true;
                        if (aiStyle == 53)
                            flag1 = false;
                        if (type == 9 || type == 12 || (type == 15 || type == 13) || (type == 31 || type == 39 || type == 40))
                            flag1 = false;
                        if (type == 24)
                            flag1 = false;
                        if (aiStyle == 29 || type == 28 || aiStyle == 49)
                        {
                            num2 = width - 8;
                            num3 = height - 8;
                        }
                        else if (type == 250 || type == 267 || (type == 297 || type == 323) || type == 3)
                        {
                            num2 = 6;
                            num3 = 6;
                        }
                        else if (type == 308)
                        {
                            num2 = 26;
                            num3 = height;
                        }
                        else if (type == 261 || type == 277)
                        {
                            num2 = 26;
                            num3 = 26;
                        }
                        else if (type == 481 || type == 491 || (type == 106 || type == 262) || (type == 271 || type == 270 || (type == 272 || type == 273)) || (type == 274 || type == 280 || (type == 288 || type == 301) || (type == 320 || type == 333 || (type == 335 || type == 343))) || (type == 344 || type == 497 || (type == 496 || type == 6) || (type == 19 || type == 113 || (type == 520 || type == 523)) || (type == 585 || type == 598 || (type == 599 || type == 636))))
                        {
                            num2 = 10;
                            num3 = 10;
                        }
                        else if (type == 514)
                        {
                            num2 = 4;
                            num3 = 4;
                        }
                        else if (type == 248 || type == 247 || (type == 507 || type == 508))
                        {
                            num2 = width - 12;
                            num3 = height - 12;
                        }
                        else if (aiStyle == 18 || type == 254)
                        {
                            num2 = width - 36;
                            num3 = height - 36;
                        }
                        else if (type == 182 || type == 190 || (type == 33 || type == 229) || (type == 237 || type == 243))
                        {
                            num2 = width - 20;
                            num3 = height - 20;
                        }
                        else if (aiStyle == 27)
                        {
                            num2 = width - 12;
                            num3 = height - 12;
                        }
                        else if (type == 533 && ai[0] >= 6.0)
                        {
                            num2 = width + 6;
                            num3 = height + 6;
                        }
                        else if (type == 582 || type == 634 || type == 635)
                        {
                            num2 = 8;
                            num3 = 8;
                        }
                        else if (type == 617)
                        {
                            num2 = (int)(20.0 * scale);
                            num3 = (int)(20.0 * scale);
                        }
                        if ((type != 440 && type != 449 && type != 606 || ai[1] != 1.0) && ((type != 466 || localAI[1] != 1.0) && (type != 580 || localAI[1] <= 0.0) && (type != 640 || localAI[1] <= 0.0)))
                        {
                            if (aiStyle == 10)
                            {
                                if (type == 42 || type == 65 || (type == 68 || type == 354) || type == 31 && ai[0] == 2.0)
                                    velocity = Collision.TileCollision(position, velocity, width, height, flag1, flag1, 1);
                                else
                                    velocity = Collision.AnyCollision(position, velocity, width, height);
                            }
                            else
                            {
                                Vector2 Position = position;
                                int Width = num2 != -1 ? num2 : width;
                                int Height = num3 != -1 ? num3 : height;
                                if (num3 != -1 || num2 != -1)
                                    Position = new Vector2(position.X + (width / 2) - (Width / 2), position.Y + (height / 2) - (Height / 2));
                                if (wet)
                                {
                                    if (honeyWet)
                                    {
                                        Vector2 vector2_3 = velocity;
                                        velocity = Collision.TileCollision(Position, velocity, Width, Height, flag1, flag1, 1);
                                        vector2_1 = velocity * 0.25f;
                                        if (velocity.X != vector2_3.X)
                                            vector2_1.X = velocity.X;
                                        if (velocity.Y != vector2_3.Y)
                                            vector2_1.Y = velocity.Y;
                                    }
                                    else
                                    {
                                        Vector2 vector2_3 = velocity;
                                        velocity = Collision.TileCollision(Position, velocity, Width, Height, flag1, flag1, 1);
                                        vector2_1 = velocity * 0.5f;
                                        if (velocity.X != vector2_3.X)
                                            vector2_1.X = velocity.X;
                                        if (velocity.Y != vector2_3.Y)
                                            vector2_1.Y = velocity.Y;
                                    }
                                }
                                else
                                {
                                    velocity = Collision.TileCollision(Position, velocity, Width, Height, flag1, flag1, 1);
                                    if (!Main.projPet[type])
                                    {
                                        Vector4 vector4 = Collision.SlopeCollision(Position, velocity, Width, Height, 0.0f, true);
                                        Vector2 vector2_3 = position - Position;
                                        if (Position.X != vector4.X)
                                            flag3 = true;
                                        if (Position.Y != vector4.Y)
                                            flag3 = true;
                                        if (velocity.X != vector4.Z)
                                            flag3 = true;
                                        if (velocity.Y != vector4.W)
                                            flag3 = true;
                                        Position.X = vector4.X;
                                        Position.Y = vector4.Y;
                                        position = Position + vector2_3;
                                        velocity.X = vector4.Z;
                                        velocity.Y = vector4.W;
                                    }
                                }
                            }
                        }
                        if (vector2_2 != velocity)
                            flag3 = true;
                        if (flag3)
                        {
                            if (type == 434)
                            {
                                Projectile projectile = this;
                                Vector2 vector2_3 = projectile.position + velocity;
                                projectile.position = vector2_3;
                                numUpdates = 0;
                            }
                            else if (type == 601)
                            {
                                if (owner == Main.myPlayer)
                                    PortalHelper.TryPlacingPortal(this, vector2_2, velocity);
                                Projectile projectile = this;
                                Vector2 vector2_3 = projectile.position + velocity;
                                projectile.position = vector2_3;
                                Kill();
                            }
                            else if (type == 451)
                            {
                                ai[0] = 1f;
                                ai[1] = 0.0f;
                                netUpdate = true;
                                velocity = vector2_2 / 2f;
                            }
                            else if (type == 645)
                            {
                                ai[0] = 0.0f;
                                ai[1] = -1f;
                                netUpdate = true;
                            }
                            else if (type == 584)
                            {
                                bool flag2 = false;
                                if (velocity.X != vector2_2.X)
                                {
                                    velocity.X = vector2_2.X * -0.75f;
                                    flag2 = true;
                                }
                                if (velocity.Y != vector2_2.Y && vector2_2.Y > 2.0 || velocity.Y == 0.0)
                                {
                                    velocity.Y = vector2_2.Y * -0.75f;
                                    flag2 = true;
                                }
                                if (flag2)
                                {
                                    float num4 = vector2_2.Length() / velocity.Length();
                                    if (num4 == 0.0)
                                        num4 = 1f;
                                    Projectile projectile = this;
                                    Vector2 vector2_3 = projectile.velocity / num4;
                                    projectile.velocity = vector2_3;
                                    --penetrate;
                                }
                            }
                            else if (type == 532)
                            {
                                bool flag2 = false;
                                if (velocity.X != vector2_2.X)
                                {
                                    velocity.X = vector2_2.X * -0.75f;
                                    flag2 = true;
                                }
                                if (velocity.Y != vector2_2.Y && vector2_2.Y > 2.0 || velocity.Y == 0.0)
                                {
                                    velocity.Y = vector2_2.Y * -0.75f;
                                    flag2 = true;
                                }
                                if (flag2)
                                {
                                    float num4 = vector2_2.Length() / velocity.Length();
                                    if (num4 == 0.0)
                                        num4 = 1f;
                                    Projectile projectile = this;
                                    Vector2 vector2_3 = projectile.velocity / num4;
                                    projectile.velocity = vector2_3;
                                    --penetrate;
                                    Collision.HitTiles(position, vector2_2, width, height);
                                }
                            }
                            else if (type == 533)
                            {
                                float num4 = 1f;
                                bool flag2 = false;
                                if (velocity.X != vector2_2.X)
                                {
                                    velocity.X = vector2_2.X * -num4;
                                    flag2 = true;
                                }
                                if (velocity.Y != vector2_2.Y || velocity.Y == 0.0)
                                {
                                    velocity.Y = (float)(vector2_2.Y * -num4 * 0.5);
                                    flag2 = true;
                                }
                                if (flag2)
                                {
                                    float num5 = vector2_2.Length() / velocity.Length();
                                    if (num5 == 0.0)
                                        num5 = 1f;
                                    Projectile projectile = this;
                                    Vector2 vector2_3 = projectile.velocity / num5;
                                    projectile.velocity = vector2_3;
                                    if (ai[0] == 7.0 && velocity.Y < -0.1)
                                        velocity.Y += 0.1f;
                                    if (ai[0] >= 6.0 && ai[0] < 9.0)
                                        Collision.HitTiles(position, vector2_2, width, height);
                                }
                            }
                            else if (type == 502)
                            {
                                ++ai[0];
                                Main.PlaySound(37, (int)position.X, (int)position.Y, 5 + (int)ai[0]);
                                if (ai[0] >= 5.0)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_3 = projectile.position + velocity;
                                    projectile.position = vector2_3;
                                    Kill();
                                }
                                else
                                {
                                    if (velocity.Y != vector2_2.Y)
                                        velocity.Y = -vector2_2.Y;
                                    if (velocity.X != vector2_2.X)
                                        velocity.X = -vector2_2.X;
                                }
                                Vector2 spinningpoint = Utils.RotatedByRandom(new Vector2(0.0f, -3f - ai[0]), 3.14159274101257);
                                float num4 = (float)(10.0 + ai[0] * 4.0);
                                Vector2 vector2_4 = new Vector2(1.05f, 1f);
                                for (float num5 = 0.0f; num5 < num4; ++num5)
                                {
                                    int index = Dust.NewDust(Center, 0, 0, 66, 0.0f, 0.0f, 0, Color.Transparent, 1f);
                                    Main.dust[index].position = Center;
                                    Main.dust[index].velocity = Utils.RotatedBy(spinningpoint, 6.28318548202515 * num5 / num4, new Vector2()) * vector2_4 * (float)(0.800000011920929 + Utils.NextFloat(Main.rand) * 0.400000005960464);
                                    Main.dust[index].color = Main.hslToRgb(num5 / num4, 1f, 0.5f);
                                    Main.dust[index].noGravity = true;
                                    Main.dust[index].scale = (float)(1.0 + ai[0] / 3.0);
                                }
                                if (Main.myPlayer == owner)
                                {
                                    int num5 = width;
                                    int num6 = height;
                                    int num7 = penetrate;
                                    position = Center;
                                    width = height = 40 + 8 * (int)ai[0];
                                    Center = position;
                                    penetrate = -1;
                                    Damage();
                                    penetrate = num7;
                                    position = Center;
                                    width = num5;
                                    height = num6;
                                    Center = position;
                                }
                            }
                            else if (type == 444)
                            {
                                if (velocity.X != vector2_2.X)
                                    velocity.X = -vector2_2.X;
                                if (velocity.Y != vector2_2.Y)
                                    velocity.Y = -vector2_2.Y;
                                ai[0] = Utils.ToRotation(velocity);
                            }
                            else if (type == 617)
                            {
                                if (velocity.X != vector2_2.X)
                                    velocity.X = (float)(-vector2_2.X * 0.349999994039536);
                                if (velocity.Y != vector2_2.Y)
                                    velocity.Y = (float)(-vector2_2.Y * 0.349999994039536);
                            }
                            else if (type == 440 || type == 449 || type == 606)
                            {
                                if (ai[1] != 1.0)
                                {
                                    ai[1] = 1f;
                                    Projectile projectile = this;
                                    Vector2 vector2_3 = projectile.position + velocity;
                                    projectile.position = vector2_3;
                                    velocity = vector2_2;
                                }
                            }
                            else if (type == 466 || type == 580 || type == 640)
                            {
                                if (localAI[1] < 1.0)
                                {
                                    localAI[1] += 2f;
                                    Projectile projectile = this;
                                    Vector2 vector2_3 = projectile.position + velocity;
                                    projectile.position = vector2_3;
                                    velocity = Vector2.Zero;
                                }
                            }
                            else if (aiStyle == 54)
                            {
                                if (velocity.X != vector2_2.X)
                                    velocity.X = vector2_2.X * -0.6f;
                                if (velocity.Y != vector2_2.Y)
                                    velocity.Y = vector2_2.Y * -0.6f;
                            }
                            else if (!Main.projPet[type] && type != 500 && type != 650)
                            {
                                if (aiStyle == 99)
                                {
                                    if (type >= 556 && type <= 561)
                                    {
                                        bool flag2 = false;
                                        if (velocity.X != (double)oldVelocity.X)
                                        {
                                            flag2 = true;
                                            velocity.X = oldVelocity.X * -1f;
                                        }
                                        if (velocity.Y != (double)oldVelocity.Y)
                                        {
                                            flag2 = true;
                                            velocity.Y = oldVelocity.Y * -1f;
                                        }
                                        if (flag2)
                                        {
                                            Vector2 vector2_3 = Main.player[owner].Center - Center;
                                            vector2_3.Normalize();
                                            Vector2 vector2_4 = vector2_3 * velocity.Length() * 0.25f;
                                            Projectile projectile1 = this;
                                            Vector2 vector2_5 = projectile1.velocity * 0.75f;
                                            projectile1.velocity = vector2_5;
                                            Projectile projectile2 = this;
                                            Vector2 vector2_6 = projectile2.velocity + vector2_4;
                                            projectile2.velocity = vector2_6;
                                            if (velocity.Length() > 6.0)
                                            {
                                                Projectile projectile3 = this;
                                                Vector2 vector2_7 = projectile3.velocity * 0.5f;
                                                projectile3.velocity = vector2_7;
                                            }
                                        }
                                    }
                                }
                                else if (type == 604)
                                {
                                    if (velocity.X != vector2_2.X)
                                        velocity.X = -vector2_2.X;
                                    if (velocity.Y != vector2_2.Y)
                                        velocity.Y = -vector2_2.Y;
                                }
                                else if (type == 379)
                                {
                                    if (velocity.X != vector2_2.X)
                                        velocity.X = vector2_2.X * -0.6f;
                                    if (velocity.Y != vector2_2.Y && vector2_2.Y > 2.0)
                                        velocity.Y = vector2_2.Y * -0.6f;
                                }
                                else if (type == 491)
                                {
                                    if (ai[0] <= 0.0)
                                        ai[0] = -10f;
                                    if (velocity.X != vector2_2.X && Math.Abs(vector2_2.X) > 0.0)
                                        velocity.X = vector2_2.X * -1f;
                                    if (velocity.Y != vector2_2.Y && Math.Abs(vector2_2.Y) > 0.0)
                                        velocity.Y = vector2_2.Y * -1f;
                                }
                                else if (type >= 515 && type <= 517 || type == 637)
                                {
                                    if (velocity.X != vector2_2.X && Math.Abs(vector2_2.X) > 1.0)
                                        velocity.X = vector2_2.X * -0.9f;
                                    if (velocity.Y != vector2_2.Y && Math.Abs(vector2_2.Y) > 1.0)
                                        velocity.Y = vector2_2.Y * -0.9f;
                                }
                                else if (type == 409)
                                {
                                    if (velocity.X != vector2_2.X)
                                        velocity.X = vector2_2.X * -1f;
                                    if (velocity.Y != vector2_2.Y)
                                        velocity.Y = vector2_2.Y * -1f;
                                }
                                else if (type == 254)
                                {
                                    tileCollide = false;
                                    velocity = vector2_2;
                                    if (timeLeft > 30)
                                        timeLeft = 30;
                                }
                                else if (type == 225 && penetrate > 0)
                                {
                                    velocity.X = -vector2_2.X;
                                    velocity.Y = -vector2_2.Y;
                                    --penetrate;
                                }
                                else if (type == 155)
                                {
                                    if (ai[1] > 10.0)
                                    {
                                        string str = string.Concat(new object[4]
                    {
                       name,
                       " was hit ",
                       ai[1],
                       " times before touching the ground!"
                    });
                                        if (Main.netMode == 0)
                                            Main.NewText(str, byte.MaxValue, 240, 20, false);
                                        else if (Main.netMode == 2)
                                            NetMessage.SendData(25, -1, -1, str, 255, 255, 240f, 20f, 0, 0, 0);
                                    }
                                    ai[1] = 0.0f;
                                    if (velocity.X != vector2_2.X)
                                        velocity.X = vector2_2.X * -0.6f;
                                    if (velocity.Y != vector2_2.Y && vector2_2.Y > 2.0)
                                        velocity.Y = vector2_2.Y * -0.6f;
                                }
                                else if (aiStyle == 33)
                                {
                                    if (localAI[0] == 0.0)
                                    {
                                        if (wet)
                                        {
                                            Projectile projectile = this;
                                            Vector2 vector2_3 = projectile.position + vector2_2 / 2f;
                                            projectile.position = vector2_3;
                                        }
                                        else
                                        {
                                            Projectile projectile = this;
                                            Vector2 vector2_3 = projectile.position + vector2_2;
                                            projectile.position = vector2_3;
                                        }
                                        Projectile projectile1 = this;
                                        Vector2 vector2_4 = projectile1.velocity * 0.0f;
                                        projectile1.velocity = vector2_4;
                                        localAI[0] = 1f;
                                    }
                                }
                                else if (type != 308)
                                {
                                    if (type == 477)
                                    {
                                        if (velocity.Y != vector2_2.Y || velocity.X != vector2_2.X)
                                        {
                                            --penetrate;
                                            if (penetrate <= 0)
                                                Kill();
                                            if (velocity.X != vector2_2.X)
                                                velocity.X = -vector2_2.X;
                                            if (velocity.Y != vector2_2.Y)
                                                velocity.Y = -vector2_2.Y;
                                        }
                                        if (penetrate > 0 && owner == Main.myPlayer)
                                        {
                                            int[] numArray = new int[10];
                                            int maxValue = 0;
                                            int num4 = 700;
                                            int num5 = 20;
                                            for (int index = 0; index < 200; ++index)
                                            {
                                                if (Main.npc[index].CanBeChasedBy(this, false))
                                                {
                                                    float num6 = (Center - Main.npc[index].Center).Length();
                                                    if (num6 > num5 && num6 < num4 && Collision.CanHitLine(Center, 1, 1, Main.npc[index].Center, 1, 1))
                                                    {
                                                        numArray[maxValue] = index;
                                                        ++maxValue;
                                                        if (maxValue >= 9)
                                                            break;
                                                    }
                                                }
                                            }
                                            if (maxValue > 0)
                                            {
                                                int index = Main.rand.Next(maxValue);
                                                Vector2 vector2_3 = Main.npc[numArray[index]].Center - Center;
                                                float num6 = velocity.Length();
                                                vector2_3.Normalize();
                                                velocity = vector2_3 * num6;
                                                netUpdate = true;
                                            }
                                        }
                                    }
                                    else if (type == 94 || type == 496)
                                    {
                                        if (velocity.X != vector2_2.X)
                                        {
                                            if (Math.Abs(velocity.X) < 1.0)
                                                velocity.X = -vector2_2.X;
                                            else
                                                Kill();
                                        }
                                        if (velocity.Y != vector2_2.Y)
                                        {
                                            if (Math.Abs(velocity.Y) < 1.0)
                                                velocity.Y = -vector2_2.Y;
                                            else
                                                Kill();
                                        }
                                    }
                                    else if (type == 311)
                                    {
                                        if (velocity.X != vector2_2.X)
                                        {
                                            velocity.X = -vector2_2.X;
                                            ++ai[1];
                                        }
                                        if (velocity.Y != vector2_2.Y)
                                        {
                                            velocity.Y = -vector2_2.Y;
                                            ++ai[1];
                                        }
                                        if (ai[1] > 4.0)
                                            Kill();
                                    }
                                    else if (type == 312)
                                    {
                                        if (velocity.X != vector2_2.X)
                                        {
                                            velocity.X = -vector2_2.X;
                                            ++ai[1];
                                        }
                                        if (velocity.Y != vector2_2.Y)
                                        {
                                            velocity.Y = -vector2_2.Y;
                                            ++ai[1];
                                        }
                                    }
                                    else if (type == 522 || type == 620)
                                    {
                                        if (velocity.X != vector2_2.X)
                                            velocity.X = -vector2_2.X;
                                        if (velocity.Y != vector2_2.Y)
                                            velocity.Y = -vector2_2.Y;
                                    }
                                    else if (type == 524)
                                    {
                                        ai[0] += 100f;
                                        if (velocity.X != vector2_2.X)
                                            velocity.X = -vector2_2.X;
                                        if (velocity.Y != vector2_2.Y)
                                            velocity.Y = -vector2_2.Y;
                                    }
                                    else if (aiStyle == 93)
                                    {
                                        if (velocity != vector2_2)
                                        {
                                            ai[1] = 0.0f;
                                            ai[0] = 1f;
                                            netUpdate = true;
                                            tileCollide = false;
                                            Projectile projectile1 = this;
                                            Vector2 vector2_3 = projectile1.position + velocity;
                                            projectile1.position = vector2_3;
                                            velocity = vector2_2;
                                            velocity.Normalize();
                                            Projectile projectile2 = this;
                                            Vector2 vector2_4 = projectile2.velocity * 3f;
                                            projectile2.velocity = vector2_4;
                                        }
                                    }
                                    else if (type == 281)
                                    {
                                        if ((Math.Abs(velocity.X) + Math.Abs(velocity.Y)) < 2.0 || ai[1] == 2.0)
                                        {
                                            ai[1] = 2f;
                                        }
                                        else
                                        {
                                            if (velocity.X != vector2_2.X)
                                                velocity.X = (float)(-vector2_2.X * 0.5);
                                            if (velocity.Y != vector2_2.Y)
                                                velocity.Y = (float)(-vector2_2.Y * 0.5);
                                        }
                                    }
                                    else if (type == 290 || type == 294)
                                    {
                                        if (velocity.X != vector2_2.X)
                                        {
                                            position.X += velocity.X;
                                            velocity.X = -vector2_2.X;
                                        }
                                        if (velocity.Y != vector2_2.Y)
                                        {
                                            position.Y += velocity.Y;
                                            velocity.Y = -vector2_2.Y;
                                        }
                                    }
                                    else if ((type == 181 || type == 189 || (type == 357 || type == 566)) && penetrate > 0)
                                    {
                                        if (type == 357)
                                            damage = (int)(damage * 0.9);
                                        --penetrate;
                                        if (velocity.X != vector2_2.X)
                                            velocity.X = -vector2_2.X;
                                        if (velocity.Y != vector2_2.Y)
                                            velocity.Y = -vector2_2.Y;
                                    }
                                    else if (type == 307 && ai[1] < 5.0)
                                    {
                                        ++ai[1];
                                        if (velocity.X != vector2_2.X)
                                            velocity.X = -vector2_2.X;
                                        if (velocity.Y != vector2_2.Y)
                                            velocity.Y = -vector2_2.Y;
                                    }
                                    else if (type == 99)
                                    {
                                        if (velocity.Y != vector2_2.Y && vector2_2.Y > 5.0)
                                        {
                                            Collision.HitTiles(position, velocity, width, height);
                                            Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                                            velocity.Y = (float)(-vector2_2.Y * 0.200000002980232);
                                        }
                                        if (velocity.X != vector2_2.X)
                                            Kill();
                                    }
                                    else if (type == 36)
                                    {
                                        if (penetrate > 1)
                                        {
                                            Collision.HitTiles(position, velocity, width, height);
                                            Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                                            --penetrate;
                                            if (velocity.X != vector2_2.X)
                                                velocity.X = -vector2_2.X;
                                            if (velocity.Y != vector2_2.Y)
                                                velocity.Y = -vector2_2.Y;
                                        }
                                        else
                                            Kill();
                                    }
                                    else if (aiStyle == 21)
                                    {
                                        if (velocity.X != vector2_2.X)
                                            velocity.X = -vector2_2.X;
                                        if (velocity.Y != vector2_2.Y)
                                            velocity.Y = -vector2_2.Y;
                                    }
                                    else if (aiStyle == 17)
                                    {
                                        if (velocity.X != vector2_2.X)
                                            velocity.X = vector2_2.X * -0.75f;
                                        if (velocity.Y != vector2_2.Y && vector2_2.Y > 1.5)
                                            velocity.Y = vector2_2.Y * -0.7f;
                                    }
                                    else if (aiStyle == 15)
                                    {
                                        bool flag2 = false;
                                        if (vector2_2.X != velocity.X)
                                        {
                                            if (Math.Abs(vector2_2.X) > 4.0)
                                                flag2 = true;
                                            position.X += velocity.X;
                                            velocity.X = (float)(-vector2_2.X * 0.200000002980232);
                                        }
                                        if (vector2_2.Y != velocity.Y)
                                        {
                                            if (Math.Abs(vector2_2.Y) > 4.0)
                                                flag2 = true;
                                            position.Y += velocity.Y;
                                            velocity.Y = (float)(-vector2_2.Y * 0.200000002980232);
                                        }
                                        ai[0] = 1f;
                                        if (flag2)
                                        {
                                            netUpdate = true;
                                            Collision.HitTiles(position, velocity, width, height);
                                            Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                                        }
                                        if (wet)
                                            vector2_1 = velocity;
                                    }
                                    else if (aiStyle == 39)
                                    {
                                        Collision.HitTiles(position, velocity, width, height);
                                        if (type == 33 || type == 106)
                                        {
                                            if (velocity.X != vector2_2.X)
                                                velocity.X = -vector2_2.X;
                                            if (velocity.Y != vector2_2.Y)
                                                velocity.Y = -vector2_2.Y;
                                        }
                                        else
                                        {
                                            ai[0] = 1f;
                                            if (aiStyle == 3)
                                            {
                                                velocity.X = -vector2_2.X;
                                                velocity.Y = -vector2_2.Y;
                                            }
                                        }
                                        netUpdate = true;
                                        Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                                    }
                                    else if (aiStyle == 3 || aiStyle == 13 || (aiStyle == 69 || aiStyle == 109))
                                    {
                                        Collision.HitTiles(position, velocity, width, height);
                                        if (type == 33 || type == 106)
                                        {
                                            if (velocity.X != vector2_2.X)
                                                velocity.X = -vector2_2.X;
                                            if (velocity.Y != vector2_2.Y)
                                                velocity.Y = -vector2_2.Y;
                                        }
                                        else
                                        {
                                            ai[0] = 1f;
                                            if ((aiStyle == 3 || aiStyle == 109) && type != 383)
                                            {
                                                velocity.X = -vector2_2.X;
                                                velocity.Y = -vector2_2.Y;
                                            }
                                        }
                                        netUpdate = true;
                                        Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                                    }
                                    else if (aiStyle == 8 && type != 96)
                                    {
                                        Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                                        ++ai[0];
                                        if (ai[0] >= 5.0 && type != 253 || type == 253 && ai[0] >= 8.0)
                                        {
                                            Projectile projectile = this;
                                            Vector2 vector2_3 = projectile.position + velocity;
                                            projectile.position = vector2_3;
                                            Kill();
                                        }
                                        else
                                        {
                                            if (type == 15 && velocity.Y > 4.0)
                                            {
                                                if (velocity.Y != vector2_2.Y)
                                                    velocity.Y = (float)(-vector2_2.Y * 0.800000011920929);
                                            }
                                            else if (velocity.Y != vector2_2.Y)
                                                velocity.Y = -vector2_2.Y;
                                            if (velocity.X != vector2_2.X)
                                                velocity.X = -vector2_2.X;
                                        }
                                    }
                                    else if (aiStyle == 61)
                                    {
                                        if (velocity.X != vector2_2.X)
                                            velocity.X = vector2_2.X * -0.3f;
                                        if (velocity.Y != vector2_2.Y && vector2_2.Y > 1.0)
                                            velocity.Y = vector2_2.Y * -0.3f;
                                    }
                                    else if (aiStyle == 14)
                                    {
                                        if (type == 261 && (velocity.X != vector2_2.X && (vector2_2.X < -3.0 || vector2_2.X > 3.0) || velocity.Y != vector2_2.Y && (vector2_2.Y < -3.0 || vector2_2.Y > 3.0)))
                                        {
                                            Collision.HitTiles(position, velocity, width, height);
                                            Main.PlaySound(0, (int)Center.X, (int)Center.Y, 1);
                                        }
                                        if (type >= 326 && type <= 328 && velocity.X != vector2_2.X)
                                            velocity.X = vector2_2.X * -0.1f;
                                        if (type >= 400 && type <= 402)
                                        {
                                            if (velocity.X != vector2_2.X)
                                                velocity.X = vector2_2.X * -0.1f;
                                        }
                                        else if (type == 50)
                                        {
                                            if (velocity.X != vector2_2.X)
                                                velocity.X = vector2_2.X * -0.2f;
                                            if (velocity.Y != vector2_2.Y && vector2_2.Y > 1.5)
                                                velocity.Y = vector2_2.Y * -0.2f;
                                        }
                                        else if (type == 185)
                                        {
                                            if (velocity.X != vector2_2.X)
                                                velocity.X = vector2_2.X * -0.9f;
                                            if (velocity.Y != vector2_2.Y && vector2_2.Y > 1.0)
                                                velocity.Y = vector2_2.Y * -0.9f;
                                        }
                                        else if (type == 277)
                                        {
                                            if (velocity.X != vector2_2.X)
                                                velocity.X = vector2_2.X * -0.9f;
                                            if (velocity.Y != vector2_2.Y && vector2_2.Y > 3.0)
                                                velocity.Y = vector2_2.Y * -0.9f;
                                        }
                                        else if (type != 480)
                                        {
                                            if (type == 450)
                                            {
                                                if (velocity.X != vector2_2.X)
                                                    velocity.X = vector2_2.X * -0.1f;
                                            }
                                            else
                                            {
                                                if (velocity.X != vector2_2.X)
                                                    velocity.X = vector2_2.X * -0.5f;
                                                if (velocity.Y != vector2_2.Y && vector2_2.Y > 1.0)
                                                    velocity.Y = vector2_2.Y * -0.5f;
                                            }
                                        }
                                    }
                                    else if (aiStyle == 16)
                                    {
                                        if (velocity.X != vector2_2.X)
                                        {
                                            velocity.X = vector2_2.X * -0.4f;
                                            if (type == 29)
                                                velocity.X = velocity.X * 0.8f;
                                        }
                                        if (velocity.Y != vector2_2.Y && vector2_2.Y > 0.7 && type != 102)
                                        {
                                            velocity.Y = vector2_2.Y * -0.4f;
                                            if (type == 29)
                                                velocity.Y = velocity.Y * 0.8f;
                                        }
                                        if (type == 134 || type == 137 || (type == 140 || type == 143) || (type == 303 || type >= 338 && type <= 341))
                                        {
                                            Projectile projectile = this;
                                            Vector2 vector2_3 = projectile.velocity * 0.0f;
                                            projectile.velocity = vector2_3;
                                            alpha = 255;
                                            timeLeft = 3;
                                        }
                                    }
                                    else if (aiStyle == 68)
                                    {
                                        Projectile projectile = this;
                                        Vector2 vector2_3 = projectile.velocity * 0.0f;
                                        projectile.velocity = vector2_3;
                                        alpha = 255;
                                        timeLeft = 3;
                                    }
                                    else if (aiStyle != 9 || owner == Main.myPlayer)
                                    {
                                        Projectile projectile = this;
                                        Vector2 vector2_3 = projectile.position + velocity;
                                        projectile.position = vector2_3;
                                        Kill();
                                    }
                                }
                            }
                        }
                    }
                    if (aiStyle != 4 && aiStyle != 38 && aiStyle != 84 && (aiStyle != 7 || ai[0] != 2.0) && (type != 440 && type != 449 && type != 606 || ai[1] != 1.0) && ((aiStyle != 93 || ai[0] >= 0.0) && type != 540))
                    {
                        if (wet)
                        {
                            Projectile projectile = this;
                            Vector2 vector2_2 = projectile.position + vector2_1;
                            projectile.position = vector2_2;
                        }
                        else
                        {
                            Projectile projectile = this;
                            Vector2 vector2_2 = projectile.position + velocity;
                            projectile.position = vector2_2;
                        }
                        if (Main.projPet[type] && tileCollide)
                        {
                            Vector4 vector4 = Collision.SlopeCollision(position, velocity, width, height, 0.0f, false);
                            position.X = vector4.X;
                            position.Y = vector4.Y;
                            velocity.X = vector4.Z;
                            velocity.Y = vector4.W;
                        }
                    }
                    if ((aiStyle != 3 || ai[0] != 1.0) && (aiStyle != 7 || ai[0] != 1.0) && ((aiStyle != 13 || ai[0] != 1.0) && (aiStyle != 65 && aiStyle != 69)) && (aiStyle != 114 && aiStyle != 123 && (aiStyle != 112 && !manualDirectionChange) && (aiStyle != 67 && aiStyle != 26 && aiStyle != 15)))
                    {
                        if (velocity.X < 0.0)
                            direction = -1;
                        else
                            direction = 1;
                    }
                    if (!active)
                        return;
                    ProjLight();
                    if (!npcProj && friendly && (Main.player[owner].magicQuiver && extraUpdates < 1) && arrow)
                        extraUpdates = 1;
                    if (type == 2 || type == 82)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1f);
                    else if (type == 172)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 135, 0.0f, 0.0f, 100, new Color(), 1f);
                    else if (type == 103)
                    {
                        int index = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 75, 0.0f, 0.0f, 100, new Color(), 1f);
                        if (Main.rand.Next(2) == 0)
                        {
                            Main.dust[index].noGravity = true;
                            Main.dust[index].scale *= 2f;
                        }
                    }
                    else if (type == 278)
                    {
                        int index = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 169, 0.0f, 0.0f, 100, new Color(), 1f);
                        if (Main.rand.Next(2) == 0)
                        {
                            Main.dust[index].noGravity = true;
                            Main.dust[index].scale *= 1.5f;
                        }
                    }
                    else if (type == 4)
                    {
                        if (Main.rand.Next(5) == 0)
                            Dust.NewDust(new Vector2(position.X, position.Y), width, height, 14, 0.0f, 0.0f, 150, new Color(), 1.1f);
                    }
                    else if (type == 5)
                    {
                        int Type;
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                Type = 15;
                                break;
                            case 1:
                                Type = 57;
                                break;
                            default:
                                Type = 58;
                                break;
                        }
                        Dust.NewDust(position, width, height, Type, velocity.X * 0.5f, velocity.Y * 0.5f, 150, new Color(), 1.2f);
                    }
                    Damage();
                    if (type == 434 && localAI[0] == 0.0 && numUpdates == 0)
                    {
                        extraUpdates = 1;
                        velocity = Vector2.Zero;
                        localAI[0] = 1f;
                        localAI[1] = 0.9999f;
                        netUpdate = true;
                    }
                    if (Main.netMode != 1 && type == 99)
                        Collision.SwitchTiles(position, width, height, oldPosition, 3);
                    if (ProjectileID.Sets.TrailingMode[type] == 0)
                    {
                        for (int index = oldPos.Length - 1; index > 0; --index)
                            oldPos[index] = oldPos[index - 1];
                        oldPos[0] = position;
                    }
                    else if (ProjectileID.Sets.TrailingMode[type] == 1)
                    {
                        if (frameCounter == 0 || oldPos[0] == Vector2.Zero)
                        {
                            for (int index = oldPos.Length - 1; index > 0; --index)
                                oldPos[index] = oldPos[index - 1];
                            oldPos[0] = position;
                            if (velocity == Vector2.Zero && type == 466)
                            {
                                float num2 = (float)(rotation + 1.57079637050629 + (Main.rand.Next(2) == 1 ? -1.0 : 1.0) * 1.57079637050629);
                                float num3 = (float)(Main.rand.NextDouble() * 2.0 + 2.0);
                                Vector2 vector2_2 = new Vector2((float)Math.Cos(num2) * num3, (float)Math.Sin(num2) * num3);
                                int index = Dust.NewDust(oldPos[oldPos.Length - 1], 0, 0, 229, vector2_2.X, vector2_2.Y, 0, new Color(), 1f);
                                Main.dust[index].noGravity = true;
                                Main.dust[index].scale = 1.7f;
                            }
                            if (velocity == Vector2.Zero && type == 580)
                            {
                                float num2 = (float)(rotation + 1.57079637050629 + (Main.rand.Next(2) == 1 ? -1.0 : 1.0) * 1.57079637050629);
                                float num3 = (float)(Main.rand.NextDouble() * 2.0 + 2.0);
                                Vector2 vector2_2 = new Vector2((float)Math.Cos(num2) * num3, (float)Math.Sin(num2) * num3);
                                int index = Dust.NewDust(oldPos[oldPos.Length - 1], 0, 0, 229, vector2_2.X, vector2_2.Y, 0, new Color(), 1f);
                                Main.dust[index].noGravity = true;
                                Main.dust[index].scale = 1.7f;
                            }
                        }
                    }
                    else if (ProjectileID.Sets.TrailingMode[type] == 2)
                    {
                        for (int index = oldPos.Length - 1; index > 0; --index)
                        {
                            oldPos[index] = oldPos[index - 1];
                            oldRot[index] = oldRot[index - 1];
                            oldSpriteDirection[index] = oldSpriteDirection[index - 1];
                        }
                        oldPos[0] = position;
                        oldRot[0] = rotation;
                        oldSpriteDirection[0] = spriteDirection;
                    }
                    --timeLeft;
                    if (timeLeft <= 0)
                        Kill();
                    if (penetrate == 0)
                        Kill();
                    if (active && owner == Main.myPlayer)
                    {
                        if (netUpdate2)
                            netUpdate = true;
                        if (!active)
                            netSpam = 0;
                        if (netUpdate)
                        {
                            if (netSpam < 60)
                            {
                                netSpam += 5;
                                NetMessage.SendData(27, -1, -1, "", i, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                                netUpdate2 = false;
                            }
                            else
                                netUpdate2 = true;
                        }
                        if (netSpam > 0)
                            --netSpam;
                    }
                }
            }
            netUpdate = false;
        }

        public void FishingCheck()
        {
            int index = (int)(Center.X / 16.0);
            int j1 = (int)(Center.Y / 16.0);
            if (Main.tile[index, j1].liquid < 0)
                ++j1;
            bool flag1 = false;
            bool flag2 = false;
            int i1 = index;
            int i2 = index;
            while (i1 > 10 && Main.tile[i1, j1].liquid > 0 && !WorldGen.SolidTile(i1, j1))
                --i1;
            while (i2 < Main.maxTilesX - 10 && Main.tile[i2, j1].liquid > 0 && !WorldGen.SolidTile(i2, j1))
                ++i2;
            int num1 = 0;
            for (int i3 = i1; i3 <= i2; ++i3)
            {
                int j2 = j1;
                while (Main.tile[i3, j2].liquid > 0 && !WorldGen.SolidTile(i3, j2) && j2 < Main.maxTilesY - 10)
                {
                    ++num1;
                    ++j2;
                    if (Main.tile[i3, j2].lava())
                        flag1 = true;
                    else if (Main.tile[i3, j2].honey())
                        flag2 = true;
                }
            }
            if (flag2)
                num1 = (int)(num1 * 1.5);
            if (num1 < 75)
            {
                Main.player[owner].displayedFishingInfo = "Not Enough Water!";
            }
            else
            {
                int num2 = Main.player[owner].FishingLevel();
                if (num2 == 0)
                    return;
                Main.player[owner].displayedFishingInfo = (string)(object)num2 + (object)" Fishing Power";
                if (num2 < 0)
                {
                    if (num2 != -1)
                        return;
                    Main.player[owner].displayedFishingInfo = "Warning!";
                    if (index >= 380 && index <= Main.maxTilesX - 380 || (num1 <= 1000 || NPC.AnyNPCs(370)))
                        return;
                    ai[1] = (Main.rand.Next(-180, -60) - 100);
                    localAI[1] = num2;
                    netUpdate = true;
                }
                else
                {
                    int num3 = 300;
                    float num4 = (Main.maxTilesX / 4200);
                    float num5 = (float)((position.Y / 16.0 - (60.0 + 10.0 * (num4 * num4))) / (Main.worldSurface / 6.0));
                    if (num5 < 0.25)
                        num5 = 0.25f;
                    if (num5 > 1.0)
                        num5 = 1f;
                    int num6 = (int)(num3 * num5);
                    float num7 = num1 / num6;
                    if (num7 < 1.0)
                        num2 = (int)(num2 * num7);
                    float num8 = 1f - num7;
                    if (num1 < num6)
                        Main.player[owner].displayedFishingInfo = string.Concat(new object[4]
            {
               num2,
               " (",
               -Math.Round(num8 * 100.0),
               "%) Fishing Power"
            });
                    int num9 = (num2 + 75) / 2;
                    if (Main.player[owner].wet || Main.rand.Next(100) > num9)
                        return;
                    int Type = 0;
                    int num10 = j1 >= Main.worldSurface * 0.5 ? (j1 >= Main.worldSurface ? (j1 >= Main.rockLayer ? (j1 >= Main.maxTilesY - 300 ? 4 : 3) : 2) : 1) : 0;
                    int num11 = 150;
                    int maxValue1 = num11 / num2;
                    int maxValue2 = num11 * 2 / num2;
                    int maxValue3 = num11 * 7 / num2;
                    int maxValue4 = num11 * 15 / num2;
                    int maxValue5 = num11 * 30 / num2;
                    if (maxValue1 < 2)
                        maxValue1 = 2;
                    if (maxValue2 < 3)
                        maxValue2 = 3;
                    if (maxValue3 < 4)
                        maxValue3 = 4;
                    if (maxValue4 < 5)
                        maxValue4 = 5;
                    if (maxValue5 < 6)
                        maxValue5 = 6;
                    bool flag3 = false;
                    bool flag4 = false;
                    bool flag5 = false;
                    bool flag6 = false;
                    bool flag7 = false;
                    if (Main.rand.Next(maxValue1) == 0)
                        flag3 = true;
                    if (Main.rand.Next(maxValue2) == 0)
                        flag4 = true;
                    if (Main.rand.Next(maxValue3) == 0)
                        flag5 = true;
                    if (Main.rand.Next(maxValue4) == 0)
                        flag6 = true;
                    if (Main.rand.Next(maxValue5) == 0)
                        flag7 = true;
                    int num12 = 10;
                    if (Main.player[owner].cratePotion)
                        num12 += 10;
                    int type = Main.anglerQuestItemNetIDs[Main.anglerQuest];
                    if (Main.player[owner].HasItem(type))
                        type = -1;
                    if (Main.anglerQuestFinished)
                        type = -1;
                    if (flag1)
                    {
                        if (Main.player[owner].inventory[Main.player[owner].selectedItem].itemId != 2422)
                            return;
                        if (flag7)
                            Type = 2331;
                        else if (flag6)
                            Type = 2312;
                        else if (flag5)
                            Type = 2315;
                    }
                    else if (flag2)
                    {
                        if (flag5 || flag4 && Main.rand.Next(2) == 0)
                            Type = 2314;
                        else if (flag4 && type == 2451)
                            Type = 2451;
                    }
                    else if (Main.rand.Next(50) > num2 && Main.rand.Next(50) > num2 && num1 < num6)
                        Type = Main.rand.Next(2337, 2340);
                    else if (Main.rand.Next(100) < num12)
                        Type = flag6 || flag7 ? 2336 : (!flag5 || !Main.player[owner].ZoneCorrupt ? (!flag5 || !Main.player[owner].ZoneCrimson ? (!flag5 || !Main.player[owner].ZoneHoly ? (!flag5 || !Main.player[owner].ZoneDungeon ? (!flag5 || !Main.player[owner].ZoneJungle ? (!flag5 || num10 != 0 ? (!flag4 ? 2334 : 2335) : 3206) : 3208) : 3205) : 3207) : 3204) : 3203);
                    else if (flag7 && Main.rand.Next(5) == 0)
                        Type = 2423;
                    else if (flag7 && Main.rand.Next(5) == 0)
                        Type = 3225;
                    else if (flag7 && Main.rand.Next(10) == 0)
                        Type = 2420;
                    else if (!flag7 && !flag6 && (flag4 && Main.rand.Next(5) == 0))
                    {
                        Type = 3196;
                    }
                    else
                    {
                        bool flag8 = Main.player[owner].ZoneCorrupt;
                        bool flag9 = Main.player[owner].ZoneCrimson;
                        if (flag8 && flag9)
                        {
                            if (Main.rand.Next(2) == 0)
                                flag9 = false;
                            else
                                flag8 = false;
                        }
                        if (flag8)
                        {
                            if (flag7 && Main.hardMode && (Main.player[owner].ZoneSnow && num10 == 3) && Main.rand.Next(3) != 0)
                                Type = 2429;
                            else if (flag7 && Main.hardMode && Main.rand.Next(2) == 0)
                                Type = 3210;
                            else if (flag5)
                                Type = 2330;
                            else if (flag4 && type == 2454)
                                Type = 2454;
                            else if (flag4 && type == 2485)
                                Type = 2485;
                            else if (flag4 && type == 2457)
                                Type = 2457;
                            else if (flag4)
                                Type = 2318;
                        }
                        else if (flag9)
                        {
                            if (flag7 && Main.hardMode && (Main.player[owner].ZoneSnow && num10 == 3) && Main.rand.Next(3) != 0)
                                Type = 2429;
                            else if (flag7 && Main.hardMode && Main.rand.Next(2) == 0)
                                Type = 3211;
                            else if (flag4 && type == 2477)
                                Type = 2477;
                            else if (flag4 && type == 2463)
                                Type = 2463;
                            else if (flag4)
                                Type = 2319;
                            else if (flag3)
                                Type = 2305;
                        }
                        else if (Main.player[owner].ZoneHoly)
                        {
                            if (flag7 && Main.hardMode && (Main.player[owner].ZoneSnow && num10 == 3) && Main.rand.Next(3) != 0)
                                Type = 2429;
                            else if (flag7 && Main.hardMode && Main.rand.Next(2) == 0)
                                Type = 3209;
                            else if (num10 > 1 && flag6)
                                Type = 2317;
                            else if (num10 > 1 && flag5 && type == 2465)
                                Type = 2465;
                            else if (num10 < 2 && flag5 && type == 2468)
                                Type = 2468;
                            else if (flag5)
                                Type = 2310;
                            else if (flag4 && type == 2471)
                                Type = 2471;
                            else if (flag4)
                                Type = 2307;
                        }
                        if (Type == 0 && Main.player[owner].ZoneSnow)
                        {
                            if (num10 < 2 && flag4 && type == 2467)
                                Type = 2467;
                            else if (num10 == 1 && flag4 && type == 2470)
                                Type = 2470;
                            else if (num10 >= 2 && flag4 && type == 2484)
                                Type = 2484;
                            else if (num10 > 1 && flag4 && type == 2466)
                                Type = 2466;
                            else if (flag3 && Main.rand.Next(12) == 0 || flag4 && Main.rand.Next(6) == 0)
                                Type = 3197;
                            else if (flag4)
                                Type = 2306;
                            else if (flag3)
                                Type = 2299;
                            else if (num10 > 1 && Main.rand.Next(3) == 0)
                                Type = 2309;
                        }
                        if (Type == 0 && Main.player[owner].ZoneJungle)
                        {
                            if (Main.hardMode && flag7 && Main.rand.Next(2) == 0)
                                Type = 3018;
                            else if (num10 == 1 && flag4 && type == 2452)
                                Type = 2452;
                            else if (num10 == 1 && flag4 && type == 2483)
                                Type = 2483;
                            else if (num10 == 1 && flag4 && type == 2488)
                                Type = 2488;
                            else if (num10 >= 1 && flag4 && type == 2486)
                                Type = 2486;
                            else if (num10 > 1 && flag4)
                                Type = 2311;
                            else if (flag4)
                                Type = 2313;
                            else if (flag3)
                                Type = 2302;
                        }
                        if (Type == 0 && Main.shroomTiles > 200 && (flag4 && type == 2475))
                            Type = 2475;
                        if (Type == 0)
                        {
                            if (num10 <= 1 && (index < 380 || index > Main.maxTilesX - 380) && num1 > 1000)
                            {
                                Type = !flag6 || Main.rand.Next(2) != 0 ? (!flag6 ? (!flag5 || Main.rand.Next(5) != 0 ? (!flag5 || Main.rand.Next(2) != 0 ? (!flag4 || type != 2480 ? (!flag4 || type != 2481 ? (!flag4 ? (!flag3 || Main.rand.Next(2) != 0 ? (!flag3 ? 2297 : 2300) : 2301) : 2316) : 2481) : 2480) : 2332) : 2438) : 2342) : 2341;
                            }
                            else
                            {
                                int num13 = Main.sandTiles;
                            }
                        }
                        if (Type == 0)
                            Type = num10 >= 2 || !flag4 || type != 2461 ? (num10 != 0 || !flag4 || type != 2453 ? (num10 != 0 || !flag4 || type != 2473 ? (num10 != 0 || !flag4 || type != 2476 ? (num10 >= 2 || !flag4 || type != 2458 ? (num10 >= 2 || !flag4 || type != 2459 ? (num10 != 0 || !flag4 ? (num10 <= 0 || num10 >= 3 || (!flag4 || type != 2455) ? (num10 != 1 || !flag4 || type != 2479 ? (num10 != 1 || !flag4 || type != 2456 ? (num10 != 1 || !flag4 || type != 2474 ? (num10 <= 1 || !flag5 || Main.rand.Next(5) != 0 ? (num10 <= 1 || !flag7 ? (num10 <= 1 || !flag6 || Main.rand.Next(2) != 0 ? (num10 <= 1 || !flag5 ? (num10 <= 1 || !flag4 || type != 2478 ? (num10 <= 1 || !flag4 || type != 2450 ? (num10 <= 1 || !flag4 || type != 2464 ? (num10 <= 1 || !flag4 || type != 2469 ? (num10 <= 2 || !flag4 || type != 2462 ? (num10 <= 2 || !flag4 || type != 2482 ? (num10 <= 2 || !flag4 || type != 2472 ? (num10 <= 2 || !flag4 || type != 2460 ? (num10 <= 1 || !flag4 || Main.rand.Next(4) == 0 ? (num10 <= 1 || !flag4 && !flag3 && Main.rand.Next(4) != 0 ? (!flag4 || type != 2487 ? (num1 <= 1000 || !flag3 ? 2290 : 2298) : 2487) : (Main.rand.Next(4) != 0 ? 2309 : 2303)) : 2303) : 2460) : 2472) : 2482) : 2462) : 2469) : 2464) : 2450) : 2478) : 2321) : 2320) : 2308) : (!Main.hardMode || Main.rand.Next(2) != 0 ? 2436 : 2437)) : 2474) : 2456) : 2479) : 2455) : 2304) : 2459) : 2458) : 2476) : 2473) : 2453) : 2461;
                    }
                    if (Type <= 0)
                        return;
                    if (Main.player[owner].sonarPotion)
                    {
                        Item newItem = new Item();
                        newItem.SetDefaults(Type, false);
                        newItem.position = position;
                        ItemText.NewText(newItem, 1, true, false);
                    }
                    float num14 = num2;
                    ai[1] = Main.rand.Next(-240, -90) - num14;
                    localAI[1] = Type;
                    netUpdate = true;
                }
            }
        }

        public bool CanReflect()
        {
            return active && friendly && (!hostile && damage > 0) && (aiStyle == 1 || aiStyle == 2 || (aiStyle == 8 || aiStyle == 21) || (aiStyle == 24 || aiStyle == 28 || aiStyle == 29));
        }

        public float GetPrismHue(float indexing)
        {
            if (Main.player[owner].active)
            {
                switch (Main.player[owner].name)
                {
                    case "Tsuki":
                    case "Yoraiz0r":
                        return 0.85f;
                    case "Ghostar":
                        return 0.33f;
                    case "Devalaous":
                        return (float)(0.660000026226044 + Math.Cos(Main.time / 180.0 * 6.28318548202515) * 0.100000001490116);
                    case "Leinfors":
                        return 0.77f;
                    case "Aeroblop":
                        return (float)(0.25 + Math.Cos(Main.time / 180.0 * 6.28318548202515) * 0.100000001490116);
                    case "Doylee":
                        return 0.0f;
                    case "Darkhalis":
                    case "Arkhalis":
                        return (float)(0.75 + Math.Cos(Main.time / 180.0 * 6.28318548202515) * 0.0700000002980232);
                    case "Nike Leon":
                        return (float)(0.0750000029802322 + Math.Cos(Main.time / 180.0 * 6.28318548202515) * 0.0700000002980232);
                    case "Suweeka":
                        return (float)(0.5 + Math.Cos(Main.time / 180.0 * 6.28318548202515) * 0.180000007152557);
                    case "W1K":
                        return (float)(0.75 + Math.Cos(Main.time / 120.0 * 6.28318548202515) * 0.0500000007450581);
                    case "Random":
                        return Utils.NextFloat(Main.rand);
                }
            }
            return (int)indexing / 6f;
        }

        public void ProjectileFixDesperation(int own)
        {
            switch (type)
            {
                case 461:
                case 632:
                case 642:
                case 644:
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (Main.projectile[index].owner == owner && Main.projectile[index].identity == ai[1] && Main.projectile[index].active)
                        {
                            ai[1] = index;
                            break;
                        }
                    }
                    break;
                case 626:
                case 627:
                case 628:
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (Main.projectile[index].owner == owner && Main.projectile[index].identity == ai[0] && Main.projectile[index].active)
                        {
                            ai[0] = index;
                            break;
                        }
                    }
                    break;
            }
        }

        public void AI()
        {
            Vector2 mountedCenter;
            float num76;
            float num77;
            float num78;
            Vector3 zero;
            int num114;
            int num115;
            int num316;
            Color color5;
            Vector2 vector240;
            if (this.aiStyle == 1)
            {
                this.AI_001();
                return;
            }
            if (this.aiStyle == 2)
            {
                if ((this.type == 0x5d) && (Main.rand.Next(5) == 0))
                {
                    color5 = new Color();
                    int num = Dust.NewDust(base.position, base.width, base.height, 0x39, (this.velocity.X * 0.2f) + (base.direction * 3), this.velocity.Y * 0.2f, 100, color5, 0.3f);
                    Main.dust[num].velocity.X *= 0.3f;
                    Main.dust[num].velocity.Y *= 0.3f;
                }
                if ((this.type == 0x130) && (this.localAI[0] == 0f))
                {
                    this.localAI[0]++;
                    this.alpha = 0;
                }
                if (this.type == 0x14f)
                {
                    this.frame = (int)this.ai[1];
                }
                if (this.type == 510)
                {
                    this.rotation += (Math.Abs(this.velocity.X) * 0.04f) * base.direction;
                }
                else
                {
                    float introduced1570 = Math.Abs(this.velocity.X);
                    this.rotation += ((introduced1570 + Math.Abs(this.velocity.Y)) * 0.03f) * base.direction;
                }
                if (this.type == 0xa2)
                {
                    if (this.ai[1] == 0f)
                    {
                        this.ai[1] = 1f;
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    }
                    this.ai[0]++;
                    if (this.ai[0] >= 18f)
                    {
                        this.velocity.Y += 0.28f;
                        this.velocity.X *= 0.99f;
                    }
                    if (this.ai[0] > 2f)
                    {
                        this.alpha = 0;
                        if (this.ai[0] == 3f)
                        {
                            for (int i = 0; i < 10; i++)
                            {
                                color5 = new Color();
                                int num3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x1f, 0f, 0f, 100, color5, 1.5f);
                                Dust dust1 = Main.dust[num3];
                                dust1.velocity = (Vector2)(dust1.velocity * 0.5f);
                                Dust dust33 = Main.dust[num3];
                                dust33.velocity += (Vector2)(base.velocity * 0.1f);
                            }
                            for (int j = 0; j < 5; j++)
                            {
                                color5 = new Color();
                                int num5 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, 0f, 0f, 100, color5, 2f);
                                Main.dust[num5].noGravity = true;
                                Dust dust34 = Main.dust[num5];
                                dust34.velocity = (Vector2)(dust34.velocity * 3f);
                                Dust dust35 = Main.dust[num5];
                                dust35.velocity += (Vector2)(base.velocity * 0.2f);
                                color5 = new Color();
                                num5 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, 0f, 0f, 100, color5, 1f);
                                Dust dust36 = Main.dust[num5];
                                dust36.velocity = (Vector2)(dust36.velocity * 2f);
                                Dust dust37 = Main.dust[num5];
                                dust37.velocity += (Vector2)(base.velocity * 0.3f);
                            }
                            for (int k = 0; k < 1; k++)
                            {
                                vector240 = new Vector2();
                                int num6 = Gore.NewGore(new Vector2(this.position.X - 10f, this.position.Y - 10f), vector240, Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore1 = Main.gore[num6];
                                gore1.position += (Vector2)(base.velocity * 1.25f);
                                Main.gore[num6].scale = 1.5f;
                                Gore gore2 = Main.gore[num6];
                                gore2.velocity += (Vector2)(base.velocity * 0.5f);
                                Gore gore3 = Main.gore[num6];
                                gore3.velocity = (Vector2)(gore3.velocity * 0.02f);
                            }
                        }
                    }
                }
                else if (this.type == 0x119)
                {
                    if (this.ai[1] == 0f)
                    {
                        this.ai[1] = 1f;
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    }
                    this.ai[0]++;
                    if (this.ai[0] >= 18f)
                    {
                        this.velocity.Y += 0.28f;
                        this.velocity.X *= 0.99f;
                    }
                    if (this.ai[0] > 2f)
                    {
                        this.alpha = 0;
                        if (this.ai[0] == 3f)
                        {
                            for (int m = 0; m < 10; m++)
                            {
                                color5 = new Color();
                                int num9 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x1f, 0f, 0f, 100, color5, 1.5f);
                                Dust dust38 = Main.dust[num9];
                                dust38.velocity = (Vector2)(dust38.velocity * 0.5f);
                                Dust dust39 = Main.dust[num9];
                                dust39.velocity += (Vector2)(base.velocity * 0.1f);
                            }
                            for (int n = 0; n < 5; n++)
                            {
                                color5 = new Color();
                                int num11 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, 0f, 0f, 100, color5, 2f);
                                Main.dust[num11].noGravity = true;
                                Dust dust40 = Main.dust[num11];
                                dust40.velocity = (Vector2)(dust40.velocity * 3f);
                                Dust dust41 = Main.dust[num11];
                                dust41.velocity += (Vector2)(base.velocity * 0.2f);
                                color5 = new Color();
                                num11 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, 0f, 0f, 100, color5, 1f);
                                Dust dust42 = Main.dust[num11];
                                dust42.velocity = (Vector2)(dust42.velocity * 2f);
                                Dust dust43 = Main.dust[num11];
                                dust43.velocity += (Vector2)(base.velocity * 0.3f);
                            }
                            for (int num13 = 0; num13 < 1; num13++)
                            {
                                vector240 = new Vector2();
                                int num12 = Gore.NewGore(new Vector2(this.position.X - 10f, this.position.Y - 10f), vector240, Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore4 = Main.gore[num12];
                                gore4.position += (Vector2)(base.velocity * 1.25f);
                                Main.gore[num12].scale = 1.5f;
                                Gore gore5 = Main.gore[num12];
                                gore5.velocity += (Vector2)(base.velocity * 0.5f);
                                Gore gore6 = Main.gore[num12];
                                gore6.velocity = (Vector2)(gore6.velocity * 0.02f);
                            }
                        }
                    }
                }
                else if (this.type == 240)
                {
                    if (this.ai[1] == 0f)
                    {
                        this.ai[1] = 1f;
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    }
                    this.ai[0]++;
                    if (this.ai[0] >= 16f)
                    {
                        this.velocity.Y += 0.18f;
                        this.velocity.X *= 0.991f;
                    }
                    if (this.ai[0] > 2f)
                    {
                        this.alpha = 0;
                        if (this.ai[0] == 3f)
                        {
                            for (int num14 = 0; num14 < 7; num14++)
                            {
                                color5 = new Color();
                                int num15 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x1f, 0f, 0f, 100, color5, 1.5f);
                                Dust dust44 = Main.dust[num15];
                                dust44.velocity = (Vector2)(dust44.velocity * 0.5f);
                                Dust dust45 = Main.dust[num15];
                                dust45.velocity += (Vector2)(base.velocity * 0.1f);
                            }
                            for (int num16 = 0; num16 < 3; num16++)
                            {
                                color5 = new Color();
                                int num17 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, 0f, 0f, 100, color5, 2f);
                                Main.dust[num17].noGravity = true;
                                Dust dust46 = Main.dust[num17];
                                dust46.velocity = (Vector2)(dust46.velocity * 3f);
                                Dust dust47 = Main.dust[num17];
                                dust47.velocity += (Vector2)(base.velocity * 0.2f);
                                color5 = new Color();
                                num17 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, 0f, 0f, 100, color5, 1f);
                                Dust dust48 = Main.dust[num17];
                                dust48.velocity = (Vector2)(dust48.velocity * 2f);
                                Dust dust49 = Main.dust[num17];
                                dust49.velocity += (Vector2)(base.velocity * 0.3f);
                            }
                            for (int num19 = 0; num19 < 1; num19++)
                            {
                                vector240 = new Vector2();
                                int num18 = Gore.NewGore(new Vector2(this.position.X - 10f, this.position.Y - 10f), vector240, Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore7 = Main.gore[num18];
                                gore7.position += (Vector2)(base.velocity * 1.25f);
                                Main.gore[num18].scale = 1.25f;
                                Gore gore8 = Main.gore[num18];
                                gore8.velocity += (Vector2)(base.velocity * 0.5f);
                                Gore gore9 = Main.gore[num18];
                                gore9.velocity = (Vector2)(gore9.velocity * 0.02f);
                            }
                        }
                    }
                }
                if (this.type == 0x1f1)
                {
                    color5 = new Color();
                    int num20 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x1b, this.velocity.X, this.velocity.Y, 100, color5, 1.2f);
                    Main.dust[num20].position = (Vector2)((Main.dust[num20].position + base.Center) / 2f);
                    Main.dust[num20].noGravity = true;
                    Dust dust50 = Main.dust[num20];
                    dust50.velocity = (Vector2)(dust50.velocity * 0.3f);
                    Dust dust51 = Main.dust[num20];
                    dust51.velocity -= (Vector2)(base.velocity * 0.1f);
                    this.ai[0]++;
                    if (this.ai[0] >= 30f)
                    {
                        this.velocity.X *= 0.99f;
                        this.velocity.Y += 0.5f;
                    }
                    else
                    {
                        this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 1.57f;
                    }
                }
                else if (this.type == 0xf9)
                {
                    this.ai[0]++;
                    if (this.ai[0] >= 0f)
                    {
                        this.velocity.Y += 0.25f;
                    }
                }
                else if (this.type == 0x15b)
                {
                    this.ai[0]++;
                    if (this.ai[0] >= 5f)
                    {
                        this.velocity.Y += 0.25f;
                    }
                }
                else if (this.type == 0x1f5)
                {
                    this.ai[0]++;
                    if (this.ai[0] >= 18f)
                    {
                        this.velocity.X *= 0.995f;
                        this.velocity.Y += 0.2f;
                    }
                }
                else if (this.type == 0x1f8)
                {
                    this.alpha = 0xff;
                    this.ai[0]++;
                    if (this.ai[0] > 3f)
                    {
                        int num21 = 100;
                        if (this.ai[0] > 20f)
                        {
                            int num22 = 40;
                            float num23 = this.ai[0] - 20f;
                            num21 = (int)(100f * (1f - (num23 / ((float)num22))));
                            if (num23 >= num22)
                            {
                                this.Kill();
                            }
                        }
                        if (this.ai[0] <= 10f)
                        {
                            num21 = ((int)this.ai[0]) * 10;
                        }
                        if (Main.rand.Next(100) < num21)
                        {
                            color5 = new Color();
                            int num24 = Dust.NewDust(base.position, base.width, base.height, 6, 0f, 0f, 150, color5, 1f);
                            Main.dust[num24].position = (Vector2)((Main.dust[num24].position + base.Center) / 2f);
                            Main.dust[num24].noGravity = true;
                            Dust dust52 = Main.dust[num24];
                            dust52.velocity = (Vector2)(dust52.velocity * 2f);
                            Dust dust53 = Main.dust[num24];
                            dust53.scale *= 1.2f;
                            Dust dust54 = Main.dust[num24];
                            dust54.velocity += base.velocity;
                        }
                    }
                    if (this.ai[0] >= 20f)
                    {
                        this.velocity.X *= 0.99f;
                        this.velocity.Y += 0.1f;
                    }
                }
                else if (((this.type == 0x45) || (this.type == 70)) || (this.type == 0x26d))
                {
                    this.ai[0]++;
                    if (this.ai[0] >= 10f)
                    {
                        this.velocity.Y += 0.25f;
                        this.velocity.X *= 0.99f;
                    }
                }
                else if (this.type == 0xa6)
                {
                    this.ai[0]++;
                    if (this.ai[0] >= 20f)
                    {
                        this.velocity.Y += 0.3f;
                        this.velocity.X *= 0.98f;
                    }
                }
                else if (this.type == 300)
                {
                    if (this.ai[0] == 0f)
                    {
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 1);
                    }
                    this.ai[0]++;
                    if (this.ai[0] >= 60f)
                    {
                        this.velocity.Y += 0.2f;
                        this.velocity.X *= 0.99f;
                    }
                }
                else if (this.type == 0x132)
                {
                    if (this.alpha <= 200)
                    {
                        for (int num25 = 0; num25 < 4; num25++)
                        {
                            float num26 = (this.velocity.X / 4f) * num25;
                            float num27 = (this.velocity.Y / 4f) * num25;
                            color5 = new Color();
                            int num28 = Dust.NewDust(base.position, base.width, base.height, 0xb8, 0f, 0f, 0, color5, 1f);
                            Main.dust[num28].position.X = base.Center.X - num26;
                            Main.dust[num28].position.Y = base.Center.Y - num27;
                            Dust dust55 = Main.dust[num28];
                            dust55.velocity = (Vector2)(dust55.velocity * 0f);
                            Main.dust[num28].scale = 0.7f;
                        }
                    }
                    this.alpha -= 50;
                    if (this.alpha < 0)
                    {
                        this.alpha = 0;
                    }
                    this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 0.785f;
                }
                else if (this.type == 0x130)
                {
                    this.ai[0]++;
                    if (this.ai[0] >= 30f)
                    {
                        this.alpha += 10;
                        this.damage = (int)(this.damage * 0.9);
                        this.knockBack = (int)(this.knockBack * 0.9);
                        if (this.alpha >= 0xff)
                        {
                            base.active = false;
                        }
                    }
                    if (this.ai[0] < 30f)
                    {
                        this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 1.57f;
                    }
                }
                else if ((this.type == 370) || (this.type == 0x173))
                {
                    this.ai[0]++;
                    if (this.ai[0] >= 15f)
                    {
                        this.velocity.Y += 0.3f;
                        this.velocity.X *= 0.98f;
                    }
                }
                else
                {
                    this.ai[0]++;
                    if (this.ai[0] >= 20f)
                    {
                        this.velocity.Y += 0.4f;
                        this.velocity.X *= 0.97f;
                    }
                    else if (((this.type == 0x30) || (this.type == 0x36)) || (((this.type == 0x5d) || (this.type == 520)) || (this.type == 0x257)))
                    {
                        this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 1.57f;
                    }
                }
                if (this.velocity.Y > 16f)
                {
                    this.velocity.Y = 16f;
                }
                if ((this.type == 0x36) && (Main.rand.Next(20) == 0))
                {
                    Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 40, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, new Color(), 0.75f);
                    return;
                }
                return;
            }
            if (this.aiStyle != 3)
            {
                if (this.aiStyle == 4)
                {
                    this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 1.57f;
                    if (this.ai[0] != 0f)
                    {
                        if ((this.alpha < 170) && ((this.alpha + 5) >= 170))
                        {
                            if ((this.type >= 150) && (this.type <= 0x98))
                            {
                                for (int num60 = 0; num60 < 8; num60++)
                                {
                                    color5 = new Color();
                                    int num61 = Dust.NewDust(base.position, base.width, base.height, 7, this.velocity.X * 0.025f, this.velocity.Y * 0.025f, 200, color5, 1.3f);
                                    Main.dust[num61].noGravity = true;
                                    Dust dust58 = Main.dust[num61];
                                    dust58.velocity = (Vector2)(dust58.velocity * 0.5f);
                                }
                            }
                            else if ((this.type == 0x1ed) || (this.type == 0x1ee))
                            {
                                for (int num62 = 0; num62 < 8; num62++)
                                {
                                    color5 = new Color();
                                    int num63 = Dust.NewDust(base.position, base.width, base.height, Main.rand.Next(0x44, 0x47), this.velocity.X * 0.025f, this.velocity.Y * 0.025f, 200, color5, 1.3f);
                                    Main.dust[num63].noGravity = true;
                                    Dust dust59 = Main.dust[num63];
                                    dust59.velocity = (Vector2)(dust59.velocity * 0.5f);
                                }
                            }
                            else
                            {
                                for (int num64 = 0; num64 < 3; num64++)
                                {
                                    color5 = new Color();
                                    Dust.NewDust(base.position, base.width, base.height, 0x12, this.velocity.X * 0.025f, this.velocity.Y * 0.025f, 170, color5, 1.2f);
                                }
                                Dust.NewDust(base.position, base.width, base.height, 14, 0f, 0f, 170, new Color(), 1.1f);
                            }
                        }
                        if ((this.type >= 150) && (this.type <= 0x98))
                        {
                            this.alpha += 3;
                        }
                        else if ((this.type == 0x1ed) || (this.type == 0x1ee))
                        {
                            this.alpha += 7;
                        }
                        else
                        {
                            this.alpha += 5;
                        }
                        if (this.alpha >= 0xff)
                        {
                            this.Kill();
                            return;
                        }
                    }
                    else
                    {
                        if ((((this.type >= 150) && (this.type <= 0x98)) && ((this.ai[1] == 0f) && (this.alpha == 0xff))) && (Main.rand.Next(2) == 0))
                        {
                            this.type++;
                            this.netUpdate = true;
                        }
                        this.alpha -= 50;
                        if ((this.type >= 150) && (this.type <= 0x98))
                        {
                            this.alpha -= 0x19;
                        }
                        else if ((this.type == 0x1ed) || (this.type == 0x1ee))
                        {
                            this.alpha -= 50;
                        }
                        if (this.alpha <= 0)
                        {
                            this.alpha = 0;
                            this.ai[0] = 1f;
                            if (this.ai[1] == 0f)
                            {
                                this.ai[1]++;
                                base.position += (Vector2)(base.velocity * 1f);
                            }
                            if ((this.type == 7) && (Main.myPlayer == this.owner))
                            {
                                int type = this.type;
                                if (this.ai[1] >= 6f)
                                {
                                    type++;
                                }
                                int num53 = NewProjectile((this.position.X + this.velocity.X) + (base.width / 2), (this.position.Y + this.velocity.Y) + (base.height / 2), this.velocity.X, this.velocity.Y, type, this.damage, this.knockBack, this.owner, 0f, 0f);
                                Main.projectile[num53].damage = this.damage;
                                Main.projectile[num53].ai[1] = this.ai[1] + 1f;
                                NetMessage.SendData(0x1b, -1, -1, "", num53, 0f, 0f, 0f, 0, 0, 0);
                                return;
                            }
                            if ((this.type == 0x1ee) && (Main.myPlayer == this.owner))
                            {
                                int num54 = this.type;
                                if (this.ai[1] >= (7 + Main.rand.Next(2)))
                                {
                                    num54--;
                                }
                                int damage = this.damage;
                                float knockBack = this.knockBack;
                                if (num54 == 0x1ed)
                                {
                                    damage = (int)(this.damage * 1.25);
                                    knockBack = this.knockBack * 1.25f;
                                }
                                int number = NewProjectile((this.position.X + this.velocity.X) + (base.width / 2), (this.position.Y + this.velocity.Y) + (base.height / 2), this.velocity.X, this.velocity.Y, num54, damage, knockBack, this.owner, 0f, this.ai[1] + 1f);
                                NetMessage.SendData(0x1b, -1, -1, "", number, 0f, 0f, 0f, 0, 0, 0);
                                return;
                            }
                            if (((this.type == 150) || (this.type == 0x97)) && (Main.myPlayer == this.owner))
                            {
                                int num58 = this.type;
                                if (this.type == 150)
                                {
                                    num58 = 0x97;
                                }
                                else if (this.type == 0x97)
                                {
                                    num58 = 150;
                                }
                                if ((this.ai[1] >= 10f) && (this.type == 0x97))
                                {
                                    num58 = 0x98;
                                }
                                int num59 = NewProjectile((this.position.X + this.velocity.X) + (base.width / 2), (this.position.Y + this.velocity.Y) + (base.height / 2), this.velocity.X, this.velocity.Y, num58, this.damage, this.knockBack, this.owner, 0f, 0f);
                                Main.projectile[num59].damage = this.damage;
                                Main.projectile[num59].ai[1] = this.ai[1] + 1f;
                                NetMessage.SendData(0x1b, -1, -1, "", num59, 0f, 0f, 0f, 0, 0, 0);
                                return;
                            }
                        }
                    }
                    return;
                }
                if (this.aiStyle == 5)
                {
                    if (this.type == 0x1f7)
                    {
                        if (base.Center.Y > this.ai[1])
                        {
                            this.tileCollide = true;
                        }
                    }
                    else if (this.type == 0x5c)
                    {
                        if (this.position.Y > this.ai[1])
                        {
                            this.tileCollide = true;
                        }
                    }
                    else
                    {
                        if ((this.ai[1] == 0f) && !Collision.SolidCollision(base.position, base.width, base.height))
                        {
                            this.ai[1] = 1f;
                            this.netUpdate = true;
                        }
                        if (this.ai[1] != 0f)
                        {
                            this.tileCollide = true;
                        }
                    }
                    if (this.soundDelay == 0)
                    {
                        this.soundDelay = 20 + Main.rand.Next(40);
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 9);
                    }
                    if (this.type == 0x1f7)
                    {
                        this.alpha -= 15;
                        int num65 = 150;
                        if (base.Center.Y >= this.ai[1])
                        {
                            num65 = 0;
                        }
                        if (this.alpha < num65)
                        {
                            this.alpha = num65;
                        }
                        float introduced1609 = Math.Abs(this.velocity.X);
                        this.localAI[0] += ((introduced1609 + Math.Abs(this.velocity.Y)) * 0.01f) * base.direction;
                    }
                    else
                    {
                        if (this.localAI[0] == 0f)
                        {
                            this.localAI[0] = 1f;
                        }
                        this.alpha += (int)(25f * this.localAI[0]);
                        if (this.alpha > 200)
                        {
                            this.alpha = 200;
                            this.localAI[0] = -1f;
                        }
                        if (this.alpha < 0)
                        {
                            this.alpha = 0;
                            this.localAI[0] = 1f;
                        }
                    }
                    if (this.type == 0x1f7)
                    {
                        this.rotation = base.velocity.ToRotation() - 1.570796f;
                    }
                    else
                    {
                        float introduced1610 = Math.Abs(this.velocity.X);
                        this.rotation += ((introduced1610 + Math.Abs(this.velocity.Y)) * 0.01f) * base.direction;
                    }
                    if (this.type == 0x1f7)
                    {
                        if (Main.rand.Next(0x10) == 0)
                        {
                            Vector2 vector7 = Vector2.UnitX.RotatedByRandom(1.5707963705062866).RotatedBy((double)base.velocity.ToRotation(), new Vector2());
                            color5 = new Color();
                            int num66 = Dust.NewDust(base.position, base.width, base.height, 0x3a, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 150, color5, 1.2f);
                            Main.dust[num66].velocity = (Vector2)(vector7 * 0.66f);
                            Main.dust[num66].position = base.Center + ((Vector2)(vector7 * 12f));
                        }
                        if (Main.rand.Next(0x30) == 0)
                        {
                            int num67 = Gore.NewGore(base.Center, new Vector2(this.velocity.X * 0.2f, this.velocity.Y * 0.2f), 0x10, 1f);
                            Gore gore10 = Main.gore[num67];
                            gore10.velocity = (Vector2)(gore10.velocity * 0.66f);
                            Gore gore11 = Main.gore[num67];
                            gore11.velocity += (Vector2)(base.velocity * 0.3f);
                        }
                    }
                    if ((this.ai[1] == 1f) || (this.type == 0x5c))
                    {
                        this.light = 0.9f;
                        if (Main.rand.Next(10) == 0)
                        {
                            Dust.NewDust(base.position, base.width, base.height, 0x3a, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 150, new Color(), 1.2f);
                        }
                        if (Main.rand.Next(20) == 0)
                        {
                            Gore.NewGore(base.position, new Vector2(this.velocity.X * 0.2f, this.velocity.Y * 0.2f), Main.rand.Next(0x10, 0x12), 1f);
                            return;
                        }
                    }
                    return;
                }
                if (this.aiStyle == 6)
                {
                    base.velocity = (Vector2)(base.velocity * 0.95f);
                    this.ai[0]++;
                    if (this.ai[0] == 180f)
                    {
                        this.Kill();
                    }
                    if (this.ai[1] == 0f)
                    {
                        this.ai[1] = 1f;
                        int num68 = 10 + this.type;
                        if (this.type == 0x1cf)
                        {
                            num68 = 0xe7;
                        }
                        for (int num69 = 0; num69 < 30; num69++)
                        {
                            color5 = new Color();
                            Dust.NewDust(base.position, base.width, base.height, num68, this.velocity.X, this.velocity.Y, 50, color5, 1f);
                        }
                    }
                    if (((this.type == 10) || (this.type == 11)) || (this.type == 0x1cf))
                    {
                        int num70 = ((int)(this.position.X / 16f)) - 1;
                        int maxTilesX = ((int)((this.position.X + base.width) / 16f)) + 2;
                        int num72 = ((int)(this.position.Y / 16f)) - 1;
                        int maxTilesY = ((int)((this.position.Y + base.height) / 16f)) + 2;
                        if (num70 < 0)
                        {
                            num70 = 0;
                        }
                        if (maxTilesX > Main.maxTilesX)
                        {
                            maxTilesX = Main.maxTilesX;
                        }
                        if (num72 < 0)
                        {
                            num72 = 0;
                        }
                        if (maxTilesY > Main.maxTilesY)
                        {
                            maxTilesY = Main.maxTilesY;
                        }
                        for (int num74 = num70; num74 < maxTilesX; num74++)
                        {
                            for (int num75 = num72; num75 < maxTilesY; num75++)
                            {
                                Vector2 vector8;
                                vector8.X = num74 * 0x10;
                                vector8.Y = num75 * 0x10;
                                if (((((this.position.X + base.width) > vector8.X) && (this.position.X < (vector8.X + 16f))) && (((this.position.Y + base.height) > vector8.Y) && (this.position.Y < (vector8.Y + 16f)))) && ((Main.myPlayer == this.owner) && Main.tile[num74, num75].active()))
                                {
                                    if (this.type == 10)
                                    {
                                        if ((Main.tile[num74, num75].type == 0x17) || (Main.tile[num74, num75].type == 0xc7))
                                        {
                                            Main.tile[num74, num75].type = 2;
                                            WorldGen.SquareTileFrame(num74, num75, true);
                                            if (Main.netMode == 1)
                                            {
                                                NetMessage.SendTileSquare(-1, num74, num75, 1);
                                            }
                                        }
                                        if ((Main.tile[num74, num75].type == 0x19) || (Main.tile[num74, num75].type == 0xcb))
                                        {
                                            Main.tile[num74, num75].type = 1;
                                            WorldGen.SquareTileFrame(num74, num75, true);
                                            if (Main.netMode == 1)
                                            {
                                                NetMessage.SendTileSquare(-1, num74, num75, 1);
                                            }
                                        }
                                        if ((Main.tile[num74, num75].type == 0x70) || (Main.tile[num74, num75].type == 0xea))
                                        {
                                            Main.tile[num74, num75].type = 0x35;
                                            WorldGen.SquareTileFrame(num74, num75, true);
                                            if (Main.netMode == 1)
                                            {
                                                NetMessage.SendTileSquare(-1, num74, num75, 1);
                                            }
                                        }
                                        if ((Main.tile[num74, num75].type == 0xa3) || (Main.tile[num74, num75].type == 200))
                                        {
                                            Main.tile[num74, num75].type = 0xa1;
                                            WorldGen.SquareTileFrame(num74, num75, true);
                                            if (Main.netMode == 1)
                                            {
                                                NetMessage.SendTileSquare(-1, num74, num75, 1);
                                            }
                                        }
                                        if ((Main.tile[num74, num75].type == 400) || (Main.tile[num74, num75].type == 0x191))
                                        {
                                            Main.tile[num74, num75].type = 0x18c;
                                            WorldGen.SquareTileFrame(num74, num75, true);
                                            if (Main.netMode == 1)
                                            {
                                                NetMessage.SendTileSquare(-1, num74, num75, 1);
                                            }
                                        }
                                        if ((Main.tile[num74, num75].type == 0x18e) || (Main.tile[num74, num75].type == 0x18f))
                                        {
                                            Main.tile[num74, num75].type = 0x18d;
                                            WorldGen.SquareTileFrame(num74, num75, true);
                                            if (Main.netMode == 1)
                                            {
                                                NetMessage.SendTileSquare(-1, num74, num75, 1);
                                            }
                                        }
                                    }
                                    else if ((this.type == 11) || (this.type == 0x1cf))
                                    {
                                        if (Main.tile[num74, num75].type == 0x6d)
                                        {
                                            Main.tile[num74, num75].type = 2;
                                            WorldGen.SquareTileFrame(num74, num75, true);
                                            if (Main.netMode == 1)
                                            {
                                                NetMessage.SendTileSquare(-1, num74, num75, 1);
                                            }
                                        }
                                        if (Main.tile[num74, num75].type == 0x74)
                                        {
                                            Main.tile[num74, num75].type = 0x35;
                                            WorldGen.SquareTileFrame(num74, num75, true);
                                            if (Main.netMode == 1)
                                            {
                                                NetMessage.SendTileSquare(-1, num74, num75, 1);
                                            }
                                        }
                                        if (Main.tile[num74, num75].type == 0x75)
                                        {
                                            Main.tile[num74, num75].type = 1;
                                            WorldGen.SquareTileFrame(num74, num75, true);
                                            if (Main.netMode == 1)
                                            {
                                                NetMessage.SendTileSquare(-1, num74, num75, 1);
                                            }
                                        }
                                        if (Main.tile[num74, num75].type == 0xa4)
                                        {
                                            Main.tile[num74, num75].type = 0xa1;
                                            WorldGen.SquareTileFrame(num74, num75, true);
                                            if (Main.netMode == 1)
                                            {
                                                NetMessage.SendTileSquare(-1, num74, num75, 1);
                                            }
                                        }
                                        if (Main.tile[num74, num75].type == 0x193)
                                        {
                                            Main.tile[num74, num75].type = 0x18c;
                                            WorldGen.SquareTileFrame(num74, num75, true);
                                            if (Main.netMode == 1)
                                            {
                                                NetMessage.SendTileSquare(-1, num74, num75, 1);
                                            }
                                        }
                                        if (Main.tile[num74, num75].type == 0x192)
                                        {
                                            Main.tile[num74, num75].type = 0x18d;
                                            WorldGen.SquareTileFrame(num74, num75, true);
                                            if (Main.netMode == 1)
                                            {
                                                NetMessage.SendTileSquare(-1, num74, num75, 1);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        return;
                    }
                    return;
                }
                if (this.aiStyle != 7)
                {
                    if (this.aiStyle == 8)
                    {
                        if ((this.type == 0x102) && (this.localAI[0] == 0f))
                        {
                            this.localAI[0] = 1f;
                            Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 20);
                        }
                        if ((this.type == 0x60) && (this.localAI[0] == 0f))
                        {
                            this.localAI[0] = 1f;
                            Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 20);
                        }
                        if (this.type == 0x1b)
                        {
                            for (int num99 = 0; num99 < 5; num99++)
                            {
                                float num100 = (this.velocity.X / 3f) * num99;
                                float num101 = (this.velocity.Y / 3f) * num99;
                                int num102 = 4;
                                color5 = new Color();
                                int num103 = Dust.NewDust(new Vector2(this.position.X + num102, this.position.Y + num102), base.width - (num102 * 2), base.height - (num102 * 2), 0xac, 0f, 0f, 100, color5, 1.2f);
                                Main.dust[num103].noGravity = true;
                                Dust dust60 = Main.dust[num103];
                                dust60.velocity = (Vector2)(dust60.velocity * 0.1f);
                                Dust dust61 = Main.dust[num103];
                                dust61.velocity += (Vector2)(base.velocity * 0.1f);
                                Main.dust[num103].position.X -= num100;
                                Main.dust[num103].position.Y -= num101;
                            }
                            if (Main.rand.Next(5) == 0)
                            {
                                int num104 = 4;
                                int num105 = Dust.NewDust(new Vector2(this.position.X + num104, this.position.Y + num104), base.width - (num104 * 2), base.height - (num104 * 2), 0xac, 0f, 0f, 100, new Color(), 0.6f);
                                Dust dust62 = Main.dust[num105];
                                dust62.velocity = (Vector2)(dust62.velocity * 0.25f);
                                Dust dust63 = Main.dust[num105];
                                dust63.velocity += (Vector2)(base.velocity * 0.5f);
                            }
                        }
                        else if (this.type == 0x1f6)
                        {
                            float r = ((float)Main.DiscoR) / 255f;
                            float g = ((float)Main.DiscoG) / 255f;
                            float b = ((float)Main.DiscoB) / 255f;
                            r = (0.5f + r) / 2f;
                            g = (0.5f + g) / 2f;
                            b = (0.5f + b) / 2f;
                            Lighting.AddLight(base.Center, r, g, b);
                        }
                        else if ((this.type == 0x5f) || (this.type == 0x60))
                        {
                            int num109 = Dust.NewDust(new Vector2(this.position.X + this.velocity.X, this.position.Y + this.velocity.Y), base.width, base.height, 0x4b, this.velocity.X, this.velocity.Y, 100, new Color(), 3f * this.scale);
                            Main.dust[num109].noGravity = true;
                        }
                        else if (this.type == 0xfd)
                        {
                            for (int num110 = 0; num110 < 2; num110++)
                            {
                                color5 = new Color();
                                int num111 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x87, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, color5, 2f);
                                Main.dust[num111].noGravity = true;
                                Main.dust[num111].velocity.X *= 0.3f;
                                Main.dust[num111].velocity.Y *= 0.3f;
                            }
                        }
                        else
                        {
                            for (int num112 = 0; num112 < 2; num112++)
                            {
                                color5 = new Color();
                                int num113 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, color5, 2f);
                                Main.dust[num113].noGravity = true;
                                Main.dust[num113].velocity.X *= 0.3f;
                                Main.dust[num113].velocity.Y *= 0.3f;
                            }
                        }
                        if (((this.type != 0x1b) && (this.type != 0x60)) && (this.type != 0x102))
                        {
                            this.ai[1]++;
                        }
                        if (this.ai[1] >= 20f)
                        {
                            this.velocity.Y += 0.2f;
                        }
                        if (this.type == 0x1f6)
                        {
                            this.rotation = base.velocity.ToRotation() + 1.570796f;
                            if (this.velocity.X != 0f)
                            {
                                this.spriteDirection = base.direction = Math.Sign(this.velocity.X);
                            }
                        }
                        else
                        {
                            this.rotation += 0.3f * base.direction;
                        }
                        if (this.velocity.Y > 16f)
                        {
                            this.velocity.Y = 16f;
                            return;
                        }
                        return;
                    }
                    if (this.aiStyle != 9)
                    {
                        if (this.aiStyle == 10)
                        {
                            if ((this.type == 0x1f) && (this.ai[0] != 2f))
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int num136 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x20, 0f, this.velocity.Y / 2f, 0, new Color(), 1f);
                                    Main.dust[num136].velocity.X *= 0.4f;
                                }
                            }
                            else if (this.type == 0x27)
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int num137 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x26, 0f, this.velocity.Y / 2f, 0, new Color(), 1f);
                                    Main.dust[num137].velocity.X *= 0.4f;
                                }
                            }
                            else if ((this.type >= 0x19b) && (this.type <= 0x19e))
                            {
                                if (Main.rand.Next(3) == 0)
                                {
                                    int num138 = 9;
                                    if ((this.type == 0x19c) || (this.type == 0x19e))
                                    {
                                        num138 = 11;
                                    }
                                    if (this.type == 0x19d)
                                    {
                                        num138 = 0x13;
                                    }
                                    int num139 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, num138, 0f, this.velocity.Y / 2f, 0, new Color(), 1f);
                                    Main.dust[num139].noGravity = true;
                                    Dust dust69 = Main.dust[num139];
                                    dust69.velocity -= (Vector2)(base.velocity * 0.5f);
                                }
                            }
                            else if (this.type == 40)
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int num140 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x24, 0f, this.velocity.Y / 2f, 0, new Color(), 1f);
                                    Dust dust70 = Main.dust[num140];
                                    dust70.velocity = (Vector2)(dust70.velocity * 0.4f);
                                }
                            }
                            else if ((this.type == 0x2a) || (this.type == 0x1f))
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int num141 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x20, 0f, 0f, 0, new Color(), 1f);
                                    Main.dust[num141].velocity.X *= 0.4f;
                                }
                            }
                            else if ((this.type == 0x38) || (this.type == 0x41))
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int num142 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 14, 0f, 0f, 0, new Color(), 1f);
                                    Main.dust[num142].velocity.X *= 0.4f;
                                }
                            }
                            else if ((this.type == 0x43) || (this.type == 0x44))
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int num143 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x33, 0f, 0f, 0, new Color(), 1f);
                                    Main.dust[num143].velocity.X *= 0.4f;
                                }
                            }
                            else if (this.type == 0x47)
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int num144 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x35, 0f, 0f, 0, new Color(), 1f);
                                    Main.dust[num144].velocity.X *= 0.4f;
                                }
                            }
                            else if (this.type == 0xb3)
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int num145 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x95, 0f, 0f, 0, new Color(), 1f);
                                    Main.dust[num145].velocity.X *= 0.4f;
                                }
                            }
                            else if ((this.type == 0xf1) || (this.type == 0x162))
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int num146 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x24, 0f, 0f, 0, new Color(), 1f);
                                    Main.dust[num146].velocity.X *= 0.4f;
                                }
                            }
                            else if ((this.type != 0x6d) && (Main.rand.Next(20) == 0))
                            {
                                Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0, 0f, 0f, 0, new Color(), 1f);
                            }
                            this.tileCollide = true;
                            this.localAI[1] = 0f;
                            if ((Main.myPlayer == this.owner) && (this.ai[0] == 0f))
                            {
                                this.tileCollide = false;
                                if (Main.player[this.owner].channel)
                                {
                                    this.localAI[1] = -1f;
                                    float num147 = 12f;
                                    Vector2 vector20 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                    float num148 = (Main.mouseX + Main.screenPosition.X) - vector20.X;
                                    float num149 = (Main.mouseY + Main.screenPosition.Y) - vector20.Y;
                                    if (Main.player[this.owner].gravDir == -1f)
                                    {
                                        num149 = ((Main.screenPosition.Y + Main.screenHeight) - Main.mouseY) - vector20.Y;
                                    }
                                    float num150 = (float)Math.Sqrt((double)((num148 * num148) + (num149 * num149)));
                                    num150 = (float)Math.Sqrt((double)((num148 * num148) + (num149 * num149)));
                                    if (num150 > num147)
                                    {
                                        num150 = num147 / num150;
                                        num148 *= num150;
                                        num149 *= num150;
                                        if ((num148 != this.velocity.X) || (num149 != this.velocity.Y))
                                        {
                                            this.netUpdate = true;
                                        }
                                        this.velocity.X = num148;
                                        this.velocity.Y = num149;
                                    }
                                    else
                                    {
                                        if ((num148 != this.velocity.X) || (num149 != this.velocity.Y))
                                        {
                                            this.netUpdate = true;
                                        }
                                        this.velocity.X = num148;
                                        this.velocity.Y = num149;
                                    }
                                }
                                else
                                {
                                    this.ai[0] = 1f;
                                    this.netUpdate = true;
                                }
                            }
                            if ((this.ai[0] == 1f) && (this.type != 0x6d))
                            {
                                if (((this.type == 0x2a) || (this.type == 0x41)) || ((this.type == 0x44) || (this.type == 0x162)))
                                {
                                    this.ai[1]++;
                                    if (this.ai[1] >= 60f)
                                    {
                                        this.ai[1] = 60f;
                                        this.velocity.Y += 0.2f;
                                    }
                                }
                                else
                                {
                                    this.velocity.Y += 0.41f;
                                }
                            }
                            else if ((this.ai[0] == 2f) && (this.type != 0x6d))
                            {
                                this.velocity.Y += 0.2f;
                                if (this.velocity.X < -0.04)
                                {
                                    this.velocity.X += 0.04f;
                                }
                                else if (this.velocity.X > 0.04)
                                {
                                    this.velocity.X -= 0.04f;
                                }
                                else
                                {
                                    this.velocity.X = 0f;
                                }
                            }
                            this.rotation += 0.1f;
                            if (this.velocity.Y > 10f)
                            {
                                this.velocity.Y = 10f;
                                return;
                            }
                            return;
                        }
                        if (this.aiStyle == 11)
                        {
                            if (((this.type == 0x48) || (this.type == 0x56)) || (this.type == 0x57))
                            {
                                if (this.velocity.X > 0f)
                                {
                                    this.spriteDirection = -1;
                                }
                                else if (this.velocity.X < 0f)
                                {
                                    this.spriteDirection = 1;
                                }
                                this.rotation = this.velocity.X * 0.1f;
                                this.frameCounter++;
                                if (this.frameCounter >= 4)
                                {
                                    this.frame++;
                                    this.frameCounter = 0;
                                }
                                if (this.frame >= 4)
                                {
                                    this.frame = 0;
                                }
                                if (Main.rand.Next(6) == 0)
                                {
                                    int num151 = 0x38;
                                    if (this.type == 0x56)
                                    {
                                        num151 = 0x49;
                                    }
                                    else if (this.type == 0x57)
                                    {
                                        num151 = 0x4a;
                                    }
                                    int num152 = Dust.NewDust(base.position, base.width, base.height, num151, 0f, 0f, 200, new Color(), 0.8f);
                                    Dust dust71 = Main.dust[num152];
                                    dust71.velocity = (Vector2)(dust71.velocity * 0.3f);
                                    Main.dust[num152].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cLight, Main.player[this.owner]);
                                }
                            }
                            else
                            {
                                this.rotation += 0.02f;
                            }
                            if (Main.myPlayer == this.owner)
                            {
                                if (this.type == 0x48)
                                {
                                    if (Main.player[Main.myPlayer].blueFairy)
                                    {
                                        this.timeLeft = 2;
                                    }
                                }
                                else if (this.type == 0x56)
                                {
                                    if (Main.player[Main.myPlayer].redFairy)
                                    {
                                        this.timeLeft = 2;
                                    }
                                }
                                else if (this.type == 0x57)
                                {
                                    if (Main.player[Main.myPlayer].greenFairy)
                                    {
                                        this.timeLeft = 2;
                                    }
                                }
                                else if (Main.player[Main.myPlayer].lightOrb)
                                {
                                    this.timeLeft = 2;
                                }
                            }
                            if (!Main.player[this.owner].dead)
                            {
                                float num153 = 3f;
                                if (((this.type == 0x48) || (this.type == 0x56)) || (this.type == 0x57))
                                {
                                    num153 = 3.75f;
                                }
                                Vector2 vector21 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                float num154 = (Main.player[this.owner].position.X + (Main.player[this.owner].width / 2)) - vector21.X;
                                float num155 = (Main.player[this.owner].position.Y + (Main.player[this.owner].height / 2)) - vector21.Y;
                                int num156 = 70;
                                if (this.type == 0x12)
                                {
                                    if (Main.player[this.owner].controlUp)
                                    {
                                        num155 = (Main.player[this.owner].position.Y - 40f) - vector21.Y;
                                        num154 -= 6f;
                                        num156 = 4;
                                    }
                                    else if (Main.player[this.owner].controlDown)
                                    {
                                        num155 = ((Main.player[this.owner].position.Y + Main.player[this.owner].height) + 40f) - vector21.Y;
                                        num154 -= 6f;
                                        num156 = 4;
                                    }
                                }
                                float num157 = (float)Math.Sqrt((double)((num154 * num154) + (num155 * num155)));
                                num157 = (float)Math.Sqrt((double)((num154 * num154) + (num155 * num155)));
                                if (((this.type == 0x48) || (this.type == 0x56)) || (this.type == 0x57))
                                {
                                    num156 = 40;
                                }
                                if (num157 > 800f)
                                {
                                    this.position.X = (Main.player[this.owner].position.X + (Main.player[this.owner].width / 2)) - (base.width / 2);
                                    this.position.Y = (Main.player[this.owner].position.Y + (Main.player[this.owner].height / 2)) - (base.height / 2);
                                    return;
                                }
                                if (num157 > num156)
                                {
                                    num157 = num153 / num157;
                                    num154 *= num157;
                                    num155 *= num157;
                                    this.velocity.X = num154;
                                    this.velocity.Y = num155;
                                    return;
                                }
                                this.velocity.X = 0f;
                                this.velocity.Y = 0f;
                                return;
                            }
                            this.Kill();
                            return;
                        }
                        if (this.aiStyle == 12)
                        {
                            if ((this.type == 0x120) && (this.localAI[0] == 0f))
                            {
                                this.localAI[0] = 1f;
                                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 0x11);
                            }
                            if ((this.type != 280) && (this.type != 0x120))
                            {
                                this.scale -= 0.02f;
                                if (this.scale <= 0f)
                                {
                                    this.Kill();
                                }
                                if (this.ai[0] > 3f)
                                {
                                    this.velocity.Y += 0.2f;
                                    for (int num165 = 0; num165 < 1; num165++)
                                    {
                                        for (int num166 = 0; num166 < 3; num166++)
                                        {
                                            float num167 = (this.velocity.X / 3f) * num166;
                                            float num168 = (this.velocity.Y / 3f) * num166;
                                            int num169 = 6;
                                            color5 = new Color();
                                            int num170 = Dust.NewDust(new Vector2(this.position.X + num169, this.position.Y + num169), base.width - (num169 * 2), base.height - (num169 * 2), 0xac, 0f, 0f, 100, color5, 1.2f);
                                            Main.dust[num170].noGravity = true;
                                            Dust dust76 = Main.dust[num170];
                                            dust76.velocity = (Vector2)(dust76.velocity * 0.3f);
                                            Dust dust77 = Main.dust[num170];
                                            dust77.velocity += (Vector2)(base.velocity * 0.5f);
                                            Main.dust[num170].position.X -= num167;
                                            Main.dust[num170].position.Y -= num168;
                                        }
                                        if (Main.rand.Next(8) == 0)
                                        {
                                            int num171 = 6;
                                            color5 = new Color();
                                            int num172 = Dust.NewDust(new Vector2(this.position.X + num171, this.position.Y + num171), base.width - (num171 * 2), base.height - (num171 * 2), 0xac, 0f, 0f, 100, color5, 0.75f);
                                            Dust dust78 = Main.dust[num172];
                                            dust78.velocity = (Vector2)(dust78.velocity * 0.5f);
                                            Dust dust79 = Main.dust[num172];
                                            dust79.velocity += (Vector2)(base.velocity * 0.5f);
                                        }
                                    }
                                    return;
                                }
                                this.ai[0]++;
                                return;
                            }
                            this.scale -= 0.002f;
                            if (this.scale <= 0f)
                            {
                                this.Kill();
                            }
                            if (this.type == 0x120)
                            {
                                this.ai[0] = 4f;
                            }
                            if (this.ai[0] <= 3f)
                            {
                                this.ai[0]++;
                                return;
                            }
                            this.velocity.Y += 0.075f;
                            for (int num158 = 0; num158 < 3; num158++)
                            {
                                float num159 = (this.velocity.X / 3f) * num158;
                                float num160 = (this.velocity.Y / 3f) * num158;
                                int num161 = 14;
                                color5 = new Color();
                                int num162 = Dust.NewDust(new Vector2(this.position.X + num161, this.position.Y + num161), base.width - (num161 * 2), base.height - (num161 * 2), 170, 0f, 0f, 100, color5, 1f);
                                Main.dust[num162].noGravity = true;
                                Dust dust72 = Main.dust[num162];
                                dust72.velocity = (Vector2)(dust72.velocity * 0.1f);
                                Dust dust73 = Main.dust[num162];
                                dust73.velocity += (Vector2)(base.velocity * 0.5f);
                                Main.dust[num162].position.X -= num159;
                                Main.dust[num162].position.Y -= num160;
                            }
                            if (Main.rand.Next(8) == 0)
                            {
                                int num163 = 0x10;
                                int num164 = Dust.NewDust(new Vector2(this.position.X + num163, this.position.Y + num163), base.width - (num163 * 2), base.height - (num163 * 2), 170, 0f, 0f, 100, new Color(), 0.5f);
                                Dust dust74 = Main.dust[num164];
                                dust74.velocity = (Vector2)(dust74.velocity * 0.25f);
                                Dust dust75 = Main.dust[num164];
                                dust75.velocity += (Vector2)(base.velocity * 0.5f);
                                return;
                            }
                            return;
                        }
                        if (this.aiStyle == 13)
                        {
                            if (Main.player[this.owner].dead)
                            {
                                this.Kill();
                                return;
                            }
                            if (this.type != 0x1e1)
                            {
                                Main.player[this.owner].itemAnimation = 5;
                                Main.player[this.owner].itemTime = 5;
                            }
                            if (this.alpha == 0)
                            {
                                if ((this.position.X + (base.width / 2)) > (Main.player[this.owner].position.X + (Main.player[this.owner].width / 2)))
                                {
                                    Main.player[this.owner].ChangeDir(1);
                                }
                                else
                                {
                                    Main.player[this.owner].ChangeDir(-1);
                                }
                            }
                            if (this.type == 0x1e1)
                            {
                                if (this.ai[0] == 0f)
                                {
                                    this.extraUpdates = 0;
                                }
                                else
                                {
                                    this.extraUpdates = 1;
                                }
                            }
                            Vector2 vector22 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                            float num173 = (Main.player[this.owner].position.X + (Main.player[this.owner].width / 2)) - vector22.X;
                            float num174 = (Main.player[this.owner].position.Y + (Main.player[this.owner].height / 2)) - vector22.Y;
                            float num175 = (float)Math.Sqrt((double)((num173 * num173) + (num174 * num174)));
                            if (this.ai[0] != 0f)
                            {
                                if (this.ai[0] == 1f)
                                {
                                    this.tileCollide = false;
                                    this.rotation = ((float)Math.Atan2((double)num174, (double)num173)) - 1.57f;
                                    float num176 = 20f;
                                    if (this.type == 0x106)
                                    {
                                        num176 = 30f;
                                    }
                                    if (num175 < 50f)
                                    {
                                        this.Kill();
                                    }
                                    num175 = num176 / num175;
                                    num173 *= num175;
                                    num174 *= num175;
                                    this.velocity.X = num173;
                                    this.velocity.Y = num174;
                                    if ((this.type == 0x106) && (this.velocity.X < 0f))
                                    {
                                        this.spriteDirection = 1;
                                    }
                                    else if (this.type == 0x106)
                                    {
                                        this.spriteDirection = -1;
                                    }
                                    if ((this.type == 0x10f) && (this.velocity.X < 0f))
                                    {
                                        this.spriteDirection = 1;
                                        return;
                                    }
                                    if (this.type == 0x10f)
                                    {
                                        this.spriteDirection = -1;
                                        return;
                                    }
                                }
                            }
                            else
                            {
                                if (num175 > 700f)
                                {
                                    this.ai[0] = 1f;
                                }
                                else if ((this.type == 0x106) && (num175 > 500f))
                                {
                                    this.ai[0] = 1f;
                                }
                                else if ((this.type == 0x10f) && (num175 > 200f))
                                {
                                    this.ai[0] = 1f;
                                }
                                else if ((this.type == 0x111) && (num175 > 150f))
                                {
                                    this.ai[0] = 1f;
                                }
                                else if ((this.type == 0x1e1) && (num175 > 350f))
                                {
                                    this.ai[0] = 1f;
                                }
                                this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 1.57f;
                                this.ai[1]++;
                                if (this.ai[1] > 5f)
                                {
                                    this.alpha = 0;
                                }
                                if ((this.type == 0x106) && (this.ai[1] > 8f))
                                {
                                    this.ai[1] = 8f;
                                }
                                if ((this.type == 0x10f) && (this.ai[1] > 8f))
                                {
                                    this.ai[1] = 8f;
                                }
                                if ((this.type == 0x111) && (this.ai[1] > 8f))
                                {
                                    this.ai[1] = 8f;
                                }
                                if ((this.type == 0x1e1) && (this.ai[1] > 8f))
                                {
                                    this.ai[1] = 8f;
                                }
                                if ((this.type == 0x194) && (this.ai[1] > 8f))
                                {
                                    this.ai[1] = 0f;
                                }
                                if (this.ai[1] >= 10f)
                                {
                                    this.ai[1] = 15f;
                                    this.velocity.Y += 0.3f;
                                }
                                if ((this.type == 0x106) && (this.velocity.X < 0f))
                                {
                                    this.spriteDirection = -1;
                                }
                                else if (this.type == 0x106)
                                {
                                    this.spriteDirection = 1;
                                }
                                if ((this.type == 0x10f) && (this.velocity.X < 0f))
                                {
                                    this.spriteDirection = -1;
                                    return;
                                }
                                if (this.type == 0x10f)
                                {
                                    this.spriteDirection = 1;
                                    return;
                                }
                            }
                            return;
                        }
                        if (this.aiStyle == 14)
                        {
                            if ((this.type == 0x1d9) && (Main.netMode != 2))
                            {
                                this.localAI[0]++;
                                if (this.localAI[0] >= 10f)
                                {
                                    this.localAI[0] = 0f;
                                    int num177 = 30;
                                    Vector2 vector23 = base.Center - Main.player[Main.myPlayer].Center;
                                    if (vector23.Length() < (Main.screenWidth + (num177 * 0x10)))
                                    {
                                        int num178 = ((int)base.Center.X) / 0x10;
                                        int num179 = ((int)base.Center.Y) / 0x10;
                                        for (int num180 = num178 - num177; num180 <= (num178 + num177); num180++)
                                        {
                                            for (int num181 = num179 - num177; num181 <= (num179 + num177); num181++)
                                            {
                                                if (Main.rand.Next(4) == 0)
                                                {
                                                    Vector2 vector24 = new Vector2((float)(num178 - num180), (float)(num179 - num181));
                                                    if ((((vector24.Length() < num177) && (num180 > 0)) && ((num180 < (Main.maxTilesX - 1)) && (num181 > 0))) && (((num181 < (Main.maxTilesY - 1)) && (Main.tile[num180, num181] != null)) && Main.tile[num180, num181].active()))
                                                    {
                                                        bool flag3 = false;
                                                        if ((Main.tile[num180, num181].type == 0xb9) && (Main.tile[num180, num181].frameY == 0x12))
                                                        {
                                                            if ((Main.tile[num180, num181].frameX >= 0x240) && (Main.tile[num180, num181].frameX <= 0x372))
                                                            {
                                                                flag3 = true;
                                                            }
                                                        }
                                                        else if (((Main.tile[num180, num181].type == 0xba) && (Main.tile[num180, num181].frameX >= 0x360)) && (Main.tile[num180, num181].frameX <= 0x492))
                                                        {
                                                            flag3 = true;
                                                        }
                                                        if ((flag3 || Main.tileSpelunker[Main.tile[num180, num181].type]) || (Main.tileAlch[Main.tile[num180, num181].type] && (Main.tile[num180, num181].type != 0x52)))
                                                        {
                                                            color5 = new Color();
                                                            int num182 = Dust.NewDust(new Vector2((float)(num180 * 0x10), (float)(num181 * 0x10)), 0x10, 0x10, 0xcc, 0f, 0f, 150, color5, 0.3f);
                                                            Main.dust[num182].fadeIn = 0.75f;
                                                            Dust dust80 = Main.dust[num182];
                                                            dust80.velocity = (Vector2)(dust80.velocity * 0.1f);
                                                            Main.dust[num182].noLight = true;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if (this.type == 0x160)
                            {
                                if (this.localAI[1] == 0f)
                                {
                                    this.localAI[1] = 1f;
                                }
                                this.alpha += (int)(25f * this.localAI[1]);
                                if (this.alpha <= 0)
                                {
                                    this.alpha = 0;
                                    this.localAI[1] = 1f;
                                }
                                else if (this.alpha >= 0xff)
                                {
                                    this.alpha = 0xff;
                                    this.localAI[1] = -1f;
                                }
                                this.scale += this.localAI[1] * 0.01f;
                            }
                            if (this.type == 0x15a)
                            {
                                if (this.localAI[0] == 0f)
                                {
                                    this.localAI[0] = 1f;
                                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 1);
                                }
                                this.frame = (int)this.ai[1];
                                if ((this.owner == Main.myPlayer) && (this.timeLeft == 1))
                                {
                                    for (int num183 = 0; num183 < 5; num183++)
                                    {
                                        float num184 = 10f;
                                        Vector2 vector25 = new Vector2(base.Center.X, base.Center.Y);
                                        float speedX = Main.rand.Next(-20, 0x15);
                                        float speedY = Main.rand.Next(-20, 0);
                                        float num187 = (float)Math.Sqrt((double)((speedX * speedX) + (speedY * speedY)));
                                        num187 = num184 / num187;
                                        speedX *= num187;
                                        speedY *= num187;
                                        speedX *= 1f + (Main.rand.Next(-30, 0x1f) * 0.01f);
                                        speedY *= 1f + (Main.rand.Next(-30, 0x1f) * 0.01f);
                                        NewProjectile(vector25.X, vector25.Y, speedX, speedY, 0x15b, 40, 0f, Main.myPlayer, 0f, this.ai[1]);
                                    }
                                }
                            }
                            if (this.type == 0xc4)
                            {
                                int num188 = Main.rand.Next(1, 3);
                                for (int num189 = 0; num189 < num188; num189++)
                                {
                                    color5 = new Color();
                                    int num190 = Dust.NewDust(base.position, base.width, base.height, 0x1f, 0f, 0f, 100, color5, 1f);
                                    Dust dust81 = Main.dust[num190];
                                    dust81.alpha += Main.rand.Next(100);
                                    Dust dust82 = Main.dust[num190];
                                    dust82.velocity = (Vector2)(dust82.velocity * 0.3f);
                                    Main.dust[num190].velocity.X += Main.rand.Next(-10, 11) * 0.025f;
                                    Main.dust[num190].velocity.Y -= 0.4f + (Main.rand.Next(-3, 14) * 0.15f);
                                    Main.dust[num190].fadeIn = 1.25f + (Main.rand.Next(20) * 0.15f);
                                }
                            }
                            if (this.type == 0x35)
                            {
                                try
                                {
                                    int num191 = ((int)(this.position.X / 16f)) - 1;
                                    int num192 = ((int)((this.position.X + base.width) / 16f)) + 2;
                                    int num193 = ((int)(this.position.Y / 16f)) - 1;
                                    int num194 = ((int)((this.position.Y + base.height) / 16f)) + 2;
                                    if (num191 < 0)
                                    {
                                        num191 = 0;
                                    }
                                    if (num192 > Main.maxTilesX)
                                    {
                                        num192 = Main.maxTilesX;
                                    }
                                    if (num193 < 0)
                                    {
                                        num193 = 0;
                                    }
                                    if (num194 > Main.maxTilesY)
                                    {
                                        num194 = Main.maxTilesY;
                                    }
                                    for (int num195 = num191; num195 < num192; num195++)
                                    {
                                        for (int num196 = num193; num196 < num194; num196++)
                                        {
                                            if (((Main.tile[num195, num196] != null) && Main.tile[num195, num196].nactive()) && (Main.tileSolid[Main.tile[num195, num196].type] || (Main.tileSolidTop[Main.tile[num195, num196].type] && (Main.tile[num195, num196].frameY == 0))))
                                            {
                                                Vector2 vector26;
                                                vector26.X = num195 * 0x10;
                                                vector26.Y = num196 * 0x10;
                                                if ((((this.position.X + base.width) > vector26.X) && (this.position.X < (vector26.X + 16f))) && (((this.position.Y + base.height) > vector26.Y) && (this.position.Y < (vector26.Y + 16f))))
                                                {
                                                    this.velocity.X = 0f;
                                                    this.velocity.Y = -0.2f;
                                                }
                                            }
                                        }
                                    }
                                }
                                catch
                                {
                                }
                            }
                            if (this.type == 0x115)
                            {
                                if (this.alpha > 0)
                                {
                                    this.alpha -= 30;
                                    if (this.alpha < 0)
                                    {
                                        this.alpha = 0;
                                    }
                                }
                                if (Main.expertMode)
                                {
                                    float num197 = 12f;
                                    int num198 = Player.FindClosest(base.Center, 1, 1);
                                    Vector2 vector27 = Main.player[num198].Center - base.Center;
                                    vector27.Normalize();
                                    vector27 = (Vector2)(vector27 * num197);
                                    int num199 = 200;
                                    this.velocity.X = ((this.velocity.X * (num199 - 1)) + vector27.X) / ((float)num199);
                                    if (this.velocity.Length() > 16f)
                                    {
                                        this.velocity.Normalize();
                                        base.velocity = (Vector2)(base.velocity * 16f);
                                    }
                                }
                            }
                            if ((this.type == 0x105) || (this.type == 0x115))
                            {
                                this.ai[0]++;
                                if (this.ai[0] > 15f)
                                {
                                    this.ai[0] = 15f;
                                    if ((this.velocity.Y == 0f) && (this.velocity.X != 0f))
                                    {
                                        this.velocity.X *= 0.97f;
                                        if ((this.velocity.X > -0.01) && (this.velocity.X < 0.01))
                                        {
                                            this.Kill();
                                        }
                                    }
                                    this.velocity.Y += 0.2f;
                                }
                                this.rotation += this.velocity.X * 0.05f;
                            }
                            else if (this.type == 0x17a)
                            {
                                if (this.localAI[0] == 0f)
                                {
                                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 0x11);
                                    this.localAI[0]++;
                                }
                                Rectangle rectangle3 = new Rectangle((int)this.position.X, (int)this.position.Y, base.width, base.height);
                                for (int num200 = 0; num200 < 200; num200++)
                                {
                                    if (Main.npc[num200].CanBeChasedBy(this, true))
                                    {
                                        Rectangle rectangle4 = new Rectangle((int)Main.npc[num200].position.X, (int)Main.npc[num200].position.Y, Main.npc[num200].width, Main.npc[num200].height);
                                        if (rectangle3.Intersects(rectangle4))
                                        {
                                            this.Kill();
                                            return;
                                        }
                                    }
                                }
                                this.ai[0]++;
                                if (this.ai[0] > 10f)
                                {
                                    this.ai[0] = 90f;
                                    if ((this.velocity.Y == 0f) && (this.velocity.X != 0f))
                                    {
                                        this.velocity.X *= 0.96f;
                                        if ((this.velocity.X > -0.01) && (this.velocity.X < 0.01))
                                        {
                                            this.Kill();
                                        }
                                    }
                                    this.velocity.Y += 0.2f;
                                }
                                this.rotation += this.velocity.X * 0.1f;
                            }
                            else if (this.type == 0x1e3)
                            {
                                this.ai[0]++;
                                if (this.ai[0] > 5f)
                                {
                                    if ((this.owner == Main.myPlayer) && (this.ai[0] > Main.rand.Next(20, 130)))
                                    {
                                        this.Kill();
                                    }
                                    if ((this.velocity.Y == 0f) && (this.velocity.X != 0f))
                                    {
                                        this.velocity.X *= 0.97f;
                                        if ((this.velocity.X > -0.01) && (this.velocity.X < 0.01))
                                        {
                                            this.velocity.X = 0f;
                                            this.netUpdate = true;
                                        }
                                    }
                                    this.velocity.Y += 0.3f;
                                    this.velocity.X *= 0.99f;
                                }
                                this.rotation += this.velocity.X * 0.05f;
                            }
                            else if (this.type == 0x21a)
                            {
                                this.ai[0]++;
                                if ((this.ai[0] > 60f) || (this.velocity.Y >= 0f))
                                {
                                    this.alpha += 6;
                                    base.velocity = (Vector2)(base.velocity * 0.5f);
                                }
                                else if (this.ai[0] > 5f)
                                {
                                    this.velocity.Y += 0.1f;
                                    this.velocity.X *= 1.025f;
                                    this.alpha -= 0x17;
                                    this.scale = (0.8f * (255f - this.alpha)) / 255f;
                                    if (this.alpha < 0)
                                    {
                                        this.alpha = 0;
                                    }
                                }
                                if ((this.alpha >= 0xff) && (this.ai[0] > 5f))
                                {
                                    this.Kill();
                                    return;
                                }
                            }
                            else
                            {
                                this.ai[0]++;
                                if (this.ai[0] > 5f)
                                {
                                    this.ai[0] = 5f;
                                    if ((this.velocity.Y == 0f) && (this.velocity.X != 0f))
                                    {
                                        this.velocity.X *= 0.97f;
                                        if ((this.velocity.X > -0.01) && (this.velocity.X < 0.01))
                                        {
                                            this.velocity.X = 0f;
                                            this.netUpdate = true;
                                        }
                                    }
                                    this.velocity.Y += 0.2f;
                                }
                                this.rotation += this.velocity.X * 0.1f;
                            }
                            if (this.type == 0x21a)
                            {
                                if (this.localAI[1] == 0f)
                                {
                                    this.localAI[1] = 1f;
                                    Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 7);
                                }
                                if ((this.velocity.Y < 0f) && (this.ai[0] < 60f))
                                {
                                    if (Main.rand.Next(4) == 0)
                                    {
                                        color5 = new Color();
                                        int num201 = Dust.NewDust(base.position, base.width, base.height, 180, 0f, 0f, 100, color5, 1f);
                                        Main.dust[num201].position = base.Center;
                                        Dust dust83 = Main.dust[num201];
                                        dust83.scale += Main.rand.Next(50) * 0.01f;
                                        Main.dust[num201].noGravity = true;
                                        Main.dust[num201].velocity.Y -= 2f;
                                    }
                                    if (Main.rand.Next(6) == 0)
                                    {
                                        color5 = new Color();
                                        int num202 = Dust.NewDust(base.position, base.width, base.height, 0xb0, 0f, 0f, 100, color5, 1f);
                                        Main.dust[num202].position = base.Center;
                                        Dust dust84 = Main.dust[num202];
                                        dust84.scale += 0.3f + (Main.rand.Next(50) * 0.01f);
                                        Main.dust[num202].noGravity = true;
                                        Dust dust85 = Main.dust[num202];
                                        dust85.velocity = (Vector2)(dust85.velocity * 0.1f);
                                    }
                                }
                            }
                            if (this.type == 450)
                            {
                                if (this.ai[1] == 0f)
                                {
                                    this.ai[1] = 1f;
                                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 13);
                                }
                                if (Main.rand.Next(2) == 0)
                                {
                                    color5 = new Color();
                                    int num203 = Dust.NewDust(base.position, base.width, base.height, 0xe4, 0f, 0f, 100, color5, 1f);
                                    Main.dust[num203].position.X -= 2f;
                                    Main.dust[num203].position.Y += 2f;
                                    Dust dust86 = Main.dust[num203];
                                    dust86.scale += Main.rand.Next(50) * 0.01f;
                                    Main.dust[num203].noGravity = true;
                                    Main.dust[num203].velocity.Y -= 2f;
                                }
                                if (Main.rand.Next(4) == 0)
                                {
                                    color5 = new Color();
                                    int num204 = Dust.NewDust(base.position, base.width, base.height, 0xe4, 0f, 0f, 100, color5, 1f);
                                    Main.dust[num204].position.X -= 2f;
                                    Main.dust[num204].position.Y += 2f;
                                    Dust dust87 = Main.dust[num204];
                                    dust87.scale += 0.3f + (Main.rand.Next(50) * 0.01f);
                                    Main.dust[num204].noGravity = true;
                                    Dust dust88 = Main.dust[num204];
                                    dust88.velocity = (Vector2)(dust88.velocity * 0.1f);
                                }
                                if (++this.frameCounter >= 3)
                                {
                                    this.frameCounter = 0;
                                    if (++this.frame >= 5)
                                    {
                                        this.frame = 0;
                                    }
                                }
                                if ((this.velocity.Y < 0.25) && (this.velocity.Y > 0.15))
                                {
                                    this.velocity.X *= 0.8f;
                                }
                                this.rotation = -this.velocity.X * 0.05f;
                            }
                            if (this.type == 480)
                            {
                                this.alpha = 0xff;
                                color5 = new Color();
                                int num205 = Dust.NewDust(base.position, base.width, base.height, 0x4b, 0f, 0f, 100, color5, 1f);
                                Main.dust[num205].position.X -= 2f;
                                Main.dust[num205].position.Y += 2f;
                                Dust dust89 = Main.dust[num205];
                                dust89.scale += Main.rand.Next(50) * 0.01f;
                                Main.dust[num205].noGravity = true;
                                Main.dust[num205].velocity.Y -= 2f;
                                if (Main.rand.Next(2) == 0)
                                {
                                    color5 = new Color();
                                    int num206 = Dust.NewDust(base.position, base.width, base.height, 0x4b, 0f, 0f, 100, color5, 1f);
                                    Main.dust[num206].position.X -= 2f;
                                    Main.dust[num206].position.Y += 2f;
                                    Dust dust90 = Main.dust[num206];
                                    dust90.scale += 0.3f + (Main.rand.Next(50) * 0.01f);
                                    Main.dust[num206].noGravity = true;
                                    Dust dust91 = Main.dust[num206];
                                    dust91.velocity = (Vector2)(dust91.velocity * 0.1f);
                                }
                            }
                            if (((this.type >= 0x146) && (this.type <= 0x148)) || ((this.type >= 400) && (this.type <= 0x192)))
                            {
                                if (base.wet)
                                {
                                    this.Kill();
                                }
                                if (((this.ai[1] == 0f) && (this.type >= 0x146)) && (this.type <= 0x148))
                                {
                                    this.ai[1] = 1f;
                                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 13);
                                }
                                color5 = new Color();
                                int num207 = Dust.NewDust(base.position, base.width, base.height, 6, 0f, 0f, 100, color5, 1f);
                                Main.dust[num207].position.X -= 2f;
                                Main.dust[num207].position.Y += 2f;
                                Dust dust92 = Main.dust[num207];
                                dust92.scale += Main.rand.Next(50) * 0.01f;
                                Main.dust[num207].noGravity = true;
                                Main.dust[num207].velocity.Y -= 2f;
                                if (Main.rand.Next(2) == 0)
                                {
                                    int num208 = Dust.NewDust(base.position, base.width, base.height, 6, 0f, 0f, 100, new Color(), 1f);
                                    Main.dust[num208].position.X -= 2f;
                                    Main.dust[num208].position.Y += 2f;
                                    Dust dust93 = Main.dust[num208];
                                    dust93.scale += 0.3f + (Main.rand.Next(50) * 0.01f);
                                    Main.dust[num208].noGravity = true;
                                    Dust dust94 = Main.dust[num208];
                                    dust94.velocity = (Vector2)(dust94.velocity * 0.1f);
                                }
                                if ((this.velocity.Y < 0.25) && (this.velocity.Y > 0.15))
                                {
                                    this.velocity.X *= 0.8f;
                                }
                                this.rotation = -this.velocity.X * 0.05f;
                            }
                            if (this.velocity.Y > 16f)
                            {
                                this.velocity.Y = 16f;
                                return;
                            }
                            return;
                        }
                        if (this.aiStyle == 15)
                        {
                            if (this.type == 0x19)
                            {
                                if (Main.rand.Next(15) == 0)
                                {
                                    Dust.NewDust(base.position, base.width, base.height, 14, 0f, 0f, 150, new Color(), 1.3f);
                                }
                            }
                            else if (this.type == 0x1a)
                            {
                                int num209 = Dust.NewDust(base.position, base.width, base.height, 0xac, this.velocity.X * 0.4f, this.velocity.Y * 0.4f, 100, new Color(), 1.5f);
                                Main.dust[num209].noGravity = true;
                                Main.dust[num209].velocity.X /= 2f;
                                Main.dust[num209].velocity.Y /= 2f;
                            }
                            else if (this.type == 0x23)
                            {
                                int num210 = Dust.NewDust(base.position, base.width, base.height, 6, this.velocity.X * 0.4f, this.velocity.Y * 0.4f, 100, new Color(), 3f);
                                Main.dust[num210].noGravity = true;
                                Main.dust[num210].velocity.X *= 2f;
                                Main.dust[num210].velocity.Y *= 2f;
                            }
                            else if (this.type == 0x9a)
                            {
                                int num211 = Dust.NewDust(base.position, base.width, base.height, 0x73, this.velocity.X * 0.4f, this.velocity.Y * 0.4f, 140, new Color(), 1.5f);
                                Main.dust[num211].noGravity = true;
                                Dust dust95 = Main.dust[num211];
                                dust95.velocity = (Vector2)(dust95.velocity * 0.25f);
                            }
                            if (Main.player[this.owner].dead)
                            {
                                this.Kill();
                                return;
                            }
                            Main.player[this.owner].itemAnimation = 10;
                            Main.player[this.owner].itemTime = 10;
                            if ((this.position.X + (base.width / 2)) > (Main.player[this.owner].position.X + (Main.player[this.owner].width / 2)))
                            {
                                Main.player[this.owner].ChangeDir(1);
                                base.direction = 1;
                            }
                            else
                            {
                                Main.player[this.owner].ChangeDir(-1);
                                base.direction = -1;
                            }
                            Vector2 vector28 = Main.player[this.owner].MountedCenter;
                            Vector2 vector29 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                            float num212 = vector28.X - vector29.X;
                            float num213 = vector28.Y - vector29.Y;
                            float num214 = (float)Math.Sqrt((double)((num212 * num212) + (num213 * num213)));
                            if (this.ai[0] == 0f)
                            {
                                float num215 = 160f;
                                if (this.type == 0x3f)
                                {
                                    num215 *= 1.5f;
                                }
                                if (this.type == 0xf7)
                                {
                                    num215 *= 1.5f;
                                }
                                this.tileCollide = true;
                                if (num214 > num215)
                                {
                                    this.ai[0] = 1f;
                                    this.netUpdate = true;
                                }
                                else if (!Main.player[this.owner].channel)
                                {
                                    if (this.velocity.Y < 0f)
                                    {
                                        this.velocity.Y *= 0.9f;
                                    }
                                    this.velocity.Y++;
                                    this.velocity.X *= 0.9f;
                                }
                            }
                            else if (this.ai[0] == 1f)
                            {
                                float num216 = 14f / Main.player[this.owner].meleeSpeed;
                                float num217 = 0.9f / Main.player[this.owner].meleeSpeed;
                                float num218 = 300f;
                                if (this.type == 0x3f)
                                {
                                    num218 *= 1.5f;
                                    num216 *= 1.5f;
                                    num217 *= 1.5f;
                                }
                                if (this.type == 0xf7)
                                {
                                    num218 *= 1.5f;
                                    num216 = 15.9f;
                                    num217 *= 2f;
                                }
                                Math.Abs(num212);
                                Math.Abs(num213);
                                if (this.ai[1] == 1f)
                                {
                                    this.tileCollide = false;
                                }
                                if ((!Main.player[this.owner].channel || (num214 > num218)) || !this.tileCollide)
                                {
                                    this.ai[1] = 1f;
                                    if (this.tileCollide)
                                    {
                                        this.netUpdate = true;
                                    }
                                    this.tileCollide = false;
                                    if (num214 < 20f)
                                    {
                                        this.Kill();
                                    }
                                }
                                if (!this.tileCollide)
                                {
                                    num217 *= 2f;
                                }
                                int num219 = 60;
                                if (this.type == 0xf7)
                                {
                                    num219 = 100;
                                }
                                if ((num214 > num219) || !this.tileCollide)
                                {
                                    num214 = num216 / num214;
                                    num212 *= num214;
                                    num213 *= num214;
                                    new Vector2(this.velocity.X, this.velocity.Y);
                                    float num220 = num212 - this.velocity.X;
                                    float num221 = num213 - this.velocity.Y;
                                    float num222 = (float)Math.Sqrt((double)((num220 * num220) + (num221 * num221)));
                                    num222 = num217 / num222;
                                    num220 *= num222;
                                    num221 *= num222;
                                    this.velocity.X *= 0.98f;
                                    this.velocity.Y *= 0.98f;
                                    this.velocity.X += num220;
                                    this.velocity.Y += num221;
                                }
                                else
                                {
                                    float introduced1654 = Math.Abs(this.velocity.X);
                                    if ((introduced1654 + Math.Abs(this.velocity.Y)) < 6f)
                                    {
                                        this.velocity.X *= 0.96f;
                                        this.velocity.Y += 0.2f;
                                    }
                                    if (Main.player[this.owner].velocity.X == 0f)
                                    {
                                        this.velocity.X *= 0.96f;
                                    }
                                }
                            }
                            if (this.type != 0xf7)
                            {
                                this.rotation = ((float)Math.Atan2((double)num213, (double)num212)) - (this.velocity.X * 0.1f);
                                return;
                            }
                            if (this.velocity.X < 0f)
                            {
                                float introduced1655 = Math.Abs(this.velocity.X);
                                this.rotation -= (introduced1655 + Math.Abs(this.velocity.Y)) * 0.01f;
                            }
                            else
                            {
                                float introduced1656 = Math.Abs(this.velocity.X);
                                this.rotation += (introduced1656 + Math.Abs(this.velocity.Y)) * 0.01f;
                            }
                            float x = this.position.X;
                            float y = this.position.Y;
                            float num225 = 600f;
                            bool flag4 = false;
                            if (this.owner == Main.myPlayer)
                            {
                                this.localAI[1]++;
                                if (this.localAI[1] > 20f)
                                {
                                    this.localAI[1] = 20f;
                                    for (int num226 = 0; num226 < 200; num226++)
                                    {
                                        if (Main.npc[num226].CanBeChasedBy(this, false))
                                        {
                                            float num227 = Main.npc[num226].position.X + (Main.npc[num226].width / 2);
                                            float num228 = Main.npc[num226].position.Y + (Main.npc[num226].height / 2);
                                            float introduced1657 = Math.Abs((float)((this.position.X + (base.width / 2)) - num227));
                                            float num229 = introduced1657 + Math.Abs((float)((this.position.Y + (base.height / 2)) - num228));
                                            if ((num229 < num225) && Collision.CanHit(base.position, base.width, base.height, Main.npc[num226].position, Main.npc[num226].width, Main.npc[num226].height))
                                            {
                                                num225 = num229;
                                                x = num227;
                                                y = num228;
                                                flag4 = true;
                                            }
                                        }
                                    }
                                }
                            }
                            if (flag4)
                            {
                                this.localAI[1] = 0f;
                                float num230 = 14f;
                                vector29 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                num212 = x - vector29.X;
                                num213 = y - vector29.Y;
                                num214 = (float)Math.Sqrt((double)((num212 * num212) + (num213 * num213)));
                                num214 = num230 / num214;
                                num212 *= num214;
                                num213 *= num214;
                                NewProjectile(vector29.X, vector29.Y, num212, num213, 0xf8, (int)(((double)this.damage) / 1.5), this.knockBack / 2f, Main.myPlayer, 0f, 0f);
                                return;
                            }
                            return;
                        }
                        if (this.aiStyle == 0x10)
                        {
                            if ((this.type == 0x6c) || (this.type == 0xa4))
                            {
                                this.ai[0]++;
                                if (this.ai[0] > 3f)
                                {
                                    this.Kill();
                                }
                            }
                            if (((this.type == 0x25) || (this.type == 0x18d)) || ((this.type == 470) || (this.type == 0x207)))
                            {
                                try
                                {
                                    int num231 = ((int)(this.position.X / 16f)) - 1;
                                    int num232 = ((int)((this.position.X + base.width) / 16f)) + 2;
                                    int num233 = ((int)(this.position.Y / 16f)) - 1;
                                    int num234 = ((int)((this.position.Y + base.height) / 16f)) + 2;
                                    if (num231 < 0)
                                    {
                                        num231 = 0;
                                    }
                                    if (num232 > Main.maxTilesX)
                                    {
                                        num232 = Main.maxTilesX;
                                    }
                                    if (num233 < 0)
                                    {
                                        num233 = 0;
                                    }
                                    if (num234 > Main.maxTilesY)
                                    {
                                        num234 = Main.maxTilesY;
                                    }
                                    for (int num235 = num231; num235 < num232; num235++)
                                    {
                                        for (int num236 = num233; num236 < num234; num236++)
                                        {
                                            if (((Main.tile[num235, num236] != null) && Main.tile[num235, num236].nactive()) && (Main.tileSolid[Main.tile[num235, num236].type] || (Main.tileSolidTop[Main.tile[num235, num236].type] && (Main.tile[num235, num236].frameY == 0))))
                                            {
                                                Vector2 vector30;
                                                vector30.X = num235 * 0x10;
                                                vector30.Y = num236 * 0x10;
                                                if (((((this.position.X + base.width) - 4f) > vector30.X) && ((this.position.X + 4f) < (vector30.X + 16f))) && ((((this.position.Y + base.height) - 4f) > vector30.Y) && ((this.position.Y + 4f) < (vector30.Y + 16f))))
                                                {
                                                    this.velocity.X = 0f;
                                                    this.velocity.Y = -0.2f;
                                                }
                                            }
                                        }
                                    }
                                }
                                catch
                                {
                                }
                            }
                            if (this.type == 0x207)
                            {
                                this.localAI[1]++;
                                float num237 = 180f - this.localAI[1];
                                if (num237 < 0f)
                                {
                                    num237 = 0f;
                                }
                                this.frameCounter++;
                                if (num237 < 15f)
                                {
                                    this.frameCounter++;
                                }
                                if (this.frameCounter >= (((num237 / 10f) + 6f) / 2f))
                                {
                                    this.frame++;
                                    this.frameCounter = 0;
                                    if (this.frame >= Main.projFrames[this.type])
                                    {
                                        this.frame = 0;
                                    }
                                }
                            }
                            if (this.type == 0x66)
                            {
                                if (this.velocity.Y > 10f)
                                {
                                    this.velocity.Y = 10f;
                                }
                                if (this.localAI[0] == 0f)
                                {
                                    this.localAI[0] = 1f;
                                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                                }
                                this.frameCounter++;
                                if (this.frameCounter > 3)
                                {
                                    this.frame++;
                                    this.frameCounter = 0;
                                }
                                if (this.frame > 1)
                                {
                                    this.frame = 0;
                                }
                                if (this.velocity.Y == 0f)
                                {
                                    this.position.X += base.width / 2;
                                    this.position.Y += base.height / 2;
                                    base.width = 0x80;
                                    base.height = 0x80;
                                    this.position.X -= base.width / 2;
                                    this.position.Y -= base.height / 2;
                                    this.damage = 40;
                                    this.knockBack = 8f;
                                    this.timeLeft = 3;
                                    this.netUpdate = true;
                                }
                            }
                            if (((this.type == 0x12f) && (this.timeLeft <= 3)) && this.hostile)
                            {
                                this.position.X += base.width / 2;
                                this.position.Y += base.height / 2;
                                base.width = 0x80;
                                base.height = 0x80;
                                this.position.X -= base.width / 2;
                                this.position.Y -= base.height / 2;
                            }
                            if ((this.owner == Main.myPlayer) && (this.timeLeft <= 3))
                            {
                                this.tileCollide = false;
                                this.ai[1] = 0f;
                                this.alpha = 0xff;
                                if (((this.type == 0x1c) || (this.type == 0x25)) || (((this.type == 0x4b) || (this.type == 0x204)) || (this.type == 0x207)))
                                {
                                    this.position.X += base.width / 2;
                                    this.position.Y += base.height / 2;
                                    base.width = 0x80;
                                    base.height = 0x80;
                                    this.position.X -= base.width / 2;
                                    this.position.Y -= base.height / 2;
                                    this.damage = 100;
                                    this.knockBack = 8f;
                                }
                                else if (((this.type == 0x1d) || (this.type == 470)) || (this.type == 0x27d))
                                {
                                    this.position.X += base.width / 2;
                                    this.position.Y += base.height / 2;
                                    base.width = 250;
                                    base.height = 250;
                                    this.position.X -= base.width / 2;
                                    this.position.Y -= base.height / 2;
                                    this.damage = 250;
                                    this.knockBack = 10f;
                                }
                                else if (((this.type == 30) || (this.type == 0x18d)) || ((this.type == 0x205) || (this.type == 0x24c)))
                                {
                                    this.position.X += base.width / 2;
                                    this.position.Y += base.height / 2;
                                    base.width = 0x80;
                                    base.height = 0x80;
                                    this.position.X -= base.width / 2;
                                    this.position.Y -= base.height / 2;
                                    this.knockBack = 8f;
                                }
                                else if ((((this.type == 0x85) || (this.type == 0x86)) || ((this.type == 0x87) || (this.type == 0x88))) || (((this.type == 0x89) || (this.type == 0x8a)) || ((this.type == 0x152) || (this.type == 0x153))))
                                {
                                    this.position.X += base.width / 2;
                                    this.position.Y += base.height / 2;
                                    base.width = 0x80;
                                    base.height = 0x80;
                                    this.position.X -= base.width / 2;
                                    this.position.Y -= base.height / 2;
                                    this.knockBack = 8f;
                                }
                                else if ((((this.type == 0x8b) || (this.type == 140)) || ((this.type == 0x8d) || (this.type == 0x8e))) || (((this.type == 0x8f) || (this.type == 0x90)) || ((this.type == 340) || (this.type == 0x155))))
                                {
                                    this.position.X += base.width / 2;
                                    this.position.Y += base.height / 2;
                                    base.width = 200;
                                    base.height = 200;
                                    this.position.X -= base.width / 2;
                                    this.position.Y -= base.height / 2;
                                    this.knockBack = 10f;
                                }
                            }
                            else
                            {
                                if ((((((this.type != 30) && (this.type != 0x205)) && ((this.type != 0x24c) && (this.type != 0x18d))) && (((this.type != 0x6c) && (this.type != 0x85)) && ((this.type != 0x86) && (this.type != 0x87)))) && ((((this.type != 0x88) && (this.type != 0x89)) && ((this.type != 0x8a) && (this.type != 0x8b))) && (((this.type != 140) && (this.type != 0x8d)) && ((this.type != 0x8e) && (this.type != 0x8f))))) && ((((this.type != 0x90) && (this.type != 0xa4)) && ((this.type != 0x12f) && (this.type < 0x152))) && (this.type < 0x155)))
                                {
                                    this.damage = 0;
                                }
                                if (((this.type == 0x152) || (this.type == 0x153)) || ((this.type == 340) || (this.type == 0x155)))
                                {
                                    this.localAI[1]++;
                                    if (this.localAI[1] > 6f)
                                    {
                                        this.alpha = 0;
                                    }
                                    else
                                    {
                                        this.alpha = ((int)(255f - (42f * this.localAI[1]))) + 100;
                                        if (this.alpha > 0xff)
                                        {
                                            this.alpha = 0xff;
                                        }
                                    }
                                    for (int num238 = 0; num238 < 2; num238++)
                                    {
                                        float num239 = 0f;
                                        float num240 = 0f;
                                        if (num238 == 1)
                                        {
                                            num239 = this.velocity.X * 0.5f;
                                            num240 = this.velocity.Y * 0.5f;
                                        }
                                        if (this.localAI[1] > 9f)
                                        {
                                            if (Main.rand.Next(2) == 0)
                                            {
                                                color5 = new Color();
                                                int num241 = Dust.NewDust(new Vector2((this.position.X + 3f) + num239, (this.position.Y + 3f) + num240) - ((Vector2)(base.velocity * 0.5f)), base.width - 8, base.height - 8, 6, 0f, 0f, 100, color5, 1f);
                                                Dust dust96 = Main.dust[num241];
                                                dust96.scale *= 1.4f + (Main.rand.Next(10) * 0.1f);
                                                Dust dust97 = Main.dust[num241];
                                                dust97.velocity = (Vector2)(dust97.velocity * 0.2f);
                                                Main.dust[num241].noGravity = true;
                                            }
                                            if (Main.rand.Next(2) == 0)
                                            {
                                                color5 = new Color();
                                                int num242 = Dust.NewDust(new Vector2((this.position.X + 3f) + num239, (this.position.Y + 3f) + num240) - ((Vector2)(base.velocity * 0.5f)), base.width - 8, base.height - 8, 0x1f, 0f, 0f, 100, color5, 0.5f);
                                                Main.dust[num242].fadeIn = 0.5f + (Main.rand.Next(5) * 0.1f);
                                                Dust dust98 = Main.dust[num242];
                                                dust98.velocity = (Vector2)(dust98.velocity * 0.05f);
                                            }
                                        }
                                    }
                                    float num243 = this.position.X;
                                    float num244 = this.position.Y;
                                    float num245 = 600f;
                                    bool flag5 = false;
                                    this.ai[0]++;
                                    if (this.ai[0] > 30f)
                                    {
                                        this.ai[0] = 30f;
                                        for (int num246 = 0; num246 < 200; num246++)
                                        {
                                            if (Main.npc[num246].CanBeChasedBy(this, false))
                                            {
                                                float num247 = Main.npc[num246].position.X + (Main.npc[num246].width / 2);
                                                float num248 = Main.npc[num246].position.Y + (Main.npc[num246].height / 2);
                                                float introduced1662 = Math.Abs((float)((this.position.X + (base.width / 2)) - num247));
                                                float num249 = introduced1662 + Math.Abs((float)((this.position.Y + (base.height / 2)) - num248));
                                                if ((num249 < num245) && Collision.CanHit(base.position, base.width, base.height, Main.npc[num246].position, Main.npc[num246].width, Main.npc[num246].height))
                                                {
                                                    num245 = num249;
                                                    num243 = num247;
                                                    num244 = num248;
                                                    flag5 = true;
                                                }
                                            }
                                        }
                                    }
                                    if (!flag5)
                                    {
                                        num243 = (this.position.X + (base.width / 2)) + (this.velocity.X * 100f);
                                        num244 = (this.position.Y + (base.height / 2)) + (this.velocity.Y * 100f);
                                    }
                                    float num250 = 16f;
                                    Vector2 vector31 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                    float num251 = num243 - vector31.X;
                                    float num252 = num244 - vector31.Y;
                                    float num253 = (float)Math.Sqrt((double)((num251 * num251) + (num252 * num252)));
                                    num253 = num250 / num253;
                                    num251 *= num253;
                                    num252 *= num253;
                                    this.velocity.X = ((this.velocity.X * 11f) + num251) / 12f;
                                    this.velocity.Y = ((this.velocity.Y * 11f) + num252) / 12f;
                                }
                                else if (((this.type == 0x86) || (this.type == 0x89)) || (((this.type == 140) || (this.type == 0x8f)) || (this.type == 0x12f)))
                                {
                                    if ((Math.Abs(this.velocity.X) >= 8f) || (Math.Abs(this.velocity.Y) >= 8f))
                                    {
                                        for (int num254 = 0; num254 < 2; num254++)
                                        {
                                            float num255 = 0f;
                                            float num256 = 0f;
                                            if (num254 == 1)
                                            {
                                                num255 = this.velocity.X * 0.5f;
                                                num256 = this.velocity.Y * 0.5f;
                                            }
                                            color5 = new Color();
                                            int num257 = Dust.NewDust(new Vector2((this.position.X + 3f) + num255, (this.position.Y + 3f) + num256) - ((Vector2)(base.velocity * 0.5f)), base.width - 8, base.height - 8, 6, 0f, 0f, 100, color5, 1f);
                                            Dust dust99 = Main.dust[num257];
                                            dust99.scale *= 2f + (Main.rand.Next(10) * 0.1f);
                                            Dust dust100 = Main.dust[num257];
                                            dust100.velocity = (Vector2)(dust100.velocity * 0.2f);
                                            Main.dust[num257].noGravity = true;
                                            color5 = new Color();
                                            num257 = Dust.NewDust(new Vector2((this.position.X + 3f) + num255, (this.position.Y + 3f) + num256) - ((Vector2)(base.velocity * 0.5f)), base.width - 8, base.height - 8, 0x1f, 0f, 0f, 100, color5, 0.5f);
                                            Main.dust[num257].fadeIn = 1f + (Main.rand.Next(5) * 0.1f);
                                            Dust dust101 = Main.dust[num257];
                                            dust101.velocity = (Vector2)(dust101.velocity * 0.05f);
                                        }
                                    }
                                    if ((Math.Abs(this.velocity.X) < 15f) && (Math.Abs(this.velocity.Y) < 15f))
                                    {
                                        base.velocity = (Vector2)(base.velocity * 1.1f);
                                    }
                                }
                                else if (((this.type == 0x85) || (this.type == 0x88)) || ((this.type == 0x8b) || (this.type == 0x8e)))
                                {
                                    int num258 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x1f, 0f, 0f, 100, new Color(), 1f);
                                    Dust dust102 = Main.dust[num258];
                                    dust102.scale *= 1f + (Main.rand.Next(10) * 0.1f);
                                    Dust dust103 = Main.dust[num258];
                                    dust103.velocity = (Vector2)(dust103.velocity * 0.2f);
                                    Main.dust[num258].noGravity = true;
                                }
                                else if (((this.type == 0x87) || (this.type == 0x8a)) || ((this.type == 0x8d) || (this.type == 0x90)))
                                {
                                    if (((this.velocity.X > -0.2) && (this.velocity.X < 0.2)) && ((this.velocity.Y > -0.2) && (this.velocity.Y < 0.2)))
                                    {
                                        this.alpha += 2;
                                        if (this.alpha > 200)
                                        {
                                            this.alpha = 200;
                                        }
                                    }
                                    else
                                    {
                                        this.alpha = 0;
                                        int num259 = Dust.NewDust(new Vector2(this.position.X + 3f, this.position.Y + 3f) - ((Vector2)(base.velocity * 0.5f)), base.width - 8, base.height - 8, 0x1f, 0f, 0f, 100, new Color(), 1f);
                                        Dust dust104 = Main.dust[num259];
                                        dust104.scale *= 1.6f + (Main.rand.Next(5) * 0.1f);
                                        Dust dust105 = Main.dust[num259];
                                        dust105.velocity = (Vector2)(dust105.velocity * 0.05f);
                                        Main.dust[num259].noGravity = true;
                                    }
                                }
                                else if ((((this.type != 30) && (this.type != 0x205)) && ((this.type != 0x18d) && (this.type != 0x207))) && ((this.type != 0x24c) && (Main.rand.Next(2) == 0)))
                                {
                                    color5 = new Color();
                                    int num260 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x1f, 0f, 0f, 100, color5, 1f);
                                    Main.dust[num260].scale = 0.1f + (Main.rand.Next(5) * 0.1f);
                                    Main.dust[num260].fadeIn = 1.5f + (Main.rand.Next(5) * 0.1f);
                                    Main.dust[num260].noGravity = true;
                                    vector240 = new Vector2();
                                    Main.dust[num260].position = base.Center + ((Vector2)(new Vector2(0f, (float)(-base.height / 2)).RotatedBy(((double)this.rotation), vector240) * 1.1f));
                                    Main.rand.Next(2);
                                    num260 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, 0f, 0f, 100, new Color(), 1f);
                                    Main.dust[num260].scale = 1f + (Main.rand.Next(5) * 0.1f);
                                    Main.dust[num260].noGravity = true;
                                    Main.dust[num260].position = base.Center + ((Vector2)(new Vector2(0f, (float)((-base.height / 2) - 6)).RotatedBy(((double)this.rotation), new Vector2()) * 1.1f));
                                }
                            }
                            this.ai[0]++;
                            if (((this.type == 0x152) || (this.type == 0x153)) || ((this.type == 340) || (this.type == 0x155)))
                            {
                                if (this.velocity.X < 0f)
                                {
                                    this.spriteDirection = -1;
                                    this.rotation = ((float)Math.Atan2((double)-this.velocity.Y, (double)-this.velocity.X)) - 1.57f;
                                }
                                else
                                {
                                    this.spriteDirection = 1;
                                    this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 1.57f;
                                }
                            }
                            else if (((this.type == 0x86) || (this.type == 0x89)) || (((this.type == 140) || (this.type == 0x8f)) || (this.type == 0x12f)))
                            {
                                this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 1.57f;
                            }
                            else if (((this.type == 0x87) || (this.type == 0x8a)) || ((this.type == 0x8d) || (this.type == 0x90)))
                            {
                                this.velocity.Y += 0.2f;
                                base.velocity = (Vector2)(base.velocity * 0.97f);
                                if ((this.velocity.X > -0.1) && (this.velocity.X < 0.1))
                                {
                                    this.velocity.X = 0f;
                                }
                                if ((this.velocity.Y > -0.1) && (this.velocity.Y < 0.1))
                                {
                                    this.velocity.Y = 0f;
                                }
                            }
                            else if (((this.type == 0x85) || (this.type == 0x88)) || ((this.type == 0x8b) || (this.type == 0x8e)))
                            {
                                if (this.ai[0] > 15f)
                                {
                                    if (this.velocity.Y == 0f)
                                    {
                                        this.velocity.X *= 0.95f;
                                    }
                                    this.velocity.Y += 0.2f;
                                }
                            }
                            else if (((((this.type == 30) || (this.type == 0x18d)) || ((this.type == 0x205) || (this.type == 0x24c))) && (this.ai[0] > 10f)) || ((((this.type != 30) && (this.type != 0x18d)) && ((this.type != 0x205) && (this.type != 0x24c))) && (this.ai[0] > 5f)))
                            {
                                this.ai[0] = 10f;
                                if ((this.velocity.Y == 0f) && (this.velocity.X != 0f))
                                {
                                    this.velocity.X *= 0.97f;
                                    if (((this.type == 0x1d) || (this.type == 470)) || (this.type == 0x27d))
                                    {
                                        this.velocity.X *= 0.99f;
                                    }
                                    if ((this.velocity.X > -0.01) && (this.velocity.X < 0.01))
                                    {
                                        this.velocity.X = 0f;
                                        this.netUpdate = true;
                                    }
                                }
                                this.velocity.Y += 0.2f;
                            }
                            if (this.type == 0x207)
                            {
                                this.rotation += this.velocity.X * 0.06f;
                                return;
                            }
                            if ((((this.type != 0x86) && (this.type != 0x89)) && ((this.type != 140) && (this.type != 0x8f))) && ((this.type != 0x12f) && ((this.type < 0x152) || (this.type > 0x155))))
                            {
                                this.rotation += this.velocity.X * 0.1f;
                                return;
                            }
                            return;
                        }
                        if (this.aiStyle == 0x11)
                        {
                            if (this.velocity.Y == 0f)
                            {
                                this.velocity.X *= 0.98f;
                            }
                            this.rotation += this.velocity.X * 0.1f;
                            this.velocity.Y += 0.2f;
                            if (this.owner == Main.myPlayer)
                            {
                                int num261 = (int)((this.position.X + (base.width / 2)) / 16f);
                                int num262 = (int)(((this.position.Y + base.height) - 4f) / 16f);
                                if ((Main.tile[num261, num262] != null) && !Main.tile[num261, num262].active())
                                {
                                    int style = 0;
                                    if ((this.type >= 0xc9) && (this.type <= 0xcd))
                                    {
                                        style = this.type - 200;
                                    }
                                    if ((this.type >= 0x20f) && (this.type <= 0x213))
                                    {
                                        style = (this.type - 0x20f) + 6;
                                    }
                                    WorldGen.PlaceTile(num261, num262, 0x55, false, false, this.owner, style);
                                    if (Main.tile[num261, num262].active())
                                    {
                                        if (Main.netMode != 0)
                                        {
                                            NetMessage.SendData(0x11, -1, -1, "", 1, (float)num261, (float)num262, 85f, style, 0, 0);
                                        }
                                        int num264 = Sign.ReadSign(num261, num262, true);
                                        if (num264 >= 0)
                                        {
                                            Sign.TextSign(num264, this.miscText);
                                        }
                                        this.Kill();
                                        return;
                                    }
                                }
                            }
                            return;
                        }
                        if (this.aiStyle == 0x12)
                        {
                            if ((this.ai[1] == 0f) && (this.type == 0x2c))
                            {
                                this.ai[1] = 1f;
                                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                            }
                            if ((this.type == 0x107) || (this.type == 0x112))
                            {
                                if ((this.type == 0x112) && (this.velocity.X < 0f))
                                {
                                    this.spriteDirection = -1;
                                }
                                this.rotation += base.direction * 0.05f;
                                this.rotation += (base.direction * 0.5f) * (((float)this.timeLeft) / 180f);
                                if (this.type == 0x112)
                                {
                                    base.velocity = (Vector2)(base.velocity * 0.96f);
                                    return;
                                }
                                base.velocity = (Vector2)(base.velocity * 0.95f);
                                return;
                            }
                            this.rotation += base.direction * 0.8f;
                            this.ai[0]++;
                            if (this.ai[0] >= 30f)
                            {
                                if (this.ai[0] < 100f)
                                {
                                    base.velocity = (Vector2)(base.velocity * 1.06f);
                                }
                                else
                                {
                                    this.ai[0] = 200f;
                                }
                            }
                            for (int num265 = 0; num265 < 2; num265++)
                            {
                                color5 = new Color();
                                int num266 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x1b, 0f, 0f, 100, color5, 1f);
                                Main.dust[num266].noGravity = true;
                            }
                            return;
                        }
                        if (this.aiStyle == 0x13)
                        {
                            Vector2 vector32 = Main.player[this.owner].RotatedRelativePoint(Main.player[this.owner].MountedCenter, true);
                            base.direction = Main.player[this.owner].direction;
                            Main.player[this.owner].heldProj = base.whoAmI;
                            Main.player[this.owner].itemTime = Main.player[this.owner].itemAnimation;
                            this.position.X = vector32.X - (base.width / 2);
                            this.position.Y = vector32.Y - (base.height / 2);
                            if (!Main.player[this.owner].frozen)
                            {
                                if (this.type == 0x2e)
                                {
                                    if (this.ai[0] == 0f)
                                    {
                                        this.ai[0] = 3f;
                                        this.netUpdate = true;
                                    }
                                    if (Main.player[this.owner].itemAnimation < (Main.player[this.owner].itemAnimationMax / 3))
                                    {
                                        this.ai[0] -= 1.6f;
                                    }
                                    else
                                    {
                                        this.ai[0] += 1.4f;
                                    }
                                }
                                else if (this.type == 0x69)
                                {
                                    if (this.ai[0] == 0f)
                                    {
                                        this.ai[0] = 3f;
                                        this.netUpdate = true;
                                    }
                                    if (Main.player[this.owner].itemAnimation < (Main.player[this.owner].itemAnimationMax / 3))
                                    {
                                        this.ai[0] -= 2.4f;
                                    }
                                    else
                                    {
                                        this.ai[0] += 2.1f;
                                    }
                                }
                                else if (this.type == 0x16f)
                                {
                                    this.spriteDirection = -base.direction;
                                    if (this.ai[0] == 0f)
                                    {
                                        this.ai[0] = 3f;
                                        this.netUpdate = true;
                                    }
                                    if (Main.player[this.owner].itemAnimation < (Main.player[this.owner].itemAnimationMax / 3))
                                    {
                                        this.ai[0] -= 1.6f;
                                    }
                                    else
                                    {
                                        this.ai[0] += 1.5f;
                                    }
                                }
                                else if (this.type == 0x170)
                                {
                                    this.spriteDirection = -base.direction;
                                    if (this.ai[0] == 0f)
                                    {
                                        this.ai[0] = 3f;
                                        this.netUpdate = true;
                                    }
                                    if (Main.player[this.owner].itemAnimation < (Main.player[this.owner].itemAnimationMax / 3))
                                    {
                                        this.ai[0] -= 1.5f;
                                    }
                                    else
                                    {
                                        this.ai[0] += 1.4f;
                                    }
                                }
                                else if (this.type == 0xde)
                                {
                                    if (this.ai[0] == 0f)
                                    {
                                        this.ai[0] = 3f;
                                        this.netUpdate = true;
                                    }
                                    if (Main.player[this.owner].itemAnimation < (Main.player[this.owner].itemAnimationMax / 3))
                                    {
                                        this.ai[0] -= 2.4f;
                                        if ((this.localAI[0] == 0f) && (Main.myPlayer == this.owner))
                                        {
                                            this.localAI[0] = 1f;
                                            NewProjectile(base.Center.X + (this.velocity.X * this.ai[0]), base.Center.Y + (this.velocity.Y * this.ai[0]), this.velocity.X, this.velocity.Y, 0xe4, this.damage, this.knockBack, this.owner, 0f, 0f);
                                        }
                                    }
                                    else
                                    {
                                        this.ai[0] += 2.1f;
                                    }
                                }
                                else if (this.type == 0x156)
                                {
                                    if (this.ai[0] == 0f)
                                    {
                                        this.ai[0] = 3f;
                                        this.netUpdate = true;
                                    }
                                    if (Main.player[this.owner].itemAnimation < (Main.player[this.owner].itemAnimationMax / 3))
                                    {
                                        this.ai[0] -= 2.4f;
                                        if ((this.localAI[0] == 0f) && (Main.myPlayer == this.owner))
                                        {
                                            this.localAI[0] = 1f;
                                            if (Collision.CanHit(Main.player[this.owner].position, Main.player[this.owner].width, Main.player[this.owner].height, new Vector2(base.Center.X + (this.velocity.X * this.ai[0]), base.Center.Y + (this.velocity.Y * this.ai[0])), base.width, base.height))
                                            {
                                                NewProjectile(base.Center.X + (this.velocity.X * this.ai[0]), base.Center.Y + (this.velocity.Y * this.ai[0]), this.velocity.X * 2.4f, this.velocity.Y * 2.4f, 0x157, (int)(this.damage * 0.8), this.knockBack * 0.85f, this.owner, 0f, 0f);
                                            }
                                        }
                                    }
                                    else
                                    {
                                        this.ai[0] += 2.1f;
                                    }
                                }
                                else if (this.type == 0x2f)
                                {
                                    if (this.ai[0] == 0f)
                                    {
                                        this.ai[0] = 4f;
                                        this.netUpdate = true;
                                    }
                                    if (Main.player[this.owner].itemAnimation < (Main.player[this.owner].itemAnimationMax / 3))
                                    {
                                        this.ai[0] -= 1.2f;
                                    }
                                    else
                                    {
                                        this.ai[0] += 0.9f;
                                    }
                                }
                                else if (this.type == 0x99)
                                {
                                    this.spriteDirection = -base.direction;
                                    if (this.ai[0] == 0f)
                                    {
                                        this.ai[0] = 4f;
                                        this.netUpdate = true;
                                    }
                                    if (Main.player[this.owner].itemAnimation < (Main.player[this.owner].itemAnimationMax / 3))
                                    {
                                        this.ai[0] -= 1.5f;
                                    }
                                    else
                                    {
                                        this.ai[0] += 1.3f;
                                    }
                                }
                                else if (this.type == 0x31)
                                {
                                    if (this.ai[0] == 0f)
                                    {
                                        this.ai[0] = 4f;
                                        this.netUpdate = true;
                                    }
                                    if (Main.player[this.owner].itemAnimation < (Main.player[this.owner].itemAnimationMax / 3))
                                    {
                                        this.ai[0] -= 1.1f;
                                    }
                                    else
                                    {
                                        this.ai[0] += 0.85f;
                                    }
                                }
                                else if ((this.type == 0x40) || (this.type == 0xd7))
                                {
                                    this.spriteDirection = -base.direction;
                                    if (this.ai[0] == 0f)
                                    {
                                        this.ai[0] = 3f;
                                        this.netUpdate = true;
                                    }
                                    if (Main.player[this.owner].itemAnimation < (Main.player[this.owner].itemAnimationMax / 3))
                                    {
                                        this.ai[0] -= 1.9f;
                                    }
                                    else
                                    {
                                        this.ai[0] += 1.7f;
                                    }
                                }
                                else if (((this.type == 0x42) || (this.type == 0x61)) || ((this.type == 0xd4) || (this.type == 0xda)))
                                {
                                    this.spriteDirection = -base.direction;
                                    if (this.ai[0] == 0f)
                                    {
                                        this.ai[0] = 3f;
                                        this.netUpdate = true;
                                    }
                                    if (Main.player[this.owner].itemAnimation < (Main.player[this.owner].itemAnimationMax / 3))
                                    {
                                        this.ai[0] -= 2.1f;
                                    }
                                    else
                                    {
                                        this.ai[0] += 1.9f;
                                    }
                                }
                                else if (this.type == 130)
                                {
                                    this.spriteDirection = -base.direction;
                                    if (this.ai[0] == 0f)
                                    {
                                        this.ai[0] = 3f;
                                        this.netUpdate = true;
                                    }
                                    if (Main.player[this.owner].itemAnimation < (Main.player[this.owner].itemAnimationMax / 3))
                                    {
                                        this.ai[0] -= 1.3f;
                                    }
                                    else
                                    {
                                        this.ai[0]++;
                                    }
                                }
                            }
                            base.position += (Vector2)(base.velocity * this.ai[0]);
                            if (this.type == 130)
                            {
                                if ((((this.ai[1] == 0f) || (this.ai[1] == 4f)) || ((this.ai[1] == 8f) || (this.ai[1] == 12f))) || (((this.ai[1] == 16f) || (this.ai[1] == 20f)) || (this.ai[1] == 24f)))
                                {
                                    NewProjectile(this.position.X + (base.width / 2), this.position.Y + (base.height / 2), this.velocity.X, this.velocity.Y, 0x83, this.damage / 3, 0f, this.owner, 0f, 0f);
                                }
                                this.ai[1]++;
                            }
                            if (Main.player[this.owner].itemAnimation == 0)
                            {
                                this.Kill();
                            }
                            this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 2.355f;
                            if (this.spriteDirection == -1)
                            {
                                this.rotation -= 1.57f;
                            }
                            if (this.type == 0x2e)
                            {
                                if (Main.rand.Next(5) == 0)
                                {
                                    color5 = new Color();
                                    Dust.NewDust(base.position, base.width, base.height, 14, 0f, 0f, 150, color5, 1.4f);
                                }
                                color5 = new Color();
                                int num267 = Dust.NewDust(base.position, base.width, base.height, 0x1b, (this.velocity.X * 0.2f) + (base.direction * 3), this.velocity.Y * 0.2f, 100, color5, 1.2f);
                                Main.dust[num267].noGravity = true;
                                Main.dust[num267].velocity.X /= 2f;
                                Main.dust[num267].velocity.Y /= 2f;
                                num267 = Dust.NewDust(base.position - ((Vector2)(base.velocity * 2f)), base.width, base.height, 0x1b, 0f, 0f, 150, new Color(), 1.4f);
                                Main.dust[num267].velocity.X /= 5f;
                                Main.dust[num267].velocity.Y /= 5f;
                                return;
                            }
                            if (this.type != 0x69)
                            {
                                if (this.type == 0x99)
                                {
                                    int num270 = Dust.NewDust(base.position - ((Vector2)(base.velocity * 3f)), base.width, base.height, 0x73, this.velocity.X * 0.4f, this.velocity.Y * 0.4f, 140, new Color(), 1f);
                                    Main.dust[num270].noGravity = true;
                                    Main.dust[num270].fadeIn = 1.25f;
                                    Dust dust110 = Main.dust[num270];
                                    dust110.velocity = (Vector2)(dust110.velocity * 0.25f);
                                    return;
                                }
                            }
                            else
                            {
                                if (Main.rand.Next(3) == 0)
                                {
                                    color5 = new Color();
                                    int num268 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x39, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 200, color5, 1.2f);
                                    Dust dust106 = Main.dust[num268];
                                    dust106.velocity += (Vector2)(base.velocity * 0.3f);
                                    Dust dust107 = Main.dust[num268];
                                    dust107.velocity = (Vector2)(dust107.velocity * 0.2f);
                                }
                                if (Main.rand.Next(4) == 0)
                                {
                                    int num269 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x2b, 0f, 0f, 0xfe, new Color(), 0.3f);
                                    Dust dust108 = Main.dust[num269];
                                    dust108.velocity += (Vector2)(base.velocity * 0.5f);
                                    Dust dust109 = Main.dust[num269];
                                    dust109.velocity = (Vector2)(dust109.velocity * 0.5f);
                                    return;
                                }
                            }
                            return;
                        }
                        if (this.aiStyle == 20)
                        {
                            if (this.type == 0xfc)
                            {
                                this.frameCounter++;
                                if (this.frameCounter >= 4)
                                {
                                    this.frameCounter = 0;
                                    this.frame++;
                                }
                                if (this.frame > 3)
                                {
                                    this.frame = 0;
                                }
                            }
                            if (this.type == 0x1fd)
                            {
                                this.frameCounter++;
                                if (this.frameCounter >= 2)
                                {
                                    this.frameCounter = 0;
                                    this.frame++;
                                }
                                if (this.frame > 1)
                                {
                                    this.frame = 0;
                                }
                            }
                            if (this.soundDelay <= 0)
                            {
                                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 0x16);
                                this.soundDelay = 30;
                            }
                            Vector2 vector33 = Main.player[this.owner].RotatedRelativePoint(Main.player[this.owner].MountedCenter, true);
                            if (Main.myPlayer == this.owner)
                            {
                                if (Main.player[this.owner].channel)
                                {
                                    float num271 = Main.player[this.owner].inventory[Main.player[this.owner].selectedItem].shootSpeed * this.scale;
                                    Vector2 vector34 = vector33;
                                    float num272 = (Main.mouseX + Main.screenPosition.X) - vector34.X;
                                    float num273 = (Main.mouseY + Main.screenPosition.Y) - vector34.Y;
                                    if (Main.player[this.owner].gravDir == -1f)
                                    {
                                        num273 = ((Main.screenHeight - Main.mouseY) + Main.screenPosition.Y) - vector34.Y;
                                    }
                                    float num274 = (float)Math.Sqrt((double)((num272 * num272) + (num273 * num273)));
                                    num274 = (float)Math.Sqrt((double)((num272 * num272) + (num273 * num273)));
                                    num274 = num271 / num274;
                                    num272 *= num274;
                                    num273 *= num274;
                                    if ((num272 != this.velocity.X) || (num273 != this.velocity.Y))
                                    {
                                        this.netUpdate = true;
                                    }
                                    this.velocity.X = num272;
                                    this.velocity.Y = num273;
                                }
                                else
                                {
                                    this.Kill();
                                }
                            }
                            if (this.velocity.X > 0f)
                            {
                                Main.player[this.owner].ChangeDir(1);
                            }
                            else if (this.velocity.X < 0f)
                            {
                                Main.player[this.owner].ChangeDir(-1);
                            }
                            this.spriteDirection = base.direction;
                            Main.player[this.owner].ChangeDir(base.direction);
                            Main.player[this.owner].heldProj = base.whoAmI;
                            Main.player[this.owner].itemTime = 2;
                            Main.player[this.owner].itemAnimation = 2;
                            this.position.X = vector33.X - (base.width / 2);
                            this.position.Y = vector33.Y - (base.height / 2);
                            this.rotation = (float)(Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.5700000524520874);
                            if (Main.player[this.owner].direction == 1)
                            {
                                Main.player[this.owner].itemRotation = (float)Math.Atan2((double)(this.velocity.Y * base.direction), (double)(this.velocity.X * base.direction));
                            }
                            else
                            {
                                Main.player[this.owner].itemRotation = (float)Math.Atan2((double)(this.velocity.Y * base.direction), (double)(this.velocity.X * base.direction));
                            }
                            this.velocity.X *= 1f + (Main.rand.Next(-3, 4) * 0.01f);
                            if (Main.rand.Next(6) == 0)
                            {
                                int num275 = Dust.NewDust(base.position + ((Vector2)((base.velocity * Main.rand.Next(6, 10)) * 0.1f)), base.width, base.height, 0x1f, 0f, 0f, 80, new Color(), 1.4f);
                                Main.dust[num275].position.X -= 4f;
                                Main.dust[num275].noGravity = true;
                                Dust dust111 = Main.dust[num275];
                                dust111.velocity = (Vector2)(dust111.velocity * 0.2f);
                                Main.dust[num275].velocity.Y = -Main.rand.Next(7, 13) * 0.15f;
                                return;
                            }
                            return;
                        }
                        if (this.aiStyle == 0x15)
                        {
                            this.rotation = this.velocity.X * 0.1f;
                            this.spriteDirection = -base.direction;
                            if (Main.rand.Next(3) == 0)
                            {
                                int num276 = Dust.NewDust(base.position, base.width, base.height, 0x1b, 0f, 0f, 80, new Color(), 1f);
                                Main.dust[num276].noGravity = true;
                                Dust dust112 = Main.dust[num276];
                                dust112.velocity = (Vector2)(dust112.velocity * 0.2f);
                            }
                            if (this.ai[1] == 1f)
                            {
                                this.ai[1] = 0f;
                                Main.harpNote = this.ai[0];
                                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 0x1a);
                                return;
                            }
                            return;
                        }
                        if (this.aiStyle == 0x16)
                        {
                            if ((this.velocity.X == 0f) && (this.velocity.Y == 0f))
                            {
                                this.alpha = 0xff;
                            }
                            if (this.ai[1] < 0f)
                            {
                                if (this.velocity.X > 0f)
                                {
                                    this.rotation += 0.3f;
                                }
                                else
                                {
                                    this.rotation -= 0.3f;
                                }
                                int num277 = ((int)(this.position.X / 16f)) - 1;
                                int num278 = ((int)((this.position.X + base.width) / 16f)) + 2;
                                int num279 = ((int)(this.position.Y / 16f)) - 1;
                                int num280 = ((int)((this.position.Y + base.height) / 16f)) + 2;
                                if (num277 < 0)
                                {
                                    num277 = 0;
                                }
                                if (num278 > Main.maxTilesX)
                                {
                                    num278 = Main.maxTilesX;
                                }
                                if (num279 < 0)
                                {
                                    num279 = 0;
                                }
                                if (num280 > Main.maxTilesY)
                                {
                                    num280 = Main.maxTilesY;
                                }
                                int num281 = ((int)this.position.X) + 4;
                                int num282 = ((int)this.position.Y) + 4;
                                for (int num283 = num277; num283 < num278; num283++)
                                {
                                    for (int num284 = num279; num284 < num280; num284++)
                                    {
                                        if ((((Main.tile[num283, num284] != null) && Main.tile[num283, num284].active()) && ((Main.tile[num283, num284].type != 0x7f) && Main.tileSolid[Main.tile[num283, num284].type])) && !Main.tileSolidTop[Main.tile[num283, num284].type])
                                        {
                                            Vector2 vector35;
                                            vector35.X = num283 * 0x10;
                                            vector35.Y = num284 * 0x10;
                                            if ((((num281 + 8) > vector35.X) && (num281 < (vector35.X + 16f))) && (((num282 + 8) > vector35.Y) && (num282 < (vector35.Y + 16f))))
                                            {
                                                this.Kill();
                                            }
                                        }
                                    }
                                }
                                int num285 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x43, 0f, 0f, 0, new Color(), 1f);
                                Main.dust[num285].noGravity = true;
                                Dust dust113 = Main.dust[num285];
                                dust113.velocity = (Vector2)(dust113.velocity * 0.3f);
                                return;
                            }
                            if (this.ai[0] >= 0f)
                            {
                                int num291 = ((int)(this.position.X / 16f)) - 1;
                                int num292 = ((int)((this.position.X + base.width) / 16f)) + 2;
                                int num293 = ((int)(this.position.Y / 16f)) - 1;
                                int num294 = ((int)((this.position.Y + base.height) / 16f)) + 2;
                                if (num291 < 0)
                                {
                                    num291 = 0;
                                }
                                if (num292 > Main.maxTilesX)
                                {
                                    num292 = Main.maxTilesX;
                                }
                                if (num293 < 0)
                                {
                                    num293 = 0;
                                }
                                if (num294 > Main.maxTilesY)
                                {
                                    num294 = Main.maxTilesY;
                                }
                                int num295 = ((int)this.position.X) + 4;
                                int num296 = ((int)this.position.Y) + 4;
                                for (int num297 = num291; num297 < num292; num297++)
                                {
                                    for (int num298 = num293; num298 < num294; num298++)
                                    {
                                        if ((((Main.tile[num297, num298] != null) && Main.tile[num297, num298].nactive()) && ((Main.tile[num297, num298].type != 0x7f) && Main.tileSolid[Main.tile[num297, num298].type])) && !Main.tileSolidTop[Main.tile[num297, num298].type])
                                        {
                                            Vector2 vector36;
                                            vector36.X = num297 * 0x10;
                                            vector36.Y = num298 * 0x10;
                                            if ((((num295 + 8) > vector36.X) && (num295 < (vector36.X + 16f))) && (((num296 + 8) > vector36.Y) && (num296 < (vector36.Y + 16f))))
                                            {
                                                this.Kill();
                                            }
                                        }
                                    }
                                }
                                if (base.lavaWet)
                                {
                                    this.Kill();
                                }
                                if (base.active)
                                {
                                    int num299 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x43, 0f, 0f, 0, new Color(), 1f);
                                    Main.dust[num299].noGravity = true;
                                    Dust dust116 = Main.dust[num299];
                                    dust116.velocity = (Vector2)(dust116.velocity * 0.3f);
                                    int num300 = (int)this.ai[0];
                                    int num301 = (int)this.ai[1];
                                    if (WorldGen.SolidTile(num300, num301))
                                    {
                                        float introduced1681 = Math.Abs(this.velocity.X);
                                        if (introduced1681 > Math.Abs(this.velocity.Y))
                                        {
                                            if ((base.Center.Y < ((num301 * 0x10) + 8)) && !WorldGen.SolidTile(num300, num301 - 1))
                                            {
                                                num301--;
                                            }
                                            else if (!WorldGen.SolidTile(num300, num301 + 1))
                                            {
                                                num301++;
                                            }
                                            else if (!WorldGen.SolidTile(num300, num301 - 1))
                                            {
                                                num301--;
                                            }
                                            else if ((base.Center.X < ((num300 * 0x10) + 8)) && !WorldGen.SolidTile(num300 - 1, num301))
                                            {
                                                num300--;
                                            }
                                            else if (!WorldGen.SolidTile(num300 + 1, num301))
                                            {
                                                num300++;
                                            }
                                            else if (!WorldGen.SolidTile(num300 - 1, num301))
                                            {
                                                num300--;
                                            }
                                        }
                                        else if ((base.Center.X < ((num300 * 0x10) + 8)) && !WorldGen.SolidTile(num300 - 1, num301))
                                        {
                                            num300--;
                                        }
                                        else if (!WorldGen.SolidTile(num300 + 1, num301))
                                        {
                                            num300++;
                                        }
                                        else if (!WorldGen.SolidTile(num300 - 1, num301))
                                        {
                                            num300--;
                                        }
                                        else if ((base.Center.Y < ((num301 * 0x10) + 8)) && !WorldGen.SolidTile(num300, num301 - 1))
                                        {
                                            num301--;
                                        }
                                        else if (!WorldGen.SolidTile(num300, num301 + 1))
                                        {
                                            num301++;
                                        }
                                        else if (!WorldGen.SolidTile(num300, num301 - 1))
                                        {
                                            num301--;
                                        }
                                    }
                                    if (this.velocity.X > 0f)
                                    {
                                        this.rotation += 0.3f;
                                    }
                                    else
                                    {
                                        this.rotation -= 0.3f;
                                    }
                                    if (Main.myPlayer == this.owner)
                                    {
                                        int num302 = (int)((this.position.X + (base.width / 2)) / 16f);
                                        int num303 = (int)((this.position.Y + (base.height / 2)) / 16f);
                                        bool flag6 = false;
                                        if ((num302 == num300) && (num303 == num301))
                                        {
                                            flag6 = true;
                                        }
                                        if ((((this.velocity.X <= 0f) && (num302 <= num300)) || ((this.velocity.X >= 0f) && (num302 >= num300))) && (((this.velocity.Y <= 0f) && (num303 <= num301)) || ((this.velocity.Y >= 0f) && (num303 >= num301))))
                                        {
                                            flag6 = true;
                                        }
                                        if (flag6)
                                        {
                                            if (WorldGen.PlaceTile(num300, num301, 0x7f, false, false, this.owner, 0))
                                            {
                                                if (Main.netMode == 1)
                                                {
                                                    NetMessage.SendData(0x11, -1, -1, "", 1, (float)((int)this.ai[0]), (float)((int)this.ai[1]), 127f, 0, 0, 0);
                                                }
                                                this.damage = 0;
                                                this.ai[0] = -1f;
                                                base.velocity = (Vector2)(base.velocity * 0f);
                                                this.alpha = 0xff;
                                                this.position.X = num300 * 0x10;
                                                this.position.Y = num301 * 0x10;
                                                this.netUpdate = true;
                                                return;
                                            }
                                            this.ai[1] = -1f;
                                            return;
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if (this.ai[0] == -1f)
                                {
                                    for (int num286 = 0; num286 < 10; num286++)
                                    {
                                        color5 = new Color();
                                        int num287 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x43, 0f, 0f, 0, color5, 1.1f);
                                        Main.dust[num287].noGravity = true;
                                        Dust dust114 = Main.dust[num287];
                                        dust114.velocity = (Vector2)(dust114.velocity * 1.3f);
                                    }
                                }
                                else if (Main.rand.Next(30) == 0)
                                {
                                    int num288 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x43, 0f, 0f, 100, new Color(), 1f);
                                    Dust dust115 = Main.dust[num288];
                                    dust115.velocity = (Vector2)(dust115.velocity * 0.2f);
                                }
                                int num289 = ((int)this.position.X) / 0x10;
                                int num290 = ((int)this.position.Y) / 0x10;
                                if ((Main.tile[num289, num290] == null) || !Main.tile[num289, num290].active())
                                {
                                    this.Kill();
                                }
                                this.ai[0]--;
                                if (((this.ai[0] <= -900f) && ((Main.myPlayer == this.owner) || (Main.netMode == 2))) && (Main.tile[num289, num290].active() && (Main.tile[num289, num290].type == 0x7f)))
                                {
                                    WorldGen.KillTile(num289, num290, false, false, false);
                                    if (Main.netMode == 1)
                                    {
                                        NetMessage.SendData(0x11, -1, -1, "", 0, (float)num289, (float)num290, 0f, 0, 0, 0);
                                    }
                                    this.Kill();
                                    return;
                                }
                            }
                            return;
                        }
                        if (this.aiStyle == 0x17)
                        {
                            if ((this.type == 0xbc) && (this.ai[0] < 8f))
                            {
                                this.ai[0] = 8f;
                            }
                            if (this.timeLeft > 60)
                            {
                                this.timeLeft = 60;
                            }
                            if (this.ai[0] > 7f)
                            {
                                float num304 = 1f;
                                if (this.ai[0] == 8f)
                                {
                                    num304 = 0.25f;
                                }
                                else if (this.ai[0] == 9f)
                                {
                                    num304 = 0.5f;
                                }
                                else if (this.ai[0] == 10f)
                                {
                                    num304 = 0.75f;
                                }
                                this.ai[0]++;
                                int num305 = 6;
                                if (this.type == 0x65)
                                {
                                    num305 = 0x4b;
                                }
                                if ((num305 == 6) || (Main.rand.Next(2) == 0))
                                {
                                    for (int num306 = 0; num306 < 1; num306++)
                                    {
                                        color5 = new Color();
                                        int num307 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, num305, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, color5, 1f);
                                        if ((Main.rand.Next(3) != 0) || ((num305 == 0x4b) && (Main.rand.Next(3) == 0)))
                                        {
                                            Main.dust[num307].noGravity = true;
                                            Dust dust117 = Main.dust[num307];
                                            dust117.scale *= 3f;
                                            Main.dust[num307].velocity.X *= 2f;
                                            Main.dust[num307].velocity.Y *= 2f;
                                        }
                                        if (this.type == 0xbc)
                                        {
                                            Dust dust118 = Main.dust[num307];
                                            dust118.scale *= 1.25f;
                                        }
                                        else
                                        {
                                            Dust dust119 = Main.dust[num307];
                                            dust119.scale *= 1.5f;
                                        }
                                        Main.dust[num307].velocity.X *= 1.2f;
                                        Main.dust[num307].velocity.Y *= 1.2f;
                                        Dust dust120 = Main.dust[num307];
                                        dust120.scale *= num304;
                                        if (num305 == 0x4b)
                                        {
                                            Dust dust121 = Main.dust[num307];
                                            dust121.velocity += base.velocity;
                                            if (!Main.dust[num307].noGravity)
                                            {
                                                Dust dust122 = Main.dust[num307];
                                                dust122.velocity = (Vector2)(dust122.velocity * 0.5f);
                                            }
                                        }
                                    }
                                }
                            }
                            else
                            {
                                this.ai[0]++;
                            }
                            this.rotation += 0.3f * base.direction;
                            return;
                        }
                        if (this.aiStyle == 0x18)
                        {
                            this.light = this.scale * 0.5f;
                            this.rotation += this.velocity.X * 0.2f;
                            this.ai[1]++;
                            if (this.type != 0x5e)
                            {
                                base.velocity = (Vector2)(base.velocity * 0.96f);
                                if (this.ai[1] > 15f)
                                {
                                    this.scale -= 0.05f;
                                    if (this.scale <= 0.2)
                                    {
                                        this.scale = 0.2f;
                                        this.Kill();
                                        return;
                                    }
                                }
                            }
                            else
                            {
                                if (Main.rand.Next(4) == 0)
                                {
                                    int num308 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 70, 0f, 0f, 0, new Color(), 1f);
                                    Main.dust[num308].noGravity = true;
                                    Dust dust123 = Main.dust[num308];
                                    dust123.velocity = (Vector2)(dust123.velocity * 0.5f);
                                    Dust dust124 = Main.dust[num308];
                                    dust124.scale *= 0.9f;
                                }
                                base.velocity = (Vector2)(base.velocity * 0.985f);
                                if (this.ai[1] > 130f)
                                {
                                    this.scale -= 0.05f;
                                    if (this.scale <= 0.2)
                                    {
                                        this.scale = 0.2f;
                                        this.Kill();
                                        return;
                                    }
                                }
                            }
                            return;
                        }
                        if (this.aiStyle == 0x19)
                        {
                            if (((this.ai[0] != 0f) && (this.velocity.Y <= 0f)) && (this.velocity.X == 0f))
                            {
                                float num309 = 0.5f;
                                int num310 = (int)((this.position.X - 8f) / 16f);
                                int num311 = (int)(this.position.Y / 16f);
                                bool flag7 = false;
                                bool flag8 = false;
                                if (WorldGen.SolidTile(num310, num311) || WorldGen.SolidTile(num310, num311 + 1))
                                {
                                    flag7 = true;
                                }
                                num310 = (int)(((this.position.X + base.width) + 8f) / 16f);
                                if (WorldGen.SolidTile(num310, num311) || WorldGen.SolidTile(num310, num311 + 1))
                                {
                                    flag8 = true;
                                }
                                if (flag7)
                                {
                                    this.velocity.X = num309;
                                }
                                else if (flag8)
                                {
                                    this.velocity.X = -num309;
                                }
                                else
                                {
                                    num310 = (int)(((this.position.X - 8f) - 16f) / 16f);
                                    num311 = (int)(this.position.Y / 16f);
                                    flag7 = false;
                                    flag8 = false;
                                    if (WorldGen.SolidTile(num310, num311) || WorldGen.SolidTile(num310, num311 + 1))
                                    {
                                        flag7 = true;
                                    }
                                    num310 = (int)((((this.position.X + base.width) + 8f) + 16f) / 16f);
                                    if (WorldGen.SolidTile(num310, num311) || WorldGen.SolidTile(num310, num311 + 1))
                                    {
                                        flag8 = true;
                                    }
                                    if (flag7)
                                    {
                                        this.velocity.X = num309;
                                    }
                                    else if (flag8)
                                    {
                                        this.velocity.X = -num309;
                                    }
                                    else
                                    {
                                        num310 = (int)((this.position.X + 4f) / 16f);
                                        num311 = (int)(((this.position.Y + base.height) + 8f) / 16f);
                                        if (WorldGen.SolidTile(num310, num311) || WorldGen.SolidTile(num310, num311 + 1))
                                        {
                                            flag7 = true;
                                        }
                                        if (!flag7)
                                        {
                                            this.velocity.X = num309;
                                        }
                                        else
                                        {
                                            this.velocity.X = -num309;
                                        }
                                    }
                                }
                            }
                            this.rotation += this.velocity.X * 0.06f;
                            this.ai[0] = 1f;
                            if (this.velocity.Y > 16f)
                            {
                                this.velocity.Y = 16f;
                            }
                            if (this.velocity.Y <= 6f)
                            {
                                if ((this.velocity.X > 0f) && (this.velocity.X < 7f))
                                {
                                    this.velocity.X += 0.05f;
                                }
                                if ((this.velocity.X < 0f) && (this.velocity.X > -7f))
                                {
                                    this.velocity.X -= 0.05f;
                                }
                            }
                            this.velocity.Y += 0.3f;
                            return;
                        }
                        if (this.aiStyle == 0x1a)
                        {
                            this.AI_026();
                            return;
                        }
                        if (this.aiStyle != 0x1b)
                        {
                            if (this.aiStyle == 0x1c)
                            {
                                if (this.type == 0xb1)
                                {
                                    for (int num321 = 0; num321 < 3; num321++)
                                    {
                                        color5 = new Color();
                                        int num322 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x89, this.velocity.X, this.velocity.Y, Main.rand.Next(0, 0x65), color5, 1f + (Main.rand.Next(-20, 40) * 0.01f));
                                        Main.dust[num322].noGravity = true;
                                        Dust dust133 = Main.dust[num322];
                                        dust133.velocity = (Vector2)(dust133.velocity * 0.3f);
                                    }
                                }
                                if (this.type == 0x76)
                                {
                                    for (int num323 = 0; num323 < 2; num323++)
                                    {
                                        color5 = new Color();
                                        int num324 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x5c, this.velocity.X, this.velocity.Y, 50, color5, 1.2f);
                                        Main.dust[num324].noGravity = true;
                                        Dust dust134 = Main.dust[num324];
                                        dust134.velocity = (Vector2)(dust134.velocity * 0.3f);
                                    }
                                }
                                if (((this.type == 0x77) || (this.type == 0x80)) || (this.type == 0x167))
                                {
                                    for (int num325 = 0; num325 < 3; num325++)
                                    {
                                        color5 = new Color();
                                        int num326 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x5c, this.velocity.X, this.velocity.Y, 50, color5, 1.2f);
                                        Main.dust[num326].noGravity = true;
                                        Dust dust135 = Main.dust[num326];
                                        dust135.velocity = (Vector2)(dust135.velocity * 0.3f);
                                    }
                                }
                                if (this.type == 0x135)
                                {
                                    for (int num327 = 0; num327 < 3; num327++)
                                    {
                                        color5 = new Color();
                                        int num328 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xb9, this.velocity.X, this.velocity.Y, 50, color5, 1.2f);
                                        Main.dust[num328].noGravity = true;
                                        Dust dust136 = Main.dust[num328];
                                        dust136.velocity = (Vector2)(dust136.velocity * 0.3f);
                                    }
                                }
                                if (this.type == 0x81)
                                {
                                    for (int num329 = 0; num329 < 6; num329++)
                                    {
                                        color5 = new Color();
                                        int num330 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x6a, this.velocity.X, this.velocity.Y, 100, color5, 1f);
                                        Main.dust[num330].noGravity = true;
                                        Dust dust137 = Main.dust[num330];
                                        dust137.velocity = (Vector2)(dust137.velocity * (0.1f + (Main.rand.Next(4) * 0.1f)));
                                        Dust dust138 = Main.dust[num330];
                                        dust138.scale *= 1f + (Main.rand.Next(5) * 0.1f);
                                    }
                                }
                                if (this.ai[1] == 0f)
                                {
                                    this.ai[1] = 1f;
                                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 0x1c);
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x1d)
                            {
                                if (this.type == 0x26b)
                                {
                                    int num332;
                                    int alpha = (int)this.ai[0];
                                    for (int num333 = 0; num333 < 3; num333++)
                                    {
                                        color5 = new Color();
                                        num332 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xfe, this.velocity.X, this.velocity.Y, alpha, color5, 1.2f);
                                        Main.dust[num332].position = (Vector2)((Main.dust[num332].position + base.Center) / 2f);
                                        Main.dust[num332].noGravity = true;
                                        Dust dust139 = Main.dust[num332];
                                        dust139.velocity = (Vector2)(dust139.velocity * 0.5f);
                                    }
                                    for (int num334 = 0; num334 < 2; num334++)
                                    {
                                        color5 = new Color();
                                        num332 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xff, this.velocity.X, this.velocity.Y, alpha, color5, 0.4f);
                                        switch (num334)
                                        {
                                            case 0:
                                                Main.dust[num332].position = (Vector2)((Main.dust[num332].position + (base.Center * 5f)) / 6f);
                                                break;

                                            case 1:
                                                Main.dust[num332].position = (Vector2)((Main.dust[num332].position + ((base.Center + (base.velocity / 2f)) * 5f)) / 6f);
                                                break;
                                        }
                                        Dust dust140 = Main.dust[num332];
                                        dust140.velocity = (Vector2)(dust140.velocity * 0.1f);
                                        Main.dust[num332].noGravity = true;
                                        Main.dust[num332].fadeIn = 1f;
                                    }
                                    return;
                                }
                                if (this.type == 620)
                                {
                                    int num337;
                                    int num335 = (int)this.ai[0];
                                    this.ai[1]++;
                                    float num336 = (60f - this.ai[1]) / 60f;
                                    if (this.ai[1] > 40f)
                                    {
                                        this.Kill();
                                    }
                                    this.velocity.Y += 0.2f;
                                    if (this.velocity.Y > 18f)
                                    {
                                        this.velocity.Y = 18f;
                                    }
                                    this.velocity.X *= 0.98f;
                                    for (int num338 = 0; num338 < 2; num338++)
                                    {
                                        color5 = new Color();
                                        num337 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, num335, this.velocity.X, this.velocity.Y, 50, color5, 1.1f);
                                        Main.dust[num337].position = (Vector2)((Main.dust[num337].position + base.Center) / 2f);
                                        Main.dust[num337].noGravity = true;
                                        Dust dust141 = Main.dust[num337];
                                        dust141.velocity = (Vector2)(dust141.velocity * 0.3f);
                                        Dust dust142 = Main.dust[num337];
                                        dust142.scale *= num336;
                                    }
                                    for (int num339 = 0; num339 < 1; num339++)
                                    {
                                        color5 = new Color();
                                        num337 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, num335, this.velocity.X, this.velocity.Y, 50, color5, 0.6f);
                                        Main.dust[num337].position = (Vector2)((Main.dust[num337].position + (base.Center * 5f)) / 6f);
                                        Dust dust143 = Main.dust[num337];
                                        dust143.velocity = (Vector2)(dust143.velocity * 0.1f);
                                        Main.dust[num337].noGravity = true;
                                        Main.dust[num337].fadeIn = 0.9f * num336;
                                        Dust dust144 = Main.dust[num337];
                                        dust144.scale *= num336;
                                    }
                                    return;
                                }
                                if (this.type == 0x209)
                                {
                                    int num340;
                                    for (int num341 = 0; num341 < 3; num341++)
                                    {
                                        color5 = new Color();
                                        num340 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xfe, this.velocity.X, this.velocity.Y, 50, color5, 1.2f);
                                        Main.dust[num340].position = (Vector2)((Main.dust[num340].position + base.Center) / 2f);
                                        Main.dust[num340].noGravity = true;
                                        Dust dust145 = Main.dust[num340];
                                        dust145.velocity = (Vector2)(dust145.velocity * 0.5f);
                                    }
                                    for (int num342 = 0; num342 < 2; num342++)
                                    {
                                        color5 = new Color();
                                        num340 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xff, this.velocity.X, this.velocity.Y, 50, color5, 0.4f);
                                        switch (num342)
                                        {
                                            case 0:
                                                Main.dust[num340].position = (Vector2)((Main.dust[num340].position + (base.Center * 5f)) / 6f);
                                                break;

                                            case 1:
                                                Main.dust[num340].position = (Vector2)((Main.dust[num340].position + ((base.Center + (base.velocity / 2f)) * 5f)) / 6f);
                                                break;
                                        }
                                        Dust dust146 = Main.dust[num340];
                                        dust146.velocity = (Vector2)(dust146.velocity * 0.1f);
                                        Main.dust[num340].noGravity = true;
                                        Main.dust[num340].fadeIn = 1f;
                                    }
                                    return;
                                }
                                if (this.type == 0x20a)
                                {
                                    int num344;
                                    this.ai[1]++;
                                    float num343 = (60f - this.ai[1]) / 60f;
                                    if (this.ai[1] > 40f)
                                    {
                                        this.Kill();
                                    }
                                    this.velocity.Y += 0.2f;
                                    if (this.velocity.Y > 18f)
                                    {
                                        this.velocity.Y = 18f;
                                    }
                                    this.velocity.X *= 0.98f;
                                    for (int num345 = 0; num345 < 2; num345++)
                                    {
                                        color5 = new Color();
                                        num344 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xfe, this.velocity.X, this.velocity.Y, 50, color5, 1.1f);
                                        Main.dust[num344].position = (Vector2)((Main.dust[num344].position + base.Center) / 2f);
                                        Main.dust[num344].noGravity = true;
                                        Dust dust147 = Main.dust[num344];
                                        dust147.velocity = (Vector2)(dust147.velocity * 0.3f);
                                        Dust dust148 = Main.dust[num344];
                                        dust148.scale *= num343;
                                    }
                                    for (int num346 = 0; num346 < 1; num346++)
                                    {
                                        color5 = new Color();
                                        num344 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xff, this.velocity.X, this.velocity.Y, 50, color5, 0.6f);
                                        Main.dust[num344].position = (Vector2)((Main.dust[num344].position + (base.Center * 5f)) / 6f);
                                        Dust dust149 = Main.dust[num344];
                                        dust149.velocity = (Vector2)(dust149.velocity * 0.1f);
                                        Main.dust[num344].noGravity = true;
                                        Main.dust[num344].fadeIn = 0.9f * num343;
                                        Dust dust150 = Main.dust[num344];
                                        dust150.scale *= num343;
                                    }
                                    return;
                                }
                                int num347 = (this.type - 0x79) + 0x56;
                                if (this.type == 0x255)
                                {
                                    num347 = 0x106;
                                }
                                for (int num348 = 0; num348 < 2; num348++)
                                {
                                    color5 = new Color();
                                    int num349 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, num347, this.velocity.X, this.velocity.Y, 50, color5, 1.2f);
                                    Main.dust[num349].noGravity = true;
                                    Dust dust151 = Main.dust[num349];
                                    dust151.velocity = (Vector2)(dust151.velocity * 0.3f);
                                }
                                if (this.ai[1] == 0f)
                                {
                                    this.ai[1] = 1f;
                                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 30)
                            {
                                base.velocity = (Vector2)(base.velocity * 0.8f);
                                this.rotation += 0.2f;
                                this.alpha += 4;
                                if (this.alpha >= 0xff)
                                {
                                    this.Kill();
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x1f)
                            {
                                int num350 = 110;
                                int conversionType = 0;
                                if (this.type == 0x92)
                                {
                                    num350 = 0x6f;
                                    conversionType = 2;
                                }
                                if (this.type == 0x93)
                                {
                                    num350 = 0x70;
                                    conversionType = 1;
                                }
                                if (this.type == 0x94)
                                {
                                    num350 = 0x71;
                                    conversionType = 3;
                                }
                                if (this.type == 0x95)
                                {
                                    num350 = 0x72;
                                    conversionType = 4;
                                }
                                if (this.owner == Main.myPlayer)
                                {
                                    WorldGen.Convert((((int)this.position.X) + (base.width / 2)) / 0x10, (((int)this.position.Y) + (base.height / 2)) / 0x10, conversionType, 2);
                                }
                                if (this.timeLeft > 0x85)
                                {
                                    this.timeLeft = 0x85;
                                }
                                if (this.ai[0] > 7f)
                                {
                                    float num352 = 1f;
                                    if (this.ai[0] == 8f)
                                    {
                                        num352 = 0.2f;
                                    }
                                    else if (this.ai[0] == 9f)
                                    {
                                        num352 = 0.4f;
                                    }
                                    else if (this.ai[0] == 10f)
                                    {
                                        num352 = 0.6f;
                                    }
                                    else if (this.ai[0] == 11f)
                                    {
                                        num352 = 0.8f;
                                    }
                                    this.ai[0]++;
                                    for (int num353 = 0; num353 < 1; num353++)
                                    {
                                        color5 = new Color();
                                        int num354 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, num350, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, color5, 1f);
                                        Main.dust[num354].noGravity = true;
                                        Dust dust152 = Main.dust[num354];
                                        dust152.scale *= 1.75f;
                                        Main.dust[num354].velocity.X *= 2f;
                                        Main.dust[num354].velocity.Y *= 2f;
                                        Dust dust153 = Main.dust[num354];
                                        dust153.scale *= num352;
                                    }
                                }
                                else
                                {
                                    this.ai[0]++;
                                }
                                this.rotation += 0.3f * base.direction;
                                return;
                            }
                            if (this.aiStyle == 0x20)
                            {
                                this.timeLeft = 10;
                                this.ai[0]++;
                                if (this.ai[0] >= 20f)
                                {
                                    this.ai[0] = 15f;
                                    for (int num355 = 0; num355 < 0xff; num355++)
                                    {
                                        Rectangle rectangle5 = new Rectangle((int)this.position.X, (int)this.position.Y, base.width, base.height);
                                        if (Main.player[num355].active)
                                        {
                                            Rectangle rectangle6 = new Rectangle((int)Main.player[num355].position.X, (int)Main.player[num355].position.Y, Main.player[num355].width, Main.player[num355].height);
                                            if (rectangle5.Intersects(rectangle6))
                                            {
                                                this.ai[0] = 0f;
                                                this.velocity.Y = -4.5f;
                                                if (this.velocity.X > 2f)
                                                {
                                                    this.velocity.X = 2f;
                                                }
                                                if (this.velocity.X < -2f)
                                                {
                                                    this.velocity.X = -2f;
                                                }
                                                this.velocity.X = (this.velocity.X + (Main.player[num355].direction * 1.75f)) / 2f;
                                                this.velocity.X += Main.player[num355].velocity.X * 3f;
                                                this.velocity.Y += Main.player[num355].velocity.Y;
                                                if (this.velocity.X > 6f)
                                                {
                                                    this.velocity.X = 6f;
                                                }
                                                if (this.velocity.X < -6f)
                                                {
                                                    this.velocity.X = -6f;
                                                }
                                                this.netUpdate = true;
                                                this.ai[1]++;
                                            }
                                        }
                                    }
                                }
                                if ((this.velocity.X == 0f) && (this.velocity.Y == 0f))
                                {
                                    this.Kill();
                                }
                                this.rotation += 0.02f * this.velocity.X;
                                if (this.velocity.Y == 0f)
                                {
                                    this.velocity.X *= 0.98f;
                                }
                                else if (base.wet)
                                {
                                    this.velocity.X *= 0.99f;
                                }
                                else
                                {
                                    this.velocity.X *= 0.995f;
                                }
                                if ((this.velocity.X > -0.03) && (this.velocity.X < 0.03))
                                {
                                    this.velocity.X = 0f;
                                }
                                if (base.wet)
                                {
                                    this.ai[1] = 0f;
                                    if (this.velocity.Y > 0f)
                                    {
                                        this.velocity.Y *= 0.95f;
                                    }
                                    this.velocity.Y -= 0.1f;
                                    if (this.velocity.Y < -4f)
                                    {
                                        this.velocity.Y = -4f;
                                    }
                                    if (this.velocity.X == 0f)
                                    {
                                        this.Kill();
                                    }
                                }
                                else
                                {
                                    this.velocity.Y += 0.1f;
                                }
                                if (this.velocity.Y > 10f)
                                {
                                    this.velocity.Y = 10f;
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x21)
                            {
                                if (this.alpha > 0)
                                {
                                    this.alpha -= 50;
                                    if (this.alpha < 0)
                                    {
                                        this.alpha = 0;
                                    }
                                }
                                float num356 = 4f;
                                float num357 = this.ai[0];
                                float num358 = this.ai[1];
                                if ((num357 == 0f) && (num358 == 0f))
                                {
                                    num357 = 1f;
                                }
                                float num359 = (float)Math.Sqrt((double)((num357 * num357) + (num358 * num358)));
                                num359 = num356 / num359;
                                num357 *= num359;
                                num358 *= num359;
                                if (this.alpha < 70)
                                {
                                    int num360 = 0x7f;
                                    if (this.type == 310)
                                    {
                                        num360 = 0xbb;
                                    }
                                    int num361 = Dust.NewDust(new Vector2(this.position.X, this.position.Y - 2f), 6, 6, num360, this.velocity.X, this.velocity.Y, 100, new Color(), 1.6f);
                                    Main.dust[num361].noGravity = true;
                                    Main.dust[num361].position.X -= num357 * 1f;
                                    Main.dust[num361].position.Y -= num358 * 1f;
                                    Main.dust[num361].velocity.X -= num357;
                                    Main.dust[num361].velocity.Y -= num358;
                                }
                                if (this.localAI[0] == 0f)
                                {
                                    this.ai[0] = this.velocity.X;
                                    this.ai[1] = this.velocity.Y;
                                    this.localAI[1]++;
                                    if (this.localAI[1] >= 30f)
                                    {
                                        this.velocity.Y += 0.09f;
                                        this.localAI[1] = 30f;
                                    }
                                }
                                else
                                {
                                    if (!Collision.SolidCollision(base.position, base.width, base.height))
                                    {
                                        this.localAI[0] = 0f;
                                        this.localAI[1] = 30f;
                                    }
                                    this.damage = 0;
                                }
                                if (this.velocity.Y > 16f)
                                {
                                    this.velocity.Y = 16f;
                                }
                                this.rotation = ((float)Math.Atan2((double)this.ai[1], (double)this.ai[0])) + 1.57f;
                                return;
                            }
                            if (this.aiStyle == 0x22)
                            {
                                this.rotation = base.velocity.ToRotation() + 1.570796f;
                                if (this.ai[1] != 1f)
                                {
                                    if ((this.type < 0x19f) || (this.type > 0x1a2))
                                    {
                                        int num366 = Dust.NewDust(new Vector2(this.position.X + 2f, this.position.Y + 20f), 8, 8, 6, this.velocity.X, this.velocity.Y, 100, new Color(), 1.2f);
                                        Main.dust[num366].noGravity = true;
                                        Dust dust161 = Main.dust[num366];
                                        dust161.velocity = (Vector2)(dust161.velocity * 0.2f);
                                        Main.dust[num366].position = Main.dust[num366].position.RotatedBy((double)this.rotation, base.Center);
                                        return;
                                    }
                                    this.ai[0]++;
                                    if (this.ai[0] > 4f)
                                    {
                                        int num365 = Dust.NewDust(new Vector2(this.position.X + 2f, this.position.Y + 20f), 8, 8, 6, this.velocity.X, this.velocity.Y, 100, new Color(), 1.2f);
                                        Main.dust[num365].noGravity = true;
                                        Dust dust160 = Main.dust[num365];
                                        dust160.velocity = (Vector2)(dust160.velocity * 0.2f);
                                        Main.dust[num365].position = Main.dust[num365].position.RotatedBy((double)this.rotation, base.Center);
                                        return;
                                    }
                                }
                                else
                                {
                                    this.ai[0]++;
                                    if (this.ai[0] == 1f)
                                    {
                                        for (int num362 = 0; num362 < 8; num362++)
                                        {
                                            color5 = new Color();
                                            int num363 = Dust.NewDust(base.position, base.width, base.height, 6, 0f, 0f, 100, color5, 1.8f);
                                            Main.dust[num363].noGravity = true;
                                            Dust dust154 = Main.dust[num363];
                                            dust154.velocity = (Vector2)(dust154.velocity * 3f);
                                            Main.dust[num363].fadeIn = 0.5f;
                                            Dust dust155 = Main.dust[num363];
                                            dust155.position += (Vector2)(base.velocity / 2f);
                                            Dust dust156 = Main.dust[num363];
                                            dust156.velocity += (Vector2)((base.velocity / 4f) + (Main.player[this.owner].velocity * 0.1f));
                                        }
                                    }
                                    if (this.ai[0] > 2f)
                                    {
                                        color5 = new Color();
                                        int num364 = Dust.NewDust(new Vector2(this.position.X + 2f, this.position.Y + 20f), 8, 8, 6, this.velocity.X, this.velocity.Y, 100, color5, 1.2f);
                                        Main.dust[num364].noGravity = true;
                                        Dust dust157 = Main.dust[num364];
                                        dust157.velocity = (Vector2)(dust157.velocity * 0.2f);
                                        Main.dust[num364].position = Main.dust[num364].position.RotatedBy((double)this.rotation, base.Center);
                                        color5 = new Color();
                                        num364 = Dust.NewDust(new Vector2(this.position.X + 2f, this.position.Y + 15f), 8, 8, 6, this.velocity.X, this.velocity.Y, 100, color5, 1.2f);
                                        Main.dust[num364].noGravity = true;
                                        Dust dust158 = Main.dust[num364];
                                        dust158.velocity = (Vector2)(dust158.velocity * 0.2f);
                                        Main.dust[num364].position = Main.dust[num364].position.RotatedBy((double)this.rotation, base.Center);
                                        num364 = Dust.NewDust(new Vector2(this.position.X + 2f, this.position.Y + 10f), 8, 8, 6, this.velocity.X, this.velocity.Y, 100, new Color(), 1.2f);
                                        Main.dust[num364].noGravity = true;
                                        Dust dust159 = Main.dust[num364];
                                        dust159.velocity = (Vector2)(dust159.velocity * 0.2f);
                                        Main.dust[num364].position = Main.dust[num364].position.RotatedBy((double)this.rotation, base.Center);
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x23)
                            {
                                this.ai[0]++;
                                if (this.ai[0] > 30f)
                                {
                                    this.velocity.Y += 0.2f;
                                    this.velocity.X *= 0.985f;
                                    if (this.velocity.Y > 14f)
                                    {
                                        this.velocity.Y = 14f;
                                    }
                                }
                                float introduced1727 = Math.Abs(this.velocity.X);
                                this.rotation += ((introduced1727 + Math.Abs(this.velocity.Y)) * base.direction) * 0.02f;
                                if (this.owner == Main.myPlayer)
                                {
                                    Vector2 vector37 = Collision.TileCollision(base.position, base.velocity, base.width, base.height, true, true, 1);
                                    bool flag9 = false;
                                    if (vector37 != base.velocity)
                                    {
                                        flag9 = true;
                                    }
                                    else
                                    {
                                        int num367 = ((int)(base.Center.X + this.velocity.X)) / 0x10;
                                        int num368 = ((int)(base.Center.Y + this.velocity.Y)) / 0x10;
                                        if (((Main.tile[num367, num368] != null) && Main.tile[num367, num368].active()) && Main.tile[num367, num368].bottomSlope())
                                        {
                                            flag9 = true;
                                            this.position.Y = ((num368 * 0x10) + 0x10) + 8;
                                            this.position.X = (num367 * 0x10) + 8;
                                        }
                                    }
                                    if (!flag9)
                                    {
                                        return;
                                    }
                                    int num369 = 0xd5;
                                    if (this.type == 0x1db)
                                    {
                                        num369 = 0x161;
                                    }
                                    if (this.type == 0x1fa)
                                    {
                                        num369 = 0x16e;
                                    }
                                    if (this.type == 0x1f9)
                                    {
                                        num369 = 0x16d;
                                    }
                                    int num370 = (((int)this.position.X) + (base.width / 2)) / 0x10;
                                    int num371 = (((int)this.position.Y) + (base.height / 2)) / 0x10;
                                    base.position += vector37;
                                    int num372 = 10;
                                    if (Main.tile[num370, num371] == null)
                                    {
                                        return;
                                    }
                                    while (((Main.tile[num370, num371] != null) && Main.tile[num370, num371].active()) && Main.tileRope[Main.tile[num370, num371].type])
                                    {
                                        num371++;
                                    }
                                    while (num372 > 0)
                                    {
                                        num372--;
                                        if (Main.tile[num370, num371] == null)
                                        {
                                            break;
                                        }
                                        if (Main.tile[num370, num371].active() && (Main.tileCut[Main.tile[num370, num371].type] || (Main.tile[num370, num371].type == 0xa5)))
                                        {
                                            WorldGen.KillTile(num370, num371, false, false, false);
                                            NetMessage.SendData(0x11, -1, -1, "", 0, (float)num370, (float)num371, 0f, 0, 0, 0);
                                        }
                                        if (!Main.tile[num370, num371].active())
                                        {
                                            WorldGen.PlaceTile(num370, num371, num369, false, false, -1, 0);
                                            NetMessage.SendData(0x11, -1, -1, "", 1, (float)num370, (float)num371, (float)num369, 0, 0, 0);
                                            this.ai[1]++;
                                        }
                                        else
                                        {
                                            num372 = 0;
                                        }
                                        num371++;
                                    }
                                    this.Kill();
                                }
                                return;
                            }
                            if (this.aiStyle == 0x24)
                            {
                                if (((this.type != 0x133) && base.wet) && !base.honeyWet)
                                {
                                    this.Kill();
                                }
                                if (this.alpha > 0)
                                {
                                    this.alpha -= 50;
                                }
                                else
                                {
                                    this.extraUpdates = 0;
                                }
                                if (this.alpha < 0)
                                {
                                    this.alpha = 0;
                                }
                                if (this.type == 0x133)
                                {
                                    this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) - 1.57f;
                                    this.frameCounter++;
                                    if (this.frameCounter >= 6)
                                    {
                                        this.frame++;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame >= 2)
                                    {
                                        this.frame = 0;
                                    }
                                    for (int num373 = 0; num373 < 3; num373++)
                                    {
                                        float num374 = (this.velocity.X / 3f) * num373;
                                        float num375 = (this.velocity.Y / 3f) * num373;
                                        color5 = new Color();
                                        int num376 = Dust.NewDust(base.position, base.width, base.height, 0xb8, 0f, 0f, 0, color5, 1f);
                                        Main.dust[num376].position.X = base.Center.X - num374;
                                        Main.dust[num376].position.Y = base.Center.Y - num375;
                                        Dust dust162 = Main.dust[num376];
                                        dust162.velocity = (Vector2)(dust162.velocity * 0f);
                                        Main.dust[num376].scale = 0.5f;
                                    }
                                }
                                else
                                {
                                    if (this.type == 0x13c)
                                    {
                                        if (this.velocity.X > 0f)
                                        {
                                            this.spriteDirection = -1;
                                        }
                                        else if (this.velocity.X < 0f)
                                        {
                                            this.spriteDirection = 1;
                                        }
                                    }
                                    else if (this.velocity.X > 0f)
                                    {
                                        this.spriteDirection = 1;
                                    }
                                    else if (this.velocity.X < 0f)
                                    {
                                        this.spriteDirection = -1;
                                    }
                                    this.rotation = this.velocity.X * 0.1f;
                                    this.frameCounter++;
                                    if (this.frameCounter >= 3)
                                    {
                                        this.frame++;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame >= 3)
                                    {
                                        this.frame = 0;
                                    }
                                }
                                float num377 = this.position.X;
                                float num378 = this.position.Y;
                                float num379 = 100000f;
                                bool flag10 = false;
                                this.ai[0]++;
                                if (this.ai[0] > 30f)
                                {
                                    this.ai[0] = 30f;
                                    for (int num380 = 0; num380 < 200; num380++)
                                    {
                                        if (Main.npc[num380].CanBeChasedBy(this, false) && (!Main.npc[num380].wet || (this.type == 0x133)))
                                        {
                                            float num381 = Main.npc[num380].position.X + (Main.npc[num380].width / 2);
                                            float num382 = Main.npc[num380].position.Y + (Main.npc[num380].height / 2);
                                            float introduced1729 = Math.Abs((float)((this.position.X + (base.width / 2)) - num381));
                                            float num383 = introduced1729 + Math.Abs((float)((this.position.Y + (base.height / 2)) - num382));
                                            if (((num383 < 800f) && (num383 < num379)) && Collision.CanHit(base.position, base.width, base.height, Main.npc[num380].position, Main.npc[num380].width, Main.npc[num380].height))
                                            {
                                                num379 = num383;
                                                num377 = num381;
                                                num378 = num382;
                                                flag10 = true;
                                            }
                                        }
                                    }
                                }
                                if (!flag10)
                                {
                                    num377 = (this.position.X + (base.width / 2)) + (this.velocity.X * 100f);
                                    num378 = (this.position.Y + (base.height / 2)) + (this.velocity.Y * 100f);
                                }
                                else if (this.type == 0x133)
                                {
                                    this.friendly = true;
                                }
                                float num384 = 6f;
                                float num385 = 0.1f;
                                if (this.type == 0xbd)
                                {
                                    num384 = 7f;
                                    num385 = 0.15f;
                                }
                                if (this.type == 0x133)
                                {
                                    num384 = 9f;
                                    num385 = 0.2f;
                                }
                                if (this.type == 0x13c)
                                {
                                    num384 = 10f;
                                    num385 = 0.25f;
                                }
                                if (this.type == 0x236)
                                {
                                    num384 = 6.8f;
                                    num385 = 0.14f;
                                }
                                Vector2 vector38 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                float num386 = num377 - vector38.X;
                                float num387 = num378 - vector38.Y;
                                float num388 = (float)Math.Sqrt((double)((num386 * num386) + (num387 * num387)));
                                num388 = num384 / num388;
                                num386 *= num388;
                                num387 *= num388;
                                if (this.velocity.X < num386)
                                {
                                    this.velocity.X += num385;
                                    if ((this.velocity.X < 0f) && (num386 > 0f))
                                    {
                                        this.velocity.X += num385 * 2f;
                                    }
                                }
                                else if (this.velocity.X > num386)
                                {
                                    this.velocity.X -= num385;
                                    if ((this.velocity.X > 0f) && (num386 < 0f))
                                    {
                                        this.velocity.X -= num385 * 2f;
                                    }
                                }
                                if (this.velocity.Y >= num387)
                                {
                                    if (this.velocity.Y > num387)
                                    {
                                        this.velocity.Y -= num385;
                                        if ((this.velocity.Y > 0f) && (num387 < 0f))
                                        {
                                            this.velocity.Y -= num385 * 2f;
                                            return;
                                        }
                                    }
                                }
                                else
                                {
                                    this.velocity.Y += num385;
                                    if ((this.velocity.Y < 0f) && (num387 > 0f))
                                    {
                                        this.velocity.Y += num385 * 2f;
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x25)
                            {
                                if (this.ai[1] == 0f)
                                {
                                    this.ai[1] = this.position.Y - 5f;
                                }
                                if (this.ai[0] != 0f)
                                {
                                    if (Collision.SolidCollision(base.position, base.width, base.height) || (this.position.Y < this.ai[1]))
                                    {
                                        this.Kill();
                                        return;
                                    }
                                }
                                else
                                {
                                    if (Collision.SolidCollision(base.position, base.width, base.height))
                                    {
                                        this.velocity.Y *= -1f;
                                        this.ai[0]++;
                                        return;
                                    }
                                    float num389 = this.position.Y - this.ai[1];
                                    if (num389 > 300f)
                                    {
                                        this.velocity.Y *= -1f;
                                        this.ai[0]++;
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x26)
                            {
                                this.ai[0]++;
                                if (this.ai[0] >= 6f)
                                {
                                    this.ai[0] = 0f;
                                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 0x22);
                                    if (Main.myPlayer == this.owner)
                                    {
                                        NewProjectile(this.position.X, this.position.Y, this.velocity.X, this.velocity.Y, 0xbc, this.damage, this.knockBack, this.owner, 0f, 0f);
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x27)
                            {
                                this.alpha -= 50;
                                if (this.alpha < 0)
                                {
                                    this.alpha = 0;
                                }
                                if (Main.player[this.owner].dead)
                                {
                                    this.Kill();
                                    return;
                                }
                                if (this.alpha == 0)
                                {
                                    Main.player[this.owner].itemAnimation = 5;
                                    Main.player[this.owner].itemTime = 5;
                                    if ((this.position.X + (base.width / 2)) > (Main.player[this.owner].position.X + (Main.player[this.owner].width / 2)))
                                    {
                                        Main.player[this.owner].ChangeDir(1);
                                    }
                                    else
                                    {
                                        Main.player[this.owner].ChangeDir(-1);
                                    }
                                }
                                Vector2 vector39 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                float num390 = (Main.player[this.owner].position.X + (Main.player[this.owner].width / 2)) - vector39.X;
                                float num391 = (Main.player[this.owner].position.Y + (Main.player[this.owner].height / 2)) - vector39.Y;
                                float num392 = (float)Math.Sqrt((double)((num390 * num390) + (num391 * num391)));
                                if (!Main.player[this.owner].channel && (this.alpha == 0))
                                {
                                    this.ai[0] = 1f;
                                    this.ai[1] = -1f;
                                }
                                if ((this.ai[1] > 0f) && (num392 > 1500f))
                                {
                                    this.ai[1] = 0f;
                                    this.ai[0] = 1f;
                                }
                                if (this.ai[1] > 0f)
                                {
                                    this.tileCollide = false;
                                    int num393 = ((int)this.ai[1]) - 1;
                                    if (Main.npc[num393].active && (Main.npc[num393].life > 0))
                                    {
                                        float num394 = 16f;
                                        vector39 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                        num390 = (Main.npc[num393].position.X + (Main.npc[num393].width / 2)) - vector39.X;
                                        num391 = (Main.npc[num393].position.Y + (Main.npc[num393].height / 2)) - vector39.Y;
                                        num392 = (float)Math.Sqrt((double)((num390 * num390) + (num391 * num391)));
                                        if (num392 < num394)
                                        {
                                            this.velocity.X = num390;
                                            this.velocity.Y = num391;
                                            if (num392 > (num394 / 2f))
                                            {
                                                if (this.velocity.X < 0f)
                                                {
                                                    this.spriteDirection = -1;
                                                    this.rotation = (float)Math.Atan2((double)-this.velocity.Y, (double)-this.velocity.X);
                                                }
                                                else
                                                {
                                                    this.spriteDirection = 1;
                                                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                                                }
                                            }
                                        }
                                        else
                                        {
                                            num392 = num394 / num392;
                                            num390 *= num392;
                                            num391 *= num392;
                                            this.velocity.X = num390;
                                            this.velocity.Y = num391;
                                            if (this.velocity.X < 0f)
                                            {
                                                this.spriteDirection = -1;
                                                this.rotation = (float)Math.Atan2((double)-this.velocity.Y, (double)-this.velocity.X);
                                            }
                                            else
                                            {
                                                this.spriteDirection = 1;
                                                this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                                            }
                                        }
                                        this.ai[0] = 1f;
                                    }
                                    else
                                    {
                                        this.ai[1] = 0f;
                                        float num395 = this.position.X;
                                        float num396 = this.position.Y;
                                        float num397 = 3000f;
                                        int num398 = -1;
                                        for (int num399 = 0; num399 < 200; num399++)
                                        {
                                            if (Main.npc[num399].CanBeChasedBy(this, false))
                                            {
                                                float num400 = Main.npc[num399].position.X + (Main.npc[num399].width / 2);
                                                float num401 = Main.npc[num399].position.Y + (Main.npc[num399].height / 2);
                                                float introduced1730 = Math.Abs((float)((this.position.X + (base.width / 2)) - num400));
                                                float num402 = introduced1730 + Math.Abs((float)((this.position.Y + (base.height / 2)) - num401));
                                                if ((num402 < num397) && Collision.CanHit(base.position, base.width, base.height, Main.npc[num399].position, Main.npc[num399].width, Main.npc[num399].height))
                                                {
                                                    num397 = num402;
                                                    num395 = num400;
                                                    num396 = num401;
                                                    num398 = num399;
                                                }
                                            }
                                        }
                                        if (num398 >= 0)
                                        {
                                            float num403 = 16f;
                                            vector39 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                            num390 = num395 - vector39.X;
                                            num391 = num396 - vector39.Y;
                                            num392 = (float)Math.Sqrt((double)((num390 * num390) + (num391 * num391)));
                                            num392 = num403 / num392;
                                            num390 *= num392;
                                            num391 *= num392;
                                            this.velocity.X = num390;
                                            this.velocity.Y = num391;
                                            this.ai[0] = 0f;
                                            this.ai[1] = num398 + 1;
                                        }
                                    }
                                }
                                else if (this.ai[0] == 0f)
                                {
                                    if (num392 > 700f)
                                    {
                                        this.ai[0] = 1f;
                                    }
                                    if (this.velocity.X < 0f)
                                    {
                                        this.spriteDirection = -1;
                                        this.rotation = (float)Math.Atan2((double)-this.velocity.Y, (double)-this.velocity.X);
                                    }
                                    else
                                    {
                                        this.spriteDirection = 1;
                                        this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                                    }
                                }
                                else if (this.ai[0] == 1f)
                                {
                                    this.tileCollide = false;
                                    if (this.velocity.X < 0f)
                                    {
                                        this.spriteDirection = 1;
                                        this.rotation = (float)Math.Atan2((double)-this.velocity.Y, (double)-this.velocity.X);
                                    }
                                    else
                                    {
                                        this.spriteDirection = -1;
                                        this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                                    }
                                    if (this.velocity.X < 0f)
                                    {
                                        this.spriteDirection = -1;
                                        this.rotation = (float)Math.Atan2((double)-this.velocity.Y, (double)-this.velocity.X);
                                    }
                                    else
                                    {
                                        this.spriteDirection = 1;
                                        this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                                    }
                                    float num404 = 20f;
                                    if (num392 < 70f)
                                    {
                                        this.Kill();
                                    }
                                    num392 = num404 / num392;
                                    num390 *= num392;
                                    num391 *= num392;
                                    this.velocity.X = num390;
                                    this.velocity.Y = num391;
                                }
                                this.frameCounter++;
                                if (this.frameCounter >= 4)
                                {
                                    this.frame++;
                                    this.frameCounter = 0;
                                }
                                if (this.frame >= 4)
                                {
                                    this.frame = 0;
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 40)
                            {
                                this.localAI[0]++;
                                if (this.localAI[0] > 3f)
                                {
                                    this.localAI[0] = 100f;
                                    this.alpha -= 50;
                                    if (this.alpha < 0)
                                    {
                                        this.alpha = 0;
                                    }
                                }
                                this.frameCounter++;
                                if (this.frameCounter >= 3)
                                {
                                    this.frame++;
                                    this.frameCounter = 0;
                                }
                                if (this.frame >= 5)
                                {
                                    this.frame = 0;
                                }
                                this.velocity.X += this.ai[0];
                                this.velocity.Y += this.ai[1];
                                this.localAI[1]++;
                                if (this.localAI[1] == 50f)
                                {
                                    this.localAI[1] = 51f;
                                    this.ai[0] = Main.rand.Next(-100, 0x65) * 6E-05f;
                                    this.ai[1] = Main.rand.Next(-100, 0x65) * 6E-05f;
                                }
                                float introduced1731 = Math.Abs(this.velocity.X);
                                if ((introduced1731 + Math.Abs(this.velocity.Y)) > 16f)
                                {
                                    this.velocity.X *= 0.95f;
                                    this.velocity.Y *= 0.95f;
                                }
                                float introduced1732 = Math.Abs(this.velocity.X);
                                if ((introduced1732 + Math.Abs(this.velocity.Y)) < 12f)
                                {
                                    this.velocity.X *= 1.05f;
                                    this.velocity.Y *= 1.05f;
                                }
                                this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 3.14f;
                                return;
                            }
                            if (this.aiStyle == 0x29)
                            {
                                if (this.localAI[0] == 0f)
                                {
                                    this.localAI[0] = 1f;
                                    this.frame = Main.rand.Next(3);
                                }
                                this.rotation += this.velocity.X * 0.01f;
                                return;
                            }
                            if (this.aiStyle == 0x2a)
                            {
                                if (!Main.player[this.owner].crystalLeaf)
                                {
                                    this.Kill();
                                    return;
                                }
                                this.position.X = Main.player[this.owner].Center.X - (base.width / 2);
                                this.position.Y = ((Main.player[this.owner].Center.Y - (base.height / 2)) + Main.player[this.owner].gfxOffY) - 60f;
                                if (Main.player[this.owner].gravDir == -1f)
                                {
                                    this.position.Y += 120f;
                                    this.rotation = 3.14f;
                                }
                                else
                                {
                                    this.rotation = 0f;
                                }
                                this.position.X = (int)this.position.X;
                                this.position.Y = (int)this.position.Y;
                                float num405 = (((float)Main.mouseTextColor) / 200f) - 0.35f;
                                num405 *= 0.2f;
                                this.scale = num405 + 0.95f;
                                if (this.owner == Main.myPlayer)
                                {
                                    if (this.ai[0] != 0f)
                                    {
                                        this.ai[0]--;
                                        return;
                                    }
                                    float num406 = this.position.X;
                                    float num407 = this.position.Y;
                                    float num408 = 700f;
                                    bool flag11 = false;
                                    for (int num409 = 0; num409 < 200; num409++)
                                    {
                                        if (Main.npc[num409].CanBeChasedBy(this, true))
                                        {
                                            float num410 = Main.npc[num409].position.X + (Main.npc[num409].width / 2);
                                            float num411 = Main.npc[num409].position.Y + (Main.npc[num409].height / 2);
                                            float introduced1733 = Math.Abs((float)((this.position.X + (base.width / 2)) - num410));
                                            float num412 = introduced1733 + Math.Abs((float)((this.position.Y + (base.height / 2)) - num411));
                                            if ((num412 < num408) && Collision.CanHit(base.position, base.width, base.height, Main.npc[num409].position, Main.npc[num409].width, Main.npc[num409].height))
                                            {
                                                num408 = num412;
                                                num406 = num410;
                                                num407 = num411;
                                                flag11 = true;
                                            }
                                        }
                                    }
                                    if (flag11)
                                    {
                                        float num413 = 12f;
                                        Vector2 vector40 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                        float num414 = num406 - vector40.X;
                                        float num415 = num407 - vector40.Y;
                                        float num416 = (float)Math.Sqrt((double)((num414 * num414) + (num415 * num415)));
                                        num416 = num413 / num416;
                                        num414 *= num416;
                                        num415 *= num416;
                                        NewProjectile(base.Center.X - 4f, base.Center.Y, num414, num415, 0xe3, Player.crystalLeafDamage, (float)Player.crystalLeafKB, this.owner, 0f, 0f);
                                        this.ai[0] = 50f;
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x2b)
                            {
                                if (this.localAI[1] == 0f)
                                {
                                    Main.PlaySound(6, (int)this.position.X, (int)this.position.Y, 1);
                                    this.localAI[1]++;
                                    for (int num417 = 0; num417 < 5; num417++)
                                    {
                                        color5 = new Color();
                                        int num418 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x9d, 0f, 0f, 0, color5, 1f);
                                        Main.dust[num418].noGravity = true;
                                        Dust dust163 = Main.dust[num418];
                                        dust163.velocity = (Vector2)(dust163.velocity * 3f);
                                        Main.dust[num418].scale = 1.5f;
                                    }
                                }
                                this.ai[0] = Main.rand.Next(-100, 0x65) * 0.0025f;
                                this.ai[1] = Main.rand.Next(-100, 0x65) * 0.0025f;
                                if (this.localAI[0] == 0f)
                                {
                                    this.scale += 0.05f;
                                    if (this.scale > 1.2)
                                    {
                                        this.localAI[0] = 1f;
                                    }
                                }
                                else
                                {
                                    this.scale -= 0.05f;
                                    if (this.scale < 0.8)
                                    {
                                        this.localAI[0] = 0f;
                                    }
                                }
                                this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 3.14f;
                                int num419 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x9d, 0f, 0f, 0, new Color(), 1f);
                                Main.dust[num419].noGravity = true;
                                Dust dust164 = Main.dust[num419];
                                dust164.velocity = (Vector2)(dust164.velocity * 0.1f);
                                Main.dust[num419].scale = 1.5f;
                                return;
                            }
                            if (this.aiStyle == 0x2c)
                            {
                                if (this.type == 0xe4)
                                {
                                    base.velocity = (Vector2)(base.velocity * 0.96f);
                                    this.alpha += 4;
                                    if (this.alpha > 0xff)
                                    {
                                        this.Kill();
                                    }
                                }
                                else if (this.type == 0xe5)
                                {
                                    if (this.ai[0] == 0f)
                                    {
                                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                                    }
                                    this.ai[0]++;
                                    if (this.ai[0] > 20f)
                                    {
                                        this.velocity.Y += 0.3f;
                                        this.velocity.X *= 0.98f;
                                    }
                                }
                                this.frameCounter++;
                                if (this.frameCounter > 5)
                                {
                                    this.frame++;
                                    this.frameCounter = 0;
                                }
                                if (this.frame >= Main.projFrames[this.type])
                                {
                                    this.frame = 0;
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x2d)
                            {
                                if ((this.type != 0xed) && (this.type != 0xf3))
                                {
                                    if ((this.type != 0xee) && (this.type != 0xf4))
                                    {
                                        if (this.type == 0xef)
                                        {
                                            this.alpha = 50;
                                            return;
                                        }
                                        if (this.type == 0xf5)
                                        {
                                            this.alpha = 100;
                                            return;
                                        }
                                        if (this.type == 0x108)
                                        {
                                            this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 1.57f;
                                            return;
                                        }
                                    }
                                    else
                                    {
                                        this.frameCounter++;
                                        if (this.frameCounter > 8)
                                        {
                                            this.frameCounter = 0;
                                            this.frame++;
                                            if (this.frame > 5)
                                            {
                                                this.frame = 0;
                                            }
                                        }
                                        this.ai[1]++;
                                        if ((this.type == 0xf4) && (this.ai[1] >= 3600f))
                                        {
                                            this.alpha += 5;
                                            if (this.alpha > 0xff)
                                            {
                                                this.alpha = 0xff;
                                                this.Kill();
                                            }
                                        }
                                        else if ((this.type == 0xee) && (this.ai[1] >= 7200f))
                                        {
                                            this.alpha += 5;
                                            if (this.alpha > 0xff)
                                            {
                                                this.alpha = 0xff;
                                                this.Kill();
                                            }
                                        }
                                        else
                                        {
                                            this.ai[0]++;
                                            if (this.type == 0xf4)
                                            {
                                                if (this.ai[0] > 10f)
                                                {
                                                    this.ai[0] = 0f;
                                                    if (this.owner == Main.myPlayer)
                                                    {
                                                        int num422 = ((int)(this.position.X + 14f)) + Main.rand.Next(base.width - 0x1c);
                                                        int num423 = (int)((this.position.Y + base.height) + 4f);
                                                        NewProjectile((float)num422, (float)num423, 0f, 5f, 0xf5, this.damage, 0f, this.owner, 0f, 0f);
                                                    }
                                                }
                                            }
                                            else if (this.ai[0] > 8f)
                                            {
                                                this.ai[0] = 0f;
                                                if (this.owner == Main.myPlayer)
                                                {
                                                    int num424 = ((int)(this.position.X + 14f)) + Main.rand.Next(base.width - 0x1c);
                                                    int num425 = (int)((this.position.Y + base.height) + 4f);
                                                    NewProjectile((float)num424, (float)num425, 0f, 5f, 0xef, this.damage, 0f, this.owner, 0f, 0f);
                                                }
                                            }
                                        }
                                        this.localAI[0]++;
                                        if (this.localAI[0] >= 10f)
                                        {
                                            this.localAI[0] = 0f;
                                            int num426 = 0;
                                            int num427 = 0;
                                            float num428 = 0f;
                                            int num429 = this.type;
                                            for (int num430 = 0; num430 < 0x3e8; num430++)
                                            {
                                                if ((Main.projectile[num430].active && (Main.projectile[num430].owner == this.owner)) && ((Main.projectile[num430].type == num429) && (Main.projectile[num430].ai[1] < 3600f)))
                                                {
                                                    num426++;
                                                    if (Main.projectile[num430].ai[1] > num428)
                                                    {
                                                        num427 = num430;
                                                        num428 = Main.projectile[num430].ai[1];
                                                    }
                                                }
                                            }
                                            if (this.type != 0xf4)
                                            {
                                                if (num426 > 2)
                                                {
                                                    Main.projectile[num427].netUpdate = true;
                                                    Main.projectile[num427].ai[1] = 36000f;
                                                    return;
                                                }
                                            }
                                            else if (num426 > 1)
                                            {
                                                Main.projectile[num427].netUpdate = true;
                                                Main.projectile[num427].ai[1] = 36000f;
                                                return;
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    float num420 = this.ai[0];
                                    float num421 = this.ai[1];
                                    if ((num420 != 0f) && (num421 != 0f))
                                    {
                                        bool flag12 = false;
                                        bool flag13 = false;
                                        if (((this.velocity.X < 0f) && (base.Center.X < num420)) || ((this.velocity.X > 0f) && (base.Center.X > num420)))
                                        {
                                            flag12 = true;
                                        }
                                        if (((this.velocity.Y < 0f) && (base.Center.Y < num421)) || ((this.velocity.Y > 0f) && (base.Center.Y > num421)))
                                        {
                                            flag13 = true;
                                        }
                                        if (flag12 && flag13)
                                        {
                                            this.Kill();
                                        }
                                    }
                                    this.rotation += this.velocity.X * 0.02f;
                                    this.frameCounter++;
                                    if (this.frameCounter > 4)
                                    {
                                        this.frameCounter = 0;
                                        this.frame++;
                                        if (this.frame > 3)
                                        {
                                            this.frame = 0;
                                            return;
                                        }
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x2e)
                            {
                                int num431 = 0x4b0;
                                if (this.type == 250)
                                {
                                    if (this.owner == Main.myPlayer)
                                    {
                                        this.localAI[0]++;
                                        if (this.localAI[0] > 4f)
                                        {
                                            this.localAI[0] = 3f;
                                            NewProjectile(base.Center.X, base.Center.Y, this.velocity.X * 0.001f, this.velocity.Y * 0.001f, 0xfb, this.damage, this.knockBack, this.owner, 0f, 0f);
                                        }
                                        if (this.timeLeft > num431)
                                        {
                                            this.timeLeft = num431;
                                        }
                                    }
                                    float num432 = 1f;
                                    if (this.velocity.Y < 0f)
                                    {
                                        num432 -= this.velocity.Y / 3f;
                                    }
                                    this.ai[0] += num432;
                                    if (this.ai[0] > 30f)
                                    {
                                        this.velocity.Y += 0.5f;
                                        if (this.velocity.Y > 0f)
                                        {
                                            this.velocity.X *= 0.95f;
                                        }
                                        else
                                        {
                                            this.velocity.X *= 1.05f;
                                        }
                                    }
                                    float num433 = this.velocity.X;
                                    float num434 = this.velocity.Y;
                                    float num435 = (float)Math.Sqrt((double)((num433 * num433) + (num434 * num434)));
                                    num435 = (15.95f * this.scale) / num435;
                                    num433 *= num435;
                                    num434 *= num435;
                                    this.velocity.X = num433;
                                    this.velocity.Y = num434;
                                    this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) - 1.57f;
                                    return;
                                }
                                if (this.localAI[0] == 0f)
                                {
                                    if (this.velocity.X > 0f)
                                    {
                                        this.spriteDirection = -1;
                                        this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) - 1.57f;
                                    }
                                    else
                                    {
                                        this.spriteDirection = 1;
                                        this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) - 1.57f;
                                    }
                                    this.localAI[0] = 1f;
                                    this.timeLeft = num431;
                                }
                                this.velocity.X *= 0.98f;
                                this.velocity.Y *= 0.98f;
                                if (this.rotation == 0f)
                                {
                                    this.alpha = 0xff;
                                    return;
                                }
                                if (this.timeLeft < 10)
                                {
                                    this.alpha = 0xff - ((int)((255f * this.timeLeft) / 10f));
                                    return;
                                }
                                if (this.timeLeft > (num431 - 10))
                                {
                                    int num436 = num431 - this.timeLeft;
                                    this.alpha = 0xff - ((int)((255f * num436) / 10f));
                                    return;
                                }
                                this.alpha = 0;
                                return;
                            }
                            if (this.aiStyle == 0x2f)
                            {
                                if (this.ai[0] == 0f)
                                {
                                    this.ai[0] = this.velocity.X;
                                    this.ai[1] = this.velocity.Y;
                                }
                                if (this.velocity.X > 0f)
                                {
                                    float introduced1736 = Math.Abs(this.velocity.Y);
                                    this.rotation += (introduced1736 + Math.Abs(this.velocity.X)) * 0.001f;
                                }
                                else
                                {
                                    float introduced1737 = Math.Abs(this.velocity.Y);
                                    this.rotation -= (introduced1737 + Math.Abs(this.velocity.X)) * 0.001f;
                                }
                                this.frameCounter++;
                                if (this.frameCounter > 6)
                                {
                                    this.frameCounter = 0;
                                    this.frame++;
                                    if (this.frame > 4)
                                    {
                                        this.frame = 0;
                                    }
                                }
                                if (Math.Sqrt((double)((this.velocity.X * this.velocity.X) + (this.velocity.Y * this.velocity.Y))) > 2.0)
                                {
                                    base.velocity = (Vector2)(base.velocity * 0.98f);
                                }
                                for (int num437 = 0; num437 < 0x3e8; num437++)
                                {
                                    if ((((num437 != base.whoAmI) && Main.projectile[num437].active) && ((Main.projectile[num437].owner == this.owner) && (Main.projectile[num437].type == this.type))) && ((this.timeLeft > Main.projectile[num437].timeLeft) && (Main.projectile[num437].timeLeft > 30)))
                                    {
                                        Main.projectile[num437].timeLeft = 30;
                                    }
                                }
                                int[] numArray = new int[20];
                                int num438 = 0;
                                float num439 = 300f;
                                bool flag14 = false;
                                float num440 = 0f;
                                float num441 = 0f;
                                for (int num442 = 0; num442 < 200; num442++)
                                {
                                    if (Main.npc[num442].CanBeChasedBy(this, false))
                                    {
                                        float num443 = Main.npc[num442].position.X + (Main.npc[num442].width / 2);
                                        float num444 = Main.npc[num442].position.Y + (Main.npc[num442].height / 2);
                                        float introduced1738 = Math.Abs((float)((this.position.X + (base.width / 2)) - num443));
                                        float num445 = introduced1738 + Math.Abs((float)((this.position.Y + (base.height / 2)) - num444));
                                        if ((num445 < num439) && Collision.CanHit(base.Center, 1, 1, Main.npc[num442].Center, 1, 1))
                                        {
                                            if (num438 < 20)
                                            {
                                                numArray[num438] = num442;
                                                num438++;
                                                num440 = num443;
                                                num441 = num444;
                                            }
                                            flag14 = true;
                                        }
                                    }
                                }
                                if (this.timeLeft < 30)
                                {
                                    flag14 = false;
                                }
                                if (flag14)
                                {
                                    int num446 = Main.rand.Next(num438);
                                    num446 = numArray[num446];
                                    num440 = Main.npc[num446].position.X + (Main.npc[num446].width / 2);
                                    num441 = Main.npc[num446].position.Y + (Main.npc[num446].height / 2);
                                    this.localAI[0]++;
                                    if (this.localAI[0] > 8f)
                                    {
                                        this.localAI[0] = 0f;
                                        float num447 = 6f;
                                        Vector2 vector41 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                        vector41 += (Vector2)(base.velocity * 4f);
                                        float num448 = num440 - vector41.X;
                                        float num449 = num441 - vector41.Y;
                                        float num450 = (float)Math.Sqrt((double)((num448 * num448) + (num449 * num449)));
                                        num450 = num447 / num450;
                                        num448 *= num450;
                                        num449 *= num450;
                                        NewProjectile(vector41.X, vector41.Y, num448, num449, 0xff, this.damage, this.knockBack, this.owner, 0f, 0f);
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x30)
                            {
                                if (this.type == 0xff)
                                {
                                    for (int num451 = 0; num451 < 4; num451++)
                                    {
                                        Vector2 position = base.position - ((Vector2)(base.velocity * (num451 * 0.25f)));
                                        this.alpha = 0xff;
                                        color5 = new Color();
                                        int num452 = Dust.NewDust(position, 1, 1, 160, 0f, 0f, 0, color5, 1f);
                                        Main.dust[num452].position = position;
                                        Main.dust[num452].position.X += base.width / 2;
                                        Main.dust[num452].position.Y += base.height / 2;
                                        Main.dust[num452].scale = Main.rand.Next(70, 110) * 0.013f;
                                        Dust dust165 = Main.dust[num452];
                                        dust165.velocity = (Vector2)(dust165.velocity * 0.2f);
                                    }
                                    return;
                                }
                                if (this.type == 0x1b1)
                                {
                                    for (int num453 = 0; num453 < 2; num453++)
                                    {
                                        Vector2 vector43 = base.position - ((Vector2)(base.velocity * (num453 * 0.25f)));
                                        this.alpha = 0xff;
                                        color5 = new Color();
                                        int num454 = Dust.NewDust(vector43, 1, 1, 160, 0f, 0f, 0, color5, 1f);
                                        Main.dust[num454].position = vector43;
                                        Main.dust[num454].position.X += base.width / 2;
                                        Main.dust[num454].position.Y += base.height / 2;
                                        if (Main.rand.Next(2) == 0)
                                        {
                                            Main.dust[num454].color = Color.LimeGreen;
                                        }
                                        else
                                        {
                                            Main.dust[num454].color = Color.CornflowerBlue;
                                        }
                                        Main.dust[num454].scale = Main.rand.Next(70, 110) * 0.013f;
                                        Dust dust166 = Main.dust[num454];
                                        dust166.velocity = (Vector2)(dust166.velocity * 0.2f);
                                    }
                                    return;
                                }
                                if (this.type != 290)
                                {
                                    if (this.type != 0x126)
                                    {
                                        this.localAI[0]++;
                                        if (this.localAI[0] > 3f)
                                        {
                                            for (int num459 = 0; num459 < 4; num459++)
                                            {
                                                Vector2 vector46 = base.position - ((Vector2)(base.velocity * (num459 * 0.25f)));
                                                this.alpha = 0xff;
                                                color5 = new Color();
                                                int num460 = Dust.NewDust(vector46, 1, 1, 0xa2, 0f, 0f, 0, color5, 1f);
                                                Main.dust[num460].position = vector46;
                                                Main.dust[num460].position.X += base.width / 2;
                                                Main.dust[num460].position.Y += base.height / 2;
                                                Main.dust[num460].scale = Main.rand.Next(70, 110) * 0.013f;
                                                Dust dust169 = Main.dust[num460];
                                                dust169.velocity = (Vector2)(dust169.velocity * 0.2f);
                                            }
                                            return;
                                        }
                                    }
                                    else
                                    {
                                        this.localAI[0]++;
                                        if (this.localAI[0] > 9f)
                                        {
                                            for (int num457 = 0; num457 < 4; num457++)
                                            {
                                                Vector2 vector45 = base.position - ((Vector2)(base.velocity * (num457 * 0.25f)));
                                                this.alpha = 0xff;
                                                color5 = new Color();
                                                int num458 = Dust.NewDust(vector45, 1, 1, 0xad, 0f, 0f, 0, color5, 1f);
                                                Main.dust[num458].position = vector45;
                                                Main.dust[num458].scale = Main.rand.Next(70, 110) * 0.013f;
                                                Dust dust168 = Main.dust[num458];
                                                dust168.velocity = (Vector2)(dust168.velocity * 0.2f);
                                            }
                                            return;
                                        }
                                    }
                                }
                                else
                                {
                                    if (this.localAI[0] == 0f)
                                    {
                                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                                    }
                                    this.localAI[0]++;
                                    if (this.localAI[0] > 3f)
                                    {
                                        for (int num455 = 0; num455 < 3; num455++)
                                        {
                                            Vector2 vector44 = base.position - ((Vector2)(base.velocity * (num455 * 0.3334f)));
                                            this.alpha = 0xff;
                                            color5 = new Color();
                                            int num456 = Dust.NewDust(vector44, 1, 1, 0xad, 0f, 0f, 0, color5, 1f);
                                            Main.dust[num456].position = vector44;
                                            Main.dust[num456].scale = Main.rand.Next(70, 110) * 0.013f;
                                            Dust dust167 = Main.dust[num456];
                                            dust167.velocity = (Vector2)(dust167.velocity * 0.2f);
                                        }
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x31)
                            {
                                if (this.ai[1] == 0f)
                                {
                                    this.ai[1] = 1f;
                                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                                }
                                if (this.ai[1] != 1f)
                                {
                                    if (this.ai[1] == 2f)
                                    {
                                        this.rotation = 0f;
                                        this.velocity.X *= 0.95f;
                                        this.velocity.Y += 0.2f;
                                        return;
                                    }
                                }
                                else
                                {
                                    if (this.velocity.X > 0f)
                                    {
                                        base.direction = 1;
                                    }
                                    else if (this.velocity.X < 0f)
                                    {
                                        base.direction = -1;
                                    }
                                    this.spriteDirection = base.direction;
                                    this.ai[0]++;
                                    this.rotation += (this.velocity.X * 0.05f) + (base.direction * 0.05f);
                                    if (this.ai[0] >= 18f)
                                    {
                                        this.velocity.Y += 0.28f;
                                        this.velocity.X *= 0.99f;
                                    }
                                    if (this.velocity.Y > 15.9)
                                    {
                                        this.velocity.Y = 15.9f;
                                    }
                                    if (this.ai[0] > 2f)
                                    {
                                        this.alpha = 0;
                                        if (this.ai[0] == 3f)
                                        {
                                            for (int num461 = 0; num461 < 10; num461++)
                                            {
                                                color5 = new Color();
                                                int num462 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x1f, 0f, 0f, 100, color5, 1.5f);
                                                Dust dust170 = Main.dust[num462];
                                                dust170.velocity = (Vector2)(dust170.velocity * 0.5f);
                                                Dust dust171 = Main.dust[num462];
                                                dust171.velocity += (Vector2)(base.velocity * 0.1f);
                                            }
                                            for (int num463 = 0; num463 < 5; num463++)
                                            {
                                                color5 = new Color();
                                                int num464 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, 0f, 0f, 100, color5, 2f);
                                                Main.dust[num464].noGravity = true;
                                                Dust dust172 = Main.dust[num464];
                                                dust172.velocity = (Vector2)(dust172.velocity * 3f);
                                                Dust dust173 = Main.dust[num464];
                                                dust173.velocity += (Vector2)(base.velocity * 0.2f);
                                                color5 = new Color();
                                                num464 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, 0f, 0f, 100, color5, 1f);
                                                Dust dust174 = Main.dust[num464];
                                                dust174.velocity = (Vector2)(dust174.velocity * 2f);
                                                Dust dust175 = Main.dust[num464];
                                                dust175.velocity += (Vector2)(base.velocity * 0.3f);
                                            }
                                            for (int num466 = 0; num466 < 1; num466++)
                                            {
                                                vector240 = new Vector2();
                                                int num465 = Gore.NewGore(new Vector2(this.position.X - 10f, this.position.Y - 10f), vector240, Main.rand.Next(0x3d, 0x40), 1f);
                                                Gore gore12 = Main.gore[num465];
                                                gore12.position += (Vector2)(base.velocity * 1.25f);
                                                Main.gore[num465].scale = 1.5f;
                                                Gore gore13 = Main.gore[num465];
                                                gore13.velocity += (Vector2)(base.velocity * 0.5f);
                                                Gore gore14 = Main.gore[num465];
                                                gore14.velocity = (Vector2)(gore14.velocity * 0.02f);
                                            }
                                            return;
                                        }
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 50)
                            {
                                if (this.type == 0x123)
                                {
                                    if (this.localAI[0] == 0f)
                                    {
                                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 20);
                                        this.localAI[0]++;
                                    }
                                    bool flag15 = false;
                                    bool flag16 = false;
                                    if ((this.velocity.X < 0f) && (this.position.X < this.ai[0]))
                                    {
                                        flag15 = true;
                                    }
                                    if ((this.velocity.X > 0f) && (this.position.X > this.ai[0]))
                                    {
                                        flag15 = true;
                                    }
                                    if ((this.velocity.Y < 0f) && (this.position.Y < this.ai[1]))
                                    {
                                        flag16 = true;
                                    }
                                    if ((this.velocity.Y > 0f) && (this.position.Y > this.ai[1]))
                                    {
                                        flag16 = true;
                                    }
                                    if (flag15 && flag16)
                                    {
                                        this.Kill();
                                    }
                                    for (int num467 = 0; num467 < 10; num467++)
                                    {
                                        color5 = new Color();
                                        int num468 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xae, 0f, 0f, 100, color5, 1.2f);
                                        Main.dust[num468].noGravity = true;
                                        Dust dust176 = Main.dust[num468];
                                        dust176.velocity = (Vector2)(dust176.velocity * 0.5f);
                                        Dust dust177 = Main.dust[num468];
                                        dust177.velocity += (Vector2)(base.velocity * 0.1f);
                                    }
                                    return;
                                }
                                if (this.type == 0x127)
                                {
                                    for (int num469 = 0; num469 < 8; num469++)
                                    {
                                        color5 = new Color();
                                        int num470 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xae, 0f, 0f, 100, color5, 1.2f);
                                        Main.dust[num470].noGravity = true;
                                        Dust dust178 = Main.dust[num470];
                                        dust178.velocity = (Vector2)(dust178.velocity * 0.5f);
                                        Dust dust179 = Main.dust[num470];
                                        dust179.velocity += (Vector2)(base.velocity * 0.1f);
                                    }
                                    return;
                                }
                                if (this.localAI[0] == 0f)
                                {
                                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 0x4a);
                                    this.localAI[0]++;
                                }
                                this.ai[0]++;
                                if (this.type == 0x128)
                                {
                                    this.ai[0] += 3f;
                                }
                                float num471 = 25f;
                                if (this.ai[0] > 180f)
                                {
                                    num471 -= (this.ai[0] - 180f) / 2f;
                                }
                                if (num471 <= 0f)
                                {
                                    num471 = 0f;
                                    this.Kill();
                                }
                                if (this.type == 0x128)
                                {
                                    num471 *= 0.7f;
                                }
                                for (int num472 = 0; num472 < num471; num472++)
                                {
                                    float num473 = Main.rand.Next(-10, 11);
                                    float num474 = Main.rand.Next(-10, 11);
                                    float num475 = Main.rand.Next(3, 9);
                                    float num476 = (float)Math.Sqrt((double)((num473 * num473) + (num474 * num474)));
                                    num476 = num475 / num476;
                                    num473 *= num476;
                                    num474 *= num476;
                                    color5 = new Color();
                                    int num477 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xae, 0f, 0f, 100, color5, 1.5f);
                                    Main.dust[num477].noGravity = true;
                                    Main.dust[num477].position.X = base.Center.X;
                                    Main.dust[num477].position.Y = base.Center.Y;
                                    Main.dust[num477].position.X += Main.rand.Next(-10, 11);
                                    Main.dust[num477].position.Y += Main.rand.Next(-10, 11);
                                    Main.dust[num477].velocity.X = num473;
                                    Main.dust[num477].velocity.Y = num474;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x33)
                            {
                                if (this.type == 0x129)
                                {
                                    this.localAI[0]++;
                                    if (this.localAI[0] > 4f)
                                    {
                                        for (int num478 = 0; num478 < 5; num478++)
                                        {
                                            color5 = new Color();
                                            int num479 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xaf, 0f, 0f, 100, color5, 2f);
                                            Main.dust[num479].noGravity = true;
                                            Dust dust180 = Main.dust[num479];
                                            dust180.velocity = (Vector2)(dust180.velocity * 0f);
                                        }
                                    }
                                }
                                else
                                {
                                    if (this.localAI[0] == 0f)
                                    {
                                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                                        this.localAI[0]++;
                                    }
                                    for (int num480 = 0; num480 < 9; num480++)
                                    {
                                        color5 = new Color();
                                        int num481 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xaf, 0f, 0f, 100, color5, 1.3f);
                                        Main.dust[num481].noGravity = true;
                                        Dust dust181 = Main.dust[num481];
                                        dust181.velocity = (Vector2)(dust181.velocity * 0f);
                                    }
                                }
                                float num482 = base.Center.X;
                                float num483 = base.Center.Y;
                                float num484 = 400f;
                                bool flag17 = false;
                                if (this.type == 0x129)
                                {
                                    for (int num485 = 0; num485 < 200; num485++)
                                    {
                                        if (Main.npc[num485].CanBeChasedBy(this, false) && Collision.CanHit(base.Center, 1, 1, Main.npc[num485].Center, 1, 1))
                                        {
                                            float num486 = Main.npc[num485].position.X + (Main.npc[num485].width / 2);
                                            float num487 = Main.npc[num485].position.Y + (Main.npc[num485].height / 2);
                                            float introduced1759 = Math.Abs((float)((this.position.X + (base.width / 2)) - num486));
                                            float num488 = introduced1759 + Math.Abs((float)((this.position.Y + (base.height / 2)) - num487));
                                            if (num488 < num484)
                                            {
                                                num484 = num488;
                                                num482 = num486;
                                                num483 = num487;
                                                flag17 = true;
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    num484 = 200f;
                                    for (int num489 = 0; num489 < 0xff; num489++)
                                    {
                                        if (Main.player[num489].active && !Main.player[num489].dead)
                                        {
                                            float num490 = Main.player[num489].position.X + (Main.player[num489].width / 2);
                                            float num491 = Main.player[num489].position.Y + (Main.player[num489].height / 2);
                                            float introduced1760 = Math.Abs((float)((this.position.X + (base.width / 2)) - num490));
                                            float num492 = introduced1760 + Math.Abs((float)((this.position.Y + (base.height / 2)) - num491));
                                            if (num492 < num484)
                                            {
                                                num484 = num492;
                                                num482 = num490;
                                                num483 = num491;
                                                flag17 = true;
                                            }
                                        }
                                    }
                                }
                                if (flag17)
                                {
                                    float num493 = 3f;
                                    if (this.type == 0x129)
                                    {
                                        num493 = 6f;
                                    }
                                    Vector2 vector47 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                    float num494 = num482 - vector47.X;
                                    float num495 = num483 - vector47.Y;
                                    float num496 = (float)Math.Sqrt((double)((num494 * num494) + (num495 * num495)));
                                    num496 = num493 / num496;
                                    num494 *= num496;
                                    num495 *= num496;
                                    if (this.type == 0x129)
                                    {
                                        this.velocity.X = ((this.velocity.X * 20f) + num494) / 21f;
                                        this.velocity.Y = ((this.velocity.Y * 20f) + num495) / 21f;
                                        return;
                                    }
                                    this.velocity.X = ((this.velocity.X * 100f) + num494) / 101f;
                                    this.velocity.Y = ((this.velocity.Y * 100f) + num495) / 101f;
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x34)
                            {
                                int num497 = (int)this.ai[0];
                                float num498 = 4f;
                                Vector2 vector48 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                float num499 = Main.player[num497].Center.X - vector48.X;
                                float num500 = Main.player[num497].Center.Y - vector48.Y;
                                float num501 = (float)Math.Sqrt((double)((num499 * num499) + (num500 * num500)));
                                if ((((num501 < 50f) && (this.position.X < (Main.player[num497].position.X + Main.player[num497].width))) && (((this.position.X + base.width) > Main.player[num497].position.X) && (this.position.Y < (Main.player[num497].position.Y + Main.player[num497].height)))) && ((this.position.Y + base.height) > Main.player[num497].position.Y))
                                {
                                    if ((this.owner == Main.myPlayer) && !Main.player[Main.myPlayer].moonLeech)
                                    {
                                        int healAmount = (int)this.ai[1];
                                        Main.player[num497].HealEffect(healAmount, false);
                                        Player player12 = Main.player[num497];
                                        player12.statLife += healAmount;
                                        if (Main.player[num497].statLife > Main.player[num497].statLifeMax2)
                                        {
                                            Main.player[num497].statLife = Main.player[num497].statLifeMax2;
                                        }
                                        NetMessage.SendData(0x42, -1, -1, "", num497, (float)healAmount, 0f, 0f, 0, 0, 0);
                                    }
                                    this.Kill();
                                }
                                num501 = num498 / num501;
                                num499 *= num501;
                                num500 *= num501;
                                this.velocity.X = ((this.velocity.X * 15f) + num499) / 16f;
                                this.velocity.Y = ((this.velocity.Y * 15f) + num500) / 16f;
                                if (this.type == 0x131)
                                {
                                    for (int num503 = 0; num503 < 3; num503++)
                                    {
                                        float num504 = (this.velocity.X * 0.334f) * num503;
                                        float num505 = -(this.velocity.Y * 0.334f) * num503;
                                        color5 = new Color();
                                        int num506 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xb7, 0f, 0f, 100, color5, 1.1f);
                                        Main.dust[num506].noGravity = true;
                                        Dust dust182 = Main.dust[num506];
                                        dust182.velocity = (Vector2)(dust182.velocity * 0f);
                                        Main.dust[num506].position.X -= num504;
                                        Main.dust[num506].position.Y -= num505;
                                    }
                                    return;
                                }
                                for (int num507 = 0; num507 < 5; num507++)
                                {
                                    float num508 = (this.velocity.X * 0.2f) * num507;
                                    float num509 = -(this.velocity.Y * 0.2f) * num507;
                                    color5 = new Color();
                                    int num510 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xaf, 0f, 0f, 100, color5, 1.3f);
                                    Main.dust[num510].noGravity = true;
                                    Dust dust183 = Main.dust[num510];
                                    dust183.velocity = (Vector2)(dust183.velocity * 0f);
                                    Main.dust[num510].position.X -= num508;
                                    Main.dust[num510].position.Y -= num509;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x35)
                            {
                                if (this.localAI[0] == 0f)
                                {
                                    this.localAI[1] = 1f;
                                    this.localAI[0] = 1f;
                                    this.ai[0] = 120f;
                                    int num511 = 80;
                                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 0x2e);
                                    if (this.type == 0x134)
                                    {
                                        for (int num512 = 0; num512 < num511; num512++)
                                        {
                                            color5 = new Color();
                                            int num513 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 16f), base.width, base.height - 0x10, 0xb9, 0f, 0f, 0, color5, 1f);
                                            Dust dust184 = Main.dust[num513];
                                            dust184.velocity = (Vector2)(dust184.velocity * 2f);
                                            Main.dust[num513].noGravity = true;
                                            Dust dust185 = Main.dust[num513];
                                            dust185.scale *= 1.15f;
                                        }
                                    }
                                    if (this.type == 0x179)
                                    {
                                        this.frame = 4;
                                        num511 = 40;
                                        for (int num514 = 0; num514 < num511; num514++)
                                        {
                                            color5 = new Color();
                                            int num515 = Dust.NewDust(base.position + ((Vector2)(Vector2.UnitY * 16f)), base.width, base.height - 0x10, 0xab, 0f, 0f, 100, color5, 1f);
                                            Main.dust[num515].scale = Main.rand.Next(1, 10) * 0.1f;
                                            Main.dust[num515].noGravity = true;
                                            Main.dust[num515].fadeIn = 1.5f;
                                            Dust dust186 = Main.dust[num515];
                                            dust186.velocity = (Vector2)(dust186.velocity * 0.75f);
                                        }
                                    }
                                }
                                this.velocity.X = 0f;
                                this.velocity.Y += 0.2f;
                                if (this.velocity.Y > 16f)
                                {
                                    this.velocity.Y = 16f;
                                }
                                bool flag18 = false;
                                float num516 = base.Center.X;
                                float num517 = base.Center.Y;
                                float num518 = 1000f;
                                for (int num519 = 0; num519 < 200; num519++)
                                {
                                    if (Main.npc[num519].CanBeChasedBy(this, false))
                                    {
                                        float num520 = Main.npc[num519].position.X + (Main.npc[num519].width / 2);
                                        float num521 = Main.npc[num519].position.Y + (Main.npc[num519].height / 2);
                                        float introduced1767 = Math.Abs((float)((this.position.X + (base.width / 2)) - num520));
                                        float num522 = introduced1767 + Math.Abs((float)((this.position.Y + (base.height / 2)) - num521));
                                        if ((num522 < num518) && Collision.CanHit(base.position, base.width, base.height, Main.npc[num519].position, Main.npc[num519].width, Main.npc[num519].height))
                                        {
                                            num518 = num522;
                                            num516 = num520;
                                            num517 = num521;
                                            flag18 = true;
                                        }
                                    }
                                }
                                if (!flag18)
                                {
                                    if ((this.ai[0] <= 60f) && (((this.frame == 1) || (this.frame == 3)) || (((this.frame == 5) || (this.frame == 7)) || (this.frame == 9))))
                                    {
                                        this.frame--;
                                    }
                                }
                                else
                                {
                                    float num523 = num516;
                                    float num524 = num517;
                                    num516 -= base.Center.X;
                                    num517 -= base.Center.Y;
                                    int num525 = 0;
                                    if (num516 < 0f)
                                    {
                                        this.spriteDirection = -1;
                                    }
                                    else
                                    {
                                        this.spriteDirection = 1;
                                    }
                                    if (num517 > 0f)
                                    {
                                        num525 = 0;
                                    }
                                    else if (Math.Abs(num517) > (Math.Abs(num516) * 3f))
                                    {
                                        num525 = 4;
                                    }
                                    else if (Math.Abs(num517) > (Math.Abs(num516) * 2f))
                                    {
                                        num525 = 3;
                                    }
                                    else if (Math.Abs(num516) > (Math.Abs(num517) * 3f))
                                    {
                                        num525 = 0;
                                    }
                                    else if (Math.Abs(num516) > (Math.Abs(num517) * 2f))
                                    {
                                        num525 = 1;
                                    }
                                    else
                                    {
                                        num525 = 2;
                                    }
                                    if (this.type == 0x134)
                                    {
                                        this.frame = num525 * 2;
                                    }
                                    else if (this.type == 0x179)
                                    {
                                        this.frame = num525;
                                    }
                                    if (((this.ai[0] > 40f) && (this.localAI[1] == 0f)) && (this.type == 0x134))
                                    {
                                        this.frame++;
                                    }
                                    if (this.ai[0] <= 0f)
                                    {
                                        this.localAI[1] = 0f;
                                        this.ai[0] = 60f;
                                        if (Main.myPlayer == this.owner)
                                        {
                                            float num526 = 6f;
                                            int num527 = 0x135;
                                            if (this.type == 0x179)
                                            {
                                                num527 = 0x17a;
                                                num526 = 9f;
                                            }
                                            Vector2 vector49 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                            switch (num525)
                                            {
                                                case 0:
                                                    vector49.Y += 12f;
                                                    vector49.X += 0x18 * this.spriteDirection;
                                                    break;

                                                case 1:
                                                    vector49.Y += 0f;
                                                    vector49.X += 0x18 * this.spriteDirection;
                                                    break;

                                                case 2:
                                                    vector49.Y -= 2f;
                                                    vector49.X += 0x18 * this.spriteDirection;
                                                    break;

                                                case 3:
                                                    vector49.Y -= 6f;
                                                    vector49.X += 14 * this.spriteDirection;
                                                    break;

                                                case 4:
                                                    vector49.Y -= 14f;
                                                    vector49.X += 2 * this.spriteDirection;
                                                    break;
                                            }
                                            if (this.spriteDirection < 0)
                                            {
                                                vector49.X += 10f;
                                            }
                                            float num528 = num523 - vector49.X;
                                            float num529 = num524 - vector49.Y;
                                            float num530 = (float)Math.Sqrt((double)((num528 * num528) + (num529 * num529)));
                                            num530 = num526 / num530;
                                            num528 *= num530;
                                            num529 *= num530;
                                            int num531 = this.damage;
                                            NewProjectile(vector49.X, vector49.Y, num528, num529, num527, num531, this.knockBack, Main.myPlayer, 0f, 0f);
                                        }
                                    }
                                }
                                if (this.ai[0] > 0f)
                                {
                                    this.ai[0]--;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x36)
                            {
                                if (this.type == 0x13d)
                                {
                                    if (Main.player[Main.myPlayer].dead)
                                    {
                                        Main.player[Main.myPlayer].raven = false;
                                    }
                                    if (Main.player[Main.myPlayer].raven)
                                    {
                                        this.timeLeft = 2;
                                    }
                                }
                                for (int num532 = 0; num532 < 0x3e8; num532++)
                                {
                                    if (((num532 != base.whoAmI) && Main.projectile[num532].active) && ((Main.projectile[num532].owner == this.owner) && (Main.projectile[num532].type == this.type)))
                                    {
                                        float introduced1768 = Math.Abs((float)(this.position.X - Main.projectile[num532].position.X));
                                        if ((introduced1768 + Math.Abs((float)(this.position.Y - Main.projectile[num532].position.Y))) < base.width)
                                        {
                                            if (this.position.X < Main.projectile[num532].position.X)
                                            {
                                                this.velocity.X -= 0.05f;
                                            }
                                            else
                                            {
                                                this.velocity.X += 0.05f;
                                            }
                                            if (this.position.Y < Main.projectile[num532].position.Y)
                                            {
                                                this.velocity.Y -= 0.05f;
                                            }
                                            else
                                            {
                                                this.velocity.Y += 0.05f;
                                            }
                                        }
                                    }
                                }
                                float num533 = this.position.X;
                                float num534 = this.position.Y;
                                float num535 = 900f;
                                bool flag19 = false;
                                int num536 = 500;
                                if ((this.ai[1] != 0f) || this.friendly)
                                {
                                    num536 = 0x578;
                                }
                                if ((Math.Abs((float)(base.Center.X - Main.player[this.owner].Center.X)) + Math.Abs((float)(base.Center.Y - Main.player[this.owner].Center.Y))) > num536)
                                {
                                    this.ai[0] = 1f;
                                }
                                if (this.ai[0] == 0f)
                                {
                                    this.tileCollide = true;
                                    for (int num537 = 0; num537 < 200; num537++)
                                    {
                                        if (Main.npc[num537].CanBeChasedBy(this, false))
                                        {
                                            float num538 = Main.npc[num537].position.X + (Main.npc[num537].width / 2);
                                            float num539 = Main.npc[num537].position.Y + (Main.npc[num537].height / 2);
                                            float introduced1769 = Math.Abs((float)((this.position.X + (base.width / 2)) - num538));
                                            float num540 = introduced1769 + Math.Abs((float)((this.position.Y + (base.height / 2)) - num539));
                                            if ((num540 < num535) && Collision.CanHit(base.position, base.width, base.height, Main.npc[num537].position, Main.npc[num537].width, Main.npc[num537].height))
                                            {
                                                num535 = num540;
                                                num533 = num538;
                                                num534 = num539;
                                                flag19 = true;
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    this.tileCollide = false;
                                }
                                if (flag19)
                                {
                                    if (this.ai[1] == -1f)
                                    {
                                        this.ai[1] = 17f;
                                    }
                                    if (this.ai[1] > 0f)
                                    {
                                        this.ai[1]--;
                                    }
                                    if (this.ai[1] == 0f)
                                    {
                                        this.friendly = true;
                                        float num545 = 8f;
                                        Vector2 vector51 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                        float num546 = num533 - vector51.X;
                                        float num547 = num534 - vector51.Y;
                                        float num548 = (float)Math.Sqrt((double)((num546 * num546) + (num547 * num547)));
                                        if (num548 < 100f)
                                        {
                                            num545 = 10f;
                                        }
                                        num548 = num545 / num548;
                                        num546 *= num548;
                                        num547 *= num548;
                                        this.velocity.X = ((this.velocity.X * 14f) + num546) / 15f;
                                        this.velocity.Y = ((this.velocity.Y * 14f) + num547) / 15f;
                                    }
                                    else
                                    {
                                        this.friendly = false;
                                        float introduced1770 = Math.Abs(this.velocity.X);
                                        if ((introduced1770 + Math.Abs(this.velocity.Y)) < 10f)
                                        {
                                            base.velocity = (Vector2)(base.velocity * 1.05f);
                                        }
                                    }
                                    this.rotation = this.velocity.X * 0.05f;
                                    this.frameCounter++;
                                    if (this.frameCounter >= 4)
                                    {
                                        this.frameCounter = 0;
                                        this.frame++;
                                    }
                                    if (this.frame < 4)
                                    {
                                        this.frame = 4;
                                    }
                                    if (this.frame > 7)
                                    {
                                        this.frame = 4;
                                    }
                                    if (Math.Abs(this.velocity.X) > 0.2)
                                    {
                                        this.spriteDirection = -base.direction;
                                        return;
                                    }
                                }
                                else
                                {
                                    this.friendly = true;
                                    float num541 = 8f;
                                    if (this.ai[0] == 1f)
                                    {
                                        num541 = 12f;
                                    }
                                    Vector2 vector50 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                    float num542 = Main.player[this.owner].Center.X - vector50.X;
                                    float num543 = (Main.player[this.owner].Center.Y - vector50.Y) - 60f;
                                    float num544 = (float)Math.Sqrt((double)((num542 * num542) + (num543 * num543)));
                                    if (((num544 < 100f) && (this.ai[0] == 1f)) && !Collision.SolidCollision(base.position, base.width, base.height))
                                    {
                                        this.ai[0] = 0f;
                                    }
                                    if (num544 > 2000f)
                                    {
                                        this.position.X = Main.player[this.owner].Center.X - (base.width / 2);
                                        this.position.Y = Main.player[this.owner].Center.Y - (base.width / 2);
                                    }
                                    if (num544 > 70f)
                                    {
                                        num544 = num541 / num544;
                                        num542 *= num544;
                                        num543 *= num544;
                                        this.velocity.X = ((this.velocity.X * 20f) + num542) / 21f;
                                        this.velocity.Y = ((this.velocity.Y * 20f) + num543) / 21f;
                                    }
                                    else
                                    {
                                        if ((this.velocity.X == 0f) && (this.velocity.Y == 0f))
                                        {
                                            this.velocity.X = -0.15f;
                                            this.velocity.Y = -0.05f;
                                        }
                                        base.velocity = (Vector2)(base.velocity * 1.01f);
                                    }
                                    this.friendly = false;
                                    this.rotation = this.velocity.X * 0.05f;
                                    this.frameCounter++;
                                    if (this.frameCounter >= 4)
                                    {
                                        this.frameCounter = 0;
                                        this.frame++;
                                    }
                                    if (this.frame > 3)
                                    {
                                        this.frame = 0;
                                    }
                                    if (Math.Abs(this.velocity.X) > 0.2)
                                    {
                                        this.spriteDirection = -base.direction;
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x37)
                            {
                                this.frameCounter++;
                                if (this.frameCounter > 0)
                                {
                                    this.frame++;
                                    this.frameCounter = 0;
                                    if (this.frame > 2)
                                    {
                                        this.frame = 0;
                                    }
                                }
                                if (this.velocity.X < 0f)
                                {
                                    this.spriteDirection = -1;
                                    this.rotation = (float)Math.Atan2((double)-this.velocity.Y, (double)-this.velocity.X);
                                }
                                else
                                {
                                    this.spriteDirection = 1;
                                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                                }
                                if ((this.ai[0] >= 0f) && (this.ai[0] < 200f))
                                {
                                    int num549 = (int)this.ai[0];
                                    if (Main.npc[num549].active)
                                    {
                                        float num550 = 8f;
                                        Vector2 vector52 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                        float num551 = Main.npc[num549].position.X - vector52.X;
                                        float num552 = Main.npc[num549].position.Y - vector52.Y;
                                        float num553 = (float)Math.Sqrt((double)((num551 * num551) + (num552 * num552)));
                                        num553 = num550 / num553;
                                        num551 *= num553;
                                        num552 *= num553;
                                        this.velocity.X = ((this.velocity.X * 14f) + num551) / 15f;
                                        this.velocity.Y = ((this.velocity.Y * 14f) + num552) / 15f;
                                    }
                                    else
                                    {
                                        float num554 = 1000f;
                                        for (int num555 = 0; num555 < 200; num555++)
                                        {
                                            if (Main.npc[num555].CanBeChasedBy(this, false))
                                            {
                                                float num556 = Main.npc[num555].position.X + (Main.npc[num555].width / 2);
                                                float num557 = Main.npc[num555].position.Y + (Main.npc[num555].height / 2);
                                                float introduced1771 = Math.Abs((float)((this.position.X + (base.width / 2)) - num556));
                                                float num558 = introduced1771 + Math.Abs((float)((this.position.Y + (base.height / 2)) - num557));
                                                if ((num558 < num554) && Collision.CanHit(base.position, base.width, base.height, Main.npc[num555].position, Main.npc[num555].width, Main.npc[num555].height))
                                                {
                                                    num554 = num558;
                                                    this.ai[0] = num555;
                                                }
                                            }
                                        }
                                    }
                                    int num559 = 8;
                                    int num560 = Dust.NewDust(new Vector2(this.position.X + num559, this.position.Y + num559), base.width - (num559 * 2), base.height - (num559 * 2), 6, 0f, 0f, 0, new Color(), 1f);
                                    Dust dust187 = Main.dust[num560];
                                    dust187.velocity = (Vector2)(dust187.velocity * 0.5f);
                                    Dust dust188 = Main.dust[num560];
                                    dust188.velocity += (Vector2)(base.velocity * 0.5f);
                                    Main.dust[num560].noGravity = true;
                                    Main.dust[num560].noLight = true;
                                    Main.dust[num560].scale = 1.4f;
                                    return;
                                }
                                this.Kill();
                                return;
                            }
                            if (this.aiStyle == 0x38)
                            {
                                if (this.localAI[0] == 0f)
                                {
                                    this.localAI[0] = 1f;
                                    this.rotation = this.ai[0];
                                    this.spriteDirection = -((int)this.ai[1]);
                                }
                                float introduced1774 = Math.Abs(this.velocity.X);
                                if ((introduced1774 + Math.Abs(this.velocity.Y)) < 16f)
                                {
                                    base.velocity = (Vector2)(base.velocity * 1.05f);
                                }
                                if (this.velocity.X < 0f)
                                {
                                    base.direction = -1;
                                }
                                else
                                {
                                    base.direction = 1;
                                }
                                float introduced1775 = Math.Abs(this.velocity.X);
                                this.rotation += ((introduced1775 + Math.Abs(this.velocity.Y)) * 0.025f) * base.direction;
                                return;
                            }
                            if (this.aiStyle == 0x39)
                            {
                                this.ai[0]++;
                                if (this.ai[0] > 30f)
                                {
                                    this.ai[0] = 30f;
                                    this.velocity.Y += 0.25f;
                                    if (this.velocity.Y > 16f)
                                    {
                                        this.velocity.Y = 16f;
                                    }
                                    this.velocity.X *= 0.995f;
                                }
                                this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 1.57f;
                                this.alpha -= 50;
                                if (this.alpha < 0)
                                {
                                    this.alpha = 0;
                                }
                                if (this.owner == Main.myPlayer)
                                {
                                    this.localAI[0]++;
                                    if (this.localAI[0] >= 4f)
                                    {
                                        this.localAI[0] = 0f;
                                        int num561 = 0;
                                        for (int num562 = 0; num562 < 0x3e8; num562++)
                                        {
                                            if ((Main.projectile[num562].active && (Main.projectile[num562].owner == this.owner)) && (Main.projectile[num562].type == 0x158))
                                            {
                                                num561++;
                                            }
                                        }
                                        float num563 = this.damage * 0.8f;
                                        float num564 = 1f;
                                        if (num561 > 100)
                                        {
                                            num564 = num561 - 100;
                                            num564 = 1f - (num564 / 100f);
                                            num563 *= num564;
                                        }
                                        if (num561 > 100)
                                        {
                                            this.localAI[0]--;
                                        }
                                        if (num561 > 120)
                                        {
                                            this.localAI[0]--;
                                        }
                                        if (num561 > 140)
                                        {
                                            this.localAI[0]--;
                                        }
                                        if (num561 > 150)
                                        {
                                            this.localAI[0]--;
                                        }
                                        if (num561 > 160)
                                        {
                                            this.localAI[0]--;
                                        }
                                        if (num561 > 0xa5)
                                        {
                                            this.localAI[0]--;
                                        }
                                        if (num561 > 170)
                                        {
                                            this.localAI[0] -= 2f;
                                        }
                                        if (num561 > 0xaf)
                                        {
                                            this.localAI[0] -= 3f;
                                        }
                                        if (num561 > 180)
                                        {
                                            this.localAI[0] -= 4f;
                                        }
                                        if (num561 > 0xb9)
                                        {
                                            this.localAI[0] -= 5f;
                                        }
                                        if (num561 > 190)
                                        {
                                            this.localAI[0] -= 6f;
                                        }
                                        if (num561 > 0xc3)
                                        {
                                            this.localAI[0] -= 7f;
                                        }
                                        if (num563 > (this.damage * 0.1f))
                                        {
                                            NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 0x158, (int)num563, this.knockBack * 0.55f, this.owner, 0f, (float)Main.rand.Next(3));
                                            return;
                                        }
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x3a)
                            {
                                this.alpha -= 50;
                                if (this.alpha < 0)
                                {
                                    this.alpha = 0;
                                }
                                if (this.ai[0] == 0f)
                                {
                                    this.frame = 0;
                                    this.ai[1]++;
                                    if (this.ai[1] > 30f)
                                    {
                                        this.velocity.Y += 0.1f;
                                    }
                                    if (this.velocity.Y >= 0f)
                                    {
                                        this.ai[0] = 1f;
                                    }
                                }
                                if (this.ai[0] == 1f)
                                {
                                    this.frame = 1;
                                    this.velocity.Y += 0.1f;
                                    if (this.velocity.Y > 3f)
                                    {
                                        this.velocity.Y = 3f;
                                    }
                                    this.velocity.X *= 0.99f;
                                }
                                this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 1.57f;
                                return;
                            }
                            if (this.aiStyle == 0x3b)
                            {
                                this.ai[1]++;
                                if (this.ai[1] >= 60f)
                                {
                                    this.friendly = true;
                                    int num565 = (int)this.ai[0];
                                    if (!Main.npc[num565].active)
                                    {
                                        num565 = -1;
                                        int[] numArray2 = new int[200];
                                        int num566 = 0;
                                        for (int num567 = 0; num567 < 200; num567++)
                                        {
                                            if (Main.npc[num567].CanBeChasedBy(this, false))
                                            {
                                                float introduced1776 = Math.Abs((float)(((Main.npc[num567].position.X + (Main.npc[num567].width / 2)) - this.position.X) + (base.width / 2)));
                                                float num568 = introduced1776 + Math.Abs((float)(((Main.npc[num567].position.Y + (Main.npc[num567].height / 2)) - this.position.Y) + (base.height / 2)));
                                                if (num568 < 800f)
                                                {
                                                    numArray2[num566] = num567;
                                                    num566++;
                                                }
                                            }
                                        }
                                        if (num566 == 0)
                                        {
                                            this.Kill();
                                            return;
                                        }
                                        num565 = numArray2[Main.rand.Next(num566)];
                                        this.ai[0] = num565;
                                    }
                                    float num569 = 4f;
                                    Vector2 vector53 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                    float num570 = Main.npc[num565].Center.X - vector53.X;
                                    float num571 = Main.npc[num565].Center.Y - vector53.Y;
                                    float num572 = (float)Math.Sqrt((double)((num570 * num570) + (num571 * num571)));
                                    num572 = num569 / num572;
                                    num570 *= num572;
                                    num571 *= num572;
                                    int num573 = 30;
                                    this.velocity.X = ((this.velocity.X * (num573 - 1)) + num570) / ((float)num573);
                                    this.velocity.Y = ((this.velocity.Y * (num573 - 1)) + num571) / ((float)num573);
                                }
                                for (int num574 = 0; num574 < 5; num574++)
                                {
                                    float num575 = (this.velocity.X * 0.2f) * num574;
                                    float num576 = -(this.velocity.Y * 0.2f) * num574;
                                    color5 = new Color();
                                    int num577 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xaf, 0f, 0f, 100, color5, 1.3f);
                                    Main.dust[num577].noGravity = true;
                                    Dust dust189 = Main.dust[num577];
                                    dust189.velocity = (Vector2)(dust189.velocity * 0f);
                                    Main.dust[num577].position.X -= num575;
                                    Main.dust[num577].position.Y -= num576;
                                }
                                return;
                            }
                            if (this.aiStyle == 60)
                            {
                                this.scale -= 0.015f;
                                if (this.scale <= 0f)
                                {
                                    base.velocity = (Vector2)(base.velocity * 5f);
                                    base.oldVelocity = base.velocity;
                                    this.Kill();
                                }
                                if (this.ai[0] <= 3f)
                                {
                                    this.ai[0]++;
                                    return;
                                }
                                int num578 = 0x67;
                                if (this.type == 0x196)
                                {
                                    num578 = 0x89;
                                }
                                if (this.owner == Main.myPlayer)
                                {
                                    Rectangle rectangle7 = new Rectangle((int)this.position.X, (int)this.position.Y, base.width, base.height);
                                    for (int num579 = 0; num579 < 200; num579++)
                                    {
                                        if ((Main.npc[num579].active && !Main.npc[num579].dontTakeDamage) && (Main.npc[num579].lifeMax > 1))
                                        {
                                            Rectangle rectangle8 = new Rectangle((int)Main.npc[num579].position.X, (int)Main.npc[num579].position.Y, Main.npc[num579].width, Main.npc[num579].height);
                                            if (rectangle7.Intersects(rectangle8))
                                            {
                                                Main.npc[num579].AddBuff(num578, 0x5dc, false);
                                                this.Kill();
                                            }
                                        }
                                    }
                                    for (int num580 = 0; num580 < 0xff; num580++)
                                    {
                                        if (((num580 != this.owner) && Main.player[num580].active) && !Main.player[num580].dead)
                                        {
                                            Rectangle rectangle9 = new Rectangle((int)Main.player[num580].position.X, (int)Main.player[num580].position.Y, Main.player[num580].width, Main.player[num580].height);
                                            if (rectangle7.Intersects(rectangle9))
                                            {
                                                Main.player[num580].AddBuff(num578, 0x5dc, false);
                                                this.Kill();
                                            }
                                        }
                                    }
                                }
                                this.ai[0] += this.ai[1];
                                if (this.ai[0] > 30f)
                                {
                                    this.velocity.Y += 0.1f;
                                }
                                if (this.type == 0x166)
                                {
                                    for (int num581 = 0; num581 < 1; num581++)
                                    {
                                        for (int num582 = 0; num582 < 6; num582++)
                                        {
                                            float num583 = (this.velocity.X / 6f) * num582;
                                            float num584 = (this.velocity.Y / 6f) * num582;
                                            int num585 = 6;
                                            color5 = new Color();
                                            int num586 = Dust.NewDust(new Vector2(this.position.X + num585, this.position.Y + num585), base.width - (num585 * 2), base.height - (num585 * 2), 0xd3, 0f, 0f, 0x4b, color5, 1.2f);
                                            if (Main.rand.Next(2) == 0)
                                            {
                                                Dust dust190 = Main.dust[num586];
                                                dust190.alpha += 0x19;
                                            }
                                            if (Main.rand.Next(2) == 0)
                                            {
                                                Dust dust191 = Main.dust[num586];
                                                dust191.alpha += 0x19;
                                            }
                                            if (Main.rand.Next(2) == 0)
                                            {
                                                Dust dust192 = Main.dust[num586];
                                                dust192.alpha += 0x19;
                                            }
                                            Main.dust[num586].noGravity = true;
                                            Dust dust193 = Main.dust[num586];
                                            dust193.velocity = (Vector2)(dust193.velocity * 0.3f);
                                            Dust dust194 = Main.dust[num586];
                                            dust194.velocity += (Vector2)(base.velocity * 0.5f);
                                            Main.dust[num586].position = base.Center;
                                            Main.dust[num586].position.X -= num583;
                                            Main.dust[num586].position.Y -= num584;
                                            Dust dust195 = Main.dust[num586];
                                            dust195.velocity = (Vector2)(dust195.velocity * 0.2f);
                                        }
                                        if (Main.rand.Next(4) == 0)
                                        {
                                            int num587 = 6;
                                            color5 = new Color();
                                            int num588 = Dust.NewDust(new Vector2(this.position.X + num587, this.position.Y + num587), base.width - (num587 * 2), base.height - (num587 * 2), 0xd3, 0f, 0f, 0x4b, color5, 0.65f);
                                            Dust dust196 = Main.dust[num588];
                                            dust196.velocity = (Vector2)(dust196.velocity * 0.5f);
                                            Dust dust197 = Main.dust[num588];
                                            dust197.velocity += (Vector2)(base.velocity * 0.5f);
                                        }
                                    }
                                }
                                if (this.type == 0x196)
                                {
                                    int num589 = 0xaf;
                                    Color newColor = new Color(0, 80, 0xff, 100);
                                    for (int num590 = 0; num590 < 6; num590++)
                                    {
                                        Vector2 vector54 = (Vector2)((base.velocity * num590) / 6f);
                                        int num591 = 6;
                                        int num592 = Dust.NewDust(base.position + ((Vector2)(Vector2.One * 6f)), base.width - (num591 * 2), base.height - (num591 * 2), 4, 0f, 0f, num589, newColor, 1.2f);
                                        if (Main.rand.Next(2) == 0)
                                        {
                                            Dust dust198 = Main.dust[num592];
                                            dust198.alpha += 0x19;
                                        }
                                        if (Main.rand.Next(2) == 0)
                                        {
                                            Dust dust199 = Main.dust[num592];
                                            dust199.alpha += 0x19;
                                        }
                                        if (Main.rand.Next(2) == 0)
                                        {
                                            Dust dust200 = Main.dust[num592];
                                            dust200.alpha += 0x19;
                                        }
                                        Main.dust[num592].noGravity = true;
                                        Dust dust201 = Main.dust[num592];
                                        dust201.velocity = (Vector2)(dust201.velocity * 0.3f);
                                        Dust dust202 = Main.dust[num592];
                                        dust202.velocity += (Vector2)(base.velocity * 0.5f);
                                        Main.dust[num592].position = base.Center;
                                        Main.dust[num592].position.X -= vector54.X;
                                        Main.dust[num592].position.Y -= vector54.Y;
                                        Dust dust203 = Main.dust[num592];
                                        dust203.velocity = (Vector2)(dust203.velocity * 0.2f);
                                    }
                                    if (Main.rand.Next(4) == 0)
                                    {
                                        int num593 = 6;
                                        int num594 = Dust.NewDust(base.position + ((Vector2)(Vector2.One * 6f)), base.width - (num593 * 2), base.height - (num593 * 2), 4, 0f, 0f, num589, newColor, 1.2f);
                                        Dust dust204 = Main.dust[num594];
                                        dust204.velocity = (Vector2)(dust204.velocity * 0.5f);
                                        Dust dust205 = Main.dust[num594];
                                        dust205.velocity += (Vector2)(base.velocity * 0.5f);
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x3d)
                            {
                                this.timeLeft = 60;
                                if (((Main.player[this.owner].inventory[Main.player[this.owner].selectedItem].fishingPole == 0) || Main.player[this.owner].calmed) || Main.player[this.owner].noItems)
                                {
                                    this.Kill();
                                }
                                else if (Main.player[this.owner].inventory[Main.player[this.owner].selectedItem].shoot != this.type)
                                {
                                    this.Kill();
                                }
                                else if (Main.player[this.owner].pulley)
                                {
                                    this.Kill();
                                }
                                else if (Main.player[this.owner].dead)
                                {
                                    this.Kill();
                                }
                                if ((this.ai[1] > 0f) && (this.localAI[1] >= 0f))
                                {
                                    this.localAI[1] = -1f;
                                    if (!base.lavaWet && !base.honeyWet)
                                    {
                                        for (int num595 = 0; num595 < 100; num595++)
                                        {
                                            color5 = new Color();
                                            int num596 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y - 10f), base.width + 12, 0x18, Dust.dustWater(), 0f, 0f, 0, color5, 1f);
                                            Main.dust[num596].velocity.Y -= 4f;
                                            Main.dust[num596].velocity.X *= 2.5f;
                                            Main.dust[num596].scale = 0.8f;
                                            Main.dust[num596].alpha = 100;
                                            Main.dust[num596].noGravity = true;
                                        }
                                        Main.PlaySound(0x13, (int)this.position.X, (int)this.position.Y, 0);
                                    }
                                }
                                if (this.ai[0] >= 1f)
                                {
                                    if (this.ai[0] == 2f)
                                    {
                                        this.ai[0]++;
                                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 0x11);
                                        if (!base.lavaWet && !base.honeyWet)
                                        {
                                            for (int num597 = 0; num597 < 100; num597++)
                                            {
                                                color5 = new Color();
                                                int num598 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y - 10f), base.width + 12, 0x18, Dust.dustWater(), 0f, 0f, 0, color5, 1f);
                                                Main.dust[num598].velocity.Y -= 4f;
                                                Main.dust[num598].velocity.X *= 2.5f;
                                                Main.dust[num598].scale = 0.8f;
                                                Main.dust[num598].alpha = 100;
                                                Main.dust[num598].noGravity = true;
                                            }
                                            Main.PlaySound(0x13, (int)this.position.X, (int)this.position.Y, 0);
                                        }
                                    }
                                    if (this.localAI[0] < 100f)
                                    {
                                        this.localAI[0]++;
                                    }
                                    this.tileCollide = false;
                                    float num599 = 15.9f;
                                    int num600 = 10;
                                    Vector2 vector55 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                    float num601 = (Main.player[this.owner].position.X + (Main.player[this.owner].width / 2)) - vector55.X;
                                    float num602 = (Main.player[this.owner].position.Y + (Main.player[this.owner].height / 2)) - vector55.Y;
                                    float num603 = (float)Math.Sqrt((double)((num601 * num601) + (num602 * num602)));
                                    if (num603 > 3000f)
                                    {
                                        this.Kill();
                                    }
                                    num603 = num599 / num603;
                                    num601 *= num603;
                                    num602 *= num603;
                                    this.velocity.X = ((this.velocity.X * (num600 - 1)) + num601) / ((float)num600);
                                    this.velocity.Y = ((this.velocity.Y * (num600 - 1)) + num602) / ((float)num600);
                                    if (Main.myPlayer == this.owner)
                                    {
                                        Rectangle rectangle10 = new Rectangle((int)this.position.X, (int)this.position.Y, base.width, base.height);
                                        Rectangle rectangle11 = new Rectangle((int)Main.player[this.owner].position.X, (int)Main.player[this.owner].position.Y, Main.player[this.owner].width, Main.player[this.owner].height);
                                        if (rectangle10.Intersects(rectangle11))
                                        {
                                            if ((this.ai[1] > 0f) && (this.ai[1] < 3602f))
                                            {
                                                int num604 = (int)this.ai[1];
                                                Item newItem = new Item();
                                                newItem.SetDefaults(num604, false);
                                                switch (num604)
                                                {
                                                    case 0xc7c:
                                                        {
                                                            int num605 = Main.player[this.owner].FishingLevel();
                                                            int minValue = ((num605 / 20) + 3) / 2;
                                                            int num607 = ((num605 / 10) + 6) / 2;
                                                            if (Main.rand.Next(50) < num605)
                                                            {
                                                                num607++;
                                                            }
                                                            if (Main.rand.Next(100) < num605)
                                                            {
                                                                num607++;
                                                            }
                                                            if (Main.rand.Next(150) < num605)
                                                            {
                                                                num607++;
                                                            }
                                                            if (Main.rand.Next(200) < num605)
                                                            {
                                                                num607++;
                                                            }
                                                            int num608 = Main.rand.Next(minValue, num607 + 1);
                                                            newItem.stack = num608;
                                                            break;
                                                        }
                                                    case 0xc7d:
                                                        {
                                                            int num609 = Main.player[this.owner].FishingLevel();
                                                            int num610 = ((num609 / 4) + 15) / 2;
                                                            int num611 = ((num609 / 2) + 30) / 2;
                                                            if (Main.rand.Next(50) < num609)
                                                            {
                                                                num611 += 4;
                                                            }
                                                            if (Main.rand.Next(100) < num609)
                                                            {
                                                                num611 += 4;
                                                            }
                                                            if (Main.rand.Next(150) < num609)
                                                            {
                                                                num611 += 4;
                                                            }
                                                            if (Main.rand.Next(200) < num609)
                                                            {
                                                                num611 += 4;
                                                            }
                                                            int num612 = Main.rand.Next(num610, num611 + 1);
                                                            newItem.stack = num612;
                                                            break;
                                                        }
                                                }
                                                newItem.newAndShiny = true;
                                                if (Main.player[this.owner].GetItem(this.owner, newItem, false, false).stack > 0)
                                                {
                                                    int num613 = Item.NewItem((int)this.position.X, (int)this.position.Y, base.width, base.height, num604, 1, false, 0, true);
                                                    if (Main.netMode == 1)
                                                    {
                                                        NetMessage.SendData(0x15, -1, -1, "", num613, 1f, 0f, 0f, 0, 0, 0);
                                                    }
                                                }
                                                else
                                                {
                                                    newItem.position.X = base.Center.X - (newItem.width / 2);
                                                    newItem.position.Y = base.Center.Y - (newItem.height / 2);
                                                    newItem.active = true;
                                                    ItemText.NewText(newItem, 0, false, false);
                                                }
                                            }
                                            this.Kill();
                                        }
                                    }
                                    this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 1.57f;
                                    return;
                                }
                                bool flag20 = false;
                                Vector2 vector56 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                float num614 = (Main.player[this.owner].position.X + (Main.player[this.owner].width / 2)) - vector56.X;
                                float num615 = (Main.player[this.owner].position.Y + (Main.player[this.owner].height / 2)) - vector56.Y;
                                this.rotation = ((float)Math.Atan2((double)num615, (double)num614)) + 1.57f;
                                float num616 = (float)Math.Sqrt((double)((num614 * num614) + (num615 * num615)));
                                if (num616 > 900f)
                                {
                                    this.ai[0] = 1f;
                                }
                                if (base.wet)
                                {
                                    this.rotation = 0f;
                                    this.velocity.X *= 0.9f;
                                    int num617 = (((int)base.Center.X) + (((base.width / 2) + 8) * base.direction)) / 0x10;
                                    int num618 = (int)(base.Center.Y / 16f);
                                    float single1 = this.position.Y / 16f;
                                    int num619 = (int)((this.position.Y + base.height) / 16f);
                                    if (Main.tile[num617, num618] == null)
                                    {
                                        Main.tile[num617, num618] = new Tile();
                                    }
                                    if (Main.tile[num617, num619] == null)
                                    {
                                        Main.tile[num617, num619] = new Tile();
                                    }
                                    if (this.velocity.Y > 0f)
                                    {
                                        this.velocity.Y *= 0.5f;
                                    }
                                    num617 = (int)(base.Center.X / 16f);
                                    num618 = (int)(base.Center.Y / 16f);
                                    float num620 = this.position.Y + base.height;
                                    if (Main.tile[num617, num618 - 1] == null)
                                    {
                                        Main.tile[num617, num618 - 1] = new Tile();
                                    }
                                    if (Main.tile[num617, num618] == null)
                                    {
                                        Main.tile[num617, num618] = new Tile();
                                    }
                                    if (Main.tile[num617, num618 + 1] == null)
                                    {
                                        Main.tile[num617, num618 + 1] = new Tile();
                                    }
                                    if (Main.tile[num617, num618 - 1].liquid > 0)
                                    {
                                        num620 = num618 * 0x10;
                                        num620 -= Main.tile[num617, num618 - 1].liquid / 0x10;
                                    }
                                    else if (Main.tile[num617, num618].liquid > 0)
                                    {
                                        num620 = (num618 + 1) * 0x10;
                                        num620 -= Main.tile[num617, num618].liquid / 0x10;
                                    }
                                    else if (Main.tile[num617, num618 + 1].liquid > 0)
                                    {
                                        num620 = (num618 + 2) * 0x10;
                                        num620 -= Main.tile[num617, num618 + 1].liquid / 0x10;
                                    }
                                    if (base.Center.Y > num620)
                                    {
                                        this.velocity.Y -= 0.1f;
                                        if (this.velocity.Y < -8f)
                                        {
                                            this.velocity.Y = -8f;
                                        }
                                        if ((base.Center.Y + this.velocity.Y) < num620)
                                        {
                                            this.velocity.Y = num620 - base.Center.Y;
                                        }
                                    }
                                    else
                                    {
                                        this.velocity.Y = num620 - base.Center.Y;
                                    }
                                    if ((this.velocity.Y >= -0.01) && (this.velocity.Y <= 0.01))
                                    {
                                        flag20 = true;
                                    }
                                }
                                else
                                {
                                    if (this.velocity.Y == 0f)
                                    {
                                        this.velocity.X *= 0.95f;
                                    }
                                    this.velocity.X *= 0.98f;
                                    this.velocity.Y += 0.2f;
                                    if (this.velocity.Y > 15.9f)
                                    {
                                        this.velocity.Y = 15.9f;
                                    }
                                }
                                if (this.ai[1] != 0f)
                                {
                                    flag20 = true;
                                }
                                if (flag20)
                                {
                                    if ((this.ai[1] != 0f) || (Main.myPlayer != this.owner))
                                    {
                                        if (this.ai[1] < 0f)
                                        {
                                            if ((this.velocity.Y == 0f) || ((base.honeyWet && (this.velocity.Y >= -0.01)) && (this.velocity.Y <= 0.01)))
                                            {
                                                this.velocity.Y = Main.rand.Next(100, 500) * 0.015f;
                                                this.velocity.X = Main.rand.Next(-100, 0x65) * 0.015f;
                                                base.wet = false;
                                                base.lavaWet = false;
                                                base.honeyWet = false;
                                            }
                                            this.ai[1] += Main.rand.Next(1, 5);
                                            if (this.ai[1] >= 0f)
                                            {
                                                this.ai[1] = 0f;
                                                this.localAI[1] = 0f;
                                                this.netUpdate = true;
                                                return;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        int num621 = Main.player[this.owner].FishingLevel();
                                        if (num621 != -9000)
                                        {
                                            if (Main.rand.Next(300) < num621)
                                            {
                                                this.localAI[1] += Main.rand.Next(1, 3);
                                            }
                                            this.localAI[1] += num621 / 30;
                                            this.localAI[1] += Main.rand.Next(1, 3);
                                            if (Main.rand.Next(60) == 0)
                                            {
                                                this.localAI[1] += 60f;
                                            }
                                            if (this.localAI[1] > 660f)
                                            {
                                                this.localAI[1] = 0f;
                                                this.FishingCheck();
                                                return;
                                            }
                                        }
                                        else
                                        {
                                            this.localAI[1] += 5f;
                                            this.localAI[1] += Main.rand.Next(1, 3);
                                            if (this.localAI[1] > 660f)
                                            {
                                                this.localAI[1] = 0f;
                                                this.FishingCheck();
                                                return;
                                            }
                                        }
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x3e)
                            {
                                this.AI_062();
                                return;
                            }
                            if (this.aiStyle == 0x3f)
                            {
                                if (!Main.player[this.owner].active)
                                {
                                    base.active = false;
                                    return;
                                }
                                Vector2 center = base.position;
                                bool flag21 = false;
                                float num622 = 500f;
                                for (int num623 = 0; num623 < 200; num623++)
                                {
                                    NPC npc = Main.npc[num623];
                                    if (npc.CanBeChasedBy(this, false))
                                    {
                                        float num624 = Vector2.Distance(npc.Center, base.Center);
                                        if ((((Vector2.Distance(base.Center, center) > num624) && (num624 < num622)) || !flag21) && Collision.CanHit(base.position, base.width, base.height, npc.position, npc.width, npc.height))
                                        {
                                            num622 = num624;
                                            center = npc.Center;
                                            flag21 = true;
                                        }
                                    }
                                }
                                if (!flag21)
                                {
                                    this.velocity.X *= 0.95f;
                                }
                                else
                                {
                                    float num625 = 5f;
                                    float num626 = 0.08f;
                                    if (this.velocity.Y == 0f)
                                    {
                                        bool flag22 = false;
                                        if ((base.Center.Y - 50f) > center.Y)
                                        {
                                            flag22 = true;
                                        }
                                        if (flag22)
                                        {
                                            this.velocity.Y = -6f;
                                        }
                                    }
                                    else
                                    {
                                        num625 = 8f;
                                        num626 = 0.12f;
                                    }
                                    this.velocity.X += Math.Sign((float)(center.X - base.Center.X)) * num626;
                                    if (this.velocity.X < -num625)
                                    {
                                        this.velocity.X = -num625;
                                    }
                                    if (this.velocity.X > num625)
                                    {
                                        this.velocity.X = num625;
                                    }
                                }
                                float stepSpeed = 0f;
                                Collision.StepUp(ref this.position, ref this.velocity, base.width, base.height, ref stepSpeed, ref this.gfxOffY, 1, false, 0);
                                if (this.velocity.Y != 0f)
                                {
                                    this.frame = 3;
                                }
                                else
                                {
                                    if (Math.Abs(this.velocity.X) > 0.2f)
                                    {
                                        this.frameCounter++;
                                    }
                                    if (this.frameCounter >= 9)
                                    {
                                        this.frameCounter = 0;
                                    }
                                    if (this.frameCounter >= 6)
                                    {
                                        this.frame = 2;
                                    }
                                    else if (this.frameCounter >= 3)
                                    {
                                        this.frame = 1;
                                    }
                                    else
                                    {
                                        this.frame = 0;
                                    }
                                }
                                if (this.velocity.X != 0f)
                                {
                                    base.direction = Math.Sign(this.velocity.X);
                                }
                                this.spriteDirection = -base.direction;
                                this.velocity.Y += 0.2f;
                                if (this.velocity.Y > 16f)
                                {
                                    this.velocity.Y = 16f;
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x40)
                            {
                                int num628 = 10;
                                int num629 = 15;
                                float num630 = 1f;
                                int num631 = 150;
                                int num632 = 0x2a;
                                if (this.type == 0x182)
                                {
                                    num628 = 0x10;
                                    num629 = 0x10;
                                    num630 = 1.5f;
                                }
                                if (this.velocity.X != 0f)
                                {
                                    base.direction = this.spriteDirection = -Math.Sign(this.velocity.X);
                                }
                                this.frameCounter++;
                                if (this.frameCounter > 2)
                                {
                                    this.frame++;
                                    this.frameCounter = 0;
                                }
                                if (this.frame >= 6)
                                {
                                    this.frame = 0;
                                }
                                if ((this.localAI[0] == 0f) && (Main.myPlayer == this.owner))
                                {
                                    this.localAI[0] = 1f;
                                    this.position.X += base.width / 2;
                                    this.position.Y += base.height / 2;
                                    this.scale = (((num628 + num629) - this.ai[1]) * num630) / ((float)(num629 + num628));
                                    base.width = (int)(num631 * this.scale);
                                    base.height = (int)(num632 * this.scale);
                                    this.position.X -= base.width / 2;
                                    this.position.Y -= base.height / 2;
                                    this.netUpdate = true;
                                }
                                if (this.ai[1] != -1f)
                                {
                                    this.scale = (((num628 + num629) - this.ai[1]) * num630) / ((float)(num629 + num628));
                                    base.width = (int)(num631 * this.scale);
                                    base.height = (int)(num632 * this.scale);
                                }
                                if (!Collision.SolidCollision(base.position, base.width, base.height))
                                {
                                    this.alpha -= 30;
                                    if (this.alpha < 60)
                                    {
                                        this.alpha = 60;
                                    }
                                    if ((this.type == 0x182) && (this.alpha < 100))
                                    {
                                        this.alpha = 100;
                                    }
                                }
                                else
                                {
                                    this.alpha += 30;
                                    if (this.alpha > 150)
                                    {
                                        this.alpha = 150;
                                    }
                                }
                                if (this.ai[0] > 0f)
                                {
                                    this.ai[0]--;
                                }
                                if (((this.ai[0] == 1f) && (this.ai[1] > 0f)) && (this.owner == Main.myPlayer))
                                {
                                    this.netUpdate = true;
                                    Vector2 vector58 = base.Center;
                                    vector58.Y -= (num632 * this.scale) / 2f;
                                    float num633 = ((((num628 + num629) - this.ai[1]) + 1f) * num630) / ((float)(num629 + num628));
                                    vector58.Y -= (num632 * num633) / 2f;
                                    vector58.Y += 2f;
                                    NewProjectile(vector58.X, vector58.Y, this.velocity.X, this.velocity.Y, this.type, this.damage, this.knockBack, this.owner, 10f, this.ai[1] - 1f);
                                    int num634 = 4;
                                    if (this.type == 0x182)
                                    {
                                        num634 = 2;
                                    }
                                    if (((((int)this.ai[1]) % num634) == 0) && (this.ai[1] != 0f))
                                    {
                                        int num635 = 0x174;
                                        if (this.type == 0x182)
                                        {
                                            num635 = 0x175;
                                        }
                                        int num636 = NPC.NewNPC((int)vector58.X, (int)vector58.Y, num635, 0, 0f, 0f, 0f, 0f, 0xff);
                                        Main.npc[num636].velocity = base.velocity;
                                        Main.npc[num636].netUpdate = true;
                                        if (this.type == 0x182)
                                        {
                                            Main.npc[num636].ai[2] = base.width;
                                            Main.npc[num636].ai[3] = -1.5f;
                                        }
                                    }
                                }
                                if (this.ai[0] <= 0f)
                                {
                                    float num637 = 0.1047198f;
                                    float num638 = ((float)base.width) / 5f;
                                    if (this.type == 0x182)
                                    {
                                        num638 *= 2f;
                                    }
                                    float num639 = ((float)(Math.Cos((double)(num637 * -this.ai[0])) - 0.5)) * num638;
                                    this.position.X -= num639 * -base.direction;
                                    this.ai[0]--;
                                    num639 = ((float)(Math.Cos((double)(num637 * -this.ai[0])) - 0.5)) * num638;
                                    this.position.X += num639 * -base.direction;
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x41)
                            {
                                if (this.ai[1] > 0f)
                                {
                                    int num640 = ((int)this.ai[1]) - 1;
                                    if (num640 < 0xff)
                                    {
                                        this.localAI[0]++;
                                        if (this.localAI[0] > 10f)
                                        {
                                            int num641 = 6;
                                            for (int num642 = 0; num642 < num641; num642++)
                                            {
                                                Vector2 spinningpoint = (Vector2)((Vector2.Normalize(base.velocity) * new Vector2(((float)base.width) / 2f, (float)base.height)) * 0.75f);
                                                vector240 = new Vector2();
                                                spinningpoint = spinningpoint.RotatedBy((((num642 - ((num641 / 2) - 1)) * 3.1415926535897931) / ((double)num641)), vector240) + base.Center;
                                                Vector2 vector60 = (((float)(Main.rand.NextDouble() * 3.1415927410125732)) - 1.570796f).ToRotationVector2() * Main.rand.Next(3, 8);
                                                color5 = new Color();
                                                int num643 = Dust.NewDust(spinningpoint + vector60, 0, 0, 0xac, vector60.X * 2f, vector60.Y * 2f, 100, color5, 1.4f);
                                                Main.dust[num643].noGravity = true;
                                                Main.dust[num643].noLight = true;
                                                Dust dust206 = Main.dust[num643];
                                                dust206.velocity = (Vector2)(dust206.velocity / 4f);
                                                Dust dust207 = Main.dust[num643];
                                                dust207.velocity -= base.velocity;
                                            }
                                            this.alpha -= 5;
                                            if (this.alpha < 100)
                                            {
                                                this.alpha = 100;
                                            }
                                            this.rotation += this.velocity.X * 0.1f;
                                            this.frame = ((int)(this.localAI[0] / 3f)) % 3;
                                        }
                                        Vector2 vector61 = Main.player[num640].Center - base.Center;
                                        float num644 = 4f;
                                        num644 += this.localAI[0] / 20f;
                                        base.velocity = (Vector2)(Vector2.Normalize(vector61) * num644);
                                        if (vector61.Length() < 50f)
                                        {
                                            this.Kill();
                                        }
                                    }
                                }
                                else
                                {
                                    float num645 = 0.2094395f;
                                    float num646 = 4f;
                                    float num647 = ((float)(Math.Cos((double)(num645 * this.ai[0])) - 0.5)) * num646;
                                    this.velocity.Y -= num647;
                                    this.ai[0]++;
                                    num647 = ((float)(Math.Cos((double)(num645 * this.ai[0])) - 0.5)) * num646;
                                    this.velocity.Y += num647;
                                    this.localAI[0]++;
                                    if (this.localAI[0] > 10f)
                                    {
                                        this.alpha -= 5;
                                        if (this.alpha < 100)
                                        {
                                            this.alpha = 100;
                                        }
                                        this.rotation += this.velocity.X * 0.1f;
                                        this.frame = ((int)(this.localAI[0] / 3f)) % 3;
                                    }
                                }
                                if (base.wet)
                                {
                                    this.position.Y -= 16f;
                                    this.Kill();
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x42)
                            {
                                float num648 = 0f;
                                float num649 = 0f;
                                float num650 = 0f;
                                float num651 = 0f;
                                if ((this.type == 0x183) || (this.type == 0x184))
                                {
                                    num648 = 700f;
                                    num649 = 800f;
                                    num650 = 1200f;
                                    num651 = 150f;
                                    if (Main.player[this.owner].dead)
                                    {
                                        Main.player[this.owner].twinsMinion = false;
                                    }
                                    if (Main.player[this.owner].twinsMinion)
                                    {
                                        this.timeLeft = 2;
                                    }
                                }
                                if (this.type == 0x215)
                                {
                                    num648 = 1500f;
                                    num649 = 900f;
                                    num650 = 1500f;
                                    num651 = 450f;
                                    if (Main.player[this.owner].dead)
                                    {
                                        Main.player[this.owner].DeadlySphereMinion = false;
                                    }
                                    if (Main.player[this.owner].DeadlySphereMinion)
                                    {
                                        this.timeLeft = 2;
                                    }
                                }
                                float num652 = 0.05f;
                                for (int num653 = 0; num653 < 0x3e8; num653++)
                                {
                                    bool flag23 = ((Main.projectile[num653].type == 0x183) || (Main.projectile[num653].type == 0x184)) && ((this.type == 0x183) || (this.type == 0x184));
                                    if (!flag23)
                                    {
                                        flag23 = (this.type == 0x215) && (Main.projectile[num653].type == 0x215);
                                    }
                                    if (((num653 != base.whoAmI) && Main.projectile[num653].active) && ((Main.projectile[num653].owner == this.owner) && flag23))
                                    {
                                        float introduced1797 = Math.Abs((float)(this.position.X - Main.projectile[num653].position.X));
                                        if ((introduced1797 + Math.Abs((float)(this.position.Y - Main.projectile[num653].position.Y))) < base.width)
                                        {
                                            if (this.position.X < Main.projectile[num653].position.X)
                                            {
                                                this.velocity.X -= num652;
                                            }
                                            else
                                            {
                                                this.velocity.X += num652;
                                            }
                                            if (this.position.Y < Main.projectile[num653].position.Y)
                                            {
                                                this.velocity.Y -= num652;
                                            }
                                            else
                                            {
                                                this.velocity.Y += num652;
                                            }
                                        }
                                    }
                                }
                                if (this.type == 0x215)
                                {
                                    if ((((int)this.ai[0]) % 3) != 2)
                                    {
                                        Lighting.AddLight(base.Center, 0.8f, 0.3f, 0.1f);
                                    }
                                    else
                                    {
                                        Lighting.AddLight(base.Center, 0.3f, 0.5f, 0.7f);
                                    }
                                }
                                bool flag24 = false;
                                if ((this.ai[0] == 2f) && (this.type == 0x184))
                                {
                                    this.ai[1]++;
                                    this.extraUpdates = 1;
                                    this.rotation = base.velocity.ToRotation() + 3.141593f;
                                    this.frameCounter++;
                                    if (this.frameCounter > 1)
                                    {
                                        this.frame++;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame > 2)
                                    {
                                        this.frame = 0;
                                    }
                                    if (this.ai[1] > 40f)
                                    {
                                        this.ai[1] = 1f;
                                        this.ai[0] = 0f;
                                        this.extraUpdates = 0;
                                        this.numUpdates = 0;
                                        this.netUpdate = true;
                                    }
                                    else
                                    {
                                        flag24 = true;
                                    }
                                }
                                if (((this.type == 0x215) && (this.ai[0] >= 3f)) && (this.ai[0] <= 5f))
                                {
                                    int num654 = 2;
                                    flag24 = true;
                                    base.velocity = (Vector2)(base.velocity * 0.9f);
                                    this.ai[1]++;
                                    int num655 = (((int)this.ai[1]) / num654) + (((int)(this.ai[0] - 3f)) * 8);
                                    if (num655 < 4)
                                    {
                                        this.frame = 0x11 + num655;
                                    }
                                    else if (num655 < 5)
                                    {
                                        this.frame = 0;
                                    }
                                    else if (num655 < 8)
                                    {
                                        this.frame = (1 + num655) - 5;
                                    }
                                    else if (num655 < 11)
                                    {
                                        this.frame = 11 - num655;
                                    }
                                    else if (num655 < 12)
                                    {
                                        this.frame = 0;
                                    }
                                    else if (num655 < 0x10)
                                    {
                                        this.frame = num655 - 2;
                                    }
                                    else if (num655 < 20)
                                    {
                                        this.frame = 0x1d - num655;
                                    }
                                    else if (num655 < 0x15)
                                    {
                                        this.frame = 0;
                                    }
                                    else
                                    {
                                        this.frame = num655 - 4;
                                    }
                                    if (this.ai[1] > (num654 * 8))
                                    {
                                        this.ai[0] -= 3f;
                                        this.ai[1] = 0f;
                                    }
                                }
                                if (((this.type == 0x215) && (this.ai[0] >= 6f)) && (this.ai[0] <= 8f))
                                {
                                    this.ai[1]++;
                                    this.MaxUpdates = 2;
                                    if (this.ai[0] == 7f)
                                    {
                                        this.rotation = base.velocity.ToRotation() + 3.141593f;
                                    }
                                    else
                                    {
                                        this.rotation += 0.5235988f;
                                    }
                                    int num656 = 0;
                                    switch (((int)this.ai[0]))
                                    {
                                        case 6:
                                            this.frame = 5;
                                            num656 = 40;
                                            break;

                                        case 7:
                                            this.frame = 13;
                                            num656 = 30;
                                            break;

                                        case 8:
                                            this.frame = 0x11;
                                            num656 = 30;
                                            break;
                                    }
                                    if (this.ai[1] > num656)
                                    {
                                        this.ai[1] = 1f;
                                        this.ai[0] -= 6f;
                                        this.localAI[0]++;
                                        this.extraUpdates = 0;
                                        this.numUpdates = 0;
                                        this.netUpdate = true;
                                    }
                                    else
                                    {
                                        flag24 = true;
                                    }
                                    if (this.ai[0] == 8f)
                                    {
                                        for (int num657 = 0; num657 < 4; num657++)
                                        {
                                            int num658 = Utils.SelectRandom<int>(Main.rand, new int[] { 0xe2, 0xe4, 0x4b });
                                            color5 = new Color();
                                            int num659 = Dust.NewDust(base.Center, 0, 0, num658, 0f, 0f, 0, color5, 1f);
                                            Dust dust = Main.dust[num659];
                                            vector240 = new Vector2();
                                            vector240 = new Vector2();
                                            Vector2 vector62 = Vector2.One.RotatedBy(((double)(num657 * 1.570796f)), vector240).RotatedBy((double)this.rotation, vector240);
                                            dust.position = base.Center + ((Vector2)(vector62 * 10f));
                                            dust.velocity = (Vector2)(vector62 * 1f);
                                            dust.scale = 0.6f + (Main.rand.NextFloat() * 0.5f);
                                            dust.noGravity = true;
                                        }
                                    }
                                }
                                if (!flag24)
                                {
                                    Vector2 vector63 = base.position;
                                    bool flag25 = false;
                                    if ((this.ai[0] != 1f) && ((this.type == 0x183) || (this.type == 0x184)))
                                    {
                                        this.tileCollide = true;
                                    }
                                    if ((this.type == 0x215) && (this.ai[0] < 9f))
                                    {
                                        this.tileCollide = true;
                                    }
                                    if (this.tileCollide && WorldGen.SolidTile(Framing.GetTileSafely(((int)base.Center.X) / 0x10, ((int)base.Center.Y) / 0x10)))
                                    {
                                        this.tileCollide = false;
                                    }
                                    for (int num660 = 0; num660 < 200; num660++)
                                    {
                                        NPC npc2 = Main.npc[num660];
                                        if (npc2.CanBeChasedBy(this, false))
                                        {
                                            float num661 = Vector2.Distance(npc2.Center, base.Center);
                                            if ((((Vector2.Distance(base.Center, vector63) > num661) && (num661 < num648)) || !flag25) && Collision.CanHitLine(base.position, base.width, base.height, npc2.position, npc2.width, npc2.height))
                                            {
                                                num648 = num661;
                                                vector63 = npc2.Center;
                                                flag25 = true;
                                            }
                                        }
                                    }
                                    float num662 = num649;
                                    if (flag25)
                                    {
                                        num662 = num650;
                                    }
                                    Player player = Main.player[this.owner];
                                    if (Vector2.Distance(player.Center, base.Center) > num662)
                                    {
                                        if ((this.type == 0x183) || (this.type == 0x184))
                                        {
                                            this.ai[0] = 1f;
                                        }
                                        if ((this.type == 0x215) && (this.ai[0] < 9f))
                                        {
                                            this.ai[0] += 3 * (3 - ((int)(this.ai[0] / 3f)));
                                        }
                                        this.tileCollide = false;
                                        this.netUpdate = true;
                                    }
                                    if (((this.type == 0x184) || (this.type == 0x183)) && (flag25 && (this.ai[0] == 0f)))
                                    {
                                        Vector2 vector64 = vector63 - base.Center;
                                        float num663 = vector64.Length();
                                        vector64.Normalize();
                                        if (num663 > 200f)
                                        {
                                            float num664 = 6f;
                                            if (this.type == 0x184)
                                            {
                                                num664 = 8f;
                                            }
                                            vector64 = (Vector2)(vector64 * num664);
                                            base.velocity = (Vector2)(((base.velocity * 40f) + vector64) / 41f);
                                        }
                                        else
                                        {
                                            float num665 = 4f;
                                            vector64 = (Vector2)(vector64 * -num665);
                                            base.velocity = (Vector2)(((base.velocity * 40f) + vector64) / 41f);
                                        }
                                    }
                                    else
                                    {
                                        bool flag26 = false;
                                        if (!flag26)
                                        {
                                            flag26 = (this.ai[0] == 1f) && ((this.type == 0x183) || (this.type == 0x184));
                                        }
                                        if (!flag26)
                                        {
                                            flag26 = (this.ai[0] >= 9f) && (this.type == 0x215);
                                        }
                                        float num666 = 6f;
                                        if (this.type == 0x215)
                                        {
                                            num666 = 12f;
                                        }
                                        if (flag26)
                                        {
                                            num666 = 15f;
                                        }
                                        Vector2 vector65 = base.Center;
                                        Vector2 vector66 = (player.Center - vector65) + new Vector2(0f, -60f);
                                        float num667 = vector66.Length();
                                        if ((num667 > 200f) && (num666 < 8f))
                                        {
                                            num666 = 8f;
                                        }
                                        if (((num667 < num651) && flag26) && !Collision.SolidCollision(base.position, base.width, base.height))
                                        {
                                            if ((this.type == 0x183) || (this.type == 0x184))
                                            {
                                                this.ai[0] = 0f;
                                            }
                                            if (this.type == 0x215)
                                            {
                                                this.ai[0] -= 9f;
                                            }
                                            this.netUpdate = true;
                                        }
                                        if (num667 > 2000f)
                                        {
                                            this.position.X = Main.player[this.owner].Center.X - (base.width / 2);
                                            this.position.Y = Main.player[this.owner].Center.Y - (base.height / 2);
                                            this.netUpdate = true;
                                        }
                                        if (num667 > 70f)
                                        {
                                            vector66.Normalize();
                                            vector66 = (Vector2)(vector66 * num666);
                                            base.velocity = (Vector2)(((base.velocity * 40f) + vector66) / 41f);
                                        }
                                        else if ((this.velocity.X == 0f) && (this.velocity.Y == 0f))
                                        {
                                            this.velocity.X = -0.15f;
                                            this.velocity.Y = -0.05f;
                                        }
                                    }
                                    if (this.type == 0x184)
                                    {
                                        this.rotation = base.velocity.ToRotation() + 3.141593f;
                                    }
                                    if (this.type == 0x183)
                                    {
                                        if (flag25)
                                        {
                                            this.rotation = (vector63 - base.Center).ToRotation() + 3.141593f;
                                        }
                                        else
                                        {
                                            this.rotation = base.velocity.ToRotation() + 3.141593f;
                                        }
                                    }
                                    if ((this.type == 0x215) && ((this.ai[0] < 3f) || (this.ai[0] >= 9f)))
                                    {
                                        this.rotation += this.velocity.X * 0.04f;
                                    }
                                    if ((this.type == 0x184) || (this.type == 0x183))
                                    {
                                        this.frameCounter++;
                                        if (this.frameCounter > 3)
                                        {
                                            this.frame++;
                                            this.frameCounter = 0;
                                        }
                                        if (this.frame > 2)
                                        {
                                            this.frame = 0;
                                        }
                                    }
                                    else if (this.type == 0x215)
                                    {
                                        if ((this.ai[0] < 3f) || (this.ai[0] >= 9f))
                                        {
                                            this.frameCounter++;
                                            if (this.frameCounter >= 0x18)
                                            {
                                                this.frameCounter = 0;
                                            }
                                            int num668 = this.frameCounter / 4;
                                            this.frame = 4 + num668;
                                            switch (((int)this.ai[0]))
                                            {
                                                case 0:
                                                case 9:
                                                    this.frame = 4 + num668;
                                                    break;

                                                case 1:
                                                case 10:
                                                    num668 = this.frameCounter / 8;
                                                    this.frame = 14 + num668;
                                                    break;

                                                case 2:
                                                case 11:
                                                    num668 = this.frameCounter / 3;
                                                    if (num668 >= 4)
                                                    {
                                                        num668 -= 4;
                                                    }
                                                    this.frame = 0x11 + num668;
                                                    break;
                                            }
                                        }
                                        if ((this.ai[0] == 2f) && (Main.rand.Next(2) == 0))
                                        {
                                            for (int num669 = 0; num669 < 4; num669++)
                                            {
                                                if (Main.rand.Next(2) != 0)
                                                {
                                                    int num670 = Utils.SelectRandom<int>(Main.rand, new int[] { 0xe2, 0xe4, 0x4b });
                                                    color5 = new Color();
                                                    int num671 = Dust.NewDust(base.Center, 0, 0, num670, 0f, 0f, 0, color5, 1f);
                                                    Dust dust2 = Main.dust[num671];
                                                    vector240 = new Vector2();
                                                    vector240 = new Vector2();
                                                    Vector2 vector67 = Vector2.One.RotatedBy(((double)(num669 * 1.570796f)), vector240).RotatedBy((double)this.rotation, vector240);
                                                    dust2.position = base.Center + ((Vector2)(vector67 * 10f));
                                                    dust2.velocity = (Vector2)(vector67 * 1f);
                                                    dust2.scale = 0.3f + (Main.rand.NextFloat() * 0.5f);
                                                    dust2.noGravity = true;
                                                    dust2.customData = this;
                                                    dust2.noLight = true;
                                                }
                                            }
                                        }
                                    }
                                    if ((this.ai[1] > 0f) && ((this.type == 0x183) || (this.type == 0x184)))
                                    {
                                        this.ai[1] += Main.rand.Next(1, 4);
                                    }
                                    if ((this.ai[1] > 90f) && (this.type == 0x183))
                                    {
                                        this.ai[1] = 0f;
                                        this.netUpdate = true;
                                    }
                                    if ((this.ai[1] > 40f) && (this.type == 0x184))
                                    {
                                        this.ai[1] = 0f;
                                        this.netUpdate = true;
                                    }
                                    if ((this.ai[1] > 0f) && (this.type == 0x215))
                                    {
                                        this.ai[1]++;
                                        int num672 = 10;
                                        if (this.ai[1] > num672)
                                        {
                                            this.ai[1] = 0f;
                                            this.netUpdate = true;
                                        }
                                    }
                                    if ((this.ai[0] == 0f) && ((this.type == 0x183) || (this.type == 0x184)))
                                    {
                                        if (this.type == 0x183)
                                        {
                                            float num673 = 8f;
                                            int num674 = 0x185;
                                            if (flag25 && (this.ai[1] == 0f))
                                            {
                                                this.ai[1]++;
                                                if ((Main.myPlayer == this.owner) && Collision.CanHitLine(base.position, base.width, base.height, vector63, 0, 0))
                                                {
                                                    Vector2 vector68 = vector63 - base.Center;
                                                    vector68.Normalize();
                                                    vector68 = (Vector2)(vector68 * num673);
                                                    int num675 = NewProjectile(base.Center.X, base.Center.Y, vector68.X, vector68.Y, num674, (int)(this.damage * 0.8f), 0f, Main.myPlayer, 0f, 0f);
                                                    Main.projectile[num675].timeLeft = 300;
                                                    this.netUpdate = true;
                                                }
                                            }
                                        }
                                        if (((this.type == 0x184) && (this.ai[1] == 0f)) && (flag25 && (num648 < 500f)))
                                        {
                                            this.ai[1]++;
                                            if (Main.myPlayer == this.owner)
                                            {
                                                this.ai[0] = 2f;
                                                Vector2 vector69 = vector63 - base.Center;
                                                vector69.Normalize();
                                                base.velocity = (Vector2)(vector69 * 8f);
                                                this.netUpdate = true;
                                                return;
                                            }
                                        }
                                        return;
                                    }
                                    if ((this.type == 0x215) && (this.ai[0] < 3f))
                                    {
                                        int num676 = 0;
                                        switch (((int)this.ai[0]))
                                        {
                                            case 0:
                                            case 3:
                                            case 6:
                                                num676 = 400;
                                                break;

                                            case 1:
                                            case 4:
                                            case 7:
                                                num676 = 400;
                                                break;

                                            case 2:
                                            case 5:
                                            case 8:
                                                num676 = 600;
                                                break;
                                        }
                                        if (((this.ai[1] == 0f) && flag25) && (num648 < num676))
                                        {
                                            this.ai[1]++;
                                            if (Main.myPlayer != this.owner)
                                            {
                                                return;
                                            }
                                            if (this.localAI[0] >= 3f)
                                            {
                                                this.ai[0] += 4f;
                                                if (this.ai[0] == 6f)
                                                {
                                                    this.ai[0] = 3f;
                                                }
                                                this.localAI[0] = 0f;
                                                return;
                                            }
                                            this.ai[0] += 6f;
                                            Vector2 vector70 = vector63 - base.Center;
                                            vector70.Normalize();
                                            float num677 = (this.ai[0] == 8f) ? 12f : 10f;
                                            base.velocity = (Vector2)(vector70 * num677);
                                            this.netUpdate = true;
                                        }
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x43)
                            {
                                Player player2 = Main.player[this.owner];
                                if (!player2.active)
                                {
                                    base.active = false;
                                    return;
                                }
                                bool flag27 = ((this.type == 0x189) || (this.type == 0x18a)) || (this.type == 0x18b);
                                if (flag27)
                                {
                                    if (player2.dead)
                                    {
                                        player2.pirateMinion = false;
                                    }
                                    if (player2.pirateMinion)
                                    {
                                        this.timeLeft = 2;
                                    }
                                }
                                if (this.type == 500)
                                {
                                    if (player2.dead)
                                    {
                                        player2.crimsonHeart = false;
                                    }
                                    if (player2.crimsonHeart)
                                    {
                                        this.timeLeft = 2;
                                    }
                                }
                                Vector2 vector71 = player2.Center;
                                if (flag27)
                                {
                                    vector71.X -= (15 + (player2.width / 2)) * player2.direction;
                                    vector71.X -= (this.minionPos * 40) * player2.direction;
                                }
                                if (this.type == 500)
                                {
                                    vector71.X -= (15 + (player2.width / 2)) * player2.direction;
                                    vector71.X -= 40 * player2.direction;
                                }
                                if (this.type == 500)
                                {
                                    Lighting.AddLight(base.Center, 0.9f, 0.1f, 0.3f);
                                    int num678 = 6;
                                    if ((this.frame == 0) || (this.frame == 2))
                                    {
                                        num678 = 12;
                                    }
                                    if (++this.frameCounter >= num678)
                                    {
                                        this.frameCounter = 0;
                                        if (++this.frame >= Main.projFrames[this.type])
                                        {
                                            this.frame = 0;
                                        }
                                    }
                                    this.rotation += this.velocity.X / 20f;
                                    vector240 = new Vector2();
                                    Vector2 spinninpoint = -Vector2.UnitY.RotatedBy(((double)this.rotation), vector240).RotatedBy((double)(base.direction * 0.2f), new Vector2());
                                    int num679 = Dust.NewDust((base.Center + ((Vector2)(spinninpoint * 10f))) - new Vector2(4f), 0, 0, 5, spinninpoint.X, spinninpoint.Y, 0, Color.Transparent, 1f);
                                    Main.dust[num679].scale = 1f;
                                    Main.dust[num679].velocity = (Vector2)(spinninpoint.RotatedByRandom(0.78539818525314331) * 3.5f);
                                    Main.dust[num679].noGravity = true;
                                    Main.dust[num679].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cLight, Main.player[this.owner]);
                                }
                                bool flag28 = true;
                                if (this.type == 500)
                                {
                                    flag28 = false;
                                }
                                int num680 = -1;
                                float num681 = 450f;
                                if (flag27)
                                {
                                    num681 = 800f;
                                }
                                int num682 = 15;
                                if ((this.ai[0] == 0f) && flag28)
                                {
                                    for (int num683 = 0; num683 < 200; num683++)
                                    {
                                        NPC npc3 = Main.npc[num683];
                                        if (npc3.CanBeChasedBy(this, false))
                                        {
                                            vector240 = npc3.Center - base.Center;
                                            float num684 = vector240.Length();
                                            if (num684 < num681)
                                            {
                                                num680 = num683;
                                                num681 = num684;
                                            }
                                        }
                                    }
                                }
                                if (this.ai[0] == 1f)
                                {
                                    this.tileCollide = false;
                                    float num685 = 0.2f;
                                    float num686 = 10f;
                                    int num687 = 200;
                                    float introduced1798 = Math.Abs(player2.velocity.X);
                                    if (num686 < (introduced1798 + Math.Abs(player2.velocity.Y)))
                                    {
                                        float introduced1799 = Math.Abs(player2.velocity.X);
                                        num686 = introduced1799 + Math.Abs(player2.velocity.Y);
                                    }
                                    Vector2 vector73 = player2.Center - base.Center;
                                    float num688 = vector73.Length();
                                    if (num688 > 2000f)
                                    {
                                        base.position = player2.Center - ((Vector2)(new Vector2((float)base.width, (float)base.height) / 2f));
                                    }
                                    if (((num688 < num687) && (player2.velocity.Y == 0f)) && (((this.position.Y + base.height) <= (player2.position.Y + player2.height)) && !Collision.SolidCollision(base.position, base.width, base.height)))
                                    {
                                        this.ai[0] = 0f;
                                        this.netUpdate = true;
                                        if (this.velocity.Y < -6f)
                                        {
                                            this.velocity.Y = -6f;
                                        }
                                    }
                                    if (num688 >= 60f)
                                    {
                                        vector73.Normalize();
                                        vector73 = (Vector2)(vector73 * num686);
                                        if (this.velocity.X < vector73.X)
                                        {
                                            this.velocity.X += num685;
                                            if (this.velocity.X < 0f)
                                            {
                                                this.velocity.X += num685 * 1.5f;
                                            }
                                        }
                                        if (this.velocity.X > vector73.X)
                                        {
                                            this.velocity.X -= num685;
                                            if (this.velocity.X > 0f)
                                            {
                                                this.velocity.X -= num685 * 1.5f;
                                            }
                                        }
                                        if (this.velocity.Y < vector73.Y)
                                        {
                                            this.velocity.Y += num685;
                                            if (this.velocity.Y < 0f)
                                            {
                                                this.velocity.Y += num685 * 1.5f;
                                            }
                                        }
                                        if (this.velocity.Y > vector73.Y)
                                        {
                                            this.velocity.Y -= num685;
                                            if (this.velocity.Y > 0f)
                                            {
                                                this.velocity.Y -= num685 * 1.5f;
                                            }
                                        }
                                    }
                                    if (this.velocity.X != 0f)
                                    {
                                        this.spriteDirection = Math.Sign(this.velocity.X);
                                    }
                                    if (flag27)
                                    {
                                        this.frameCounter++;
                                        if (this.frameCounter > 3)
                                        {
                                            this.frame++;
                                            this.frameCounter = 0;
                                        }
                                        if ((this.frame < 10) | (this.frame > 13))
                                        {
                                            this.frame = 10;
                                        }
                                        this.rotation = this.velocity.X * 0.1f;
                                    }
                                }
                                if (this.ai[0] == 2f)
                                {
                                    this.friendly = true;
                                    this.spriteDirection = base.direction;
                                    this.rotation = 0f;
                                    this.frame = 4 + ((num682 - ((int)this.ai[1])) / (num682 / 3));
                                    if (this.velocity.Y != 0f)
                                    {
                                        this.frame += 3;
                                    }
                                    this.velocity.Y += 0.4f;
                                    if (this.velocity.Y > 10f)
                                    {
                                        this.velocity.Y = 10f;
                                    }
                                    this.ai[1]--;
                                    if (this.ai[1] <= 0f)
                                    {
                                        this.ai[1] = 0f;
                                        this.ai[0] = 0f;
                                        this.friendly = false;
                                        this.netUpdate = true;
                                        return;
                                    }
                                }
                                if (num680 >= 0)
                                {
                                    float num689 = 400f;
                                    float num690 = 20f;
                                    if (flag27)
                                    {
                                        num689 = 700f;
                                    }
                                    if (this.position.Y > (Main.worldSurface * 16.0))
                                    {
                                        num689 *= 0.7f;
                                    }
                                    NPC npc4 = Main.npc[num680];
                                    Vector2 vector74 = npc4.Center;
                                    vector240 = vector74 - base.Center;
                                    float num691 = vector240.Length();
                                    Collision.CanHit(base.position, base.width, base.height, npc4.position, npc4.width, npc4.height);
                                    if (num691 < num689)
                                    {
                                        vector71 = vector74;
                                        if ((vector74.Y < (base.Center.Y - 30f)) && (this.velocity.Y == 0f))
                                        {
                                            float num692 = Math.Abs((float)(vector74.Y - base.Center.Y));
                                            if (num692 < 120f)
                                            {
                                                this.velocity.Y = -10f;
                                            }
                                            else if (num692 < 210f)
                                            {
                                                this.velocity.Y = -13f;
                                            }
                                            else if (num692 < 270f)
                                            {
                                                this.velocity.Y = -15f;
                                            }
                                            else if (num692 < 310f)
                                            {
                                                this.velocity.Y = -17f;
                                            }
                                            else if (num692 < 380f)
                                            {
                                                this.velocity.Y = -18f;
                                            }
                                        }
                                    }
                                    if (num691 < num690)
                                    {
                                        this.ai[0] = 2f;
                                        this.ai[1] = num682;
                                        this.netUpdate = true;
                                    }
                                }
                                if ((this.ai[0] == 0f) && (num680 < 0))
                                {
                                    float num693 = 500f;
                                    if (this.type == 500)
                                    {
                                        num693 = 200f;
                                    }
                                    if (Main.player[this.owner].rocketDelay2 > 0)
                                    {
                                        this.ai[0] = 1f;
                                        this.netUpdate = true;
                                    }
                                    Vector2 vector75 = player2.Center - base.Center;
                                    if (vector75.Length() > 2000f)
                                    {
                                        base.position = player2.Center - ((Vector2)(new Vector2((float)base.width, (float)base.height) / 2f));
                                    }
                                    else if ((vector75.Length() > num693) || (Math.Abs(vector75.Y) > 300f))
                                    {
                                        this.ai[0] = 1f;
                                        this.netUpdate = true;
                                        if ((this.velocity.Y > 0f) && (vector75.Y < 0f))
                                        {
                                            this.velocity.Y = 0f;
                                        }
                                        if ((this.velocity.Y < 0f) && (vector75.Y > 0f))
                                        {
                                            this.velocity.Y = 0f;
                                        }
                                    }
                                }
                                if (this.ai[0] == 0f)
                                {
                                    this.tileCollide = true;
                                    float num694 = 0.5f;
                                    float num695 = 4f;
                                    float num696 = 4f;
                                    float num697 = 0.1f;
                                    float introduced1800 = Math.Abs(player2.velocity.X);
                                    if (num696 < (introduced1800 + Math.Abs(player2.velocity.Y)))
                                    {
                                        float introduced1801 = Math.Abs(player2.velocity.X);
                                        num696 = introduced1801 + Math.Abs(player2.velocity.Y);
                                        num694 = 0.7f;
                                    }
                                    int num698 = 0;
                                    bool flag29 = false;
                                    float num699 = vector71.X - base.Center.X;
                                    if (Math.Abs(num699) > 5f)
                                    {
                                        if (num699 < 0f)
                                        {
                                            num698 = -1;
                                            if (this.velocity.X > -num695)
                                            {
                                                this.velocity.X -= num694;
                                            }
                                            else
                                            {
                                                this.velocity.X -= num697;
                                            }
                                        }
                                        else
                                        {
                                            num698 = 1;
                                            if (this.velocity.X < num695)
                                            {
                                                this.velocity.X += num694;
                                            }
                                            else
                                            {
                                                this.velocity.X += num697;
                                            }
                                        }
                                        flag29 = true;
                                    }
                                    else
                                    {
                                        this.velocity.X *= 0.9f;
                                        if (Math.Abs(this.velocity.X) < (num694 * 2f))
                                        {
                                            this.velocity.X = 0f;
                                        }
                                    }
                                    if (num698 != 0)
                                    {
                                        int num700 = (((int)this.position.X) + (base.width / 2)) / 0x10;
                                        int num701 = ((int)this.position.Y) / 0x10;
                                        num700 += num698;
                                        num700 += (int)this.velocity.X;
                                        for (int num702 = num701; num702 < ((num701 + (base.height / 0x10)) + 1); num702++)
                                        {
                                            if (WorldGen.SolidTile(num700, num702))
                                            {
                                                flag29 = true;
                                            }
                                        }
                                    }
                                    if ((this.type == 500) && (this.velocity.X != 0f))
                                    {
                                        flag29 = true;
                                    }
                                    Collision.StepUp(ref this.position, ref this.velocity, base.width, base.height, ref this.stepSpeed, ref this.gfxOffY, 1, false, 0);
                                    if ((this.velocity.Y == 0f) && flag29)
                                    {
                                        for (int num703 = 0; num703 < 3; num703++)
                                        {
                                            int num704 = (((int)this.position.X) + (base.width / 2)) / 0x10;
                                            switch (num703)
                                            {
                                                case 0:
                                                    num704 = ((int)this.position.X) / 0x10;
                                                    break;

                                                case 2:
                                                    num704 = (((int)this.position.X) + base.width) / 0x10;
                                                    break;
                                            }
                                            int num705 = ((((int)this.position.Y) + base.height) / 0x10) + 1;
                                            if ((WorldGen.SolidTile(num704, num705) || Main.tile[num704, num705].halfBrick()) || (Main.tile[num704, num705].slope() > 0))
                                            {
                                                try
                                                {
                                                    num704 = (((int)this.position.X) + (base.width / 2)) / 0x10;
                                                    num705 = (((int)this.position.Y) + (base.height / 2)) / 0x10;
                                                    num704 += num698;
                                                    num704 += (int)this.velocity.X;
                                                    if (!WorldGen.SolidTile(num704, num705 - 1) && !WorldGen.SolidTile(num704, num705 - 2))
                                                    {
                                                        this.velocity.Y = -5.1f;
                                                    }
                                                    else if (!WorldGen.SolidTile(num704, num705 - 2))
                                                    {
                                                        this.velocity.Y = -7.1f;
                                                    }
                                                    else if (WorldGen.SolidTile(num704, num705 - 5))
                                                    {
                                                        this.velocity.Y = -11.1f;
                                                    }
                                                    else if (WorldGen.SolidTile(num704, num705 - 4))
                                                    {
                                                        this.velocity.Y = -10.1f;
                                                    }
                                                    else
                                                    {
                                                        this.velocity.Y = -9.1f;
                                                    }
                                                }
                                                catch
                                                {
                                                    this.velocity.Y = -9.1f;
                                                }
                                            }
                                        }
                                    }
                                    if (this.velocity.X > num696)
                                    {
                                        this.velocity.X = num696;
                                    }
                                    if (this.velocity.X < -num696)
                                    {
                                        this.velocity.X = -num696;
                                    }
                                    if (this.velocity.X < 0f)
                                    {
                                        base.direction = -1;
                                    }
                                    if (this.velocity.X > 0f)
                                    {
                                        base.direction = 1;
                                    }
                                    if ((this.velocity.X > num694) && (num698 == 1))
                                    {
                                        base.direction = 1;
                                    }
                                    if ((this.velocity.X < -num694) && (num698 == -1))
                                    {
                                        base.direction = -1;
                                    }
                                    this.spriteDirection = base.direction;
                                    if (flag27)
                                    {
                                        this.rotation = 0f;
                                        if (this.velocity.Y == 0f)
                                        {
                                            if (this.velocity.X == 0f)
                                            {
                                                this.frame = 0;
                                                this.frameCounter = 0;
                                            }
                                            else if (Math.Abs(this.velocity.X) >= 0.5f)
                                            {
                                                this.frameCounter += (int)Math.Abs(this.velocity.X);
                                                this.frameCounter++;
                                                if (this.frameCounter > 10)
                                                {
                                                    this.frame++;
                                                    this.frameCounter = 0;
                                                }
                                                if (this.frame >= 4)
                                                {
                                                    this.frame = 0;
                                                }
                                            }
                                            else
                                            {
                                                this.frame = 0;
                                                this.frameCounter = 0;
                                            }
                                        }
                                        else if (this.velocity.Y != 0f)
                                        {
                                            this.frameCounter = 0;
                                            this.frame = 14;
                                        }
                                    }
                                    this.velocity.Y += 0.4f;
                                    if (this.velocity.Y > 10f)
                                    {
                                        this.velocity.Y = 10f;
                                    }
                                }
                                if (flag27)
                                {
                                    this.localAI[0]++;
                                    if (this.velocity.X == 0f)
                                    {
                                        this.localAI[0]++;
                                    }
                                    if (this.localAI[0] >= Main.rand.Next(900, 0x4b0))
                                    {
                                        this.localAI[0] = 0f;
                                        for (int num706 = 0; num706 < 6; num706++)
                                        {
                                            color5 = new Color();
                                            int num707 = Dust.NewDust((Vector2)(((base.Center + ((Vector2.UnitX * -base.direction) * 8f)) - (Vector2.One * 5f)) + (Vector2.UnitY * 8f)), 3, 6, 0xd8, (float)-base.direction, 1f, 0, color5, 1f);
                                            Dust dust208 = Main.dust[num707];
                                            dust208.velocity = (Vector2)(dust208.velocity / 2f);
                                            Main.dust[num707].scale = 0.8f;
                                        }
                                        int num708 = Gore.NewGore(base.Center + ((Vector2)((Vector2.UnitX * -base.direction) * 8f)), Vector2.Zero, Main.rand.Next(580, 0x247), 1f);
                                        Gore gore15 = Main.gore[num708];
                                        gore15.velocity = (Vector2)(gore15.velocity / 2f);
                                        Main.gore[num708].velocity.Y = Math.Abs(Main.gore[num708].velocity.Y);
                                        Main.gore[num708].velocity.X = -Math.Abs(Main.gore[num708].velocity.X) * base.direction;
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x44)
                            {
                                this.rotation += 0.25f * base.direction;
                                this.ai[0]++;
                                if (this.ai[0] >= 3f)
                                {
                                    this.alpha -= 40;
                                    if (this.alpha < 0)
                                    {
                                        this.alpha = 0;
                                    }
                                }
                                if (this.ai[0] >= 15f)
                                {
                                    this.velocity.Y += 0.2f;
                                    if (this.velocity.Y > 16f)
                                    {
                                        this.velocity.Y = 16f;
                                    }
                                    this.velocity.X *= 0.99f;
                                }
                                if (this.alpha == 0)
                                {
                                    Vector2 vector76 = new Vector2(4f, -8f);
                                    float rotation = this.rotation;
                                    if (base.direction == -1)
                                    {
                                        vector76.X = -4f;
                                    }
                                    vector240 = new Vector2();
                                    vector76 = vector76.RotatedBy((double)rotation, vector240);
                                    for (int num710 = 0; num710 < 1; num710++)
                                    {
                                        color5 = new Color();
                                        int num711 = Dust.NewDust((base.Center + vector76) - ((Vector2)(Vector2.One * 5f)), 4, 4, 6, 0f, 0f, 0, color5, 1f);
                                        Main.dust[num711].scale = 1.5f;
                                        Main.dust[num711].noGravity = true;
                                        Main.dust[num711].velocity = (Vector2)((Main.dust[num711].velocity * 0.25f) + (Vector2.Normalize(vector76) * 1f));
                                        vector240 = new Vector2();
                                        Main.dust[num711].velocity = Main.dust[num711].velocity.RotatedBy((double)(-1.570796f * base.direction), vector240);
                                    }
                                }
                                this.spriteDirection = base.direction;
                                if ((this.owner == Main.myPlayer) && (this.timeLeft <= 3))
                                {
                                    this.tileCollide = false;
                                    this.alpha = 0xff;
                                    this.position.X += base.width / 2;
                                    this.position.Y += base.height / 2;
                                    base.width = 80;
                                    base.height = 80;
                                    this.position.X -= base.width / 2;
                                    this.position.Y -= base.height / 2;
                                    this.knockBack = 8f;
                                }
                                if (base.wet && (this.timeLeft > 3))
                                {
                                    this.timeLeft = 3;
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x45)
                            {
                                Vector2 v = Main.player[this.owner].Center - base.Center;
                                this.rotation = v.ToRotation() - 1.57f;
                                if (Main.player[this.owner].dead)
                                {
                                    this.Kill();
                                    return;
                                }
                                Main.player[this.owner].itemAnimation = 10;
                                Main.player[this.owner].itemTime = 10;
                                if (v.X < 0f)
                                {
                                    Main.player[this.owner].ChangeDir(1);
                                    base.direction = 1;
                                }
                                else
                                {
                                    Main.player[this.owner].ChangeDir(-1);
                                    base.direction = -1;
                                }
                                Main.player[this.owner].itemRotation = ((Vector2)((v * -1f) * base.direction)).ToRotation();
                                this.spriteDirection = (v.X > 0f) ? -1 : 1;
                                if ((this.ai[0] == 0f) && (v.Length() > 400f))
                                {
                                    this.ai[0] = 1f;
                                }
                                if ((this.ai[0] == 1f) || (this.ai[0] == 2f))
                                {
                                    float num712 = v.Length();
                                    if (num712 > 1500f)
                                    {
                                        this.Kill();
                                        return;
                                    }
                                    if (num712 > 600f)
                                    {
                                        this.ai[0] = 2f;
                                    }
                                    this.tileCollide = false;
                                    float num713 = 20f;
                                    if (this.ai[0] == 2f)
                                    {
                                        num713 = 40f;
                                    }
                                    base.velocity = (Vector2)(Vector2.Normalize(v) * num713);
                                    if (v.Length() < num713)
                                    {
                                        this.Kill();
                                        return;
                                    }
                                }
                                this.ai[1]++;
                                if (this.ai[1] > 5f)
                                {
                                    this.alpha = 0;
                                }
                                if (((((int)this.ai[1]) % 4) == 0) && (this.owner == Main.myPlayer))
                                {
                                    Vector2 vector78 = (Vector2)(v * -1f);
                                    vector78.Normalize();
                                    vector78 = (Vector2)(vector78 * (Main.rand.Next(0x2d, 0x41) * 0.1f));
                                    vector78 = vector78.RotatedBy((Main.rand.NextDouble() - 0.5) * 1.5707963705062866, new Vector2());
                                    NewProjectile(base.Center.X, base.Center.Y, vector78.X, vector78.Y, 0x195, this.damage, this.knockBack, this.owner, -10f, 0f);
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 70)
                            {
                                if (this.ai[0] == 0f)
                                {
                                    float num714 = 500f;
                                    int num715 = -1;
                                    for (int num716 = 0; num716 < 200; num716++)
                                    {
                                        NPC npc5 = Main.npc[num716];
                                        if (npc5.CanBeChasedBy(this, false) && Collision.CanHit(base.position, base.width, base.height, npc5.position, npc5.width, npc5.height))
                                        {
                                            vector240 = npc5.Center - base.Center;
                                            float num717 = vector240.Length();
                                            if (num717 < num714)
                                            {
                                                num715 = num716;
                                                num714 = num717;
                                            }
                                        }
                                    }
                                    this.ai[0] = num715 + 1;
                                    if (this.ai[0] == 0f)
                                    {
                                        this.ai[0] = -15f;
                                    }
                                    if (this.ai[0] > 0f)
                                    {
                                        float num718 = ((float)Main.rand.Next(0x23, 0x4b)) / 30f;
                                        base.velocity = (Vector2)(((base.velocity * 20f) + (Vector2.Normalize((Main.npc[((int)this.ai[0]) - 1].Center - base.Center) + new Vector2((float)Main.rand.Next(-100, 0x65), (float)Main.rand.Next(-100, 0x65))) * num718)) / 21f);
                                        this.netUpdate = true;
                                    }
                                }
                                else if (this.ai[0] > 0f)
                                {
                                    Vector2 vector79 = Vector2.Normalize(Main.npc[((int)this.ai[0]) - 1].Center - base.Center);
                                    base.velocity = (Vector2)(((base.velocity * 40f) + (vector79 * 12f)) / 41f);
                                }
                                else
                                {
                                    this.ai[0]++;
                                    this.alpha -= 0x19;
                                    if (this.alpha < 50)
                                    {
                                        this.alpha = 50;
                                    }
                                    base.velocity = (Vector2)(base.velocity * 0.95f);
                                }
                                if (this.ai[1] == 0f)
                                {
                                    this.ai[1] = ((float)Main.rand.Next(80, 0x79)) / 100f;
                                    this.netUpdate = true;
                                }
                                this.scale = this.ai[1];
                                return;
                            }
                            if (this.aiStyle == 0x47)
                            {
                                this.localAI[1]++;
                                if ((this.localAI[1] > 10f) && (Main.rand.Next(3) == 0))
                                {
                                    int num719 = 6;
                                    for (int num720 = 0; num720 < num719; num720++)
                                    {
                                        Vector2 vector80 = (Vector2)((Vector2.Normalize(base.velocity) * new Vector2((float)base.width, (float)base.height)) / 2f);
                                        vector240 = new Vector2();
                                        vector80 = vector80.RotatedBy((((num720 - ((num719 / 2) - 1)) * 3.1415926535897931) / ((double)num719)), vector240) + base.Center;
                                        Vector2 vector81 = (((float)(Main.rand.NextDouble() * 3.1415927410125732)) - 1.570796f).ToRotationVector2() * Main.rand.Next(3, 8);
                                        color5 = new Color();
                                        int num721 = Dust.NewDust(vector80 + vector81, 0, 0, 0xd9, vector81.X * 2f, vector81.Y * 2f, 100, color5, 1.4f);
                                        Main.dust[num721].noGravity = true;
                                        Main.dust[num721].noLight = true;
                                        Dust dust209 = Main.dust[num721];
                                        dust209.velocity = (Vector2)(dust209.velocity / 4f);
                                        Dust dust210 = Main.dust[num721];
                                        dust210.velocity -= base.velocity;
                                    }
                                    this.alpha -= 5;
                                    if (this.alpha < 50)
                                    {
                                        this.alpha = 50;
                                    }
                                    this.rotation += this.velocity.X * 0.1f;
                                    this.frame = ((int)(this.localAI[1] / 3f)) % 3;
                                    Lighting.AddLight(((int)base.Center.X) / 0x10, ((int)base.Center.Y) / 0x10, 0.1f, 0.4f, 0.6f);
                                }
                                int num722 = -1;
                                Vector2 vector82 = base.Center;
                                float num723 = 500f;
                                if (this.localAI[0] > 0f)
                                {
                                    this.localAI[0]--;
                                }
                                if ((this.ai[0] == 0f) && (this.localAI[0] == 0f))
                                {
                                    for (int num724 = 0; num724 < 200; num724++)
                                    {
                                        NPC npc6 = Main.npc[num724];
                                        if (npc6.CanBeChasedBy(this, false) && ((this.ai[0] == 0f) || (this.ai[0] == (num724 + 1))))
                                        {
                                            Vector2 vector83 = npc6.Center;
                                            float num725 = Vector2.Distance(vector83, vector82);
                                            if ((num725 < num723) && Collision.CanHit(base.position, base.width, base.height, npc6.position, npc6.width, npc6.height))
                                            {
                                                num723 = num725;
                                                vector82 = vector83;
                                                num722 = num724;
                                            }
                                        }
                                    }
                                    if (num722 >= 0)
                                    {
                                        this.ai[0] = num722 + 1;
                                        this.netUpdate = true;
                                    }
                                    num722 = -1;
                                }
                                if ((this.localAI[0] == 0f) && (this.ai[0] == 0f))
                                {
                                    this.localAI[0] = 30f;
                                }
                                bool flag30 = false;
                                if (this.ai[0] != 0f)
                                {
                                    int num726 = (int)(this.ai[0] - 1f);
                                    if ((Main.npc[num726].active && !Main.npc[num726].dontTakeDamage) && (Main.npc[num726].immune[this.owner] == 0))
                                    {
                                        float num727 = Main.npc[num726].position.X + (Main.npc[num726].width / 2);
                                        float num728 = Main.npc[num726].position.Y + (Main.npc[num726].height / 2);
                                        float introduced1807 = Math.Abs((float)((this.position.X + (base.width / 2)) - num727));
                                        float num729 = introduced1807 + Math.Abs((float)((this.position.Y + (base.height / 2)) - num728));
                                        if (num729 < 1000f)
                                        {
                                            flag30 = true;
                                            vector82 = Main.npc[num726].Center;
                                        }
                                    }
                                    else
                                    {
                                        this.ai[0] = 0f;
                                        flag30 = false;
                                        this.netUpdate = true;
                                    }
                                }
                                if (flag30)
                                {
                                    Vector2 vector84 = vector82 - base.Center;
                                    float num730 = base.velocity.ToRotation();
                                    double num732 = vector84.ToRotation() - num730;
                                    if (num732 > 3.1415926535897931)
                                    {
                                        num732 -= 6.2831853071795862;
                                    }
                                    if (num732 < -3.1415926535897931)
                                    {
                                        num732 += 6.2831853071795862;
                                    }
                                    base.velocity = base.velocity.RotatedBy(num732 * 0.10000000149011612, new Vector2());
                                }
                                float num733 = this.velocity.Length();
                                this.velocity.Normalize();
                                base.velocity = (Vector2)(base.velocity * (num733 + 0.0025f));
                                return;
                            }
                            if (this.aiStyle == 0x48)
                            {
                                this.localAI[0]++;
                                if (this.localAI[0] > 5f)
                                {
                                    this.alpha -= 0x19;
                                    if (this.alpha < 50)
                                    {
                                        this.alpha = 50;
                                    }
                                }
                                base.velocity = (Vector2)(base.velocity * 0.96f);
                                if (this.ai[1] == 0f)
                                {
                                    this.ai[1] = ((float)Main.rand.Next(60, 0x79)) / 100f;
                                    this.netUpdate = true;
                                }
                                this.scale = this.ai[1];
                                base.position = base.Center;
                                int num734 = 14;
                                int num735 = 14;
                                base.width = (int)(num734 * this.ai[1]);
                                base.height = (int)(num735 * this.ai[1]);
                                base.position -= new Vector2((float)(base.width / 2), (float)(base.height / 2));
                                return;
                            }
                            if (this.aiStyle == 0x49)
                            {
                                int num736 = (int)this.ai[0];
                                int num737 = (int)this.ai[1];
                                Tile tile = Main.tile[num736, num737];
                                if (((tile == null) || !tile.active()) || (tile.type != 0x152))
                                {
                                    this.Kill();
                                    return;
                                }
                                float num738 = 2f;
                                float num739 = ((float)this.timeLeft) / 60f;
                                if (num739 < 1f)
                                {
                                    num738 *= num739;
                                }
                                if (this.type == 0x1a3)
                                {
                                    for (int num740 = 0; num740 < 2; num740++)
                                    {
                                        Vector2 vector85 = new Vector2(0f, -num738);
                                        vector85 = (Vector2)(vector85 * (0.85f + (((float)Main.rand.NextDouble()) * 0.2f)));
                                        vector240 = new Vector2();
                                        vector85 = vector85.RotatedBy((Main.rand.NextDouble() - 0.5) * 1.5707963705062866, vector240);
                                        color5 = new Color();
                                        int num741 = Dust.NewDust(base.position, base.width, base.height, 0xde, 0f, 0f, 100, color5, 1f);
                                        Dust dust3 = Main.dust[num741];
                                        dust3.scale = 1f + (((float)Main.rand.NextDouble()) * 0.3f);
                                        dust3.velocity = (Vector2)(dust3.velocity * 0.5f);
                                        if (dust3.velocity.Y > 0f)
                                        {
                                            dust3.velocity.Y *= -1f;
                                        }
                                        dust3.position -= new Vector2((float)(2 + Main.rand.Next(-2, 3)), 0f);
                                        dust3.velocity += vector85;
                                        dust3.scale = 0.6f;
                                        dust3.fadeIn = dust3.scale + 0.2f;
                                        dust3.velocity.Y *= 2f;
                                    }
                                }
                                if (this.type == 420)
                                {
                                    for (int num742 = 0; num742 < 2; num742++)
                                    {
                                        Vector2 vector86 = new Vector2(0f, -num738);
                                        vector86 = (Vector2)(vector86 * (0.85f + (((float)Main.rand.NextDouble()) * 0.2f)));
                                        vector240 = new Vector2();
                                        vector86 = vector86.RotatedBy((Main.rand.NextDouble() - 0.5) * 1.5707963705062866, vector240);
                                        int num743 = 0xdb;
                                        if (Main.rand.Next(5) == 0)
                                        {
                                            num743 = 0xde;
                                        }
                                        color5 = new Color();
                                        int num744 = Dust.NewDust(base.position, base.width, base.height, num743, 0f, 0f, 100, color5, 1f);
                                        Dust dust4 = Main.dust[num744];
                                        dust4.scale = 1f + (((float)Main.rand.NextDouble()) * 0.3f);
                                        dust4.velocity = (Vector2)(dust4.velocity * 0.5f);
                                        if (dust4.velocity.Y > 0f)
                                        {
                                            dust4.velocity.Y *= -1f;
                                        }
                                        dust4.position -= new Vector2((float)(2 + Main.rand.Next(-2, 3)), 0f);
                                        dust4.velocity += vector86;
                                        dust4.velocity.X *= 0.5f;
                                        dust4.scale = 0.6f;
                                        dust4.fadeIn = dust4.scale + 0.2f;
                                        dust4.velocity.Y *= 2f;
                                    }
                                }
                                if (this.type == 0x1a5)
                                {
                                    for (int num745 = 0; num745 < 2; num745++)
                                    {
                                        Vector2 vector87 = new Vector2(0f, -num738);
                                        vector87 = (Vector2)(vector87 * (0.85f + (((float)Main.rand.NextDouble()) * 0.2f)));
                                        vector240 = new Vector2();
                                        vector87 = vector87.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, vector240);
                                        color5 = new Color();
                                        int num746 = Dust.NewDust(base.position, base.width, base.height, 0xdd, 0f, 0f, 100, color5, 1f);
                                        Dust dust5 = Main.dust[num746];
                                        dust5.scale = 1f + (((float)Main.rand.NextDouble()) * 0.3f);
                                        dust5.velocity = (Vector2)(dust5.velocity * 0.1f);
                                        if (dust5.velocity.Y > 0f)
                                        {
                                            dust5.velocity.Y *= -1f;
                                        }
                                        dust5.position -= new Vector2((float)(2 + Main.rand.Next(-2, 3)), 0f);
                                        dust5.velocity += vector87;
                                        dust5.scale = 0.6f;
                                        dust5.fadeIn = dust5.scale + 0.2f;
                                        dust5.velocity.Y *= 2.5f;
                                    }
                                    if ((this.timeLeft % 10) == 0)
                                    {
                                        float num747 = 0.85f + (((float)Main.rand.NextDouble()) * 0.2f);
                                        for (int num748 = 0; num748 < 9; num748++)
                                        {
                                            Vector2 vector88 = new Vector2(((float)(num748 - 4)) / 5f, -num738 * num747);
                                            color5 = new Color();
                                            int num749 = Dust.NewDust(base.position, base.width, base.height, 0xde, 0f, 0f, 100, color5, 1f);
                                            Dust dust6 = Main.dust[num749];
                                            dust6.scale = 0.7f + (((float)Main.rand.NextDouble()) * 0.3f);
                                            dust6.velocity = (Vector2)(dust6.velocity * 0f);
                                            if (dust6.velocity.Y > 0f)
                                            {
                                                dust6.velocity.Y *= -1f;
                                            }
                                            dust6.position -= new Vector2((float)(2 + Main.rand.Next(-2, 3)), 0f);
                                            dust6.velocity += vector88;
                                            dust6.scale = 0.6f;
                                            dust6.fadeIn = dust6.scale + 0.2f;
                                            dust6.velocity.Y *= 2f;
                                        }
                                    }
                                }
                                if (this.type == 0x1a6)
                                {
                                    for (int num750 = 0; num750 < 2; num750++)
                                    {
                                        Vector2 vector89 = new Vector2(0f, -num738);
                                        vector89 = (Vector2)(vector89 * (0.85f + (((float)Main.rand.NextDouble()) * 0.2f)));
                                        vector240 = new Vector2();
                                        vector89 = vector89.RotatedBy((Main.rand.NextDouble() - 0.5) * 1.5707963705062866, vector240);
                                        color5 = new Color();
                                        int num751 = Dust.NewDust(base.position, base.width, base.height, 0xdb + Main.rand.Next(5), 0f, 0f, 100, color5, 1f);
                                        Dust dust7 = Main.dust[num751];
                                        dust7.scale = 1f + (((float)Main.rand.NextDouble()) * 0.3f);
                                        dust7.velocity = (Vector2)(dust7.velocity * 0.5f);
                                        if (dust7.velocity.Y > 0f)
                                        {
                                            dust7.velocity.Y *= -1f;
                                        }
                                        dust7.position -= new Vector2((float)(2 + Main.rand.Next(-2, 3)), 0f);
                                        dust7.velocity += vector89;
                                        dust7.scale = 0.6f;
                                        dust7.fadeIn = dust7.scale + 0.2f;
                                        dust7.velocity.Y *= 2f;
                                    }
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x4a)
                            {
                                if (this.extraUpdates == 1)
                                {
                                    this.localAI[0] *= this.localAI[1];
                                    this.localAI[1] -= 0.001f;
                                    if (this.localAI[0] < 0.01)
                                    {
                                        this.Kill();
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x4b)
                            {
                                this.AI_075();
                                return;
                            }
                            if (this.aiStyle == 0x4c)
                            {
                                Player mountedPlayer = Main.player[this.owner];
                                mountedPlayer.heldProj = base.whoAmI;
                                if (this.type == 0x1b9)
                                {
                                    if (mountedPlayer.mount.Type != 9)
                                    {
                                        this.Kill();
                                        return;
                                    }
                                }
                                else if ((this.type == 0x1c5) && (mountedPlayer.mount.Type != 8))
                                {
                                    this.Kill();
                                    return;
                                }
                                if (Main.myPlayer != this.owner)
                                {
                                    this.position.X = mountedPlayer.position.X + this.ai[0];
                                    this.position.Y = mountedPlayer.position.Y + this.ai[1];
                                    if (this.type == 0x1b9)
                                    {
                                        if (!mountedPlayer.mount.AbilityCharging)
                                        {
                                            mountedPlayer.mount.StartAbilityCharge(mountedPlayer);
                                        }
                                    }
                                    else if ((this.type == 0x1c5) && !mountedPlayer.mount.AbilityActive)
                                    {
                                        mountedPlayer.mount.UseAbility(mountedPlayer, base.position, false);
                                    }
                                    mountedPlayer.mount.AimAbility(mountedPlayer, base.position);
                                    return;
                                }
                                this.position.X = Main.screenPosition.X + Main.mouseX;
                                this.position.Y = Main.screenPosition.Y + Main.mouseY;
                                if ((this.ai[0] != (this.position.X - mountedPlayer.position.X)) || (this.ai[1] != (this.position.Y - mountedPlayer.position.Y)))
                                {
                                    this.netUpdate = true;
                                }
                                this.ai[0] = this.position.X - mountedPlayer.position.X;
                                this.ai[1] = this.position.Y - mountedPlayer.position.Y;
                                mountedPlayer.mount.AimAbility(mountedPlayer, base.position);
                                if (!mountedPlayer.channel)
                                {
                                    mountedPlayer.mount.UseAbility(mountedPlayer, base.position, false);
                                    this.Kill();
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x4d)
                            {
                                if (this.ai[1] == 1f)
                                {
                                    this.friendly = false;
                                    if (this.alpha < 0xff)
                                    {
                                        this.alpha += 0x33;
                                    }
                                    if (this.alpha >= 0xff)
                                    {
                                        this.alpha = 0xff;
                                        this.Kill();
                                        return;
                                    }
                                }
                                else
                                {
                                    if (this.alpha > 0)
                                    {
                                        this.alpha -= 50;
                                    }
                                    if (this.alpha < 0)
                                    {
                                        this.alpha = 0;
                                    }
                                }
                                float num752 = 30f;
                                float num753 = num752 * 4f;
                                this.ai[0]++;
                                if (this.ai[0] > num753)
                                {
                                    this.ai[0] = 0f;
                                }
                                Vector2 vector90 = -Vector2.UnitY.RotatedBy(((double)((6.283185f * this.ai[0]) / num752)), new Vector2());
                                float num754 = 0.75f + (vector90.Y * 0.25f);
                                float num755 = 0.8f - (vector90.Y * 0.2f);
                                float num756 = Math.Max(num754, num755);
                                base.position += (Vector2)(new Vector2((float)base.width, (float)base.height) / 2f);
                                base.width = base.height = (int)(80f * num756);
                                base.position -= (Vector2)(new Vector2((float)base.width, (float)base.height) / 2f);
                                this.frameCounter++;
                                if (this.frameCounter >= 3)
                                {
                                    this.frameCounter = 0;
                                    this.frame++;
                                    if (this.frame >= 4)
                                    {
                                        this.frame = 0;
                                    }
                                }
                                for (int num757 = 0; num757 < 1; num757++)
                                {
                                    float num758 = 55f * num756;
                                    float num759 = 11f * num756;
                                    float num760 = 0.5f;
                                    color5 = new Color();
                                    int num761 = Dust.NewDust(base.position, base.width, base.height, 0xe2, 0f, 0f, 100, color5, 0.5f);
                                    Main.dust[num761].noGravity = true;
                                    Dust dust211 = Main.dust[num761];
                                    dust211.velocity = (Vector2)(dust211.velocity * 2f);
                                    Main.dust[num761].position = ((Vector2)((((float)Main.rand.NextDouble()) * 6.283185f).ToRotationVector2() * (num759 + ((num760 * ((float)Main.rand.NextDouble())) * num758)))) + base.Center;
                                    Main.dust[num761].velocity = ((Vector2)(Main.dust[num761].velocity / 2f)) + Vector2.Normalize(Main.dust[num761].position - base.Center);
                                    if (Main.rand.Next(2) == 0)
                                    {
                                        color5 = new Color();
                                        num761 = Dust.NewDust(base.position, base.width, base.height, 0xe2, 0f, 0f, 100, color5, 0.9f);
                                        Main.dust[num761].noGravity = true;
                                        Dust dust212 = Main.dust[num761];
                                        dust212.velocity = (Vector2)(dust212.velocity * 1.2f);
                                        Main.dust[num761].position = ((Vector2)((((float)Main.rand.NextDouble()) * 6.283185f).ToRotationVector2() * (num759 + ((num760 * ((float)Main.rand.NextDouble())) * num758)))) + base.Center;
                                        Main.dust[num761].velocity = ((Vector2)(Main.dust[num761].velocity / 2f)) + Vector2.Normalize(Main.dust[num761].position - base.Center);
                                    }
                                    if (Main.rand.Next(4) == 0)
                                    {
                                        color5 = new Color();
                                        num761 = Dust.NewDust(base.position, base.width, base.height, 0xe2, 0f, 0f, 100, color5, 0.7f);
                                        Main.dust[num761].noGravity = true;
                                        Dust dust213 = Main.dust[num761];
                                        dust213.velocity = (Vector2)(dust213.velocity * 1.2f);
                                        Main.dust[num761].position = ((Vector2)((((float)Main.rand.NextDouble()) * 6.283185f).ToRotationVector2() * (num759 + ((num760 * ((float)Main.rand.NextDouble())) * num758)))) + base.Center;
                                        Main.dust[num761].velocity = ((Vector2)(Main.dust[num761].velocity / 2f)) + Vector2.Normalize(Main.dust[num761].position - base.Center);
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x4e)
                            {
                                if (this.alpha > 0)
                                {
                                    this.alpha -= 30;
                                }
                                if (this.alpha < 0)
                                {
                                    this.alpha = 0;
                                }
                                Vector2 vector91 = this.ai[0].ToRotationVector2();
                                float num762 = base.velocity.ToRotation();
                                double num764 = vector91.ToRotation() - num762;
                                if (num764 > 3.1415926535897931)
                                {
                                    num764 -= 6.2831853071795862;
                                }
                                if (num764 < -3.1415926535897931)
                                {
                                    num764 += 6.2831853071795862;
                                }
                                base.velocity = base.velocity.RotatedBy(num764 * 0.05000000074505806, new Vector2());
                                base.velocity = (Vector2)(base.velocity * 0.96f);
                                this.rotation = base.velocity.ToRotation() - 1.570796f;
                                if ((Main.myPlayer == this.owner) && (this.timeLeft > 60))
                                {
                                    this.timeLeft = 60;
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x4f)
                            {
                                bool flag31 = true;
                                int num765 = ((int)this.ai[0]) - 1;
                                if ((this.type == 0x1bf) && ((this.ai[0] == 0f) || ((!Main.npc[num765].active || (Main.npc[num765].type != 0x188)) && ((!Main.npc[num765].active || (Main.npc[num765].type != 0x18b)) || (((Main.npc[num765].ai[3] % 120f) < 60f) || (Main.npc[num765].ai[0] != 2f))))))
                                {
                                    flag31 = false;
                                }
                                if (!flag31)
                                {
                                    this.Kill();
                                    return;
                                }
                                NPC npc7 = Main.npc[num765];
                                float num766 = npc7.Center.Y + 46f;
                                int num767 = ((int)npc7.Center.X) / 0x10;
                                int num768 = ((int)num766) / 0x10;
                                int num769 = 0;
                                if ((!Main.tile[num767, num768].nactive() || !Main.tileSolid[Main.tile[num767, num768].type]) || Main.tileSolidTop[Main.tile[num767, num768].type])
                                {
                                    while ((num769 < 150) && ((num768 + num769) < Main.maxTilesY))
                                    {
                                        int num770 = num768 + num769;
                                        if ((Main.tile[num767, num770].nactive() && Main.tileSolid[Main.tile[num767, num770].type]) && !Main.tileSolidTop[Main.tile[num767, num770].type])
                                        {
                                            num769--;
                                            break;
                                        }
                                        num769++;
                                    }
                                }
                                else
                                {
                                    num769 = 1;
                                }
                                this.position.X = npc7.Center.X - (base.width / 2);
                                this.position.Y = num766;
                                base.height = (num769 + 1) * 0x10;
                                int num771 = ((int)this.position.Y) + base.height;
                                if ((Main.tile[num767, num771 / 0x10].nactive() && Main.tileSolid[Main.tile[num767, num771 / 0x10].type]) && !Main.tileSolidTop[Main.tile[num767, num771 / 0x10].type])
                                {
                                    int num772 = num771 % 0x10;
                                    base.height -= num772 - 2;
                                }
                                if (this.type == 0x1bf)
                                {
                                    for (int num773 = 0; num773 < 2; num773++)
                                    {
                                        color5 = new Color();
                                        int num774 = Dust.NewDust(new Vector2(this.position.X, (this.position.Y + base.height) - 16f), base.width, 0x10, 0xe4, 0f, 0f, 0, color5, 1f);
                                        Main.dust[num774].noGravity = true;
                                        Dust dust214 = Main.dust[num774];
                                        dust214.velocity = (Vector2)(dust214.velocity * 0.5f);
                                        Main.dust[num774].velocity.X -= num773 - ((npc7.velocity.X * 2f) / 3f);
                                        Main.dust[num774].scale = 2.8f;
                                    }
                                    if (Main.rand.Next(5) == 0)
                                    {
                                        int num775 = Dust.NewDust(new Vector2(((this.position.X + (base.width / 2)) - ((base.width / 2) * Math.Sign(npc7.velocity.X))) - 4f, (this.position.Y + base.height) - 16f), 4, 0x10, 0x1f, 0f, 0f, 100, new Color(), 1.5f);
                                        Dust dust215 = Main.dust[num775];
                                        dust215.velocity = (Vector2)(dust215.velocity * 0.5f);
                                        Main.dust[num775].velocity.X -= npc7.velocity.X / 2f;
                                        Main.dust[num775].velocity.Y = -Math.Abs(Main.dust[num775].velocity.Y);
                                    }
                                }
                                if ((this.type == 0x1bf) && (++this.frameCounter >= 5))
                                {
                                    this.frameCounter = 0;
                                    if (++this.frame < 4)
                                    {
                                        return;
                                    }
                                    this.frame = 0;
                                }
                                return;
                            }
                            if (this.aiStyle == 80)
                            {
                                if ((this.ai[0] == 0f) && (this.ai[1] > 0f))
                                {
                                    this.ai[1]--;
                                }
                                else if ((this.ai[0] == 0f) && (this.ai[1] == 0f))
                                {
                                    this.ai[0] = 1f;
                                    this.ai[1] = Player.FindClosest(base.position, base.width, base.height);
                                    this.netUpdate = true;
                                    float num776 = this.velocity.Length();
                                    base.velocity = (Vector2)(Vector2.Normalize(base.velocity) * (num776 + 4f));
                                    for (int num777 = 0; num777 < 8; num777++)
                                    {
                                        Vector2 vector92 = (Vector2)(Vector2.UnitX * -8f);
                                        vector240 = new Vector2();
                                        vector92 += -Vector2.UnitY.RotatedBy(((double)((num777 * 3.141593f) / 4f)), vector240) * new Vector2(2f, 8f);
                                        vector240 = new Vector2();
                                        vector92 = vector92.RotatedBy((double)(this.rotation - 1.570796f), vector240);
                                        color5 = new Color();
                                        int num778 = Dust.NewDust(base.Center, 0, 0, 0xe4, 0f, 0f, 0, color5, 1f);
                                        Main.dust[num778].scale = 1.5f;
                                        Main.dust[num778].noGravity = true;
                                        Main.dust[num778].position = base.Center + vector92;
                                        Main.dust[num778].velocity = (Vector2)(base.velocity * 0f);
                                    }
                                }
                                else if (this.ai[0] == 1f)
                                {
                                    this.tileCollide = true;
                                    this.localAI[1]++;
                                    float num779 = 180f;
                                    float num780 = 0f;
                                    float num781 = 30f;
                                    if (this.localAI[1] == num779)
                                    {
                                        this.Kill();
                                        return;
                                    }
                                    if ((this.localAI[1] >= num780) && (this.localAI[1] < (num780 + num781)))
                                    {
                                        Vector2 vector93 = Main.player[(int)this.ai[1]].Center - base.Center;
                                        float num782 = base.velocity.ToRotation();
                                        double num784 = vector93.ToRotation() - num782;
                                        if (num784 > 3.1415926535897931)
                                        {
                                            num784 -= 6.2831853071795862;
                                        }
                                        if (num784 < -3.1415926535897931)
                                        {
                                            num784 += 6.2831853071795862;
                                        }
                                        vector240 = new Vector2();
                                        base.velocity = base.velocity.RotatedBy(num784 * 0.20000000298023224, vector240);
                                    }
                                    if ((this.localAI[1] % 5f) == 0f)
                                    {
                                        for (int num785 = 0; num785 < 4; num785++)
                                        {
                                            Vector2 vector94 = (Vector2)(Vector2.UnitX * -8f);
                                            vector240 = new Vector2();
                                            vector94 += -Vector2.UnitY.RotatedBy(((double)((num785 * 3.141593f) / 4f)), vector240) * new Vector2(2f, 4f);
                                            vector240 = new Vector2();
                                            vector94 = vector94.RotatedBy((double)(this.rotation - 1.570796f), vector240);
                                            color5 = new Color();
                                            int num786 = Dust.NewDust(base.Center, 0, 0, 0xe4, 0f, 0f, 0, color5, 1f);
                                            Main.dust[num786].scale = 1.5f;
                                            Main.dust[num786].noGravity = true;
                                            Main.dust[num786].position = base.Center + vector94;
                                            Main.dust[num786].velocity = (Vector2)(base.velocity * 0f);
                                        }
                                    }
                                }
                                this.rotation = base.velocity.ToRotation() + 1.570796f;
                                if (++this.frameCounter >= 3)
                                {
                                    this.frameCounter = 0;
                                    if (++this.frame >= 3)
                                    {
                                        this.frame = 0;
                                    }
                                }
                                for (int num787 = 0; num787 < (1f + this.ai[0]); num787++)
                                {
                                    vector240 = new Vector2();
                                    Vector2 vector95 = (Vector2)((Vector2.UnitY.RotatedBy(((double)this.rotation), vector240) * 8f) * (num787 + 1));
                                    color5 = new Color();
                                    int num788 = Dust.NewDust(base.Center, 0, 0, 0xe4, 0f, 0f, 0, color5, 1f);
                                    Main.dust[num788].position = base.Center + vector95;
                                    Main.dust[num788].scale = 1f;
                                    Main.dust[num788].noGravity = true;
                                }
                                for (int num789 = 0; num789 < 0xff; num789++)
                                {
                                    Player player4 = Main.player[num789];
                                    if ((player4.active && !player4.dead) && (Vector2.Distance(player4.Center, base.Center) <= 42f))
                                    {
                                        this.Kill();
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x51)
                            {
                                int penetrate = this.penetrate;
                                if (this.ai[0] == 0f)
                                {
                                    this.tileCollide = true;
                                    this.localAI[0]++;
                                    if (this.localAI[0] > 7f)
                                    {
                                        int num791 = Utils.SelectRandom<int>(Main.rand, new int[] { 0xe2, 0xe5 });
                                        Vector2 vector96 = base.Center;
                                        Vector2 vector97 = new Vector2(-16f, 16f);
                                        float scale = 1f;
                                        vector97 += new Vector2(-16f, 16f);
                                        vector97 = vector97.RotatedBy((double)this.rotation, new Vector2());
                                        int num793 = 4;
                                        int num794 = Dust.NewDust((vector96 + vector97) + (Vector2.One * -num793), num793 * 2, num793 * 2, num791, 0f, 0f, 100, new Color(), scale);
                                        Dust dust216 = Main.dust[num794];
                                        dust216.velocity = (Vector2)(dust216.velocity * 0.1f);
                                        if (Main.rand.Next(6) != 0)
                                        {
                                            Main.dust[num794].noGravity = true;
                                        }
                                    }
                                    float num795 = 0.01f;
                                    int num796 = 5;
                                    int num797 = num796 * 15;
                                    int num798 = 0;
                                    if (this.localAI[0] > 7f)
                                    {
                                        if (this.localAI[1] == 0f)
                                        {
                                            this.scale -= num795;
                                            this.alpha += num796;
                                            if (this.alpha > num797)
                                            {
                                                this.alpha = num797;
                                                this.localAI[1] = 1f;
                                            }
                                        }
                                        else if (this.localAI[1] == 1f)
                                        {
                                            this.scale += num795;
                                            this.alpha -= num796;
                                            if (this.alpha <= num798)
                                            {
                                                this.alpha = num798;
                                                this.localAI[1] = 0f;
                                            }
                                        }
                                    }
                                    this.rotation = base.velocity.ToRotation() + 0.7853982f;
                                }
                                else if ((this.ai[0] >= 1) && (this.ai[0] < (1 + penetrate)))
                                {
                                    this.tileCollide = false;
                                    this.alpha += 15;
                                    base.velocity = (Vector2)(base.velocity * 0.98f);
                                    this.localAI[0] = 0f;
                                    if (this.alpha >= 0xff)
                                    {
                                        if (this.ai[0] == 1f)
                                        {
                                            this.Kill();
                                            return;
                                        }
                                        int num799 = -1;
                                        Vector2 vector98 = base.Center;
                                        float num800 = 250f;
                                        for (int num801 = 0; num801 < 200; num801++)
                                        {
                                            NPC npc8 = Main.npc[num801];
                                            if (npc8.CanBeChasedBy(this, false))
                                            {
                                                Vector2 vector99 = npc8.Center;
                                                float num802 = Vector2.Distance(vector99, base.Center);
                                                if (num802 < num800)
                                                {
                                                    num800 = num802;
                                                    vector98 = vector99;
                                                    num799 = num801;
                                                }
                                            }
                                        }
                                        if (num799 >= 0)
                                        {
                                            this.netUpdate = true;
                                            this.ai[0] += penetrate;
                                            base.position = (Vector2)((vector98 + ((((float)Main.rand.NextDouble()) * 6.283185f).ToRotationVector2() * 100f)) - (new Vector2((float)base.width, (float)base.height) / 2f));
                                            base.velocity = (Vector2)(Vector2.Normalize(vector98 - base.Center) * 15f);
                                            this.rotation = base.velocity.ToRotation() + 0.7853982f;
                                        }
                                        else
                                        {
                                            this.Kill();
                                        }
                                    }
                                    if (Main.rand.Next(3) == 0)
                                    {
                                        int num803 = Utils.SelectRandom<int>(Main.rand, new int[] { 0xe2, 0xe5 });
                                        Vector2 vector100 = base.Center;
                                        Vector2 vector101 = new Vector2(-16f, 16f);
                                        vector101 = vector101 = vector101;
                                        float num804 = 0.6f;
                                        vector101 += new Vector2(-16f, 16f);
                                        vector101 = vector101.RotatedBy((double)this.rotation, new Vector2());
                                        int num805 = 4;
                                        int num806 = Dust.NewDust((vector100 + vector101) + (Vector2.One * -num805), num805 * 2, num805 * 2, num803, 0f, 0f, 100, new Color(), num804);
                                        Dust dust217 = Main.dust[num806];
                                        dust217.velocity = (Vector2)(dust217.velocity * 0.1f);
                                        Main.dust[num806].noGravity = true;
                                    }
                                }
                                else if ((this.ai[0] >= (1 + penetrate)) && (this.ai[0] < (1 + (penetrate * 2))))
                                {
                                    this.scale = 0.9f;
                                    this.tileCollide = false;
                                    this.rotation = base.velocity.ToRotation() + 0.7853982f;
                                    this.ai[1]++;
                                    if (this.ai[1] >= 15f)
                                    {
                                        this.alpha += 0x33;
                                        base.velocity = (Vector2)(base.velocity * 0.8f);
                                        if (this.alpha >= 0xff)
                                        {
                                            this.Kill();
                                        }
                                    }
                                    else
                                    {
                                        this.alpha -= 0x7d;
                                        if (this.alpha < 0)
                                        {
                                            this.alpha = 0;
                                        }
                                        base.velocity = (Vector2)(base.velocity * 0.98f);
                                    }
                                    this.localAI[0]++;
                                    int num807 = Utils.SelectRandom<int>(Main.rand, new int[] { 0xe2, 0xe5 });
                                    Vector2 vector102 = base.Center;
                                    Vector2 vector103 = new Vector2(-16f, 16f);
                                    float num808 = 0.6f;
                                    vector103 += new Vector2(-16f, 16f);
                                    vector103 = vector103.RotatedBy((double)this.rotation, new Vector2());
                                    int num809 = 4;
                                    int num810 = Dust.NewDust((vector102 + vector103) + (Vector2.One * -num809), num809 * 2, num809 * 2, num807, 0f, 0f, 100, new Color(), num808);
                                    Dust dust218 = Main.dust[num810];
                                    dust218.velocity = (Vector2)(dust218.velocity * 0.1f);
                                    Main.dust[num810].noGravity = true;
                                }
                                float num811 = ((float)this.alpha) / 255f;
                                Lighting.AddLight(((int)base.Center.X) / 0x10, ((int)base.Center.Y) / 0x10, 0.3f * num811, 0.4f * num811, 1f * num811);
                                return;
                            }
                            if (this.aiStyle == 0x52)
                            {
                                this.alpha -= 40;
                                if (this.alpha < 0)
                                {
                                    this.alpha = 0;
                                }
                                if (this.ai[0] == 0f)
                                {
                                    this.localAI[0]++;
                                    if (this.localAI[0] >= 45f)
                                    {
                                        this.localAI[0] = 0f;
                                        this.ai[0] = 1f;
                                        this.ai[1] = -this.ai[1];
                                        this.netUpdate = true;
                                    }
                                    this.velocity.X = base.velocity.RotatedBy(((double)this.ai[1]), new Vector2()).X;
                                    this.velocity.X = MathHelper.Clamp(this.velocity.X, -6f, 6f);
                                    this.velocity.Y -= 0.08f;
                                    if (this.velocity.Y > 0f)
                                    {
                                        this.velocity.Y -= 0.2f;
                                    }
                                    if (this.velocity.Y < -7f)
                                    {
                                        this.velocity.Y = -7f;
                                    }
                                }
                                else if (this.ai[0] == 1f)
                                {
                                    this.localAI[0]++;
                                    if (this.localAI[0] >= 90f)
                                    {
                                        this.localAI[0] = 0f;
                                        this.ai[0] = 2f;
                                        this.ai[1] = Player.FindClosest(base.position, base.width, base.height);
                                        this.netUpdate = true;
                                    }
                                    this.velocity.X = base.velocity.RotatedBy(((double)this.ai[1]), new Vector2()).X;
                                    this.velocity.X = MathHelper.Clamp(this.velocity.X, -6f, 6f);
                                    this.velocity.Y -= 0.08f;
                                    if (this.velocity.Y > 0f)
                                    {
                                        this.velocity.Y -= 0.2f;
                                    }
                                    if (this.velocity.Y < -7f)
                                    {
                                        this.velocity.Y = -7f;
                                    }
                                }
                                else if (this.ai[0] == 2f)
                                {
                                    Vector2 vector104 = Main.player[(int)this.ai[1]].Center - base.Center;
                                    if (vector104.Length() < 30f)
                                    {
                                        this.Kill();
                                        return;
                                    }
                                    vector104.Normalize();
                                    vector104 = (Vector2)(vector104 * 14f);
                                    vector104 = Vector2.Lerp(base.velocity, vector104, 0.6f);
                                    if (vector104.Y < 6f)
                                    {
                                        vector104.Y = 6f;
                                    }
                                    float num812 = 0.4f;
                                    if (this.velocity.X < vector104.X)
                                    {
                                        this.velocity.X += num812;
                                        if ((this.velocity.X < 0f) && (vector104.X > 0f))
                                        {
                                            this.velocity.X += num812;
                                        }
                                    }
                                    else if (this.velocity.X > vector104.X)
                                    {
                                        this.velocity.X -= num812;
                                        if ((this.velocity.X > 0f) && (vector104.X < 0f))
                                        {
                                            this.velocity.X -= num812;
                                        }
                                    }
                                    if (this.velocity.Y < vector104.Y)
                                    {
                                        this.velocity.Y += num812;
                                        if ((this.velocity.Y < 0f) && (vector104.Y > 0f))
                                        {
                                            this.velocity.Y += num812;
                                        }
                                    }
                                    else if (this.velocity.Y > vector104.Y)
                                    {
                                        this.velocity.Y -= num812;
                                        if ((this.velocity.Y > 0f) && (vector104.Y < 0f))
                                        {
                                            this.velocity.Y -= num812;
                                        }
                                    }
                                }
                                if (this.alpha < 40)
                                {
                                    int num813 = Dust.NewDust(base.Center - ((Vector2)(Vector2.One * 5f)), 10, 10, 0xe5, -this.velocity.X / 3f, -this.velocity.Y / 3f, 150, Color.Transparent, 1.2f);
                                    Main.dust[num813].noGravity = true;
                                }
                                this.rotation = base.velocity.ToRotation() + 1.570796f;
                                return;
                            }
                            if (this.aiStyle == 0x53)
                            {
                                if (this.alpha > 200)
                                {
                                    this.alpha = 200;
                                }
                                this.alpha -= 5;
                                if (this.alpha < 0)
                                {
                                    this.alpha = 0;
                                }
                                float num814 = ((float)this.alpha) / 255f;
                                this.scale = 1f - num814;
                                if (this.ai[0] >= 0f)
                                {
                                    this.ai[0]++;
                                }
                                if (this.ai[0] == -1f)
                                {
                                    this.frame = 1;
                                    this.extraUpdates = 1;
                                }
                                else if (this.ai[0] < 30f)
                                {
                                    base.position = (Main.npc[(int)this.ai[1]].Center - ((Vector2)(new Vector2((float)base.width, (float)base.height) / 2f))) - base.velocity;
                                }
                                else
                                {
                                    base.velocity = (Vector2)(base.velocity * 0.96f);
                                    if (++this.frameCounter >= 6)
                                    {
                                        this.frameCounter = 0;
                                        if (++this.frame >= 2)
                                        {
                                            this.frame = 0;
                                        }
                                    }
                                }
                                if (this.alpha < 40)
                                {
                                    for (int num815 = 0; num815 < 2; num815++)
                                    {
                                        float num816 = (((float)Main.rand.NextDouble()) * 1f) - 0.5f;
                                        if (num816 < -0.5f)
                                        {
                                            num816 = -0.5f;
                                        }
                                        if (num816 > 0.5f)
                                        {
                                            num816 = 0.5f;
                                        }
                                        vector240 = new Vector2();
                                        vector240 = new Vector2();
                                        Vector2 vector105 = new Vector2((-base.width * 0.65f) * this.scale, 0f).RotatedBy(((double)(num816 * 6.283185f)), vector240).RotatedBy((double)base.velocity.ToRotation(), vector240);
                                        int num817 = Dust.NewDust(base.Center - ((Vector2)(Vector2.One * 5f)), 10, 10, 0xe5, -this.velocity.X / 3f, -this.velocity.Y / 3f, 150, Color.Transparent, 0.7f);
                                        Main.dust[num817].velocity = Vector2.Zero;
                                        Main.dust[num817].position = base.Center + vector105;
                                        Main.dust[num817].noGravity = true;
                                    }
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x54)
                            {
                                Vector2? nullable = null;
                                if (base.velocity.HasNaNs() || (base.velocity == Vector2.Zero))
                                {
                                    base.velocity = -Vector2.UnitY;
                                }
                                if (((this.type == 0x1c7) && Main.npc[(int)this.ai[1]].active) && (Main.npc[(int)this.ai[1]].type == 0x18c))
                                {
                                    Vector2 vector106 = new Vector2(27f, 59f);
                                    Vector2 vector107 = Utils.Vector2FromElipse(Main.npc[(int)this.ai[1]].localAI[0].ToRotationVector2(), (Vector2)(vector106 * Main.npc[(int)this.ai[1]].localAI[1]));
                                    base.position = (Main.npc[(int)this.ai[1]].Center + vector107) - ((Vector2)(new Vector2((float)base.width, (float)base.height) / 2f));
                                }
                                else if (((this.type == 0x1c7) && Main.npc[(int)this.ai[1]].active) && (Main.npc[(int)this.ai[1]].type == 400))
                                {
                                    Vector2 vector108 = new Vector2(30f, 30f);
                                    Vector2 vector109 = Utils.Vector2FromElipse(Main.npc[(int)this.ai[1]].localAI[0].ToRotationVector2(), (Vector2)(vector108 * Main.npc[(int)this.ai[1]].localAI[1]));
                                    base.position = (Main.npc[(int)this.ai[1]].Center + vector109) - ((Vector2)(new Vector2((float)base.width, (float)base.height) / 2f));
                                }
                                else if (((this.type == 0x219) && Main.npc[(int)this.ai[1]].active) && (Main.npc[(int)this.ai[1]].type == 0x19b))
                                {
                                    Vector2 vector110 = new Vector2((float)(Main.npc[(int)this.ai[1]].direction * 6), -4f);
                                    base.position = ((Main.npc[(int)this.ai[1]].Center + vector110) - ((Vector2)(base.Size / 2f))) + new Vector2(0f, -Main.npc[(int)this.ai[1]].gfxOffY);
                                }
                                else if (((this.type == 0x1cd) && Main.projectile[(int)this.ai[1]].active) && (Main.projectile[(int)this.ai[1]].type == 460))
                                {
                                    Vector2 vector111 = Vector2.Normalize(Main.projectile[(int)this.ai[1]].velocity);
                                    base.position = ((Vector2)((Main.projectile[(int)this.ai[1]].Center + (vector111 * 16f)) - (new Vector2((float)base.width, (float)base.height) / 2f))) + new Vector2(0f, -Main.projectile[(int)this.ai[1]].gfxOffY);
                                    base.velocity = Vector2.Normalize(Main.projectile[(int)this.ai[1]].velocity);
                                }
                                else if (((this.type == 0x282) && Main.projectile[(int)this.ai[1]].active) && (Main.projectile[(int)this.ai[1]].type == 0x281))
                                {
                                    base.Center = Main.projectile[(int)this.ai[1]].Center;
                                    base.velocity = Vector2.Normalize(Main.projectile[(int)this.ai[1]].ai[1].ToRotationVector2());
                                }
                                else if (((this.type == 0x278) && Main.projectile[(int)this.ai[1]].active) && (Main.projectile[(int)this.ai[1]].type == 0x279))
                                {
                                    float num818 = ((int)this.ai[0]) - 2.5f;
                                    Vector2 vector112 = Vector2.Normalize(Main.projectile[(int)this.ai[1]].velocity);
                                    Projectile projectile = Main.projectile[(int)this.ai[1]];
                                    float num819 = num818 * 0.5235988f;
                                    float num820 = 20f;
                                    Vector2 vector113 = Vector2.Zero;
                                    float num821 = 1f;
                                    float num822 = 15f;
                                    float num823 = -2f;
                                    if (projectile.ai[0] < 180f)
                                    {
                                        num821 = 1f - (projectile.ai[0] / 180f);
                                        num822 = 20f - ((projectile.ai[0] / 180f) * 14f);
                                        if (projectile.ai[0] < 120f)
                                        {
                                            num820 = 20f - (4f * (projectile.ai[0] / 120f));
                                            this.Opacity = (projectile.ai[0] / 120f) * 0.4f;
                                        }
                                        else
                                        {
                                            num820 = 16f - (10f * ((projectile.ai[0] - 120f) / 60f));
                                            this.Opacity = 0.4f + (((projectile.ai[0] - 120f) / 60f) * 0.6f);
                                        }
                                        num823 = -22f + ((projectile.ai[0] / 180f) * 20f);
                                    }
                                    else
                                    {
                                        num821 = 0f;
                                        num820 = 1.75f;
                                        num822 = 6f;
                                        this.Opacity = 1f;
                                        num823 = -2f;
                                    }
                                    float num824 = ((projectile.ai[0] + (num818 * num820)) / (num820 * 6f)) * 6.283185f;
                                    vector240 = new Vector2();
                                    num819 = (Vector2.UnitY.RotatedBy(((double)num824), vector240).Y * 0.5235988f) * num821;
                                    vector240 = new Vector2();
                                    vector240 = new Vector2();
                                    vector113 = (Vector2.UnitY.RotatedBy(((double)num824), vector240) * new Vector2(4f, num822)).RotatedBy((double)projectile.velocity.ToRotation(), vector240);
                                    base.position = ((Vector2)((projectile.Center + (vector112 * 16f)) - (base.Size / 2f))) + new Vector2(0f, -Main.projectile[(int)this.ai[1]].gfxOffY);
                                    base.position += (Vector2)(projectile.velocity.ToRotation().ToRotationVector2() * num823);
                                    base.position += vector113;
                                    vector240 = new Vector2();
                                    base.velocity = Vector2.Normalize(projectile.velocity).RotatedBy((double)num819, vector240);
                                    this.scale = 1.4f * (1f - num821);
                                    this.damage = projectile.damage;
                                    if (projectile.ai[0] >= 180f)
                                    {
                                        this.damage *= 3;
                                        nullable = new Vector2?(projectile.Center);
                                    }
                                    if (!Collision.CanHitLine(Main.player[this.owner].Center, 0, 0, projectile.Center, 0, 0))
                                    {
                                        nullable = new Vector2?(Main.player[this.owner].Center);
                                    }
                                    this.friendly = projectile.ai[0] > 30f;
                                }
                                else
                                {
                                    this.Kill();
                                    return;
                                }
                                if (base.velocity.HasNaNs() || (base.velocity == Vector2.Zero))
                                {
                                    base.velocity = -Vector2.UnitY;
                                }
                                if (this.type == 0x1cd)
                                {
                                    this.ai[0]++;
                                    if (this.ai[0] >= 300f)
                                    {
                                        this.Kill();
                                        return;
                                    }
                                    this.scale = ((float)Math.Sin((double)((this.ai[0] * 3.141593f) / 300f))) * 10f;
                                    if (this.scale > 1f)
                                    {
                                        this.scale = 1f;
                                    }
                                }
                                if (this.type == 0x1c7)
                                {
                                    if (this.localAI[0] == 0f)
                                    {
                                        Main.PlaySound(0x1d, (int)this.position.X, (int)this.position.Y, 0x68);
                                    }
                                    float num825 = 1f;
                                    if (Main.npc[(int)this.ai[1]].type == 400)
                                    {
                                        num825 = 0.4f;
                                    }
                                    this.localAI[0]++;
                                    if (this.localAI[0] >= 180f)
                                    {
                                        this.Kill();
                                        return;
                                    }
                                    this.scale = (((float)Math.Sin((double)((this.localAI[0] * 3.141593f) / 180f))) * 10f) * num825;
                                    if (this.scale > num825)
                                    {
                                        this.scale = num825;
                                    }
                                }
                                if (this.type == 0x282)
                                {
                                    float num826 = 1f;
                                    this.localAI[0]++;
                                    if (this.localAI[0] >= 50f)
                                    {
                                        this.Kill();
                                        return;
                                    }
                                    this.scale = (((float)Math.Sin((double)((this.localAI[0] * 3.141593f) / 50f))) * 10f) * num826;
                                    if (this.scale > num826)
                                    {
                                        this.scale = num826;
                                    }
                                }
                                if (this.type == 0x219)
                                {
                                    float num827 = 0.8f;
                                    this.localAI[0]++;
                                    if (this.localAI[0] >= 60f)
                                    {
                                        this.Kill();
                                        return;
                                    }
                                    this.scale = (((float)Math.Sin((double)((this.localAI[0] * 3.141593f) / 60f))) * 10f) * num827;
                                    if (this.scale > num827)
                                    {
                                        this.scale = num827;
                                    }
                                }
                                float f = base.velocity.ToRotation();
                                if (this.type == 0x1c7)
                                {
                                    f += this.ai[0];
                                }
                                this.rotation = f - 1.570796f;
                                base.velocity = f.ToRotationVector2();
                                float num829 = 0f;
                                float width = 0f;
                                Vector2 vector114 = base.Center;
                                if (nullable.HasValue)
                                {
                                    vector114 = nullable.Value;
                                }
                                if (this.type == 0x1c7)
                                {
                                    num829 = 3f;
                                    width = base.width;
                                }
                                else if (this.type == 0x1cd)
                                {
                                    num829 = 2f;
                                    width = 0f;
                                }
                                else if (this.type == 0x282)
                                {
                                    num829 = 2f;
                                    width = 0f;
                                }
                                else if (this.type == 0x278)
                                {
                                    num829 = 2f;
                                    width = 0f;
                                }
                                else if (this.type == 0x219)
                                {
                                    num829 = 2f;
                                    width = 0f;
                                }
                                float[] numArray3 = new float[(int)num829];
                                for (int num831 = 0; num831 < num829; num831++)
                                {
                                    Tuple<int, int> tuple;
                                    float num832 = ((float)num831) / (num829 - 1f);
                                    vector240 = new Vector2();
                                    Vector2 vector115 = vector114 + ((Vector2)(((base.velocity.RotatedBy(1.5707963705062866, vector240) * (num832 - 0.5f)) * width) * this.scale));
                                    int num833 = ((int)vector115.X) / 0x10;
                                    int num834 = ((int)vector115.Y) / 0x10;
                                    Vector2 vector116 = vector115 + ((Vector2)((base.velocity * 16f) * 150f));
                                    int num835 = ((int)vector116.X) / 0x10;
                                    int num836 = ((int)vector116.Y) / 0x10;
                                    float num837 = 0f;
                                    if (!Collision.TupleHitLine(num833, num834, num835, num836, 0, 0, new System.Collections.Generic.List<Tuple<int, int>>(), out tuple))
                                    {
                                        vector240 = new Vector2((float)Math.Abs((int)(num833 - tuple.Item1)), (float)Math.Abs((int)(num834 - tuple.Item2)));
                                        num837 = vector240.Length() * 16f;
                                    }
                                    else if ((tuple.Item1 == num835) && (tuple.Item2 == num836))
                                    {
                                        num837 = 2400f;
                                    }
                                    else
                                    {
                                        vector240 = new Vector2((float)Math.Abs((int)(num833 - tuple.Item1)), (float)Math.Abs((int)(num834 - tuple.Item2)));
                                        num837 = vector240.Length() * 16f;
                                    }
                                    numArray3[num831] = num837;
                                }
                                float num838 = 0f;
                                for (int num839 = 0; num839 < numArray3.Length; num839++)
                                {
                                    num838 += numArray3[num839];
                                }
                                num838 /= num829;
                                float amount = 0.5f;
                                if (this.type == 0x278)
                                {
                                    amount = 0.75f;
                                }
                                this.localAI[1] = MathHelper.Lerp(this.localAI[1], num838, amount);
                                if (this.type == 0x1c7)
                                {
                                    Vector2 vector117 = base.Center + ((Vector2)(base.velocity * (this.localAI[1] - 14f)));
                                    for (int num841 = 0; num841 < 2; num841++)
                                    {
                                        float num842 = base.velocity.ToRotation() + (((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.570796f);
                                        float num843 = (((float)Main.rand.NextDouble()) * 2f) + 2f;
                                        Vector2 vector118 = new Vector2(((float)Math.Cos((double)num842)) * num843, ((float)Math.Sin((double)num842)) * num843);
                                        color5 = new Color();
                                        int num844 = Dust.NewDust(vector117, 0, 0, 0xe5, vector118.X, vector118.Y, 0, color5, 1f);
                                        Main.dust[num844].noGravity = true;
                                        Main.dust[num844].scale = 1.7f;
                                    }
                                    if (Main.rand.Next(5) == 0)
                                    {
                                        vector240 = new Vector2();
                                        Vector2 vector119 = (Vector2)((base.velocity.RotatedBy(1.5707963705062866, vector240) * (((float)Main.rand.NextDouble()) - 0.5f)) * base.width);
                                        color5 = new Color();
                                        int num845 = Dust.NewDust((vector117 + vector119) - ((Vector2)(Vector2.One * 4f)), 8, 8, 0x1f, 0f, 0f, 100, color5, 1.5f);
                                        Dust dust219 = Main.dust[num845];
                                        dust219.velocity = (Vector2)(dust219.velocity * 0.5f);
                                        Main.dust[num845].velocity.Y = -Math.Abs(Main.dust[num845].velocity.Y);
                                    }
                                    DelegateMethods.v3_1 = new Vector3(0.3f, 0.65f, 0.7f);
                                    Utils.PlotTileLine(base.Center, base.Center + ((Vector2)(base.velocity * this.localAI[1])), base.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CastLight));
                                }
                                else if (this.type == 0x282)
                                {
                                    Vector2 vector120 = base.Center + ((Vector2)(base.velocity * (this.localAI[1] - 14f)));
                                    for (int num846 = 0; num846 < 2; num846++)
                                    {
                                        float num847 = base.velocity.ToRotation() + (((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.570796f);
                                        float num848 = (((float)Main.rand.NextDouble()) * 2f) + 2f;
                                        Vector2 vector121 = new Vector2(((float)Math.Cos((double)num847)) * num848, ((float)Math.Sin((double)num847)) * num848);
                                        color5 = new Color();
                                        int num849 = Dust.NewDust(vector120, 0, 0, 0xe5, vector121.X, vector121.Y, 0, color5, 1f);
                                        Main.dust[num849].noGravity = true;
                                        Main.dust[num849].scale = 1.7f;
                                    }
                                    if (Main.rand.Next(5) == 0)
                                    {
                                        vector240 = new Vector2();
                                        Vector2 vector122 = (Vector2)((base.velocity.RotatedBy(1.5707963705062866, vector240) * (((float)Main.rand.NextDouble()) - 0.5f)) * base.width);
                                        color5 = new Color();
                                        int num850 = Dust.NewDust((vector120 + vector122) - ((Vector2)(Vector2.One * 4f)), 8, 8, 0x1f, 0f, 0f, 100, color5, 1.5f);
                                        Dust dust220 = Main.dust[num850];
                                        dust220.velocity = (Vector2)(dust220.velocity * 0.5f);
                                        Main.dust[num850].velocity.Y = -Math.Abs(Main.dust[num850].velocity.Y);
                                    }
                                    DelegateMethods.v3_1 = new Vector3(0.3f, 0.65f, 0.7f);
                                    Utils.PlotTileLine(base.Center, base.Center + ((Vector2)(base.velocity * this.localAI[1])), base.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CastLight));
                                }
                                if (this.type == 0x1cd)
                                {
                                    Vector2 vector123 = base.Center + ((Vector2)(base.velocity * (this.localAI[1] - 8f)));
                                    for (int num851 = 0; num851 < 2; num851++)
                                    {
                                        float num852 = base.velocity.ToRotation() + (((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.570796f);
                                        float num853 = (((float)Main.rand.NextDouble()) * 0.8f) + 1f;
                                        Vector2 vector124 = new Vector2(((float)Math.Cos((double)num852)) * num853, ((float)Math.Sin((double)num852)) * num853);
                                        color5 = new Color();
                                        int num854 = Dust.NewDust(vector123, 0, 0, 0xe2, vector124.X, vector124.Y, 0, color5, 1f);
                                        Main.dust[num854].noGravity = true;
                                        Main.dust[num854].scale = 1.2f;
                                    }
                                    if (Main.rand.Next(5) == 0)
                                    {
                                        vector240 = new Vector2();
                                        Vector2 vector125 = (Vector2)((base.velocity.RotatedBy(1.5707963705062866, vector240) * (((float)Main.rand.NextDouble()) - 0.5f)) * base.width);
                                        color5 = new Color();
                                        int num855 = Dust.NewDust((vector123 + vector125) - ((Vector2)(Vector2.One * 4f)), 8, 8, 0x1f, 0f, 0f, 100, color5, 1.5f);
                                        Dust dust221 = Main.dust[num855];
                                        dust221.velocity = (Vector2)(dust221.velocity * 0.5f);
                                        Main.dust[num855].velocity.Y = -Math.Abs(Main.dust[num855].velocity.Y);
                                    }
                                    DelegateMethods.v3_1 = new Vector3(0.4f, 0.85f, 0.9f);
                                    Utils.PlotTileLine(base.Center, base.Center + ((Vector2)(base.velocity * this.localAI[1])), base.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CastLight));
                                }
                                if (this.type == 0x219)
                                {
                                    Vector2 vector126 = base.Center + ((Vector2)(base.velocity * (this.localAI[1] - 8f)));
                                    for (int num856 = 0; num856 < 2; num856++)
                                    {
                                        float num857 = base.velocity.ToRotation() + (((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.570796f);
                                        float num858 = (((float)Main.rand.NextDouble()) * 0.8f) + 1f;
                                        Vector2 vector127 = new Vector2(((float)Math.Cos((double)num857)) * num858, ((float)Math.Sin((double)num857)) * num858);
                                        color5 = new Color();
                                        int num859 = Dust.NewDust(vector126, 0, 0, 0xe2, vector127.X, vector127.Y, 0, color5, 1f);
                                        Main.dust[num859].noGravity = true;
                                        Main.dust[num859].scale = 1.2f;
                                    }
                                    if (Main.rand.Next(5) == 0)
                                    {
                                        vector240 = new Vector2();
                                        Vector2 vector128 = (Vector2)((base.velocity.RotatedBy(1.5707963705062866, vector240) * (((float)Main.rand.NextDouble()) - 0.5f)) * base.width);
                                        color5 = new Color();
                                        int num860 = Dust.NewDust((vector126 + vector128) - ((Vector2)(Vector2.One * 4f)), 8, 8, 0x1f, 0f, 0f, 100, color5, 1.5f);
                                        Dust dust222 = Main.dust[num860];
                                        dust222.velocity = (Vector2)(dust222.velocity * 0.5f);
                                        Main.dust[num860].velocity.Y = -Math.Abs(Main.dust[num860].velocity.Y);
                                    }
                                    DelegateMethods.v3_1 = new Vector3(0.4f, 0.85f, 0.9f);
                                    Utils.PlotTileLine(base.Center, base.Center + ((Vector2)(base.velocity * this.localAI[1])), base.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CastLight));
                                }
                                if (((this.type == 0x278) && (Math.Abs((float)(this.localAI[1] - num838)) < 100f)) && (this.scale > 0.15f))
                                {
                                    Color color2 = Main.hslToRgb(this.GetPrismHue(this.ai[0]), 1f, 0.5f);
                                    color2.A = 0;
                                    Vector2 vector129 = base.Center + ((Vector2)(base.velocity * (this.localAI[1] - (14.5f * this.scale))));
                                    float num862 = Main.rgbToHsl(new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB)).X;
                                    for (int num863 = 0; num863 < 2; num863++)
                                    {
                                        float num864 = base.velocity.ToRotation() + (((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.570796f);
                                        float num865 = (((float)Main.rand.NextDouble()) * 0.8f) + 1f;
                                        Vector2 vector130 = new Vector2(((float)Math.Cos((double)num864)) * num865, ((float)Math.Sin((double)num864)) * num865);
                                        color5 = new Color();
                                        int num866 = Dust.NewDust(vector129, 0, 0, 0x10b, vector130.X, vector130.Y, 0, color5, 1f);
                                        Main.dust[num866].color = color2;
                                        Main.dust[num866].scale = 1.2f;
                                        if (this.scale > 1f)
                                        {
                                            Dust dust223 = Main.dust[num866];
                                            dust223.velocity = (Vector2)(dust223.velocity * this.scale);
                                            Dust dust224 = Main.dust[num866];
                                            dust224.scale *= this.scale;
                                        }
                                        Main.dust[num866].noGravity = true;
                                        if (this.scale != 1.4f)
                                        {
                                            Dust dust8 = Dust.CloneDust(Main.dust[num866]);
                                            dust8.color = Color.White;
                                            dust8.scale /= 2f;
                                        }
                                        float hue = (num862 + (Main.rand.NextFloat() * 0.4f)) % 1f;
                                        Main.dust[num866].color = Color.Lerp(color2, Main.hslToRgb(hue, 1f, 0.75f), this.scale / 1.4f);
                                    }
                                    if (Main.rand.Next(5) == 0)
                                    {
                                        Vector2 vector131 = (Vector2)((base.velocity.RotatedBy(1.5707963705062866, new Vector2()) * (((float)Main.rand.NextDouble()) - 0.5f)) * base.width);
                                        int num868 = Dust.NewDust((vector129 + vector131) - ((Vector2)(Vector2.One * 4f)), 8, 8, 0x1f, 0f, 0f, 100, new Color(), 1.5f);
                                        Dust dust225 = Main.dust[num868];
                                        dust225.velocity = (Vector2)(dust225.velocity * 0.5f);
                                        Main.dust[num868].velocity.Y = -Math.Abs(Main.dust[num868].velocity.Y);
                                    }
                                    DelegateMethods.v3_1 = (Vector3)(color2.ToVector3() * 0.3f);
                                    Utils.PlotTileLine(base.Center, base.Center + ((Vector2)(base.velocity * this.localAI[1])), base.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CastLight));
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x55)
                            {
                                Vector2 vector132 = new Vector2(0f, 216f);
                                this.alpha -= 15;
                                if (this.alpha < 0)
                                {
                                    this.alpha = 0;
                                }
                                int num869 = ((int)Math.Abs(this.ai[0])) - 1;
                                int num870 = (int)this.ai[1];
                                if (!Main.npc[num869].active || (Main.npc[num869].type != 0x18c))
                                {
                                    this.Kill();
                                    return;
                                }
                                this.localAI[0]++;
                                if (((this.localAI[0] >= 330f) && (this.ai[0] > 0f)) && (Main.netMode != 1))
                                {
                                    this.ai[0] *= -1f;
                                    this.netUpdate = true;
                                }
                                if (((Main.netMode != 1) && (this.ai[0] > 0f)) && (!Main.player[(int)this.ai[1]].active || Main.player[(int)this.ai[1]].dead))
                                {
                                    this.ai[0] *= -1f;
                                    this.netUpdate = true;
                                }
                                this.rotation = ((Main.npc[((int)Math.Abs(this.ai[0])) - 1].Center - Main.player[(int)this.ai[1]].Center) + vector132).ToRotation() + 1.570796f;
                                if (this.ai[0] <= 0f)
                                {
                                    Vector2 vector134 = (Main.npc[((int)Math.Abs(this.ai[0])) - 1].Center - base.Center) + vector132;
                                    if ((vector134.X != 0f) || (vector134.Y != 0f))
                                    {
                                        base.velocity = (Vector2)(Vector2.Normalize(vector134) * Math.Min(16f, vector134.Length()));
                                    }
                                    else
                                    {
                                        base.velocity = Vector2.Zero;
                                    }
                                    if (vector134.Length() < 20f)
                                    {
                                        this.Kill();
                                        return;
                                    }
                                }
                                else
                                {
                                    Vector2 vector133 = Main.player[(int)this.ai[1]].Center - base.Center;
                                    if ((vector133.X != 0f) || (vector133.Y != 0f))
                                    {
                                        base.velocity = (Vector2)(Vector2.Normalize(vector133) * Math.Min(16f, vector133.Length()));
                                    }
                                    else
                                    {
                                        base.velocity = Vector2.Zero;
                                    }
                                    if ((vector133.Length() < 20f) && (this.localAI[1] == 0f))
                                    {
                                        this.localAI[1] = 1f;
                                        int num871 = 840;
                                        if (Main.expertMode)
                                        {
                                            num871 = 960;
                                        }
                                        Main.player[num870].AddBuff(0x91, num871, true);
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x56)
                            {
                                if (this.localAI[1] == 0f)
                                {
                                    this.localAI[1] = 1f;
                                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 120);
                                }
                                this.ai[0]++;
                                if (this.ai[1] == 1f)
                                {
                                    if (this.ai[0] >= 130f)
                                    {
                                        this.alpha += 10;
                                    }
                                    else
                                    {
                                        this.alpha -= 10;
                                    }
                                    if (this.alpha < 0)
                                    {
                                        this.alpha = 0;
                                    }
                                    if (this.alpha > 0xff)
                                    {
                                        this.alpha = 0xff;
                                    }
                                    if (this.ai[0] >= 150f)
                                    {
                                        this.Kill();
                                        return;
                                    }
                                    if (((this.ai[0] % 30f) == 0f) && (Main.netMode != 1))
                                    {
                                        Vector2 vector135 = this.rotation.ToRotationVector2();
                                        NewProjectile(base.Center.X, base.Center.Y, vector135.X, vector135.Y, 0x1d0, this.damage, this.knockBack, this.owner, 0f, 0f);
                                    }
                                    this.rotation += 0.1047198f;
                                    Lighting.AddLight(base.Center, 0.3f, 0.75f, 0.9f);
                                    return;
                                }
                                base.position -= base.velocity;
                                if (this.ai[0] >= 40f)
                                {
                                    this.alpha += 3;
                                }
                                else
                                {
                                    this.alpha -= 40;
                                }
                                if (this.alpha < 0)
                                {
                                    this.alpha = 0;
                                }
                                if (this.alpha > 0xff)
                                {
                                    this.alpha = 0xff;
                                }
                                if (this.ai[0] >= 45f)
                                {
                                    this.Kill();
                                    return;
                                }
                                vector240 = new Vector2();
                                Vector2 vector136 = new Vector2(0f, -720f).RotatedBy((double)base.velocity.ToRotation(), vector240);
                                float num872 = (this.ai[0] % 45f) / 45f;
                                Vector2 vector137 = (Vector2)(vector136 * num872);
                                for (int num873 = 0; num873 < 6; num873++)
                                {
                                    vector240 = new Vector2();
                                    Vector2 vector138 = base.Center + vector137.RotatedBy(((double)((num873 * 6.283185f) / 6f)), vector240);
                                    Lighting.AddLight(vector138, 0.3f, 0.75f, 0.9f);
                                    for (int num874 = 0; num874 < 2; num874++)
                                    {
                                        int num875 = Dust.NewDust(vector138 + ((Vector2)(Utils.RandomVector2(Main.rand, -8f, 8f) / 2f)), 8, 8, 0xc5, 0f, 0f, 100, Color.Transparent, 1f);
                                        Main.dust[num875].noGravity = true;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x57)
                            {
                                this.position.Y = this.ai[0];
                                base.height = (int)this.ai[1];
                                if (base.Center.X > Main.player[this.owner].Center.X)
                                {
                                    base.direction = 1;
                                }
                                else
                                {
                                    base.direction = -1;
                                }
                                this.velocity.X = base.direction * 1E-06f;
                                if (this.owner == Main.myPlayer)
                                {
                                    for (int num876 = 0; num876 < 0x3e8; num876++)
                                    {
                                        if (((Main.projectile[num876].active && (num876 != base.whoAmI)) && ((Main.projectile[num876].type == this.type) && (Main.projectile[num876].owner == this.owner))) && (Main.projectile[num876].timeLeft > this.timeLeft))
                                        {
                                            this.Kill();
                                            return;
                                        }
                                    }
                                }
                                float num877 = (base.width * base.height) * 0.0045f;
                                for (int num878 = 0; num878 < num877; num878++)
                                {
                                    color5 = new Color();
                                    int num879 = Dust.NewDust(base.position, base.width, base.height, 0x4b, 0f, 0f, 100, color5, 1f);
                                    Main.dust[num879].noGravity = true;
                                    Dust dust226 = Main.dust[num879];
                                    dust226.velocity = (Vector2)(dust226.velocity * 0.5f);
                                    Main.dust[num879].velocity.Y -= 0.5f;
                                    Main.dust[num879].scale = 1.4f;
                                    Main.dust[num879].position.X += 6f;
                                    Main.dust[num879].position.Y -= 2f;
                                }
                                return;
                            }
                            if (this.aiStyle != 0x58)
                            {
                                float num1163;
                                if (this.aiStyle == 0x59)
                                {
                                    if (this.ai[1] == -1f)
                                    {
                                        this.alpha += 12;
                                    }
                                    else if (this.ai[0] < 300f)
                                    {
                                        this.alpha -= 5;
                                    }
                                    else
                                    {
                                        this.alpha += 12;
                                    }
                                    if (this.alpha < 0)
                                    {
                                        this.alpha = 0;
                                    }
                                    if (this.alpha > 0xff)
                                    {
                                        this.alpha = 0xff;
                                    }
                                    this.scale = 1f - (((float)this.alpha) / 255f);
                                    this.scale *= 0.6f;
                                    this.rotation += 0.01495997f;
                                    if (this.localAI[1] == 0f)
                                    {
                                        this.localAI[1] = 1f;
                                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 0x7b);
                                    }
                                    if (this.alpha == 0)
                                    {
                                        for (int num913 = 0; num913 < 2; num913++)
                                        {
                                            float num914 = Main.rand.Next(2, 4);
                                            float num915 = this.scale;
                                            if (num913 == 1)
                                            {
                                                num915 *= 0.42f;
                                                num914 *= -0.75f;
                                            }
                                            Vector2 vector153 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
                                            vector153.Normalize();
                                            color5 = new Color();
                                            int num916 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xe4, 0f, 0f, 100, color5, 2f);
                                            Main.dust[num916].noGravity = true;
                                            Main.dust[num916].noLight = true;
                                            Main.dust[num916].position = base.Center + ((Vector2)((vector153 * 204f) * num915));
                                            if (Main.rand.Next(8) == 0)
                                            {
                                                Main.dust[num916].velocity = (Vector2)((vector153 * -num914) * 2f);
                                                Dust dust229 = Main.dust[num916];
                                                dust229.scale += 0.5f;
                                            }
                                            else
                                            {
                                                Main.dust[num916].velocity = (Vector2)(vector153 * -num914);
                                            }
                                        }
                                    }
                                    this.ai[0]++;
                                    if (this.ai[0] >= 60f)
                                    {
                                        int num1 = ((int)(this.ai[0] - 0f)) / 60;
                                        for (int num917 = 0; num917 < 1; num917++)
                                        {
                                            float num918 = Main.rand.Next(1, 3);
                                            Vector2 vector154 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
                                            vector154.Normalize();
                                            color5 = new Color();
                                            int num919 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xe4, 0f, 0f, 100, color5, 2f);
                                            Main.dust[num919].noGravity = true;
                                            Main.dust[num919].noLight = true;
                                            Main.dust[num919].position = base.Center;
                                            if (Main.rand.Next(2) == 0)
                                            {
                                                Main.dust[num919].velocity = (Vector2)((vector154 * num918) * 2f);
                                                Dust dust230 = Main.dust[num919];
                                                dust230.scale += 0.5f;
                                            }
                                            else
                                            {
                                                Main.dust[num919].velocity = (Vector2)(vector154 * num918);
                                            }
                                            Main.dust[num919].fadeIn = 2f;
                                        }
                                    }
                                    if (((this.ai[0] == 300f) && (this.ai[1] != -1f)) && (Main.netMode != 1))
                                    {
                                        if (!NPC.AnyNPCs(0x1c6))
                                        {
                                            this.ai[1] = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 0x1c6, 0, 0f, 0f, 0f, 0f, 0xff);
                                        }
                                        else
                                        {
                                            this.ai[1] = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 0x209, 0, 0f, 0f, 0f, 0f, 0xff);
                                        }
                                    }
                                    else if (this.ai[0] == 320f)
                                    {
                                        this.Kill();
                                        return;
                                    }
                                    bool flag38 = false;
                                    if (this.ai[1] == -1f)
                                    {
                                        if (this.alpha == 0xff)
                                        {
                                            flag38 = true;
                                        }
                                    }
                                    else
                                    {
                                        flag38 = (this.ai[1] < 0f) || !Main.npc[(int)this.ai[1]].active;
                                        if (((flag38 || (Main.npc[(int)this.ai[1]].type != 0x1b7)) && (flag38 || (Main.npc[(int)this.ai[1]].type != 0x1c6))) && (flag38 || (Main.npc[(int)this.ai[1]].type != 0x209)))
                                        {
                                            flag38 = true;
                                        }
                                    }
                                    if (flag38)
                                    {
                                        this.Kill();
                                        return;
                                    }
                                    Lighting.AddLight(base.Center, 1.1f, 0.9f, 0.4f);
                                    return;
                                }
                                if (this.aiStyle == 90)
                                {
                                    if (Main.player[this.owner].dead)
                                    {
                                        this.Kill();
                                    }
                                    if ((Main.myPlayer == this.owner) && Main.player[this.owner].magicLantern)
                                    {
                                        this.timeLeft = 2;
                                    }
                                    if (this.tileCollide)
                                    {
                                        if (!Collision.CanHit(base.position, base.width, base.height, Main.player[this.owner].Center, 1, 1))
                                        {
                                            this.tileCollide = false;
                                        }
                                        else if (!Collision.SolidCollision(base.position, base.width, base.height) && Collision.CanHitLine(base.position, base.width, base.height, Main.player[this.owner].Center, 1, 1))
                                        {
                                            this.tileCollide = true;
                                        }
                                    }
                                    base.direction = Main.player[this.owner].direction;
                                    this.spriteDirection = base.direction;
                                    Lighting.AddLight(base.position, 0.35f, 0.35f, 0.1f);
                                    this.localAI[0]++;
                                    if (this.localAI[0] >= 10f)
                                    {
                                        this.localAI[0] = 0f;
                                        int num920 = 0x11;
                                        Vector2 vector155 = base.Center - Main.player[Main.myPlayer].Center;
                                        if (vector155.Length() < (Main.screenWidth + (num920 * 0x10)))
                                        {
                                            int num921 = ((int)base.Center.X) / 0x10;
                                            int num922 = ((int)base.Center.Y) / 0x10;
                                            for (int num923 = num921 - num920; num923 <= (num921 + num920); num923++)
                                            {
                                                for (int num924 = num922 - num920; num924 <= (num922 + num920); num924++)
                                                {
                                                    if (Main.rand.Next(4) == 0)
                                                    {
                                                        Vector2 vector156 = new Vector2((float)(num921 - num923), (float)(num922 - num924));
                                                        if ((((vector156.Length() < num920) && (num923 > 0)) && ((num923 < (Main.maxTilesX - 1)) && (num924 > 0))) && (((num924 < (Main.maxTilesY - 1)) && (Main.tile[num923, num924] != null)) && Main.tile[num923, num924].active()))
                                                        {
                                                            bool flag39 = false;
                                                            if ((Main.tile[num923, num924].type == 0xb9) && (Main.tile[num923, num924].frameY == 0x12))
                                                            {
                                                                if ((Main.tile[num923, num924].frameX >= 0x240) && (Main.tile[num923, num924].frameX <= 0x372))
                                                                {
                                                                    flag39 = true;
                                                                }
                                                            }
                                                            else if (((Main.tile[num923, num924].type == 0xba) && (Main.tile[num923, num924].frameX >= 0x360)) && (Main.tile[num923, num924].frameX <= 0x492))
                                                            {
                                                                flag39 = true;
                                                            }
                                                            if ((flag39 || Main.tileSpelunker[Main.tile[num923, num924].type]) || (Main.tileAlch[Main.tile[num923, num924].type] && (Main.tile[num923, num924].type != 0x52)))
                                                            {
                                                                color5 = new Color();
                                                                int num925 = Dust.NewDust(new Vector2((float)(num923 * 0x10), (float)(num924 * 0x10)), 0x10, 0x10, 0xcc, 0f, 0f, 150, color5, 0.3f);
                                                                Main.dust[num925].fadeIn = 0.75f;
                                                                Dust dust231 = Main.dust[num925];
                                                                dust231.velocity = (Vector2)(dust231.velocity * 0.1f);
                                                                Main.dust[num925].noLight = true;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    Vector2 vector157 = Main.player[this.owner].Center - base.Center;
                                    vector157.X += 40 * base.direction;
                                    vector157.Y -= 40f;
                                    float num926 = vector157.Length();
                                    if (num926 > 1000f)
                                    {
                                        base.Center = Main.player[this.owner].Center;
                                    }
                                    float num927 = 3f;
                                    float num928 = 4f;
                                    if (num926 > 200f)
                                    {
                                        num928 += (num926 - 200f) * 0.1f;
                                        this.tileCollide = false;
                                    }
                                    if (num926 < num928)
                                    {
                                        base.velocity = (Vector2)(base.velocity * 0.25f);
                                        num928 = num926;
                                    }
                                    if ((vector157.X != 0f) || (vector157.Y != 0f))
                                    {
                                        vector157.Normalize();
                                        vector157 = (Vector2)(vector157 * num928);
                                    }
                                    base.velocity = (Vector2)(((base.velocity * (num927 - 1f)) + vector157) / num927);
                                    if (this.velocity.Length() <= 6f)
                                    {
                                        if (this.rotation > 3.14)
                                        {
                                            this.rotation -= 6.28f;
                                        }
                                        if ((this.rotation > -0.01) && (this.rotation < 0.01))
                                        {
                                            this.rotation = 0f;
                                        }
                                        else
                                        {
                                            this.rotation *= 0.9f;
                                        }
                                        this.frameCounter++;
                                        if (this.frameCounter > 6)
                                        {
                                            this.frameCounter = 0;
                                            this.frame++;
                                            if (this.frame > 3)
                                            {
                                                this.frame = 0;
                                                return;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        float num929 = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 1.57f;
                                        if (Math.Abs((float)(this.rotation - num929)) >= 3.14)
                                        {
                                            if (num929 < this.rotation)
                                            {
                                                this.rotation -= 6.28f;
                                            }
                                            else
                                            {
                                                this.rotation += 6.28f;
                                            }
                                        }
                                        this.rotation = ((this.rotation * 4f) + num929) / 5f;
                                        this.frameCounter++;
                                        if (this.frameCounter > 4)
                                        {
                                            this.frameCounter = 0;
                                            this.frame++;
                                            if (this.frame > 7)
                                            {
                                                this.frame = 4;
                                            }
                                        }
                                        if (this.frame < 4)
                                        {
                                            this.frame = 7;
                                            return;
                                        }
                                    }
                                    return;
                                }
                                if (this.aiStyle == 0x5b)
                                {
                                    Vector2 vector158 = base.Center;
                                    this.scale = 1f - this.localAI[0];
                                    base.width = (int)(20f * this.scale);
                                    base.height = base.width;
                                    this.position.X = vector158.X - (base.width / 2);
                                    this.position.Y = vector158.Y - (base.height / 2);
                                    if (this.localAI[0] < 0.1)
                                    {
                                        this.localAI[0] += 0.01f;
                                    }
                                    else
                                    {
                                        this.localAI[0] += 0.025f;
                                    }
                                    if (this.localAI[0] >= 0.95f)
                                    {
                                        this.Kill();
                                    }
                                    this.velocity.X += this.ai[0] * 1.5f;
                                    this.velocity.Y += this.ai[1] * 1.5f;
                                    if (this.velocity.Length() > 16f)
                                    {
                                        this.velocity.Normalize();
                                        base.velocity = (Vector2)(base.velocity * 16f);
                                    }
                                    this.ai[0] *= 1.05f;
                                    this.ai[1] *= 1.05f;
                                    if (this.scale < 1f)
                                    {
                                        for (int num930 = 0; num930 < (this.scale * 10f); num930++)
                                        {
                                            color5 = new Color();
                                            int num931 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x1b, this.velocity.X, this.velocity.Y, 100, color5, 1.1f);
                                            Main.dust[num931].position = (Vector2)((Main.dust[num931].position + base.Center) / 2f);
                                            Main.dust[num931].noGravity = true;
                                            Dust dust232 = Main.dust[num931];
                                            dust232.velocity = (Vector2)(dust232.velocity * 0.1f);
                                            Dust dust233 = Main.dust[num931];
                                            dust233.velocity -= (Vector2)(base.velocity * (1.3f - this.scale));
                                            Main.dust[num931].fadeIn = 100 + this.owner;
                                            Dust dust234 = Main.dust[num931];
                                            dust234.scale += this.scale * 0.75f;
                                        }
                                        return;
                                    }
                                    return;
                                }
                                if (this.aiStyle == 0x5c)
                                {
                                    this.tileCollide = false;
                                    this.ai[1]++;
                                    if (this.ai[1] > 60f)
                                    {
                                        this.ai[0] += 10f;
                                    }
                                    if (this.ai[0] > 255f)
                                    {
                                        this.Kill();
                                        this.ai[0] = 255f;
                                    }
                                    this.alpha = (int)(100.0 + (this.ai[0] * 0.7));
                                    this.rotation += this.velocity.X * 0.1f;
                                    this.rotation += base.direction * 0.003f;
                                    base.velocity = (Vector2)(base.velocity * 0.96f);
                                    Rectangle rectangle12 = new Rectangle((int)this.position.X, (int)this.position.Y, base.width, base.height);
                                    for (int num932 = 0; num932 < 0x3e8; num932++)
                                    {
                                        if (((num932 != base.whoAmI) && Main.projectile[num932].active) && ((Main.projectile[num932].type >= 0x1ff) && (Main.projectile[num932].type <= 0x201)))
                                        {
                                            Rectangle rectangle13 = new Rectangle((int)Main.projectile[num932].position.X, (int)Main.projectile[num932].position.Y, Main.projectile[num932].width, Main.projectile[num932].height);
                                            if (rectangle12.Intersects(rectangle13))
                                            {
                                                Vector2 vector159 = Main.projectile[num932].Center - base.Center;
                                                if ((vector159.X == 0f) && (vector159.Y == 0f))
                                                {
                                                    if (num932 < base.whoAmI)
                                                    {
                                                        vector159.X = -1f;
                                                        vector159.Y = 1f;
                                                    }
                                                    else
                                                    {
                                                        vector159.X = 1f;
                                                        vector159.Y = -1f;
                                                    }
                                                }
                                                vector159.Normalize();
                                                vector159 = (Vector2)(vector159 * 0.005f);
                                                base.velocity -= vector159;
                                                Projectile projectile1 = Main.projectile[num932];
                                                projectile1.velocity += vector159;
                                            }
                                        }
                                    }
                                    return;
                                }
                                if (this.aiStyle == 0x5d)
                                {
                                    if (this.alpha > 0)
                                    {
                                        this.alpha -= 0x19;
                                        if (this.alpha <= 0)
                                        {
                                            this.alpha = 0;
                                        }
                                    }
                                    if (this.velocity.Y > 18f)
                                    {
                                        this.velocity.Y = 18f;
                                    }
                                    if (this.ai[0] == 0f)
                                    {
                                        this.ai[1]++;
                                        if (this.ai[1] > 20f)
                                        {
                                            this.velocity.Y += 0.1f;
                                            this.velocity.X *= 0.992f;
                                        }
                                        this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 1.57f;
                                        return;
                                    }
                                    this.tileCollide = false;
                                    if (this.ai[0] == 1f)
                                    {
                                        this.tileCollide = false;
                                        base.velocity = (Vector2)(base.velocity * 0.6f);
                                    }
                                    else
                                    {
                                        this.tileCollide = false;
                                        int num933 = (int)-this.ai[0];
                                        num933--;
                                        base.position = Main.npc[num933].Center - base.velocity;
                                        this.position.X -= base.width / 2;
                                        this.position.Y -= base.height / 2;
                                        if (!Main.npc[num933].active || (Main.npc[num933].life < 0))
                                        {
                                            this.tileCollide = true;
                                            this.ai[0] = 0f;
                                            this.ai[1] = 20f;
                                            base.velocity = new Vector2((float)Main.rand.Next(-100, 0x65), (float)Main.rand.Next(-100, 0x65));
                                            this.velocity.Normalize();
                                            base.velocity = (Vector2)(base.velocity * 6f);
                                            this.netUpdate = true;
                                        }
                                        else if (this.velocity.Length() > ((Main.npc[num933].width + Main.npc[num933].height) / 3))
                                        {
                                            base.velocity = (Vector2)(base.velocity * 0.99f);
                                        }
                                    }
                                    if (this.ai[0] != 0f)
                                    {
                                        this.ai[1]++;
                                        if (this.ai[1] > 90f)
                                        {
                                            this.Kill();
                                            return;
                                        }
                                    }
                                    return;
                                }
                                if (this.aiStyle != 0x5e)
                                {
                                    if (this.aiStyle == 0x5f)
                                    {
                                        if (this.localAI[0] > 2f)
                                        {
                                            this.alpha -= 20;
                                            if (this.alpha < 100)
                                            {
                                                this.alpha = 100;
                                            }
                                        }
                                        else
                                        {
                                            this.localAI[0]++;
                                        }
                                        if (this.ai[0] > 30f)
                                        {
                                            if (this.velocity.Y > -8f)
                                            {
                                                this.velocity.Y -= 0.05f;
                                            }
                                            this.velocity.X *= 0.98f;
                                        }
                                        else
                                        {
                                            this.ai[0]++;
                                        }
                                        this.rotation = this.velocity.X * 0.1f;
                                        if (base.wet)
                                        {
                                            if (this.velocity.Y > 0f)
                                            {
                                                this.velocity.Y *= 0.98f;
                                            }
                                            if (this.velocity.Y > -8f)
                                            {
                                                this.velocity.Y -= 0.2f;
                                            }
                                            this.velocity.X *= 0.94f;
                                            return;
                                        }
                                        return;
                                    }
                                    if (this.aiStyle == 0x60)
                                    {
                                        this.ai[0] += 0.6f;
                                        if (this.ai[0] > 500f)
                                        {
                                            this.Kill();
                                        }
                                        for (int num939 = 0; num939 < 2; num939++)
                                        {
                                            if (Main.rand.Next(3) != 0)
                                            {
                                                color5 = new Color();
                                                int num940 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 170, 0f, 0f, 100, color5, 1f);
                                                Main.dust[num940].position = (Vector2)((Main.dust[num940].position + base.Center) / 2f);
                                                Main.dust[num940].noGravity = true;
                                                Dust dust235 = Main.dust[num940];
                                                dust235.velocity = (Vector2)(dust235.velocity * 0.1f);
                                                if (num939 == 1)
                                                {
                                                    Dust dust236 = Main.dust[num940];
                                                    dust236.position += (Vector2)(base.velocity / 2f);
                                                }
                                                float num941 = (800f - this.ai[0]) / 800f;
                                                Dust dust237 = Main.dust[num940];
                                                dust237.scale *= num941 + 0.1f;
                                            }
                                        }
                                        this.velocity.Y += 0.008f;
                                        return;
                                    }
                                    if (this.aiStyle == 0x61)
                                    {
                                        this.frameCounter++;
                                        float num942 = 4f;
                                        if (this.frameCounter < (num942 * 1f))
                                        {
                                            this.frame = 0;
                                        }
                                        else if (this.frameCounter < (num942 * 2f))
                                        {
                                            this.frame = 1;
                                        }
                                        else if (this.frameCounter < (num942 * 3f))
                                        {
                                            this.frame = 2;
                                        }
                                        else if (this.frameCounter < (num942 * 4f))
                                        {
                                            this.frame = 3;
                                        }
                                        else if (this.frameCounter < (num942 * 5f))
                                        {
                                            this.frame = 4;
                                        }
                                        else if (this.frameCounter < (num942 * 6f))
                                        {
                                            this.frame = 3;
                                        }
                                        else if (this.frameCounter < (num942 * 7f))
                                        {
                                            this.frame = 2;
                                        }
                                        else if (this.frameCounter < (num942 * 8f))
                                        {
                                            this.frame = 1;
                                        }
                                        else
                                        {
                                            this.frameCounter = 0;
                                            this.frame = 0;
                                        }
                                        if (this.owner == Main.myPlayer)
                                        {
                                            for (int num943 = 0; num943 < 0x3e8; num943++)
                                            {
                                                if (((num943 != base.whoAmI) && Main.projectile[num943].active) && ((Main.projectile[num943].owner == this.owner) && (Main.projectile[num943].type == this.type)))
                                                {
                                                    if (this.timeLeft >= Main.projectile[num943].timeLeft)
                                                    {
                                                        Main.projectile[num943].Kill();
                                                    }
                                                    else
                                                    {
                                                        this.Kill();
                                                    }
                                                }
                                            }
                                        }
                                        if (this.ai[0] == 0f)
                                        {
                                            if (this.velocity.Length() < 0.1)
                                            {
                                                this.velocity.X = 0f;
                                                this.velocity.Y = 0f;
                                                this.ai[0] = 1f;
                                                this.ai[1] = 45f;
                                                return;
                                            }
                                            base.velocity = (Vector2)(base.velocity * 0.94f);
                                            if (this.velocity.X < 0f)
                                            {
                                                base.direction = -1;
                                            }
                                            else
                                            {
                                                base.direction = 1;
                                            }
                                            this.spriteDirection = base.direction;
                                            return;
                                        }
                                        if (Main.player[this.owner].Center.X < base.Center.X)
                                        {
                                            base.direction = -1;
                                        }
                                        else
                                        {
                                            base.direction = 1;
                                        }
                                        this.spriteDirection = base.direction;
                                        this.ai[1]++;
                                        float num944 = 0.005f;
                                        if (this.ai[1] > 0f)
                                        {
                                            this.velocity.Y -= num944;
                                        }
                                        else
                                        {
                                            this.velocity.Y += num944;
                                        }
                                        if (this.ai[1] >= 90f)
                                        {
                                            this.ai[1] *= -1f;
                                            return;
                                        }
                                        return;
                                    }
                                    if (this.aiStyle == 0x62)
                                    {
                                        Vector2 vector162 = new Vector2(this.ai[0], this.ai[1]);
                                        Vector2 vector163 = vector162 - base.Center;
                                        if (vector163.Length() < this.velocity.Length())
                                        {
                                            this.Kill();
                                            return;
                                        }
                                        vector163.Normalize();
                                        vector163 = (Vector2)(vector163 * 15f);
                                        base.velocity = Vector2.Lerp(base.velocity, vector163, 0.1f);
                                        for (int num945 = 0; num945 < 2; num945++)
                                        {
                                            color5 = new Color();
                                            int num946 = Dust.NewDust(base.Center, 0, 0, 0xe4, 0f, 0f, 100, color5, 1f);
                                            Main.dust[num946].noGravity = true;
                                            Dust dust238 = Main.dust[num946];
                                            dust238.position += new Vector2(4f);
                                            Dust dust239 = Main.dust[num946];
                                            dust239.scale += Main.rand.NextFloat() * 1f;
                                        }
                                        return;
                                    }
                                    if (((this.aiStyle == 0x63) && (this.type >= 0x22c)) && (this.type <= 0x231))
                                    {
                                        this.AI_099_1();
                                        return;
                                    }
                                    if (this.aiStyle == 0x63)
                                    {
                                        this.AI_099_2();
                                        return;
                                    }
                                    if (this.aiStyle == 100)
                                    {
                                        Player player5 = Main.player[this.owner];
                                        Vector2 vector164 = Vector2.Zero;
                                        if (this.type == 0x217)
                                        {
                                            vector164.X = player5.direction * 6f;
                                            vector164.Y = player5.gravDir * -14f;
                                            this.ai[0]++;
                                            int num947 = 0;
                                            if (this.ai[0] >= 60f)
                                            {
                                                num947++;
                                            }
                                            if (this.ai[0] >= 180f)
                                            {
                                                num947++;
                                            }
                                            if (this.ai[0] >= 240f)
                                            {
                                                this.Kill();
                                                return;
                                            }
                                            bool flag40 = false;
                                            if ((this.ai[0] == 60f) || (this.ai[0] == 180f))
                                            {
                                                flag40 = true;
                                            }
                                            bool flag41 = this.ai[0] >= 180f;
                                            if (flag41)
                                            {
                                                if (this.frame < 8)
                                                {
                                                    this.frame = 8;
                                                }
                                                if (this.frame >= 12)
                                                {
                                                    this.frame = 8;
                                                }
                                                this.frameCounter++;
                                                if (++this.frameCounter >= 5)
                                                {
                                                    this.frameCounter = 0;
                                                    if (++this.frame >= 12)
                                                    {
                                                        this.frame = 8;
                                                    }
                                                }
                                            }
                                            else if (++this.frameCounter >= 5)
                                            {
                                                this.frameCounter = 0;
                                                if (++this.frame >= 8)
                                                {
                                                    this.frame = 0;
                                                }
                                            }
                                            Vector2 vector165 = player5.Center;
                                            Vector2 vector166 = (Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY)) - vector165;
                                            if (player5.gravDir == -1f)
                                            {
                                                vector166.Y = ((Main.screenHeight - Main.mouseY) + Main.screenPosition.Y) - vector165.Y;
                                            }
                                            Vector2 vector167 = new Vector2((float)Math.Sign((vector166.X == 0f) ? ((float)player5.direction) : vector166.X), 0f);
                                            if ((vector167.X != this.velocity.X) || (vector167.Y != this.velocity.Y))
                                            {
                                                this.netUpdate = true;
                                            }
                                            base.velocity = vector167;
                                            if ((this.soundDelay <= 0) && !flag41)
                                            {
                                                this.soundDelay = 10;
                                                this.soundDelay *= 2;
                                                if (this.ai[0] != 1f)
                                                {
                                                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 15);
                                                }
                                            }
                                            if (this.ai[0] == 181f)
                                            {
                                                Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 0x11);
                                            }
                                            if ((this.ai[0] > 10f) && !flag41)
                                            {
                                                Vector2 vector168 = base.Center + new Vector2((float)(player5.direction * 2), player5.gravDir * 5f);
                                                float num948 = MathHelper.Lerp(30f, 10f, (this.ai[0] - 10f) / 180f);
                                                float num949 = Main.rand.NextFloat() * 6.283185f;
                                                for (float num950 = 0f; num950 < 1f; num950++)
                                                {
                                                    vector240 = new Vector2();
                                                    Vector2 vector169 = Vector2.UnitY.RotatedBy((double)(((num950 / 1f) * 6.283185f) + num949), vector240);
                                                    color5 = new Color();
                                                    Dust dust9 = Main.dust[Dust.NewDust(vector168, 0, 0, 0xe4, 0f, 0f, 0, color5, 1f)];
                                                    dust9.position = vector168 + ((Vector2)(vector169 * num948));
                                                    dust9.noGravity = true;
                                                    dust9.customData = player5;
                                                    dust9.velocity = (Vector2)(vector169 * -2f);
                                                }
                                            }
                                            if ((this.ai[0] > 180f) && (this.ai[0] <= 182f))
                                            {
                                                Vector2 vector170 = base.Center + new Vector2((float)(player5.direction * 2), player5.gravDir * 5f);
                                                float num951 = MathHelper.Lerp(20f, 30f, (this.ai[0] - 180f) / 182f);
                                                Main.rand.NextFloat();
                                                for (float num952 = 0f; num952 < 10f; num952++)
                                                {
                                                    Vector2 vector171 = (Vector2)(Vector2.UnitY.RotatedByRandom(6.2831854820251465) * ((Main.rand.NextFloat() * 0.5f) + 0.5f));
                                                    color5 = new Color();
                                                    Dust dust10 = Main.dust[Dust.NewDust(vector170, 0, 0, 0xe4, 0f, 0f, 0, color5, 1f)];
                                                    dust10.position = vector170 + ((Vector2)(vector171 * num951));
                                                    dust10.noGravity = true;
                                                    dust10.customData = player5;
                                                    dust10.velocity = (Vector2)(vector171 * 4f);
                                                    dust10.scale = 0.5f + Main.rand.NextFloat();
                                                }
                                            }
                                            if (Main.myPlayer == this.owner)
                                            {
                                                bool flag42 = false;
                                                if (!flag40)
                                                {
                                                    flag42 = true;
                                                }
                                                else
                                                {
                                                    flag42 = player5.CheckMana(player5.inventory[player5.selectedItem].mana, true, false);
                                                }
                                                bool flag43 = player5.channel && flag42;
                                                if ((!flag41 && !flag43) || (this.ai[0] == 180f))
                                                {
                                                    Vector2 vector172 = player5.Center + new Vector2((float)(player5.direction * 4), player5.gravDir * 2f);
                                                    int num953 = this.damage * (1 + num947);
                                                    vector172 = base.Center;
                                                    int num954 = 0;
                                                    float num955 = 0f;
                                                    for (int num956 = 0; num956 < 200; num956++)
                                                    {
                                                        NPC npc9 = Main.npc[num956];
                                                        if ((npc9.active && (base.Distance(npc9.Center) < 500f)) && (npc9.CanBeChasedBy(this, false) && Collision.CanHitLine(npc9.position, npc9.width, npc9.height, vector172, 0, 0)))
                                                        {
                                                            Vector2 vector173 = npc9.Center - vector172;
                                                            num955 += vector173.ToRotation();
                                                            num954++;
                                                            int num957 = NewProjectile(vector172.X, vector172.Y, vector173.X, vector173.Y, 0x218, 0, 0f, this.owner, (float)base.whoAmI, 0f);
                                                            Main.projectile[num957].Center = npc9.Center;
                                                            Main.projectile[num957].damage = num953;
                                                            Main.projectile[num957].Damage();
                                                            Main.projectile[num957].damage = 0;
                                                            Main.projectile[num957].Center = vector172;
                                                            this.ai[0] = 180f;
                                                        }
                                                    }
                                                    if (num954 != 0)
                                                    {
                                                        num955 /= (float)num954;
                                                    }
                                                    else
                                                    {
                                                        num955 = (player5.direction == 1) ? 0f : 3.141593f;
                                                    }
                                                    for (int num958 = 0; num958 < 6; num958++)
                                                    {
                                                        Vector2 vector174 = Vector2.Zero;
                                                        if (Main.rand.Next(4) != 0)
                                                        {
                                                            vector240 = new Vector2();
                                                            vector174 = (Vector2)((Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy(((double)num955), vector240) * new Vector2(200f, 50f)) * ((Main.rand.NextFloat() * 0.7f) + 0.3f));
                                                        }
                                                        else
                                                        {
                                                            vector174 = (Vector2)((Vector2.UnitX.RotatedByRandom(6.2831854820251465) * new Vector2(200f, 50f)) * ((Main.rand.NextFloat() * 0.7f) + 0.3f));
                                                        }
                                                        NewProjectile(vector172.X, vector172.Y, vector174.X, vector174.Y, 0x218, 0, 0f, this.owner, (float)base.whoAmI, 0f);
                                                    }
                                                    this.ai[0] = 180f;
                                                    this.netUpdate = true;
                                                }
                                            }
                                            Lighting.AddLight(base.Center, 0.9f, 0.75f, 0.1f);
                                        }
                                        this.rotation = (player5.gravDir == 1f) ? 0f : 3.141593f;
                                        this.spriteDirection = base.direction;
                                        this.timeLeft = 2;
                                        Vector2 vector175 = (Vector2)(Main.OffsetsPlayerOnhand[player5.bodyFrame.Y / 0x38] * 2f);
                                        if (player5.direction != 1)
                                        {
                                            vector175.X = player5.bodyFrame.Width - vector175.X;
                                        }
                                        vector175 -= (Vector2)((player5.bodyFrame.Size() - new Vector2((float)player5.width, 42f)) / 2f);
                                        base.Center = (((player5.position + vector175) + vector164) - base.velocity).Floor();
                                        player5.ChangeDir(base.direction);
                                        player5.heldProj = base.whoAmI;
                                        player5.itemTime = 2;
                                        player5.itemAnimation = 2;
                                        return;
                                    }
                                    if (this.aiStyle != 0x65)
                                    {
                                        if (this.aiStyle != 0x66)
                                        {
                                            if (this.aiStyle == 0x67)
                                            {
                                                this.scale = this.ai[1];
                                                this.ai[0]++;
                                                if (this.ai[0] < 30f)
                                                {
                                                    if (this.ai[0] >= 0f)
                                                    {
                                                        this.alpha -= 0x19;
                                                        if (this.alpha < 0)
                                                        {
                                                            this.alpha = 0;
                                                            if (((this.localAI[1] == 0f) && (Main.netMode != 1)) && (this.localAI[0] != 0f))
                                                            {
                                                                this.localAI[1] = 1f;
                                                                NPC.NewNPC((int)base.Center.X, (int)base.Bottom.Y, (int)this.localAI[0], 0, 0f, 0f, 0f, 0f, 0xff);
                                                                return;
                                                            }
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    this.alpha += 0x19;
                                                    if (this.alpha >= 250)
                                                    {
                                                        this.Kill();
                                                        return;
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                if (this.aiStyle == 0x68)
                                                {
                                                    if (this.ai[0] == 1f)
                                                    {
                                                        this.scale *= 0.995f;
                                                        this.alpha += 3;
                                                        if (this.alpha >= 250)
                                                        {
                                                            this.Kill();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        this.scale *= 1.01f;
                                                        this.alpha -= 7;
                                                        if (this.alpha < 0)
                                                        {
                                                            this.alpha = 0;
                                                            this.ai[0] = 1f;
                                                        }
                                                    }
                                                    this.frameCounter++;
                                                    if (this.frameCounter > 6)
                                                    {
                                                        this.frameCounter = 0;
                                                        this.frame++;
                                                        if (this.frame > 3)
                                                        {
                                                            this.frame = 0;
                                                        }
                                                    }
                                                    this.velocity.Y -= 0.03f;
                                                    this.velocity.X *= 0.97f;
                                                    return;
                                                }
                                                if (this.aiStyle == 0x69)
                                                {
                                                    float num982 = 1f - (((float)this.alpha) / 255f);
                                                    num982 *= this.scale;
                                                    Lighting.AddLight(base.Center, 0.2f * num982, 0.275f * num982, 0.075f * num982);
                                                    this.localAI[0]++;
                                                    if (this.localAI[0] >= 90f)
                                                    {
                                                        this.localAI[0] *= -1f;
                                                    }
                                                    if (this.localAI[0] >= 0f)
                                                    {
                                                        this.scale += 0.003f;
                                                    }
                                                    else
                                                    {
                                                        this.scale -= 0.003f;
                                                    }
                                                    this.rotation += 0.0025f * this.scale;
                                                    float num983 = 1f;
                                                    float num984 = 1f;
                                                    if ((this.identity % 6) == 0)
                                                    {
                                                        num984 *= -1f;
                                                    }
                                                    if ((this.identity % 6) == 1)
                                                    {
                                                        num983 *= -1f;
                                                    }
                                                    if ((this.identity % 6) == 2)
                                                    {
                                                        num984 *= -1f;
                                                        num983 *= -1f;
                                                    }
                                                    if ((this.identity % 6) == 3)
                                                    {
                                                        num984 = 0f;
                                                    }
                                                    if ((this.identity % 6) == 4)
                                                    {
                                                        num983 = 0f;
                                                    }
                                                    this.localAI[1]++;
                                                    if (this.localAI[1] > 60f)
                                                    {
                                                        this.localAI[1] = -180f;
                                                    }
                                                    if (this.localAI[1] >= -60f)
                                                    {
                                                        this.velocity.X += 0.002f * num984;
                                                        this.velocity.Y += 0.002f * num983;
                                                    }
                                                    else
                                                    {
                                                        this.velocity.X -= 0.002f * num984;
                                                        this.velocity.Y -= 0.002f * num983;
                                                    }
                                                    this.ai[0]++;
                                                    if (this.ai[0] > 5400f)
                                                    {
                                                        this.damage = 0;
                                                        this.ai[1] = 1f;
                                                        if (this.alpha < 0xff)
                                                        {
                                                            this.alpha += 5;
                                                            if (this.alpha > 0xff)
                                                            {
                                                                this.alpha = 0xff;
                                                            }
                                                        }
                                                        else if (this.owner == Main.myPlayer)
                                                        {
                                                            this.Kill();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        Vector2 vector178 = base.Center - Main.player[this.owner].Center;
                                                        float num985 = vector178.Length() / 100f;
                                                        if (num985 > 4f)
                                                        {
                                                            num985 *= 1.1f;
                                                        }
                                                        if (num985 > 5f)
                                                        {
                                                            num985 *= 1.2f;
                                                        }
                                                        if (num985 > 6f)
                                                        {
                                                            num985 *= 1.3f;
                                                        }
                                                        if (num985 > 7f)
                                                        {
                                                            num985 *= 1.4f;
                                                        }
                                                        if (num985 > 8f)
                                                        {
                                                            num985 *= 1.5f;
                                                        }
                                                        if (num985 > 9f)
                                                        {
                                                            num985 *= 1.6f;
                                                        }
                                                        if (num985 > 10f)
                                                        {
                                                            num985 *= 1.7f;
                                                        }
                                                        if (!Main.player[this.owner].sporeSac)
                                                        {
                                                            num985 += 100f;
                                                        }
                                                        this.ai[0] += num985;
                                                        if (this.alpha > 50)
                                                        {
                                                            this.alpha -= 10;
                                                            if (this.alpha < 50)
                                                            {
                                                                this.alpha = 50;
                                                            }
                                                        }
                                                    }
                                                    bool flag49 = false;
                                                    Vector2 vector179 = new Vector2(0f, 0f);
                                                    float num986 = 280f;
                                                    for (int num987 = 0; num987 < 200; num987++)
                                                    {
                                                        if (Main.npc[num987].CanBeChasedBy(this, false))
                                                        {
                                                            float num988 = Main.npc[num987].position.X + (Main.npc[num987].width / 2);
                                                            float num989 = Main.npc[num987].position.Y + (Main.npc[num987].height / 2);
                                                            float introduced1846 = Math.Abs((float)((this.position.X + (base.width / 2)) - num988));
                                                            float num990 = introduced1846 + Math.Abs((float)((this.position.Y + (base.height / 2)) - num989));
                                                            if (num990 < num986)
                                                            {
                                                                num986 = num990;
                                                                vector179 = Main.npc[num987].Center;
                                                                flag49 = true;
                                                            }
                                                        }
                                                    }
                                                    if (flag49)
                                                    {
                                                        Vector2 vector180 = vector179 - base.Center;
                                                        vector180.Normalize();
                                                        vector180 = (Vector2)(vector180 * 0.75f);
                                                        base.velocity = (Vector2)(((base.velocity * 10f) + vector180) / 11f);
                                                        return;
                                                    }
                                                    if (this.velocity.Length() > 0.2)
                                                    {
                                                        base.velocity = (Vector2)(base.velocity * 0.98f);
                                                        return;
                                                    }
                                                }
                                                else if (this.aiStyle == 0x6a)
                                                {
                                                    this.rotation += this.velocity.X * 0.02f;
                                                    if (this.velocity.X < 0f)
                                                    {
                                                        this.rotation -= Math.Abs(this.velocity.Y) * 0.02f;
                                                    }
                                                    else
                                                    {
                                                        this.rotation += Math.Abs(this.velocity.Y) * 0.02f;
                                                    }
                                                    base.velocity = (Vector2)(base.velocity * 0.98f);
                                                    this.ai[0]++;
                                                    if (this.ai[0] < 60f)
                                                    {
                                                        if (this.alpha > 80)
                                                        {
                                                            this.alpha -= 30;
                                                            if (this.alpha < 80)
                                                            {
                                                                this.alpha = 80;
                                                                return;
                                                            }
                                                        }
                                                    }
                                                    else if (this.alpha >= 0xff)
                                                    {
                                                        if (this.owner == Main.myPlayer)
                                                        {
                                                            this.Kill();
                                                            return;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        this.alpha += 5;
                                                        if (this.alpha > 0xff)
                                                        {
                                                            this.alpha = 0xff;
                                                            return;
                                                        }
                                                    }
                                                }
                                                else if (this.aiStyle == 0x6b)
                                                {
                                                    float num991 = 10f;
                                                    float num992 = 5f;
                                                    float num993 = 40f;
                                                    if (this.type == 0x23f)
                                                    {
                                                        if ((this.timeLeft > 30) && (this.alpha > 0))
                                                        {
                                                            this.alpha -= 0x19;
                                                        }
                                                        if (((this.timeLeft > 30) && (this.alpha < 0x80)) && Collision.SolidCollision(base.position, base.width, base.height))
                                                        {
                                                            this.alpha = 0x80;
                                                        }
                                                        if (this.alpha < 0)
                                                        {
                                                            this.alpha = 0;
                                                        }
                                                        if (++this.frameCounter > 4)
                                                        {
                                                            this.frameCounter = 0;
                                                            if (++this.frame >= 4)
                                                            {
                                                                this.frame = 0;
                                                            }
                                                        }
                                                        Lighting.AddLight(base.Center, 0.5f, 0.1f, 0.3f);
                                                    }
                                                    else if (this.type == 0x254)
                                                    {
                                                        Dust dust11;
                                                        num991 = 10f;
                                                        num992 = 7.5f;
                                                        if ((this.timeLeft > 30) && (this.alpha > 0))
                                                        {
                                                            this.alpha -= 0x19;
                                                        }
                                                        if (((this.timeLeft > 30) && (this.alpha < 0x80)) && Collision.SolidCollision(base.position, base.width, base.height))
                                                        {
                                                            this.alpha = 0x80;
                                                        }
                                                        if (this.alpha < 0)
                                                        {
                                                            this.alpha = 0;
                                                        }
                                                        if (++this.frameCounter > 4)
                                                        {
                                                            this.frameCounter = 0;
                                                            if (++this.frame >= 4)
                                                            {
                                                                this.frame = 0;
                                                            }
                                                        }
                                                        float num994 = 0.5f;
                                                        if (this.timeLeft < 120)
                                                        {
                                                            num994 = 1.1f;
                                                        }
                                                        if (this.timeLeft < 60)
                                                        {
                                                            num994 = 1.6f;
                                                        }
                                                        this.ai[1]++;
                                                        float single2 = this.ai[1] / 180f;
                                                        for (float num995 = 0f; num995 < 3f; num995++)
                                                        {
                                                            if (Main.rand.Next(3) != 0)
                                                            {
                                                                return;
                                                            }
                                                            color5 = new Color();
                                                            dust11 = Main.dust[Dust.NewDust(base.Center, 0, 0, 0x1b, 0f, -2f, 0, color5, 1f)];
                                                            vector240 = new Vector2();
                                                            dust11.position = base.Center + ((Vector2)(Vector2.UnitY.RotatedBy(((double)(((num995 * 6.283185f) / 3f) + this.ai[1])), vector240) * 10f));
                                                            dust11.noGravity = true;
                                                            dust11.velocity = base.DirectionFrom(dust11.position);
                                                            dust11.scale = num994;
                                                            dust11.fadeIn = 0.5f;
                                                            dust11.alpha = 200;
                                                        }
                                                        if (this.timeLeft < 4)
                                                        {
                                                            int num996 = 40;
                                                            if (Main.expertMode)
                                                            {
                                                                num996 = 30;
                                                            }
                                                            base.position = base.Center;
                                                            base.width = base.height = 60;
                                                            base.Center = base.position;
                                                            this.damage = num996;
                                                            for (int num997 = 0; num997 < 10; num997++)
                                                            {
                                                                color5 = new Color();
                                                                dust11 = Main.dust[Dust.NewDust(base.position, base.width, base.height, Utils.SelectRandom<int>(Main.rand, new int[] { 0x1b, 6 }), 0f, -2f, 0, color5, 1f)];
                                                                dust11.noGravity = true;
                                                                if (dust11.position != base.Center)
                                                                {
                                                                    dust11.velocity = (Vector2)(base.DirectionTo(dust11.position) * 3f);
                                                                }
                                                            }
                                                        }
                                                    }
                                                    int num998 = (int)this.ai[0];
                                                    if (((num998 < 0) || !Main.player[num998].active) || Main.player[num998].dead)
                                                    {
                                                        if (this.timeLeft > 30)
                                                        {
                                                            this.timeLeft = 30;
                                                        }
                                                        if (this.ai[0] != -1f)
                                                        {
                                                            this.ai[0] = -1f;
                                                            this.netUpdate = true;
                                                            return;
                                                        }
                                                    }
                                                    else if (base.Distance(Main.player[num998].Center) > num993)
                                                    {
                                                        Vector2 vec = base.DirectionTo(Main.player[num998].Center);
                                                        if (vec.HasNaNs())
                                                        {
                                                            vec = Vector2.UnitY;
                                                        }
                                                        base.velocity = (Vector2)(((base.velocity * (num991 - 1f)) + (vec * num992)) / num991);
                                                        return;
                                                    }
                                                }
                                                else if (this.aiStyle == 0x6c)
                                                {
                                                    if ((this.type == 0x242) && (this.localAI[0] == 0f))
                                                    {
                                                        this.localAI[0] = 1f;
                                                        int num999 = Player.FindClosest(base.Center, 0, 0);
                                                        Vector2 unitY = Main.player[num999].Center - base.Center;
                                                        if (unitY == Vector2.Zero)
                                                        {
                                                            unitY = Vector2.UnitY;
                                                        }
                                                        this.ai[1] = unitY.ToRotation();
                                                        this.netUpdate = true;
                                                    }
                                                    this.ai[0]++;
                                                    if (this.ai[0] > 50f)
                                                    {
                                                        if (this.ai[0] > 90f)
                                                        {
                                                            if (this.ai[0] <= 120f)
                                                            {
                                                                this.scale = 1f;
                                                                this.alpha = 0;
                                                                this.rotation -= 0.05235988f;
                                                                if (Main.rand.Next(2) == 0)
                                                                {
                                                                    Vector2 vector195 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                                    Dust dust18 = Main.dust[Dust.NewDust(base.Center - ((Vector2)(vector195 * 30f)), 0, 0, 0xe5, 0f, 0f, 0, new Color(), 1f)];
                                                                    dust18.noGravity = true;
                                                                    dust18.position = base.Center - (vector195 * Main.rand.Next(10, 0x15));
                                                                    dust18.velocity = (Vector2)(vector195.RotatedBy(1.5707963705062866, new Vector2()) * 6f);
                                                                    dust18.scale = 0.5f + Main.rand.NextFloat();
                                                                    dust18.fadeIn = 0.5f;
                                                                    dust18.customData = base.Center;
                                                                    return;
                                                                }
                                                                Vector2 vector196 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                                Dust dust19 = Main.dust[Dust.NewDust(base.Center - ((Vector2)(vector196 * 30f)), 0, 0, 240, 0f, 0f, 0, new Color(), 1f)];
                                                                dust19.noGravity = true;
                                                                dust19.position = base.Center - ((Vector2)(vector196 * 30f));
                                                                dust19.velocity = (Vector2)(vector196.RotatedBy(-1.5707963705062866, new Vector2()) * 3f);
                                                                dust19.scale = 0.5f + Main.rand.NextFloat();
                                                                dust19.fadeIn = 0.5f;
                                                                dust19.customData = base.Center;
                                                                return;
                                                            }
                                                            this.scale = 1f - ((this.ai[0] - 120f) / 60f);
                                                            this.alpha = 0xff - ((int)(255f * this.scale));
                                                            this.rotation -= 0.1047198f;
                                                            if (this.alpha >= 0xff)
                                                            {
                                                                this.Kill();
                                                            }
                                                            for (int num1005 = 0; num1005 < 2; num1005++)
                                                            {
                                                                switch (Main.rand.Next(3))
                                                                {
                                                                    case 0:
                                                                        {
                                                                            Vector2 vector197 = (Vector2)(Vector2.UnitY.RotatedByRandom(6.2831854820251465) * this.scale);
                                                                            color5 = new Color();
                                                                            Dust dust20 = Main.dust[Dust.NewDust(base.Center - ((Vector2)(vector197 * 30f)), 0, 0, 0xe5, 0f, 0f, 0, color5, 1f)];
                                                                            dust20.noGravity = true;
                                                                            dust20.position = base.Center - (vector197 * Main.rand.Next(10, 0x15));
                                                                            vector240 = new Vector2();
                                                                            dust20.velocity = (Vector2)(vector197.RotatedBy(1.5707963705062866, vector240) * 6f);
                                                                            dust20.scale = 0.5f + Main.rand.NextFloat();
                                                                            dust20.fadeIn = 0.5f;
                                                                            dust20.customData = base.Center;
                                                                            break;
                                                                        }
                                                                    case 1:
                                                                        {
                                                                            Vector2 vector198 = (Vector2)(Vector2.UnitY.RotatedByRandom(6.2831854820251465) * this.scale);
                                                                            color5 = new Color();
                                                                            Dust dust21 = Main.dust[Dust.NewDust(base.Center - ((Vector2)(vector198 * 30f)), 0, 0, 240, 0f, 0f, 0, color5, 1f)];
                                                                            dust21.noGravity = true;
                                                                            dust21.position = base.Center - ((Vector2)(vector198 * 30f));
                                                                            vector240 = new Vector2();
                                                                            dust21.velocity = (Vector2)(vector198.RotatedBy(-1.5707963705062866, vector240) * 3f);
                                                                            dust21.scale = 0.5f + Main.rand.NextFloat();
                                                                            dust21.fadeIn = 0.5f;
                                                                            dust21.customData = base.Center;
                                                                            break;
                                                                        }
                                                                }
                                                            }
                                                            return;
                                                        }
                                                        this.scale = (this.ai[0] - 50f) / 40f;
                                                        this.alpha = 0xff - ((int)(255f * this.scale));
                                                        this.rotation -= 0.1570796f;
                                                        if (this.type == 0x243)
                                                        {
                                                            if (Main.rand.Next(2) == 0)
                                                            {
                                                                Vector2 vector189 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                                color5 = new Color();
                                                                Dust dust15 = Main.dust[Dust.NewDust(base.Center - ((Vector2)(vector189 * 30f)), 0, 0, 0xe5, 0f, 0f, 0, color5, 1f)];
                                                                dust15.noGravity = true;
                                                                dust15.position = base.Center - (vector189 * Main.rand.Next(10, 0x15));
                                                                vector240 = new Vector2();
                                                                dust15.velocity = (Vector2)(vector189.RotatedBy(1.5707963705062866, vector240) * 6f);
                                                                dust15.scale = 0.5f + Main.rand.NextFloat();
                                                                dust15.fadeIn = 0.5f;
                                                                dust15.customData = base.Center;
                                                            }
                                                            if (Main.rand.Next(2) == 0)
                                                            {
                                                                Vector2 vector190 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                                color5 = new Color();
                                                                Dust dust16 = Main.dust[Dust.NewDust(base.Center - ((Vector2)(vector190 * 30f)), 0, 0, 240, 0f, 0f, 0, color5, 1f)];
                                                                dust16.noGravity = true;
                                                                dust16.position = base.Center - ((Vector2)(vector190 * 30f));
                                                                vector240 = new Vector2();
                                                                dust16.velocity = (Vector2)(vector190.RotatedBy(-1.5707963705062866, vector240) * 3f);
                                                                dust16.scale = 0.5f + Main.rand.NextFloat();
                                                                dust16.fadeIn = 0.5f;
                                                                dust16.customData = base.Center;
                                                            }
                                                        }
                                                        if (this.type != 0x242)
                                                        {
                                                            if (((this.type == 0x243) && (this.ai[0] == 90f)) && (Main.netMode != 1))
                                                            {
                                                                for (int num1003 = 0; num1003 < 2; num1003++)
                                                                {
                                                                    int num1004 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 0x1ab, base.whoAmI, 0f, 0f, 0f, 0f, 0xff);
                                                                    Main.npc[num1004].velocity = (-Vector2.UnitY.RotatedByRandom(6.2831854820251465) * Main.rand.Next(4, 9)) - ((Vector2)(Vector2.UnitY * 2f));
                                                                    Main.npc[num1004].netUpdate = true;
                                                                }
                                                                return;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            Vector2 vector191 = this.ai[1].ToRotationVector2();
                                                            Vector2 vector192 = (vector191.RotatedBy(1.5707963705062866, new Vector2()) * (Main.rand.Next(2) == 0).ToDirectionInt()) * Main.rand.Next(10, 0x15);
                                                            vector191 *= Main.rand.Next(-80, 0x51);
                                                            Vector2 vector193 = vector191 - vector192;
                                                            vector193 = (Vector2)(vector193 / 10f);
                                                            int num1001 = Utils.SelectRandom<int>(Main.rand, new int[] { 0xe5, 0xe5 });
                                                            Dust dust17 = Main.dust[Dust.NewDust(base.Center, 0, 0, num1001, 0f, 0f, 0, new Color(), 1f)];
                                                            dust17.noGravity = true;
                                                            dust17.position = base.Center + vector192;
                                                            dust17.velocity = vector193;
                                                            dust17.scale = 0.5f + Main.rand.NextFloat();
                                                            dust17.fadeIn = 0.5f;
                                                            if ((this.ai[0] == 90f) && (Main.netMode != 1))
                                                            {
                                                                Vector2 vector194 = (Vector2)(this.ai[1].ToRotationVector2() * 8f);
                                                                float num1002 = Main.rand.Next(80);
                                                                NewProjectile(base.Center.X - vector194.X, base.Center.Y - vector194.Y, vector194.X, vector194.Y, 580, 15, 1f, Main.myPlayer, this.ai[1], num1002);
                                                                return;
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (this.type == 0x243)
                                                        {
                                                            if (Main.rand.Next(4) == 0)
                                                            {
                                                                Vector2 vector183 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                                color5 = new Color();
                                                                Dust dust12 = Main.dust[Dust.NewDust(base.Center - ((Vector2)(vector183 * 30f)), 0, 0, 0xe5, 0f, 0f, 0, color5, 1f)];
                                                                dust12.noGravity = true;
                                                                dust12.position = base.Center - (vector183 * Main.rand.Next(10, 0x15));
                                                                vector240 = new Vector2();
                                                                dust12.velocity = (Vector2)(vector183.RotatedBy(1.5707963705062866, vector240) * 4f);
                                                                dust12.scale = 0.5f + Main.rand.NextFloat();
                                                                dust12.fadeIn = 0.5f;
                                                            }
                                                            if (Main.rand.Next(4) == 0)
                                                            {
                                                                Vector2 vector184 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                                color5 = new Color();
                                                                Dust dust13 = Main.dust[Dust.NewDust(base.Center - ((Vector2)(vector184 * 30f)), 0, 0, 240, 0f, 0f, 0, color5, 1f)];
                                                                dust13.noGravity = true;
                                                                dust13.position = base.Center - ((Vector2)(vector184 * 30f));
                                                                vector240 = new Vector2();
                                                                dust13.velocity = (Vector2)(vector184.RotatedBy(-1.5707963705062866, vector240) * 2f);
                                                                dust13.scale = 0.5f + Main.rand.NextFloat();
                                                                dust13.fadeIn = 0.5f;
                                                            }
                                                        }
                                                        if ((this.type == 0x242) && (Main.rand.Next(2) == 0))
                                                        {
                                                            Vector2 vector185 = this.ai[1].ToRotationVector2();
                                                            Vector2 vector186 = (vector185.RotatedBy(1.5707963705062866, new Vector2()) * (Main.rand.Next(2) == 0).ToDirectionInt()) * Main.rand.Next(10, 0x15);
                                                            Vector2 vector187 = vector185 * Main.rand.Next(-80, 0x51);
                                                            Vector2 vector188 = vector187 - vector186;
                                                            vector188 = (Vector2)(vector188 / 10f);
                                                            int num1000 = 0xe5;
                                                            color5 = new Color();
                                                            Dust dust14 = Main.dust[Dust.NewDust(base.Center, 0, 0, num1000, 0f, 0f, 0, color5, 1f)];
                                                            dust14.noGravity = true;
                                                            dust14.position = base.Center + vector186;
                                                            dust14.velocity = vector188;
                                                            dust14.scale = 0.5f + Main.rand.NextFloat();
                                                            dust14.fadeIn = 0.5f;
                                                            vector187 = vector185 * Main.rand.Next(40, 0x79);
                                                            vector188 = vector187 - ((Vector2)(vector186 / 2f));
                                                            vector188 = (Vector2)(vector188 / 10f);
                                                            dust14 = Main.dust[Dust.NewDust(base.Center, 0, 0, num1000, 0f, 0f, 0, new Color(), 1f)];
                                                            dust14.noGravity = true;
                                                            dust14.position = base.Center + ((Vector2)(vector186 / 2f));
                                                            dust14.velocity = vector188;
                                                            dust14.scale = 1f + Main.rand.NextFloat();
                                                            return;
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    if (this.aiStyle == 0x6d)
                                                    {
                                                        if (this.localAI[1] == 0f)
                                                        {
                                                            this.localAI[1] = this.velocity.Length();
                                                        }
                                                        if (this.ai[0] == 0f)
                                                        {
                                                            this.localAI[0]++;
                                                            if (this.localAI[0] > 30f)
                                                            {
                                                                this.ai[0] = 1f;
                                                                this.localAI[0] = 0f;
                                                                return;
                                                            }
                                                        }
                                                        else if (this.ai[0] == 1f)
                                                        {
                                                            Vector2 vector199 = Vector2.Zero;
                                                            if (((this.type == 0x246) && Main.npc[(int)this.ai[1]].active) && (Main.npc[(int)this.ai[1]].type == 0x7c))
                                                            {
                                                                vector199 = Main.npc[(int)this.ai[1]].Center;
                                                                this.tileCollide = false;
                                                            }
                                                            else
                                                            {
                                                                this.Kill();
                                                                return;
                                                            }
                                                            float num1007 = this.localAI[1];
                                                            Vector2 vector200 = vector199 - base.Center;
                                                            if (vector200.Length() < num1007)
                                                            {
                                                                this.Kill();
                                                                return;
                                                            }
                                                            vector200.Normalize();
                                                            vector200 = (Vector2)(vector200 * num1007);
                                                            base.velocity = Vector2.Lerp(base.velocity, vector200, 0.04f);
                                                        }
                                                        this.rotation += 0.3141593f;
                                                        return;
                                                    }
                                                    if (this.aiStyle == 110)
                                                    {
                                                        if (this.localAI[1] == 0f)
                                                        {
                                                            this.localAI[1] = this.velocity.Length();
                                                        }
                                                        Vector2 vector201 = Vector2.Zero;
                                                        if (Main.npc[(int)this.ai[0]].active && Main.npc[(int)this.ai[0]].townNPC)
                                                        {
                                                            vector201 = Main.npc[(int)this.ai[0]].Center;
                                                        }
                                                        else
                                                        {
                                                            this.Kill();
                                                            return;
                                                        }
                                                        float num1008 = this.localAI[1];
                                                        Vector2 vector202 = vector201 - base.Center;
                                                        if ((vector202.Length() < num1008) || base.Hitbox.Intersects(Main.npc[(int)this.ai[0]].Hitbox))
                                                        {
                                                            this.Kill();
                                                            int num1009 = Main.npc[(int)this.ai[0]].lifeMax - Main.npc[(int)this.ai[0]].life;
                                                            if (num1009 > 20)
                                                            {
                                                                num1009 = 20;
                                                            }
                                                            if (num1009 > 0)
                                                            {
                                                                NPC npc1 = Main.npc[(int)this.ai[0]];
                                                                npc1.life += num1009;
                                                                Main.npc[(int)this.ai[0]].HealEffect(num1009, true);
                                                            }
                                                            return;
                                                        }
                                                        vector202.Normalize();
                                                        vector202 = (Vector2)(vector202 * num1008);
                                                        if (vector202.Y < this.velocity.Y)
                                                        {
                                                            vector202.Y = this.velocity.Y;
                                                        }
                                                        vector202.Y++;
                                                        base.velocity = Vector2.Lerp(base.velocity, vector202, 0.04f);
                                                        this.rotation += this.velocity.X * 0.05f;
                                                        return;
                                                    }
                                                    if (this.aiStyle == 0x6f)
                                                    {
                                                        if ((!Main.npc[(int)this.ai[1]].active || (Main.npc[(int)this.ai[1]].type != 20)) || (Main.npc[(int)this.ai[1]].ai[0] != 14f))
                                                        {
                                                            this.Kill();
                                                            return;
                                                        }
                                                        this.ai[0]++;
                                                        this.rotation += 0.01047198f;
                                                        this.scale = this.ai[0] / 100f;
                                                        if (this.scale > 1f)
                                                        {
                                                            this.scale = 1f;
                                                        }
                                                        this.alpha = (int)(255f * (1f - this.scale));
                                                        float num1010 = 300f;
                                                        if (this.ai[0] >= 100f)
                                                        {
                                                            num1010 = MathHelper.Lerp(300f, 600f, (this.ai[0] - 100f) / 200f);
                                                        }
                                                        if (num1010 > 600f)
                                                        {
                                                            num1010 = 600f;
                                                        }
                                                        if (this.ai[0] >= 500f)
                                                        {
                                                            this.alpha = (int)MathHelper.Lerp(0f, 255f, (this.ai[0] - 500f) / 100f);
                                                            num1010 = MathHelper.Lerp(600f, 1200f, (this.ai[0] - 500f) / 100f);
                                                            this.rotation += 0.01047198f;
                                                        }
                                                        if (Main.rand.Next(4) == 0)
                                                        {
                                                            float num1011 = num1010;
                                                            Vector2 vector203 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
                                                            float num1012 = Main.rand.Next(3, 9);
                                                            vector203.Normalize();
                                                            color5 = new Color();
                                                            int num1013 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xa3, 0f, 0f, 100, color5, 1f);
                                                            Main.dust[num1013].noGravity = true;
                                                            Main.dust[num1013].position = base.Center + ((Vector2)(vector203 * num1011));
                                                            if (Main.rand.Next(8) == 0)
                                                            {
                                                                Main.dust[num1013].velocity = (Vector2)((vector203 * -num1012) * 3f);
                                                                Dust dust246 = Main.dust[num1013];
                                                                dust246.scale += 0.5f;
                                                            }
                                                            else
                                                            {
                                                                Main.dust[num1013].velocity = (Vector2)(vector203 * -num1012);
                                                            }
                                                        }
                                                        if (Main.rand.Next(2) == 0)
                                                        {
                                                            Vector2 vector204 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
                                                            float num1014 = Main.rand.Next(3, 9);
                                                            vector204.Normalize();
                                                            int num1015 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0xa3, 0f, 0f, 100, new Color(), 1.5f);
                                                            Main.dust[num1015].noGravity = true;
                                                            Main.dust[num1015].position = base.Center + ((Vector2)(vector204 * 30f));
                                                            if (Main.rand.Next(8) == 0)
                                                            {
                                                                Main.dust[num1015].velocity = (Vector2)((vector204 * -num1014) * 3f);
                                                                Dust dust247 = Main.dust[num1015];
                                                                dust247.scale += 0.5f;
                                                            }
                                                            else
                                                            {
                                                                Main.dust[num1015].velocity = (Vector2)(vector204 * -num1014);
                                                            }
                                                        }
                                                        if ((this.ai[0] >= 30f) && (Main.netMode != 2))
                                                        {
                                                            Player player6 = Main.player[Main.myPlayer];
                                                            if ((player6.active && !player6.dead) && ((base.Distance(player6.Center) <= num1010) && (player6.HasBuff(0xa5) == -1)))
                                                            {
                                                                player6.AddBuff(0xa5, 120, true);
                                                            }
                                                        }
                                                        if (((this.ai[0] >= 30f) && ((this.ai[0] % 10f) == 0f)) && (Main.netMode != 1))
                                                        {
                                                            for (int num1016 = 0; num1016 < 200; num1016++)
                                                            {
                                                                NPC npc10 = Main.npc[num1016];
                                                                if (((npc10.type != 0x1e8) && npc10.active) && (base.Distance(npc10.Center) <= num1010))
                                                                {
                                                                    if (npc10.townNPC && ((npc10.HasBuff(0xa5) == -1) || (npc10.buffTime[npc10.HasBuff(0xa5)] <= 20)))
                                                                    {
                                                                        npc10.AddBuff(0xa5, 120, false);
                                                                    }
                                                                    else if (((!npc10.friendly && (npc10.lifeMax > 5)) && !npc10.dontTakeDamage) && (((npc10.HasBuff(0xba) == -1) || (npc10.buffTime[npc10.HasBuff(0xba)] <= 20)) && (npc10.dryadBane || Collision.CanHit(base.Center, 1, 1, npc10.position, npc10.width, npc10.height))))
                                                                    {
                                                                        npc10.AddBuff(0xba, 120, false);
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        if (this.ai[0] >= 570f)
                                                        {
                                                            this.Kill();
                                                            return;
                                                        }
                                                    }
                                                    else if (this.aiStyle == 0x70)
                                                    {
                                                        if (this.type == 590)
                                                        {
                                                            if (++this.frameCounter >= 4)
                                                            {
                                                                this.frameCounter = 0;
                                                                if (++this.frame >= 3)
                                                                {
                                                                    this.frame = 0;
                                                                }
                                                            }
                                                            if (this.alpha > 0)
                                                            {
                                                                this.alpha -= 15;
                                                            }
                                                            if (this.alpha < 0)
                                                            {
                                                                this.alpha = 0;
                                                            }
                                                            if (this.alpha == 0)
                                                            {
                                                                float num1017 = Main.rand.Next(0x1c, 0x2a) * 0.005f;
                                                                num1017 += ((float)(270 - Main.mouseTextColor)) / 500f;
                                                                float num1018 = 0.1f;
                                                                float num1019 = 0.3f + (num1017 / 2f);
                                                                float num1020 = 0.6f + num1017;
                                                                float num1021 = 0.35f;
                                                                num1018 *= num1021;
                                                                num1019 *= num1021;
                                                                num1020 *= num1021;
                                                                Lighting.AddLight(base.Center, num1018, num1019, num1020);
                                                            }
                                                            base.velocity = new Vector2(0f, ((float)Math.Sin((double)((6.283185f * this.ai[0]) / 180f))) * 0.15f);
                                                            this.ai[0]++;
                                                            if (this.ai[0] >= 180f)
                                                            {
                                                                this.ai[0] = 0f;
                                                            }
                                                        }
                                                        if (this.type == 0x284)
                                                        {
                                                            Color color3 = Main.hslToRgb(this.ai[0], 1f, 0.5f);
                                                            int num1022 = (int)this.ai[1];
                                                            if (((num1022 < 0) || (num1022 >= 0x3e8)) || (!Main.projectile[num1022].active && (Main.projectile[num1022].type != 0x283)))
                                                            {
                                                                this.ai[1] = -1f;
                                                            }
                                                            else
                                                            {
                                                                DelegateMethods.v3_1 = (Vector3)(color3.ToVector3() * 0.5f);
                                                                Utils.PlotTileLine(base.Center, Main.projectile[num1022].Center, 8f, new Utils.PerLinePoint(DelegateMethods.CastLight));
                                                            }
                                                            if (this.localAI[0] == 0f)
                                                            {
                                                                this.localAI[0] = (Main.rand.NextFloat() * 0.8f) + 0.8f;
                                                                base.direction = (Main.rand.Next(2) > 0) ? 1 : -1;
                                                            }
                                                            this.rotation = ((this.localAI[1] / 40f) * 6.283185f) * base.direction;
                                                            if (this.alpha > 0)
                                                            {
                                                                this.alpha -= 8;
                                                            }
                                                            if (this.alpha < 0)
                                                            {
                                                                this.alpha = 0;
                                                            }
                                                            if (this.alpha == 0)
                                                            {
                                                                Lighting.AddLight(base.Center, (Vector3)(color3.ToVector3() * 0.5f));
                                                            }
                                                            for (int num1023 = 0; num1023 < 2; num1023++)
                                                            {
                                                                if (Main.rand.Next(10) == 0)
                                                                {
                                                                    vector240 = new Vector2();
                                                                    vector240 = new Vector2();
                                                                    Vector2 vector205 = Vector2.UnitY.RotatedBy(((double)(num1023 * 3.141593f)), vector240).RotatedBy((double)this.rotation, vector240);
                                                                    Dust dust22 = Main.dust[Dust.NewDust(base.Center, 0, 0, 0x10b, 0f, 0f, 0xe1, color3, 1.5f)];
                                                                    dust22.noGravity = true;
                                                                    dust22.noLight = true;
                                                                    dust22.scale = this.Opacity * this.localAI[0];
                                                                    dust22.position = base.Center;
                                                                    dust22.velocity = (Vector2)(vector205 * 2.5f);
                                                                }
                                                            }
                                                            for (int num1024 = 0; num1024 < 2; num1024++)
                                                            {
                                                                if (Main.rand.Next(10) == 0)
                                                                {
                                                                    vector240 = new Vector2();
                                                                    Vector2 vector206 = Vector2.UnitY.RotatedBy((double)(num1024 * 3.141593f), vector240);
                                                                    Dust dust23 = Main.dust[Dust.NewDust(base.Center, 0, 0, 0x10b, 0f, 0f, 0xe1, color3, 1.5f)];
                                                                    dust23.noGravity = true;
                                                                    dust23.noLight = true;
                                                                    dust23.scale = this.Opacity * this.localAI[0];
                                                                    dust23.position = base.Center;
                                                                    dust23.velocity = (Vector2)(vector206 * 2.5f);
                                                                }
                                                            }
                                                            if (Main.rand.Next(10) == 0)
                                                            {
                                                                float num1025 = 1f + (Main.rand.NextFloat() * 2f);
                                                                float num1026 = 1f + Main.rand.NextFloat();
                                                                float num1027 = 1f + Main.rand.NextFloat();
                                                                Vector2 vector207 = Utils.RandomVector2(Main.rand, -1f, 1f);
                                                                if (vector207 != Vector2.Zero)
                                                                {
                                                                    vector207.Normalize();
                                                                }
                                                                vector207 = (Vector2)(vector207 * (20f + (Main.rand.NextFloat() * 100f)));
                                                                Vector2 vector208 = base.Center + vector207;
                                                                Point point3 = vector208.ToTileCoordinates();
                                                                bool flag50 = true;
                                                                if (!WorldGen.InWorld(point3.X, point3.Y, 0))
                                                                {
                                                                    flag50 = false;
                                                                }
                                                                if (flag50 && WorldGen.SolidTile(point3.X, point3.Y))
                                                                {
                                                                    flag50 = false;
                                                                }
                                                                if (flag50)
                                                                {
                                                                    Dust rf = Main.dust[Dust.NewDust(vector208, 0, 0, 0x10b, 0f, 0f, 0x7f, color3, 1f)];
                                                                    rf.noGravity = true;
                                                                    rf.position = vector208;
                                                                    rf.velocity = (Vector2)((-Vector2.UnitY * num1025) * ((Main.rand.NextFloat() * 0.9f) + 1.6f));
                                                                    rf.fadeIn = num1026;
                                                                    rf.scale = num1027;
                                                                    rf.noLight = true;
                                                                    Dust dust25 = Dust.CloneDust(rf);
                                                                    dust25.scale *= 0.65f;
                                                                    dust25.fadeIn *= 0.65f;
                                                                    dust25.color = new Color(0xff, 0xff, 0xff, 0xff);
                                                                }
                                                            }
                                                            this.scale = (this.Opacity / 2f) * this.localAI[0];
                                                            base.velocity = Vector2.Zero;
                                                            this.localAI[1]++;
                                                            if (this.localAI[1] >= 60f)
                                                            {
                                                                this.Kill();
                                                                return;
                                                            }
                                                        }
                                                    }
                                                    else if (this.aiStyle == 0x71)
                                                    {
                                                        int num1028 = 0x19;
                                                        if (this.type == 0x266)
                                                        {
                                                            num1028 = 0x3f;
                                                        }
                                                        if (this.alpha > 0)
                                                        {
                                                            this.alpha -= num1028;
                                                        }
                                                        if (this.alpha < 0)
                                                        {
                                                            this.alpha = 0;
                                                        }
                                                        if (this.ai[0] == 0f)
                                                        {
                                                            if (this.type == 0x266)
                                                            {
                                                                int num1029 = (int)this.ai[1];
                                                                if (!Main.npc[num1029].active)
                                                                {
                                                                    this.Kill();
                                                                    return;
                                                                }
                                                                base.velocity.ToRotation();
                                                                Vector2 vector209 = Main.npc[num1029].Center - base.Center;
                                                                if (vector209 != Vector2.Zero)
                                                                {
                                                                    vector209.Normalize();
                                                                    vector209 = (Vector2)(vector209 * 14f);
                                                                }
                                                                float num1030 = 5f;
                                                                base.velocity = (Vector2)(((base.velocity * (num1030 - 1f)) + vector209) / num1030);
                                                            }
                                                            else
                                                            {
                                                                this.ai[1]++;
                                                                if (this.ai[1] >= 45f)
                                                                {
                                                                    float num1031 = 0.98f;
                                                                    float num1032 = 0.35f;
                                                                    if (this.type == 0x27c)
                                                                    {
                                                                        num1031 = 0.995f;
                                                                        num1032 = 0.15f;
                                                                    }
                                                                    this.ai[1] = 45f;
                                                                    this.velocity.X *= num1031;
                                                                    this.velocity.Y += num1032;
                                                                }
                                                                this.rotation = base.velocity.ToRotation() + 1.570796f;
                                                            }
                                                        }
                                                        if (this.ai[0] == 1f)
                                                        {
                                                            this.ignoreWater = true;
                                                            this.tileCollide = false;
                                                            int num1033 = 15;
                                                            if (this.type == 0x27c)
                                                            {
                                                                num1033 = 5 * this.MaxUpdates;
                                                            }
                                                            bool flag52 = false;
                                                            bool flag53 = false;
                                                            this.localAI[0]++;
                                                            if ((this.localAI[0] % 30f) == 0f)
                                                            {
                                                                flag53 = true;
                                                            }
                                                            int num1034 = (int)this.ai[1];
                                                            if (this.localAI[0] >= (60 * num1033))
                                                            {
                                                                flag52 = true;
                                                            }
                                                            else if ((num1034 < 0) || (num1034 >= 200))
                                                            {
                                                                flag52 = true;
                                                            }
                                                            else if (Main.npc[num1034].active && !Main.npc[num1034].dontTakeDamage)
                                                            {
                                                                base.Center = Main.npc[num1034].Center - ((Vector2)(base.velocity * 2f));
                                                                this.gfxOffY = Main.npc[num1034].gfxOffY;
                                                                if (flag53)
                                                                {
                                                                    Main.npc[num1034].HitEffect(0, 1.0);
                                                                }
                                                            }
                                                            else
                                                            {
                                                                flag52 = true;
                                                            }
                                                            if (flag52)
                                                            {
                                                                this.Kill();
                                                            }
                                                        }
                                                        if (this.type == 0x266)
                                                        {
                                                            Lighting.AddLight(base.Center, 0.2f, 0.6f, 0.7f);
                                                        }
                                                        if (this.type == 0x27c)
                                                        {
                                                            Lighting.AddLight(base.Center, 0.8f, 0.7f, 0.4f);
                                                            return;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (this.aiStyle == 0x72)
                                                        {
                                                            if ((Main.netMode == 2) && (this.localAI[0] == 0f))
                                                            {
                                                                PortalHelper.SyncPortalSections(base.Center, 1);
                                                                this.localAI[0] = 1f;
                                                            }
                                                            this.timeLeft = 3;
                                                            bool flag54 = false;
                                                            if ((!Main.player[this.owner].active || Main.player[this.owner].dead) || (base.Distance(Main.player[this.owner].Center) > 12800f))
                                                            {
                                                                flag54 = true;
                                                            }
                                                            if (!flag54 && !WorldGen.InWorld(((int)base.Center.X) / 0x10, ((int)base.Center.Y) / 0x10, Lighting.offScreenTiles))
                                                            {
                                                                flag54 = true;
                                                            }
                                                            if (!flag54 && !PortalHelper.SupportedTilesAreFine(base.Center, this.ai[0]))
                                                            {
                                                                flag54 = true;
                                                            }
                                                            if (flag54)
                                                            {
                                                                this.Kill();
                                                                return;
                                                            }
                                                            Color portalColor = PortalHelper.GetPortalColor(this.owner, (int)this.ai[1]);
                                                            this.alpha -= 0x19;
                                                            if (this.alpha < 0)
                                                            {
                                                                this.alpha = 0;
                                                            }
                                                            if (this.alpha == 0)
                                                            {
                                                                Lighting.AddLight(base.Center + ((Vector2)(base.velocity * 3f)), (Vector3)(portalColor.ToVector3() * 0.5f));
                                                            }
                                                            if (++this.frameCounter >= 6)
                                                            {
                                                                this.frameCounter = 0;
                                                                if (++this.frame >= Main.projFrames[this.type])
                                                                {
                                                                    this.frame = 0;
                                                                }
                                                            }
                                                            this.rotation = this.ai[0] - 1.570796f;
                                                            return;
                                                        }
                                                        if (this.aiStyle == 0x73)
                                                        {
                                                            Lighting.AddLight(base.Center, new Vector3(0.075f, 0.3f, 0.15f));
                                                            base.velocity = (Vector2)(base.velocity * 0.985f);
                                                            this.rotation += this.velocity.X * 0.2f;
                                                            if (this.velocity.X > 0f)
                                                            {
                                                                this.rotation += 0.08f;
                                                            }
                                                            else
                                                            {
                                                                this.rotation -= 0.08f;
                                                            }
                                                            this.ai[1]++;
                                                            if (this.ai[1] > 30f)
                                                            {
                                                                this.alpha += 10;
                                                                if (this.alpha >= 0xff)
                                                                {
                                                                    this.alpha = 0xff;
                                                                    this.Kill();
                                                                    return;
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (this.aiStyle == 0x74)
                                                            {
                                                                if (this.localAI[0] == 0f)
                                                                {
                                                                    this.rotation = this.ai[1];
                                                                    this.localAI[0] = 1f;
                                                                }
                                                                Player player7 = Main.player[this.owner];
                                                                if (player7.setSolar)
                                                                {
                                                                    this.timeLeft = 2;
                                                                }
                                                                float angle = ((((float)player7.miscCounter) / 300f) * 12.56637f) + this.ai[1];
                                                                angle = MathHelper.WrapAngle(angle);
                                                                this.rotation = this.rotation.AngleLerp(angle, 0.05f);
                                                                this.alpha -= 15;
                                                                if (this.alpha < 0)
                                                                {
                                                                    this.alpha = 0;
                                                                }
                                                                base.velocity = ((Vector2)(this.rotation.ToRotationVector2() * 100f)) - player7.velocity;
                                                                base.Center = player7.Center - base.velocity;
                                                                return;
                                                            }
                                                            if (this.aiStyle == 0x75)
                                                            {
                                                                this.ai[1] += 0.01f;
                                                                this.scale = this.ai[1];
                                                                this.ai[0]++;
                                                                if (this.ai[0] >= (3 * Main.projFrames[this.type]))
                                                                {
                                                                    this.Kill();
                                                                    return;
                                                                }
                                                                if (++this.frameCounter >= 3)
                                                                {
                                                                    this.frameCounter = 0;
                                                                    if (++this.frame >= Main.projFrames[this.type])
                                                                    {
                                                                        this.hide = true;
                                                                    }
                                                                }
                                                                this.alpha -= 0x3f;
                                                                if (this.alpha < 0)
                                                                {
                                                                    this.alpha = 0;
                                                                }
                                                                bool flag55 = this.type == 0x264;
                                                                bool flag56 = this.type == 0x270;
                                                                if (flag55)
                                                                {
                                                                    Lighting.AddLight(base.Center, 0.9f, 0.8f, 0.6f);
                                                                }
                                                                if (this.ai[0] == 1f)
                                                                {
                                                                    base.position = base.Center;
                                                                    base.width = base.height = (int)(52f * this.scale);
                                                                    base.Center = base.position;
                                                                    this.Damage();
                                                                    if (flag55)
                                                                    {
                                                                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                                                                        for (int num1036 = 0; num1036 < 4; num1036++)
                                                                        {
                                                                            color5 = new Color();
                                                                            int num1037 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x1f, 0f, 0f, 100, color5, 1.5f);
                                                                            Main.dust[num1037].position = base.Center + ((Vector2)(((Vector2.UnitY.RotatedByRandom(3.1415927410125732) * ((float)Main.rand.NextDouble())) * base.width) / 2f));
                                                                        }
                                                                        for (int num1038 = 0; num1038 < 10; num1038++)
                                                                        {
                                                                            color5 = new Color();
                                                                            int num1039 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, 0f, 0f, 200, color5, 2.7f);
                                                                            Main.dust[num1039].position = base.Center + ((Vector2)(((Vector2.UnitY.RotatedByRandom(3.1415927410125732) * ((float)Main.rand.NextDouble())) * base.width) / 2f));
                                                                            Main.dust[num1039].noGravity = true;
                                                                            Dust dust248 = Main.dust[num1039];
                                                                            dust248.velocity = (Vector2)(dust248.velocity * 3f);
                                                                            color5 = new Color();
                                                                            num1039 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, 0f, 0f, 100, color5, 1.5f);
                                                                            Main.dust[num1039].position = base.Center + ((Vector2)(((Vector2.UnitY.RotatedByRandom(3.1415927410125732) * ((float)Main.rand.NextDouble())) * base.width) / 2f));
                                                                            Dust dust249 = Main.dust[num1039];
                                                                            dust249.velocity = (Vector2)(dust249.velocity * 2f);
                                                                            Main.dust[num1039].noGravity = true;
                                                                            Main.dust[num1039].fadeIn = 2.5f;
                                                                        }
                                                                        for (int num1040 = 0; num1040 < 5; num1040++)
                                                                        {
                                                                            color5 = new Color();
                                                                            int num1041 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, 0f, 0f, 0, color5, 2.7f);
                                                                            vector240 = new Vector2();
                                                                            Main.dust[num1041].position = base.Center + ((Vector2)((Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy(((double)base.velocity.ToRotation()), vector240) * base.width) / 2f));
                                                                            Main.dust[num1041].noGravity = true;
                                                                            Dust dust250 = Main.dust[num1041];
                                                                            dust250.velocity = (Vector2)(dust250.velocity * 3f);
                                                                        }
                                                                        for (int num1042 = 0; num1042 < 10; num1042++)
                                                                        {
                                                                            color5 = new Color();
                                                                            int num1043 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x1f, 0f, 0f, 0, color5, 1.5f);
                                                                            vector240 = new Vector2();
                                                                            Main.dust[num1043].position = base.Center + ((Vector2)((Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy(((double)base.velocity.ToRotation()), vector240) * base.width) / 2f));
                                                                            Main.dust[num1043].noGravity = true;
                                                                            Dust dust251 = Main.dust[num1043];
                                                                            dust251.velocity = (Vector2)(dust251.velocity * 3f);
                                                                        }
                                                                    }
                                                                    if (flag56)
                                                                    {
                                                                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                                                                        for (int num1044 = 0; num1044 < 20; num1044++)
                                                                        {
                                                                            color5 = new Color();
                                                                            int num1045 = Dust.NewDust(base.position, base.width, base.height, 0x87, 0f, 0f, 100, color5, 1.5f);
                                                                            Main.dust[num1045].position = base.Center + ((Vector2)(((Vector2.UnitY.RotatedByRandom(3.1415927410125732) * ((float)Main.rand.NextDouble())) * base.width) / 2f));
                                                                            Dust dust252 = Main.dust[num1045];
                                                                            dust252.velocity = (Vector2)(dust252.velocity * 2f);
                                                                            Main.dust[num1045].noGravity = true;
                                                                            Main.dust[num1045].fadeIn = 2.5f;
                                                                            Main.dust[num1045].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
                                                                        }
                                                                        for (int num1046 = 0; num1046 < 15; num1046++)
                                                                        {
                                                                            color5 = new Color();
                                                                            int num1047 = Dust.NewDust(base.position, base.width, base.height, 0x87, 0f, 0f, 0, color5, 2.7f);
                                                                            vector240 = new Vector2();
                                                                            Main.dust[num1047].position = base.Center + ((Vector2)((Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy(((double)base.velocity.ToRotation()), vector240) * base.width) / 2f));
                                                                            Main.dust[num1047].noGravity = true;
                                                                            Dust dust253 = Main.dust[num1047];
                                                                            dust253.velocity = (Vector2)(dust253.velocity * 3f);
                                                                            Main.dust[num1047].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
                                                                        }
                                                                        float num1048 = ((float)Main.rand.NextDouble()) * 6.283185f;
                                                                        float num1049 = ((float)Main.rand.NextDouble()) * 6.283185f;
                                                                        float num1050 = ((float)Main.rand.NextDouble()) * 6.283185f;
                                                                        float num1051 = 7f + (((float)Main.rand.NextDouble()) * 7f);
                                                                        float num1052 = 7f + (((float)Main.rand.NextDouble()) * 7f);
                                                                        float num1053 = 7f + (((float)Main.rand.NextDouble()) * 7f);
                                                                        float num1054 = num1051;
                                                                        if (num1052 > num1054)
                                                                        {
                                                                            num1054 = num1052;
                                                                        }
                                                                        if (num1053 > num1054)
                                                                        {
                                                                            num1054 = num1053;
                                                                        }
                                                                        for (int num1055 = 0; num1055 < 200; num1055++)
                                                                        {
                                                                            int num1056 = 0x87;
                                                                            float num1057 = num1054;
                                                                            if (num1055 > 50)
                                                                            {
                                                                                num1057 = num1052;
                                                                            }
                                                                            if (num1055 > 100)
                                                                            {
                                                                                num1057 = num1051;
                                                                            }
                                                                            if (num1055 > 150)
                                                                            {
                                                                                num1057 = num1053;
                                                                            }
                                                                            color5 = new Color();
                                                                            int num1058 = Dust.NewDust(base.position, 6, 6, num1056, 0f, 0f, 100, color5, 1f);
                                                                            Vector2 velocity = Main.dust[num1058].velocity;
                                                                            Main.dust[num1058].position = base.Center;
                                                                            velocity.Normalize();
                                                                            velocity = (Vector2)(velocity * num1057);
                                                                            if (num1055 > 150)
                                                                            {
                                                                                velocity.Y *= 0.5f;
                                                                                vector240 = new Vector2();
                                                                                velocity = velocity.RotatedBy((double)num1050, vector240);
                                                                            }
                                                                            else if (num1055 > 100)
                                                                            {
                                                                                velocity.X *= 0.5f;
                                                                                vector240 = new Vector2();
                                                                                velocity = velocity.RotatedBy((double)num1048, vector240);
                                                                            }
                                                                            else if (num1055 > 50)
                                                                            {
                                                                                velocity.Y *= 0.5f;
                                                                                vector240 = new Vector2();
                                                                                velocity = velocity.RotatedBy((double)num1049, vector240);
                                                                            }
                                                                            Dust dust254 = Main.dust[num1058];
                                                                            dust254.velocity = (Vector2)(dust254.velocity * 0.2f);
                                                                            Dust dust255 = Main.dust[num1058];
                                                                            dust255.velocity += velocity;
                                                                            Main.dust[num1058].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
                                                                            if (num1055 <= 200)
                                                                            {
                                                                                Main.dust[num1058].scale = 2f;
                                                                                Main.dust[num1058].noGravity = true;
                                                                                Main.dust[num1058].fadeIn = Main.rand.NextFloat() * 2f;
                                                                                if (Main.rand.Next(4) == 0)
                                                                                {
                                                                                    Main.dust[num1058].fadeIn = 2.5f;
                                                                                }
                                                                                Main.dust[num1058].noLight = true;
                                                                                if (num1055 < 100)
                                                                                {
                                                                                    Dust dust256 = Main.dust[num1058];
                                                                                    dust256.position += (Vector2)(Main.dust[num1058].velocity * 20f);
                                                                                    Dust dust257 = Main.dust[num1058];
                                                                                    dust257.velocity = (Vector2)(dust257.velocity * -1f);
                                                                                }
                                                                            }
                                                                        }
                                                                        return;
                                                                    }
                                                                }
                                                            }
                                                            else if (this.aiStyle == 0x76)
                                                            {
                                                                this.ai[0]++;
                                                                int num1059 = 0;
                                                                if (this.velocity.Length() <= 4f)
                                                                {
                                                                    num1059 = 1;
                                                                }
                                                                this.alpha -= 15;
                                                                if (this.alpha < 0)
                                                                {
                                                                    this.alpha = 0;
                                                                }
                                                                switch (num1059)
                                                                {
                                                                    case 0:
                                                                        this.rotation -= 0.1047198f;
                                                                        if (Main.rand.Next(3) == 0)
                                                                        {
                                                                            if (Main.rand.Next(2) == 0)
                                                                            {
                                                                                Vector2 vector211 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                                                Dust dust26 = Main.dust[Dust.NewDust(base.Center - ((Vector2)(vector211 * 30f)), 0, 0, Utils.SelectRandom<int>(Main.rand, new int[] { 0x56, 90 }), 0f, 0f, 0, new Color(), 1f)];
                                                                                dust26.noGravity = true;
                                                                                dust26.position = base.Center - (vector211 * Main.rand.Next(10, 0x15));
                                                                                dust26.velocity = (Vector2)(vector211.RotatedBy(1.5707963705062866, new Vector2()) * 6f);
                                                                                dust26.scale = 0.5f + Main.rand.NextFloat();
                                                                                dust26.fadeIn = 0.5f;
                                                                                dust26.customData = this;
                                                                            }
                                                                            else
                                                                            {
                                                                                Vector2 vector212 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                                                Dust dust27 = Main.dust[Dust.NewDust(base.Center - ((Vector2)(vector212 * 30f)), 0, 0, 240, 0f, 0f, 0, new Color(), 1f)];
                                                                                dust27.noGravity = true;
                                                                                dust27.position = base.Center - ((Vector2)(vector212 * 30f));
                                                                                dust27.velocity = (Vector2)(vector212.RotatedBy(-1.5707963705062866, new Vector2()) * 3f);
                                                                                dust27.scale = 0.5f + Main.rand.NextFloat();
                                                                                dust27.fadeIn = 0.5f;
                                                                                dust27.customData = this;
                                                                            }
                                                                        }
                                                                        if (this.ai[0] >= 30f)
                                                                        {
                                                                            base.velocity = (Vector2)(base.velocity * 0.98f);
                                                                            this.scale += 0.007446808f;
                                                                            if (this.scale > 1.3f)
                                                                            {
                                                                                this.scale = 1.3f;
                                                                            }
                                                                            this.rotation -= 0.01745329f;
                                                                        }
                                                                        if (this.velocity.Length() < 4.1f)
                                                                        {
                                                                            this.velocity.Normalize();
                                                                            base.velocity = (Vector2)(base.velocity * 4f);
                                                                            this.ai[0] = 0f;
                                                                        }
                                                                        break;

                                                                    case 1:
                                                                        {
                                                                            this.rotation -= 0.1047198f;
                                                                            for (int num1060 = 0; num1060 < 1; num1060++)
                                                                            {
                                                                                if (Main.rand.Next(2) == 0)
                                                                                {
                                                                                    Vector2 vector213 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                                                    color5 = new Color();
                                                                                    Dust dust28 = Main.dust[Dust.NewDust(base.Center - ((Vector2)(vector213 * 30f)), 0, 0, 0x56, 0f, 0f, 0, color5, 1f)];
                                                                                    dust28.noGravity = true;
                                                                                    dust28.position = base.Center - (vector213 * Main.rand.Next(10, 0x15));
                                                                                    vector240 = new Vector2();
                                                                                    dust28.velocity = (Vector2)(vector213.RotatedBy(1.5707963705062866, vector240) * 6f);
                                                                                    dust28.scale = 0.9f + Main.rand.NextFloat();
                                                                                    dust28.fadeIn = 0.5f;
                                                                                    dust28.customData = this;
                                                                                    vector213 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                                                    color5 = new Color();
                                                                                    dust28 = Main.dust[Dust.NewDust(base.Center - ((Vector2)(vector213 * 30f)), 0, 0, 90, 0f, 0f, 0, color5, 1f)];
                                                                                    dust28.noGravity = true;
                                                                                    dust28.position = base.Center - (vector213 * Main.rand.Next(10, 0x15));
                                                                                    vector240 = new Vector2();
                                                                                    dust28.velocity = (Vector2)(vector213.RotatedBy(1.5707963705062866, vector240) * 6f);
                                                                                    dust28.scale = 0.9f + Main.rand.NextFloat();
                                                                                    dust28.fadeIn = 0.5f;
                                                                                    dust28.customData = this;
                                                                                    dust28.color = Color.Crimson;
                                                                                }
                                                                                else
                                                                                {
                                                                                    Vector2 vector214 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                                                    color5 = new Color();
                                                                                    Dust dust29 = Main.dust[Dust.NewDust(base.Center - ((Vector2)(vector214 * 30f)), 0, 0, 240, 0f, 0f, 0, color5, 1f)];
                                                                                    dust29.noGravity = true;
                                                                                    dust29.position = base.Center - (vector214 * Main.rand.Next(20, 0x1f));
                                                                                    vector240 = new Vector2();
                                                                                    dust29.velocity = (Vector2)(vector214.RotatedBy(-1.5707963705062866, vector240) * 5f);
                                                                                    dust29.scale = 0.9f + Main.rand.NextFloat();
                                                                                    dust29.fadeIn = 0.5f;
                                                                                    dust29.customData = this;
                                                                                }
                                                                            }
                                                                            if ((((this.ai[0] % 30f) == 0f) && (this.ai[0] < 241f)) && (Main.myPlayer == this.owner))
                                                                            {
                                                                                Vector2 vector215 = (Vector2)(Vector2.UnitY.RotatedByRandom(6.2831854820251465) * 12f);
                                                                                NewProjectile(base.Center.X, base.Center.Y, vector215.X, vector215.Y, 0x26a, this.damage / 2, 0f, this.owner, 0f, (float)base.whoAmI);
                                                                            }
                                                                            Vector2 vector216 = base.Center;
                                                                            float num1061 = 800f;
                                                                            bool flag57 = false;
                                                                            int num1062 = 0;
                                                                            if (this.ai[1] == 0f)
                                                                            {
                                                                                for (int num1063 = 0; num1063 < 200; num1063++)
                                                                                {
                                                                                    if (Main.npc[num1063].CanBeChasedBy(this, false))
                                                                                    {
                                                                                        Vector2 other = Main.npc[num1063].Center;
                                                                                        if ((base.Distance(other) < num1061) && Collision.CanHit(new Vector2(this.position.X + (base.width / 2), this.position.Y + (base.height / 2)), 1, 1, Main.npc[num1063].position, Main.npc[num1063].width, Main.npc[num1063].height))
                                                                                        {
                                                                                            num1061 = base.Distance(other);
                                                                                            vector216 = other;
                                                                                            flag57 = true;
                                                                                            num1062 = num1063;
                                                                                        }
                                                                                    }
                                                                                }
                                                                                if (flag57)
                                                                                {
                                                                                    if (this.ai[1] != (num1062 + 1))
                                                                                    {
                                                                                        this.netUpdate = true;
                                                                                    }
                                                                                    this.ai[1] = num1062 + 1;
                                                                                }
                                                                                flag57 = false;
                                                                            }
                                                                            if (this.ai[1] != 0f)
                                                                            {
                                                                                int num1064 = (int)(this.ai[1] - 1f);
                                                                                if ((Main.npc[num1064].active && Main.npc[num1064].CanBeChasedBy(this, true)) && (base.Distance(Main.npc[num1064].Center) < 1000f))
                                                                                {
                                                                                    flag57 = true;
                                                                                    vector216 = Main.npc[num1064].Center;
                                                                                }
                                                                            }
                                                                            if (!this.friendly)
                                                                            {
                                                                                flag57 = false;
                                                                            }
                                                                            if (flag57)
                                                                            {
                                                                                float num1065 = 4f;
                                                                                int num1066 = 8;
                                                                                Vector2 vector218 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                                                                                float num1067 = vector216.X - vector218.X;
                                                                                float num1068 = vector216.Y - vector218.Y;
                                                                                float num1069 = (float)Math.Sqrt((double)((num1067 * num1067) + (num1068 * num1068)));
                                                                                num1069 = num1065 / num1069;
                                                                                num1067 *= num1069;
                                                                                num1068 *= num1069;
                                                                                this.velocity.X = ((this.velocity.X * (num1066 - 1)) + num1067) / ((float)num1066);
                                                                                this.velocity.Y = ((this.velocity.Y * (num1066 - 1)) + num1068) / ((float)num1066);
                                                                            }
                                                                            break;
                                                                        }
                                                                }
                                                                if (this.alpha < 150)
                                                                {
                                                                    Lighting.AddLight(base.Center, 0.7f, 0.2f, 0.6f);
                                                                }
                                                                if (this.ai[0] >= 600f)
                                                                {
                                                                    this.Kill();
                                                                    return;
                                                                }
                                                            }
                                                            else if (this.aiStyle == 0x77)
                                                            {
                                                                int num1070 = 0;
                                                                float num1071 = 0f;
                                                                float num1072 = 0f;
                                                                float num1073 = 0f;
                                                                bool flag58 = false;
                                                                bool flag59 = false;
                                                                if (this.type == 0x26a)
                                                                {
                                                                    num1070 = 0x269;
                                                                    num1071 = 420f;
                                                                    num1072 = 0.15f;
                                                                    num1073 = 0.15f;
                                                                }
                                                                if (flag59)
                                                                {
                                                                    int num1074 = (int)this.ai[1];
                                                                    if (!Main.projectile[num1074].active || (Main.projectile[num1074].type != num1070))
                                                                    {
                                                                        this.Kill();
                                                                        return;
                                                                    }
                                                                    this.timeLeft = 2;
                                                                }
                                                                this.ai[0]++;
                                                                if (this.ai[0] < num1071)
                                                                {
                                                                    bool flag60 = true;
                                                                    int num1075 = (int)this.ai[1];
                                                                    if (Main.projectile[num1075].active && (Main.projectile[num1075].type == num1070))
                                                                    {
                                                                        if (!flag58 && (Main.projectile[num1075].oldPos[1] != Vector2.Zero))
                                                                        {
                                                                            base.position += Main.projectile[num1075].position - Main.projectile[num1075].oldPos[1];
                                                                        }
                                                                        if (base.Center.HasNaNs())
                                                                        {
                                                                            this.Kill();
                                                                            return;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        this.ai[0] = num1071;
                                                                        flag60 = false;
                                                                        this.Kill();
                                                                    }
                                                                    if (flag60 && !flag58)
                                                                    {
                                                                        base.velocity += new Vector2((float)Math.Sign((float)(Main.projectile[num1075].Center.X - base.Center.X)), (float)Math.Sign((float)(Main.projectile[num1075].Center.Y - base.Center.Y))) * new Vector2(num1072, num1073);
                                                                        if (this.velocity.Length() > 6f)
                                                                        {
                                                                            base.velocity = (Vector2)(base.velocity * (6f / this.velocity.Length()));
                                                                        }
                                                                    }
                                                                    if (this.type == 0x26a)
                                                                    {
                                                                        if (Main.rand.Next(2) == 0)
                                                                        {
                                                                            int num1076 = Dust.NewDust(base.Center, 8, 8, 0x56, 0f, 0f, 0, new Color(), 1f);
                                                                            Main.dust[num1076].position = base.Center;
                                                                            Main.dust[num1076].velocity = base.velocity;
                                                                            Main.dust[num1076].noGravity = true;
                                                                            Main.dust[num1076].scale = 1.5f;
                                                                            if (flag60)
                                                                            {
                                                                                Main.dust[num1076].customData = Main.projectile[(int)this.ai[1]];
                                                                            }
                                                                        }
                                                                        this.alpha = 0xff;
                                                                        return;
                                                                    }
                                                                    this.Kill();
                                                                    return;
                                                                }
                                                            }
                                                            else if (this.aiStyle == 120)
                                                            {
                                                                Player player8 = Main.player[this.owner];
                                                                if (!player8.active)
                                                                {
                                                                    base.active = false;
                                                                    return;
                                                                }
                                                                bool flag61 = this.type == 0x26f;
                                                                Vector2 minionTargetPoint = player8.Center;
                                                                float num1077 = 100f;
                                                                float num1078 = 300f;
                                                                float num1079 = 100f;
                                                                float num1080 = 100f;
                                                                if (flag61)
                                                                {
                                                                    if (player8.dead)
                                                                    {
                                                                        player8.stardustGuardian = false;
                                                                    }
                                                                    if (player8.stardustGuardian)
                                                                    {
                                                                        this.timeLeft = 2;
                                                                    }
                                                                    num1077 = 150f;
                                                                    num1078 = 250f;
                                                                    num1079 = 200f;
                                                                    minionTargetPoint.X -= (5 + (player8.width / 2)) * player8.direction;
                                                                    minionTargetPoint.Y -= 25f;
                                                                    Lighting.AddLight(base.Center, 0.9f, 0.9f, 0.7f);
                                                                    if ((this.ai[0] != 3f) && (this.alpha == 0xff))
                                                                    {
                                                                        this.alpha = 0;
                                                                        for (int num1081 = 0; num1081 < 30; num1081++)
                                                                        {
                                                                            color5 = new Color();
                                                                            int num1082 = Dust.NewDust(base.position, base.width, base.height, 0x87, 0f, 0f, 200, color5, 1.7f);
                                                                            Main.dust[num1082].noGravity = true;
                                                                            Dust dust258 = Main.dust[num1082];
                                                                            dust258.velocity = (Vector2)(dust258.velocity * 3f);
                                                                            Main.dust[num1082].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
                                                                            color5 = new Color();
                                                                            num1082 = Dust.NewDust(base.position, base.width, base.height, 0x87, 0f, 0f, 100, color5, 1f);
                                                                            Dust dust259 = Main.dust[num1082];
                                                                            dust259.velocity = (Vector2)(dust259.velocity * 2f);
                                                                            Main.dust[num1082].noGravity = true;
                                                                            Main.dust[num1082].fadeIn = 2.5f;
                                                                            Main.dust[num1082].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
                                                                        }
                                                                    }
                                                                    if (this.localAI[0] > 0f)
                                                                    {
                                                                        this.localAI[0]--;
                                                                    }
                                                                }
                                                                if (this.ai[0] != 0f)
                                                                {
                                                                    Main.player[this.owner].tankPet = base.whoAmI;
                                                                    Main.player[this.owner].tankPetReset = false;
                                                                }
                                                                if (this.ai[0] == 0f)
                                                                {
                                                                    if (player8.HasMinionTarget)
                                                                    {
                                                                        this.ai[0] = 3f;
                                                                        this.netUpdate = true;
                                                                    }
                                                                    base.Center = Vector2.Lerp(base.Center, minionTargetPoint, 0.2f);
                                                                    base.velocity = (Vector2)(base.velocity * 0.8f);
                                                                    base.direction = this.spriteDirection = player8.direction;
                                                                    if (flag61 && (++this.frameCounter >= 9))
                                                                    {
                                                                        this.frameCounter = 0;
                                                                        if (++this.frame >= (Main.projFrames[this.type] - 4))
                                                                        {
                                                                            this.frame = 0;
                                                                        }
                                                                    }
                                                                }
                                                                else if (this.ai[0] == 1f)
                                                                {
                                                                    if (player8.HasMinionTarget)
                                                                    {
                                                                        minionTargetPoint = player8.MinionTargetPoint;
                                                                    }
                                                                    else
                                                                    {
                                                                        this.ai[0] = 0f;
                                                                        this.netUpdate = true;
                                                                    }
                                                                    int num1083 = -1;
                                                                    bool flag62 = true;
                                                                    if (flag61 && (Math.Abs((float)(base.Center.X - minionTargetPoint.X)) > (num1077 + 20f)))
                                                                    {
                                                                        flag62 = false;
                                                                    }
                                                                    if (flag62)
                                                                    {
                                                                        for (int num1084 = 0; num1084 < 200; num1084++)
                                                                        {
                                                                            NPC npc11 = Main.npc[num1084];
                                                                            if (npc11.CanBeChasedBy(this, false) && (base.Distance(npc11.Center) < num1078))
                                                                            {
                                                                                num1083 = num1084;
                                                                            }
                                                                        }
                                                                    }
                                                                    if (num1083 != -1)
                                                                    {
                                                                        NPC npc12 = Main.npc[num1083];
                                                                        base.direction = this.spriteDirection = (npc12.Center.X > base.Center.X).ToDirectionInt();
                                                                        float num1086 = Math.Abs((float)(minionTargetPoint.X - base.Center.X));
                                                                        float num1087 = Math.Abs((float)(npc12.Center.X - base.Center.X));
                                                                        float num1088 = Math.Abs((float)(minionTargetPoint.Y - base.Center.Y));
                                                                        float num1089 = Math.Abs((float)(npc12.Center.Y - base.Bottom.Y));
                                                                        float num1090 = (npc12.Center.Y > base.Bottom.Y).ToDirectionInt();
                                                                        if (((num1086 < num1077) || (((minionTargetPoint.X - base.Center.X) * base.direction) < 0f)) && ((num1087 > 20f) && (num1087 < ((num1077 - num1086) + 100f))))
                                                                        {
                                                                            this.velocity.X += 0.1f * base.direction;
                                                                        }
                                                                        else
                                                                        {
                                                                            this.velocity.X *= 0.7f;
                                                                        }
                                                                        if (((num1088 < num1080) || (((minionTargetPoint.Y - base.Bottom.Y) * num1090) < 0f)) && ((num1089 > 10f) && (num1089 < ((num1080 - num1088) + 10f))))
                                                                        {
                                                                            this.velocity.Y += 0.1f * num1090;
                                                                        }
                                                                        else
                                                                        {
                                                                            this.velocity.Y *= 0.7f;
                                                                        }
                                                                        if (((this.localAI[0] == 0f) && (this.owner == Main.myPlayer)) && (num1087 < num1079))
                                                                        {
                                                                            this.ai[1] = 0f;
                                                                            this.ai[0] = 2f;
                                                                            this.netUpdate = true;
                                                                            this.localAI[0] = 90f;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if (Math.Abs((float)(minionTargetPoint.X - base.Center.X)) > (num1077 + 40f))
                                                                        {
                                                                            this.ai[0] = 3f;
                                                                            this.netUpdate = true;
                                                                        }
                                                                        else if (Math.Abs((float)(minionTargetPoint.X - base.Center.X)) > 20f)
                                                                        {
                                                                            base.direction = this.spriteDirection = (minionTargetPoint.X > base.Center.X).ToDirectionInt();
                                                                            this.velocity.X += 0.06f * base.direction;
                                                                        }
                                                                        else
                                                                        {
                                                                            this.velocity.X *= 0.8f;
                                                                            base.direction = this.spriteDirection = (player8.Center.X < base.Center.X).ToDirectionInt();
                                                                        }
                                                                        if (Math.Abs((float)(minionTargetPoint.Y - base.Center.Y)) > num1080)
                                                                        {
                                                                            this.ai[0] = 3f;
                                                                            this.netUpdate = true;
                                                                        }
                                                                        else if (Math.Abs((float)(minionTargetPoint.Y - base.Center.Y)) > 10f)
                                                                        {
                                                                            this.velocity.Y += 0.06f * Math.Sign((float)(minionTargetPoint.Y - base.Center.Y));
                                                                        }
                                                                        else
                                                                        {
                                                                            this.velocity.Y *= 0.8f;
                                                                        }
                                                                    }
                                                                    if (flag61 && (++this.frameCounter >= 9))
                                                                    {
                                                                        this.frameCounter = 0;
                                                                        if (++this.frame >= (Main.projFrames[this.type] - 4))
                                                                        {
                                                                            this.frame = 0;
                                                                        }
                                                                    }
                                                                }
                                                                else if (this.ai[0] == 2f)
                                                                {
                                                                    this.velocity.X *= 0.9f;
                                                                    this.ai[1]++;
                                                                    float num1091 = 0f;
                                                                    if (flag61)
                                                                    {
                                                                        num1091 = 20f;
                                                                        if ((this.ai[1] == 10f) && (this.owner == Main.myPlayer))
                                                                        {
                                                                            int num1092 = (int)(20f * Main.player[this.owner].minionDamage);
                                                                            NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 0x270, num1092, 6f, this.owner, 0f, 5f);
                                                                        }
                                                                    }
                                                                    if (this.ai[1] >= num1091)
                                                                    {
                                                                        this.ai[1] = 0f;
                                                                        this.ai[0] = 1f;
                                                                        this.netUpdate = true;
                                                                    }
                                                                    if (flag61)
                                                                    {
                                                                        if (this.frame < (Main.projFrames[this.type] - 4))
                                                                        {
                                                                            this.frame = Main.projFrames[this.type] - 1;
                                                                            this.frameCounter = 0;
                                                                        }
                                                                        if (++this.frameCounter >= 5)
                                                                        {
                                                                            this.frameCounter = 0;
                                                                            if (--this.frame < (Main.projFrames[this.type] - 5))
                                                                            {
                                                                                this.frame = Main.projFrames[this.type] - 1;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                                if (this.ai[0] == 3f)
                                                                {
                                                                    if (player8.HasMinionTarget)
                                                                    {
                                                                        minionTargetPoint = player8.MinionTargetPoint;
                                                                    }
                                                                    else
                                                                    {
                                                                        this.ai[0] = 0f;
                                                                        this.netUpdate = true;
                                                                    }
                                                                    if (this.alpha == 0)
                                                                    {
                                                                        this.alpha = 0xff;
                                                                        for (int num1093 = 0; num1093 < 30; num1093++)
                                                                        {
                                                                            color5 = new Color();
                                                                            int num1094 = Dust.NewDust(base.position, base.width, base.height, 0x87, 0f, 0f, 200, color5, 1.7f);
                                                                            Main.dust[num1094].noGravity = true;
                                                                            Dust dust260 = Main.dust[num1094];
                                                                            dust260.velocity = (Vector2)(dust260.velocity * 3f);
                                                                            Main.dust[num1094].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
                                                                            color5 = new Color();
                                                                            num1094 = Dust.NewDust(base.position, base.width, base.height, 0x87, 0f, 0f, 100, color5, 1f);
                                                                            Dust dust261 = Main.dust[num1094];
                                                                            dust261.velocity = (Vector2)(dust261.velocity * 2f);
                                                                            Main.dust[num1094].noGravity = true;
                                                                            Main.dust[num1094].fadeIn = 2.5f;
                                                                            Main.dust[num1094].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        for (int num1095 = 0; num1095 < 2; num1095++)
                                                                        {
                                                                            color5 = new Color();
                                                                            int num1096 = Dust.NewDust(base.position, base.width, base.height, 0x87, 0f, 0f, 200, color5, 1.7f);
                                                                            Main.dust[num1096].noGravity = true;
                                                                            Dust dust262 = Main.dust[num1096];
                                                                            dust262.velocity = (Vector2)(dust262.velocity * 3f);
                                                                            Main.dust[num1096].noLight = true;
                                                                            Main.dust[num1096].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
                                                                            color5 = new Color();
                                                                            num1096 = Dust.NewDust(base.position, base.width, base.height, 0x87, 0f, 0f, 100, color5, 1f);
                                                                            Dust dust263 = Main.dust[num1096];
                                                                            dust263.velocity = (Vector2)(dust263.velocity * 2f);
                                                                            Main.dust[num1096].noGravity = true;
                                                                            Main.dust[num1096].fadeIn = 2.5f;
                                                                            Main.dust[num1096].noLight = true;
                                                                            Main.dust[num1096].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
                                                                        }
                                                                    }
                                                                    base.velocity = (Vector2)(base.velocity * 0.7f);
                                                                    base.Center = Vector2.Lerp(base.Center, minionTargetPoint, 0.2f);
                                                                    if (base.Distance(minionTargetPoint) < 10f)
                                                                    {
                                                                        this.ai[0] = 1f;
                                                                        this.netUpdate = true;
                                                                        return;
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (this.aiStyle == 0x79)
                                                                {
                                                                    Player player9 = Main.player[this.owner];
                                                                    if ((((int)Main.time) % 120) == 0)
                                                                    {
                                                                        this.netUpdate = true;
                                                                    }
                                                                    if (!player9.active)
                                                                    {
                                                                        base.active = false;
                                                                        return;
                                                                    }
                                                                    bool flag63 = this.type == 0x271;
                                                                    bool flag64 = (((this.type == 0x271) || (this.type == 0x272)) || (this.type == 0x273)) || (this.type == 0x274);
                                                                    int num1097 = 10;
                                                                    int num1098 = 10;
                                                                    float num1099 = 0.01f;
                                                                    if (flag64)
                                                                    {
                                                                        if (player9.dead)
                                                                        {
                                                                            player9.stardustDragon = false;
                                                                        }
                                                                        if (player9.stardustDragon)
                                                                        {
                                                                            this.timeLeft = 2;
                                                                        }
                                                                        num1097 = 30;
                                                                        num1098 = 50;
                                                                        num1099 = 0.2f;
                                                                        if (Main.rand.Next(30) == 0)
                                                                        {
                                                                            color5 = new Color();
                                                                            int num1100 = Dust.NewDust(base.position, base.width, base.height, 0x87, 0f, 0f, 0, color5, 2f);
                                                                            Main.dust[num1100].noGravity = true;
                                                                            Main.dust[num1100].fadeIn = 2f;
                                                                            Point point4 = Main.dust[num1100].position.ToTileCoordinates();
                                                                            if (WorldGen.InWorld(point4.X, point4.Y, 5) && WorldGen.SolidTile(point4.X, point4.Y))
                                                                            {
                                                                                Main.dust[num1100].noLight = true;
                                                                            }
                                                                        }
                                                                    }
                                                                    if (flag63)
                                                                    {
                                                                        Vector2 vector220 = player9.Center;
                                                                        float num1101 = 700f;
                                                                        float num1102 = 1000f;
                                                                        int num1103 = -1;
                                                                        if (base.Distance(vector220) > 2000f)
                                                                        {
                                                                            base.Center = vector220;
                                                                            this.netUpdate = true;
                                                                        }
                                                                        bool flag65 = true;
                                                                        if (flag65)
                                                                        {
                                                                            for (int num1104 = 0; num1104 < 200; num1104++)
                                                                            {
                                                                                NPC npc13 = Main.npc[num1104];
                                                                                if ((npc13.CanBeChasedBy(this, false) && (player9.Distance(npc13.Center) < num1102)) && (base.Distance(npc13.Center) < num1101))
                                                                                {
                                                                                    num1103 = num1104;
                                                                                    bool boss = npc13.boss;
                                                                                }
                                                                            }
                                                                        }
                                                                        if (num1103 != -1)
                                                                        {
                                                                            NPC npc14 = Main.npc[num1103];
                                                                            Vector2 vector221 = npc14.Center - base.Center;
                                                                            (vector221.X > 0f).ToDirectionInt();
                                                                            (vector221.Y > 0f).ToDirectionInt();
                                                                            float num1106 = 0.4f;
                                                                            if (vector221.Length() < 600f)
                                                                            {
                                                                                num1106 = 0.6f;
                                                                            }
                                                                            if (vector221.Length() < 300f)
                                                                            {
                                                                                num1106 = 0.8f;
                                                                            }
                                                                            if (vector221.Length() > (npc14.Size.Length() * 0.75f))
                                                                            {
                                                                                base.velocity += (Vector2)((Vector2.Normalize(vector221) * num1106) * 1.5f);
                                                                                if (Vector2.Dot(base.velocity, vector221) < 0.25f)
                                                                                {
                                                                                    base.velocity = (Vector2)(base.velocity * 0.8f);
                                                                                }
                                                                            }
                                                                            float num1107 = 30f;
                                                                            if (this.velocity.Length() > num1107)
                                                                            {
                                                                                base.velocity = (Vector2)(Vector2.Normalize(base.velocity) * num1107);
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            float num1108 = 0.2f;
                                                                            Vector2 vector222 = vector220 - base.Center;
                                                                            if (vector222.Length() < 200f)
                                                                            {
                                                                                num1108 = 0.12f;
                                                                            }
                                                                            if (vector222.Length() < 140f)
                                                                            {
                                                                                num1108 = 0.06f;
                                                                            }
                                                                            if (vector222.Length() > 100f)
                                                                            {
                                                                                if (Math.Abs((float)(vector220.X - base.Center.X)) > 20f)
                                                                                {
                                                                                    this.velocity.X += num1108 * Math.Sign((float)(vector220.X - base.Center.X));
                                                                                }
                                                                                if (Math.Abs((float)(vector220.Y - base.Center.Y)) > 10f)
                                                                                {
                                                                                    this.velocity.Y += num1108 * Math.Sign((float)(vector220.Y - base.Center.Y));
                                                                                }
                                                                            }
                                                                            else if (this.velocity.Length() > 2f)
                                                                            {
                                                                                base.velocity = (Vector2)(base.velocity * 0.96f);
                                                                            }
                                                                            if (Math.Abs(this.velocity.Y) < 1f)
                                                                            {
                                                                                this.velocity.Y -= 0.1f;
                                                                            }
                                                                            float num1109 = 15f;
                                                                            if (this.velocity.Length() > num1109)
                                                                            {
                                                                                base.velocity = (Vector2)(Vector2.Normalize(base.velocity) * num1109);
                                                                            }
                                                                        }
                                                                        this.rotation = base.velocity.ToRotation() + 1.570796f;
                                                                        int direction = base.direction;
                                                                        base.direction = this.spriteDirection = (this.velocity.X > 0f) ? 1 : -1;
                                                                        if (direction != base.direction)
                                                                        {
                                                                            this.netUpdate = true;
                                                                        }
                                                                        float num1111 = MathHelper.Clamp(this.localAI[0], 0f, 4f);
                                                                        base.position = base.Center;
                                                                        this.scale = 1f + (num1111 * 0.01f);
                                                                        base.width = base.height = (int)(num1097 * this.scale);
                                                                        base.Center = base.position;
                                                                        if (this.alpha > 0)
                                                                        {
                                                                            for (int num1112 = 0; num1112 < 2; num1112++)
                                                                            {
                                                                                color5 = new Color();
                                                                                int num1113 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x87, 0f, 0f, 100, color5, 2f);
                                                                                Main.dust[num1113].noGravity = true;
                                                                                Main.dust[num1113].noLight = true;
                                                                            }
                                                                            this.alpha -= 0x2a;
                                                                            if (this.alpha < 0)
                                                                            {
                                                                                this.alpha = 0;
                                                                            }
                                                                        }
                                                                        this.damage = (int)((num1098 * (1f + (this.localAI[0] * num1099))) * player9.minionDamage);
                                                                        return;
                                                                    }
                                                                    bool flag66 = false;
                                                                    Vector2 vector223 = Vector2.Zero;
                                                                    Vector2 vector1 = Vector2.Zero;
                                                                    float num1114 = 0f;
                                                                    float num1115 = 0f;
                                                                    float num1116 = 1f;
                                                                    if (this.ai[1] == 1f)
                                                                    {
                                                                        this.ai[1] = 0f;
                                                                        this.netUpdate = true;
                                                                    }
                                                                    /*int byUUID = GetByUUID(this.owner, (int)this.ai[0]);
                                                                    if (((flag64 && (byUUID >= 0)) && Main.projectile[byUUID].active) && (((Main.projectile[byUUID].type == 0x271) || (Main.projectile[byUUID].type == 0x272)) || (Main.projectile[byUUID].type == 0x273)))
                                                                    {
                                                                        flag66 = true;
                                                                        vector223 = Main.projectile[byUUID].Center;
                                                                        Vector2 vector241 = Main.projectile[byUUID].velocity;
                                                                        num1114 = Main.projectile[byUUID].rotation;
                                                                        num1116 = MathHelper.Clamp(Main.projectile[byUUID].scale, 0f, 4f);
                                                                        num1115 = 16f;
                                                                        int num1164 = Main.projectile[byUUID].alpha;
                                                                        Main.projectile[byUUID].localAI[0] = this.localAI[0] + 1f;
                                                                        if (Main.projectile[byUUID].type != 0x271)
                                                                        {
                                                                            Main.projectile[byUUID].localAI[1] = base.whoAmI;
                                                                        }
                                                                        if (((this.owner == Main.myPlayer) && (Main.projectile[byUUID].type == 0x271)) && (this.type == 0x274))
                                                                        {
                                                                            Main.projectile[byUUID].Kill();
                                                                            this.Kill();
                                                                            return;
                                                                        }
                                                                    }*/
                                                                    if (flag66)
                                                                    {
                                                                        if (this.alpha > 0)
                                                                        {
                                                                            for (int num1119 = 0; num1119 < 2; num1119++)
                                                                            {
                                                                                color5 = new Color();
                                                                                int num1120 = Dust.NewDust(base.position, base.width, base.height, 0x87, 0f, 0f, 100, color5, 2f);
                                                                                Main.dust[num1120].noGravity = true;
                                                                                Main.dust[num1120].noLight = true;
                                                                            }
                                                                        }
                                                                        this.alpha -= 0x2a;
                                                                        if (this.alpha < 0)
                                                                        {
                                                                            this.alpha = 0;
                                                                        }
                                                                        base.velocity = Vector2.Zero;
                                                                        Vector2 vector224 = vector223 - base.Center;
                                                                        if (num1114 != this.rotation)
                                                                        {
                                                                            float num1121 = MathHelper.WrapAngle(num1114 - this.rotation);
                                                                            vector224 = vector224.RotatedBy((double)(num1121 * 0.1f), new Vector2());
                                                                        }
                                                                        this.rotation = vector224.ToRotation() + 1.570796f;
                                                                        base.position = base.Center;
                                                                        this.scale = num1116;
                                                                        base.width = base.height = (int)(num1097 * this.scale);
                                                                        base.Center = base.position;
                                                                        if (vector224 != Vector2.Zero)
                                                                        {
                                                                            base.Center = vector223 - ((Vector2)((Vector2.Normalize(vector224) * num1115) * num1116));
                                                                        }
                                                                        this.spriteDirection = (vector224.X > 0f) ? 1 : -1;
                                                                        this.damage = (int)((num1098 * (1f + (this.localAI[0] * num1099))) * player9.minionDamage);
                                                                    }
                                                                    return;
                                                                }
                                                                if (this.aiStyle == 0x7a)
                                                                {
                                                                    int num1122 = (int)this.ai[0];
                                                                    bool flag67 = false;
                                                                    if ((num1122 == -1) || !Main.npc[num1122].active)
                                                                    {
                                                                        flag67 = true;
                                                                    }
                                                                    if (flag67)
                                                                    {
                                                                        if (this.type == 0x275)
                                                                        {
                                                                            this.Kill();
                                                                            return;
                                                                        }
                                                                        if ((this.type == 0x277) && (this.ai[0] != -1f))
                                                                        {
                                                                            this.ai[0] = -1f;
                                                                            this.netUpdate = true;
                                                                        }
                                                                    }
                                                                    if (!flag67 && base.Hitbox.Intersects(Main.npc[num1122].Hitbox))
                                                                    {
                                                                        this.Kill();
                                                                        if (this.type == 0x277)
                                                                        {
                                                                            this.localAI[1] = 1f;
                                                                            this.Damage();
                                                                        }
                                                                        return;
                                                                    }
                                                                    if (this.type == 0x275)
                                                                    {
                                                                        Vector2 vector225 = Main.npc[num1122].Center - base.Center;
                                                                        base.velocity = (Vector2)(Vector2.Normalize(vector225) * 5f);
                                                                        Dust.QuickDust(base.Center, Color.Red);
                                                                    }
                                                                    if (this.type == 0x277)
                                                                    {
                                                                        if (this.ai[1] > 0f)
                                                                        {
                                                                            this.ai[1]--;
                                                                            base.velocity = Vector2.Zero;
                                                                            return;
                                                                        }
                                                                        if (flag67)
                                                                        {
                                                                            if (base.velocity == Vector2.Zero)
                                                                            {
                                                                                this.Kill();
                                                                            }
                                                                            this.tileCollide = true;
                                                                            this.alpha += 10;
                                                                            if (this.alpha > 0xff)
                                                                            {
                                                                                this.Kill();
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            Vector2 vector226 = Main.npc[num1122].Center - base.Center;
                                                                            base.velocity = (Vector2)(Vector2.Normalize(vector226) * 12f);
                                                                            this.alpha -= 15;
                                                                            if (this.alpha < 0)
                                                                            {
                                                                                this.alpha = 0;
                                                                            }
                                                                        }
                                                                        this.rotation = base.velocity.ToRotation() - 1.570796f;
                                                                        return;
                                                                    }
                                                                }
                                                                else if (this.aiStyle == 0x7b)
                                                                {
                                                                    bool flag68 = this.type == 0x281;
                                                                    bool flag69 = this.type == 0x283;
                                                                    float num1123 = 1000f;
                                                                    base.velocity = Vector2.Zero;
                                                                    if (flag68)
                                                                    {
                                                                        this.alpha -= 5;
                                                                        if (this.alpha < 0)
                                                                        {
                                                                            this.alpha = 0;
                                                                        }
                                                                        if (base.direction == 0)
                                                                        {
                                                                            base.direction = Main.player[this.owner].direction;
                                                                        }
                                                                        this.rotation -= (base.direction * 6.283185f) / 120f;
                                                                        this.scale = this.Opacity;
                                                                        Lighting.AddLight(base.Center, (Vector3)(new Vector3(0.3f, 0.9f, 0.7f) * this.Opacity));
                                                                        if (Main.rand.Next(2) == 0)
                                                                        {
                                                                            Vector2 vector227 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                                            color5 = new Color();
                                                                            Dust dust30 = Main.dust[Dust.NewDust(base.Center - ((Vector2)(vector227 * 30f)), 0, 0, 0xe5, 0f, 0f, 0, color5, 1f)];
                                                                            dust30.noGravity = true;
                                                                            dust30.position = base.Center - (vector227 * Main.rand.Next(10, 0x15));
                                                                            vector240 = new Vector2();
                                                                            dust30.velocity = (Vector2)(vector227.RotatedBy(1.5707963705062866, vector240) * 6f);
                                                                            dust30.scale = 0.5f + Main.rand.NextFloat();
                                                                            dust30.fadeIn = 0.5f;
                                                                            dust30.customData = base.Center;
                                                                        }
                                                                        if (Main.rand.Next(2) == 0)
                                                                        {
                                                                            Vector2 vector228 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
                                                                            color5 = new Color();
                                                                            Dust dust31 = Main.dust[Dust.NewDust(base.Center - ((Vector2)(vector228 * 30f)), 0, 0, 240, 0f, 0f, 0, color5, 1f)];
                                                                            dust31.noGravity = true;
                                                                            dust31.position = base.Center - ((Vector2)(vector228 * 30f));
                                                                            dust31.velocity = (Vector2)(vector228.RotatedBy(-1.5707963705062866, new Vector2()) * 3f);
                                                                            dust31.scale = 0.5f + Main.rand.NextFloat();
                                                                            dust31.fadeIn = 0.5f;
                                                                            dust31.customData = base.Center;
                                                                        }
                                                                        if (this.ai[0] < 0f)
                                                                        {
                                                                            color5 = new Color();
                                                                            int num1124 = Dust.NewDust(base.Center - ((Vector2)(Vector2.One * 8f)), 0x10, 0x10, 0xe5, this.velocity.X / 2f, this.velocity.Y / 2f, 0, color5, 1f);
                                                                            Dust dust264 = Main.dust[num1124];
                                                                            dust264.velocity = (Vector2)(dust264.velocity * 2f);
                                                                            Main.dust[num1124].noGravity = true;
                                                                            Main.dust[num1124].scale = Utils.SelectRandom<float>(Main.rand, new float[] { 0.8f, 1.65f });
                                                                            Main.dust[num1124].customData = this;
                                                                        }
                                                                    }
                                                                    if (flag69)
                                                                    {
                                                                        this.alpha -= 5;
                                                                        if (this.alpha < 0)
                                                                        {
                                                                            this.alpha = 0;
                                                                        }
                                                                        if (base.direction == 0)
                                                                        {
                                                                            base.direction = Main.player[this.owner].direction;
                                                                        }
                                                                        if (++this.frameCounter >= 3)
                                                                        {
                                                                            this.frameCounter = 0;
                                                                            if (++this.frame >= Main.projFrames[this.type])
                                                                            {
                                                                                this.frame = 0;
                                                                            }
                                                                        }
                                                                        if ((this.alpha == 0) && (Main.rand.Next(15) == 0))
                                                                        {
                                                                            Dust dust32 = Main.dust[Dust.NewDust(base.Top, 0, 0, 0x105, 0f, 0f, 100, new Color(), 1f)];
                                                                            dust32.velocity.X = 0f;
                                                                            dust32.noGravity = true;
                                                                            dust32.fadeIn = 1f;
                                                                            dust32.position = base.Center + ((Vector2)(Vector2.UnitY.RotatedByRandom(6.2831854820251465) * ((4f * Main.rand.NextFloat()) + 26f)));
                                                                            dust32.scale = 0.5f;
                                                                        }
                                                                        this.localAI[0]++;
                                                                        if (this.localAI[0] >= 60f)
                                                                        {
                                                                            this.localAI[0] = 0f;
                                                                        }
                                                                    }
                                                                    if (this.ai[0] < 0f)
                                                                    {
                                                                        this.ai[0]++;
                                                                        if (flag68)
                                                                        {
                                                                            this.ai[1] -= (base.direction * 0.3926991f) / 50f;
                                                                        }
                                                                    }
                                                                    if (this.ai[0] == 0f)
                                                                    {
                                                                        int num1125 = -1;
                                                                        float num1126 = num1123;
                                                                        for (int num1127 = 0; num1127 < 200; num1127++)
                                                                        {
                                                                            NPC npc15 = Main.npc[num1127];
                                                                            if (npc15.CanBeChasedBy(this, false))
                                                                            {
                                                                                float num1128 = base.Distance(npc15.Center);
                                                                                if ((num1128 < num1126) && Collision.CanHitLine(base.Center, 0, 0, npc15.Center, 0, 0))
                                                                                {
                                                                                    num1126 = num1128;
                                                                                    num1125 = num1127;
                                                                                }
                                                                            }
                                                                        }
                                                                        if (num1125 != -1)
                                                                        {
                                                                            this.ai[0] = 1f;
                                                                            this.ai[1] = num1125;
                                                                            this.netUpdate = true;
                                                                            return;
                                                                        }
                                                                    }
                                                                    if (this.ai[0] > 0f)
                                                                    {
                                                                        int num1129 = (int)this.ai[1];
                                                                        if (!Main.npc[num1129].CanBeChasedBy(this, false))
                                                                        {
                                                                            this.ai[0] = 0f;
                                                                            this.ai[1] = 0f;
                                                                            this.netUpdate = true;
                                                                            return;
                                                                        }
                                                                        this.ai[0]++;
                                                                        float num1130 = 30f;
                                                                        if (flag69)
                                                                        {
                                                                            num1130 = 5f;
                                                                        }
                                                                        if (this.ai[0] >= num1130)
                                                                        {
                                                                            Vector2 vector230 = base.DirectionTo(Main.npc[num1129].Center);
                                                                            if (vector230.HasNaNs())
                                                                            {
                                                                                vector230 = Vector2.UnitY;
                                                                            }
                                                                            float num1131 = vector230.ToRotation();
                                                                            int num1132 = (vector230.X > 0f) ? 1 : -1;
                                                                            if (flag68)
                                                                            {
                                                                                base.direction = num1132;
                                                                                this.ai[0] = -60f;
                                                                                this.ai[1] = num1131 + ((num1132 * 3.141593f) / 16f);
                                                                                this.netUpdate = true;
                                                                                if (this.owner == Main.myPlayer)
                                                                                {
                                                                                    NewProjectile(base.Center.X, base.Center.Y, vector230.X, vector230.Y, 0x282, this.damage, this.knockBack, this.owner, 0f, (float)base.whoAmI);
                                                                                }
                                                                            }
                                                                            if (flag69)
                                                                            {
                                                                                base.direction = num1132;
                                                                                this.ai[0] = -20f;
                                                                                this.netUpdate = true;
                                                                                if (this.owner == Main.myPlayer)
                                                                                {
                                                                                    Vector2 vector231 = (Main.npc[num1129].position + (Main.npc[num1129].Size * Utils.RandomVector2(Main.rand, 0f, 1f))) - base.Center;
                                                                                    for (int num1133 = 0; num1133 < 3; num1133++)
                                                                                    {
                                                                                        Vector2 vector232 = base.Center + vector231;
                                                                                        if (num1133 > 0)
                                                                                        {
                                                                                            vector232 = base.Center + ((Vector2)(vector231.RotatedByRandom(0.78539818525314331) * ((Main.rand.NextFloat() * 0.5f) + 0.75f)));
                                                                                        }
                                                                                        float num1134 = Main.rgbToHsl(new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB)).X;
                                                                                        NewProjectile(vector232.X, vector232.Y, 0f, 0f, 0x284, this.damage, this.knockBack, this.owner, num1134, (float)base.whoAmI);
                                                                                    }
                                                                                    return;
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                                else if (this.aiStyle == 0x7c)
                                                                {
                                                                    Player player10 = Main.player[this.owner];
                                                                    if (player10.dead)
                                                                    {
                                                                        this.Kill();
                                                                        return;
                                                                    }
                                                                    if ((Main.myPlayer == this.owner) && player10.suspiciouslookingTentacle)
                                                                    {
                                                                        this.timeLeft = 2;
                                                                    }
                                                                    base.direction = this.spriteDirection = player10.direction;
                                                                    Vector3 vector233 = (Vector3)(new Vector3(0.5f, 0.9f, 1f) * 1.5f);
                                                                    DelegateMethods.v3_1 = vector233;
                                                                    Utils.PlotTileLine(base.Center, base.Center + ((Vector2)(base.velocity * 6f)), 20f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
                                                                    Utils.PlotTileLine(base.Left, base.Right, 20f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
                                                                    Utils.PlotTileLine(player10.Center, player10.Center + ((Vector2)(player10.velocity * 6f)), 40f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
                                                                    Utils.PlotTileLine(player10.Left, player10.Right, 40f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
                                                                    Vector2 vector234 = new Vector2((float)(player10.direction * 30), -20f);
                                                                    Vector2 vector235 = player10.MountedCenter + vector234;
                                                                    float num1135 = Vector2.Distance(base.Center, vector235);
                                                                    if (num1135 > 1000f)
                                                                    {
                                                                        base.Center = player10.Center + vector234;
                                                                    }
                                                                    Vector2 vector236 = vector235 - base.Center;
                                                                    float num1136 = 4f;
                                                                    if (num1135 < num1136)
                                                                    {
                                                                        base.velocity = (Vector2)(base.velocity * 0.25f);
                                                                    }
                                                                    if (vector236 != Vector2.Zero)
                                                                    {
                                                                        if (vector236.Length() < num1136)
                                                                        {
                                                                            base.velocity = vector236;
                                                                        }
                                                                        else
                                                                        {
                                                                            base.velocity = (Vector2)(vector236 * 0.1f);
                                                                        }
                                                                    }
                                                                    if (this.velocity.Length() > 6f)
                                                                    {
                                                                        float num1137 = base.velocity.ToRotation() + 1.570796f;
                                                                        if (Math.Abs((float)(this.rotation - num1137)) >= 3.141593f)
                                                                        {
                                                                            if (num1137 < this.rotation)
                                                                            {
                                                                                this.rotation -= 6.283185f;
                                                                            }
                                                                            else
                                                                            {
                                                                                this.rotation += 6.283185f;
                                                                            }
                                                                        }
                                                                        float num1138 = 12f;
                                                                        this.rotation = ((this.rotation * (num1138 - 1f)) + num1137) / num1138;
                                                                        if (++this.frameCounter >= 4)
                                                                        {
                                                                            this.frameCounter = 0;
                                                                            if (++this.frame >= Main.projFrames[this.type])
                                                                            {
                                                                                this.frame = 0;
                                                                            }
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if (this.rotation > 3.141593f)
                                                                        {
                                                                            this.rotation -= 6.283185f;
                                                                        }
                                                                        if ((this.rotation > -0.005f) && (this.rotation < 0.005f))
                                                                        {
                                                                            this.rotation = 0f;
                                                                        }
                                                                        else
                                                                        {
                                                                            this.rotation *= 0.96f;
                                                                        }
                                                                        if (++this.frameCounter >= 6)
                                                                        {
                                                                            this.frameCounter = 0;
                                                                            if (++this.frame >= Main.projFrames[this.type])
                                                                            {
                                                                                this.frame = 0;
                                                                            }
                                                                        }
                                                                    }
                                                                    if (this.ai[0] > 0f)
                                                                    {
                                                                        this.ai[0] = num1163 = this.ai[0] + 1f;
                                                                        if (num1163 >= 60f)
                                                                        {
                                                                            this.ai[0] = 0f;
                                                                            this.ai[1] = 0f;
                                                                        }
                                                                    }
                                                                    if (Main.rand.Next(15) == 0)
                                                                    {
                                                                        float num1139 = -1f;
                                                                        int num1140 = 0x11;
                                                                        Vector2 vector237 = base.Center - player10.Center;
                                                                        if (vector237.Length() < Main.screenWidth)
                                                                        {
                                                                            int num1141 = ((int)base.Center.X) / 0x10;
                                                                            int num1142 = ((int)base.Center.Y) / 0x10;
                                                                            num1141 = (int)MathHelper.Clamp((float)num1141, (float)(num1140 + 1), (float)((Main.maxTilesX - num1140) - 1));
                                                                            num1142 = (int)MathHelper.Clamp((float)num1142, (float)(num1140 + 1), (float)((Main.maxTilesY - num1140) - 1));
                                                                            for (int num1143 = num1141 - num1140; num1143 <= (num1141 + num1140); num1143++)
                                                                            {
                                                                                for (int num1144 = num1142 - num1140; num1144 <= (num1142 + num1140); num1144++)
                                                                                {
                                                                                    int num1145 = Main.rand.Next(8);
                                                                                    if (num1145 < 4)
                                                                                    {
                                                                                        Vector2 vector238 = new Vector2((float)(num1141 - num1143), (float)(num1142 - num1144));
                                                                                        if (((vector238.Length() < num1140) && (Main.tile[num1143, num1144] != null)) && Main.tile[num1143, num1144].active())
                                                                                        {
                                                                                            bool flag70 = false;
                                                                                            if ((Main.tile[num1143, num1144].type == 0xb9) && (Main.tile[num1143, num1144].frameY == 0x12))
                                                                                            {
                                                                                                if ((Main.tile[num1143, num1144].frameX >= 0x240) && (Main.tile[num1143, num1144].frameX <= 0x372))
                                                                                                {
                                                                                                    flag70 = true;
                                                                                                }
                                                                                            }
                                                                                            else if (((Main.tile[num1143, num1144].type == 0xba) && (Main.tile[num1143, num1144].frameX >= 0x360)) && (Main.tile[num1143, num1144].frameX <= 0x492))
                                                                                            {
                                                                                                flag70 = true;
                                                                                            }
                                                                                            if ((flag70 || Main.tileSpelunker[Main.tile[num1143, num1144].type]) || (Main.tileAlch[Main.tile[num1143, num1144].type] && (Main.tile[num1143, num1144].type != 0x52)))
                                                                                            {
                                                                                                float num1146 = base.Distance(new Vector2((float)((num1143 * 0x10) + 8), (float)((num1144 * 0x10) + 8)));
                                                                                                if ((num1146 < num1139) || (num1139 == -1f))
                                                                                                {
                                                                                                    num1139 = num1146;
                                                                                                    this.ai[0] = 1f;
                                                                                                    this.ai[1] = base.AngleTo(new Vector2((float)((num1143 * 0x10) + 8), (float)((num1144 * 0x10) + 8)));
                                                                                                }
                                                                                                if (num1145 < 2)
                                                                                                {
                                                                                                    color5 = new Color();
                                                                                                    int num1147 = Dust.NewDust(new Vector2((float)(num1143 * 0x10), (float)(num1144 * 0x10)), 0x10, 0x10, 0xcc, 0f, 0f, 150, color5, 0.3f);
                                                                                                    Main.dust[num1147].fadeIn = 0.75f;
                                                                                                    Dust dust265 = Main.dust[num1147];
                                                                                                    dust265.velocity = (Vector2)(dust265.velocity * 0.1f);
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                    float num1148 = (this.localAI[0] % 6.283185f) - 3.141593f;
                                                                    float num1149 = (float)Math.IEEERemainder((double)this.localAI[1], 1.0);
                                                                    if (num1149 < 0f)
                                                                    {
                                                                        num1149++;
                                                                    }
                                                                    float num1150 = (float)Math.Floor((double)this.localAI[1]);
                                                                    float max = 0.999f;
                                                                    float num1152 = 0f;
                                                                    int num1153 = 0;
                                                                    float num1154 = 0.1f;
                                                                    bool flag71 = player10.velocity.Length() > 3f;
                                                                    int num1155 = -1;
                                                                    int num1156 = -1;
                                                                    float num1157 = 300f;
                                                                    float num1158 = 500f;
                                                                    for (int num1159 = 0; num1159 < 200; num1159++)
                                                                    {
                                                                        NPC npc16 = Main.npc[num1159];
                                                                        if ((npc16.active && npc16.chaseable) && (!npc16.dontTakeDamage && !npc16.immortal))
                                                                        {
                                                                            float num1160 = base.Distance(npc16.Center);
                                                                            if (npc16.friendly || (npc16.lifeMax <= 5))
                                                                            {
                                                                                if ((num1160 < num1157) && !flag71)
                                                                                {
                                                                                    num1157 = num1160;
                                                                                    num1156 = num1159;
                                                                                }
                                                                            }
                                                                            else if (num1160 < num1158)
                                                                            {
                                                                                num1158 = num1160;
                                                                                num1155 = num1159;
                                                                            }
                                                                        }
                                                                    }
                                                                    if (flag71)
                                                                    {
                                                                        num1152 = base.AngleTo(base.Center + player10.velocity);
                                                                        num1153 = 1;
                                                                        num1149 = MathHelper.Clamp(num1149 + 0.05f, 0f, max);
                                                                        num1150 += Math.Sign((float)(-10f - num1150));
                                                                    }
                                                                    else if (num1155 != -1)
                                                                    {
                                                                        num1152 = base.AngleTo(Main.npc[num1155].Center);
                                                                        num1153 = 2;
                                                                        num1149 = MathHelper.Clamp(num1149 + 0.05f, 0f, max);
                                                                        num1150 += Math.Sign((float)(-12f - num1150));
                                                                    }
                                                                    else if (num1156 != -1)
                                                                    {
                                                                        num1152 = base.AngleTo(Main.npc[num1156].Center);
                                                                        num1153 = 3;
                                                                        num1149 = MathHelper.Clamp(num1149 + 0.05f, 0f, max);
                                                                        num1150 += Math.Sign((float)(6f - num1150));
                                                                    }
                                                                    else if (this.ai[0] > 0f)
                                                                    {
                                                                        num1152 = this.ai[1];
                                                                        num1149 = MathHelper.Clamp(num1149 + (Math.Sign((float)(0.75f - num1149)) * 0.05f), 0f, max);
                                                                        num1153 = 4;
                                                                        num1150 += Math.Sign((float)(10f - num1150));
                                                                        if (Main.rand.Next(10) == 0)
                                                                        {
                                                                            int num1161 = Dust.NewDust((Vector2)((base.Center + ((num1148.ToRotationVector2() * 6f) * num1149)) - (Vector2.One * 4f)), 8, 8, 0xcc, 0f, 0f, 150, new Color(), 0.3f);
                                                                            Main.dust[num1161].fadeIn = 0.75f;
                                                                            Dust dust266 = Main.dust[num1161];
                                                                            dust266.velocity = (Vector2)(dust266.velocity * 0.1f);
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        num1152 = (player10.direction == 1) ? 0f : 3.141603f;
                                                                        num1149 = MathHelper.Clamp(num1149 + (Math.Sign((float)(0.75f - num1149)) * 0.05f), 0f, max);
                                                                        num1150 += Math.Sign((float)(0f - num1150));
                                                                        num1154 = 0.12f;
                                                                    }
                                                                    Vector2 vector239 = num1152.ToRotationVector2();
                                                                    num1152 = Vector2.Lerp(num1148.ToRotationVector2(), vector239, num1154).ToRotation();
                                                                    this.localAI[0] = (num1152 + (num1153 * 6.283185f)) + 3.141593f;
                                                                    this.localAI[1] = num1150 + num1149;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            return;
                                        }
                                        int num963 = 0;
                                        float num964 = 0f;
                                        float num965 = 0f;
                                        float num966 = 0f;
                                        int num967 = -1;
                                        int num968 = 0;
                                        float num969 = 0f;
                                        bool flag44 = true;
                                        bool flag45 = false;
                                        bool flag46 = false;
                                        switch (this.type)
                                        {
                                            case 0x23d:
                                                num963 = 0x1a8;
                                                num964 = 90f;
                                                num969 = 20f;
                                                flag44 = false;
                                                flag45 = true;
                                                break;

                                            case 0x23e:
                                                num963 = 420;
                                                num964 = 180f;
                                                num965 = 0.15f;
                                                num966 = 0.075f;
                                                num969 = 8f;
                                                flag44 = false;
                                                num967 = 0x240;
                                                num968 = 0x41;
                                                if (Main.expertMode)
                                                {
                                                    num968 = 50;
                                                }
                                                flag46 = true;
                                                break;

                                            case 0x21b:
                                                num963 = 0x197;
                                                num964 = 210f;
                                                num965 = 0.15f;
                                                num966 = 0.075f;
                                                num969 = 16f;
                                                break;
                                        }
                                        if (flag46)
                                        {
                                            int num970 = (int)this.ai[1];
                                            if (!Main.npc[num970].active || (Main.npc[num970].type != num963))
                                            {
                                                this.Kill();
                                                return;
                                            }
                                            this.timeLeft = 2;
                                        }
                                        this.ai[0]++;
                                        if (this.ai[0] < num964)
                                        {
                                            bool flag47 = true;
                                            int num971 = (int)this.ai[1];
                                            if (Main.npc[num971].active && (Main.npc[num971].type == num963))
                                            {
                                                if (!flag45 && (Main.npc[num971].oldPos[1] != Vector2.Zero))
                                                {
                                                    base.position += Main.npc[num971].position - Main.npc[num971].oldPos[1];
                                                }
                                            }
                                            else
                                            {
                                                this.ai[0] = num964;
                                                flag47 = false;
                                            }
                                            if (flag47 && !flag45)
                                            {
                                                base.velocity += new Vector2((float)Math.Sign((float)(Main.npc[num971].Center.X - base.Center.X)), (float)Math.Sign((float)(Main.npc[num971].Center.Y - base.Center.Y))) * new Vector2(num965, num966);
                                                if (this.velocity.Length() > 6f)
                                                {
                                                    base.velocity = (Vector2)(base.velocity * (6f / this.velocity.Length()));
                                                }
                                            }
                                            if (this.type == 0x21b)
                                            {
                                                if (Main.rand.Next(12) == 0)
                                                {
                                                    color5 = new Color();
                                                    int num972 = Dust.NewDust(base.Center, 8, 8, 180, 0f, 0f, 0, color5, 1f);
                                                    Main.dust[num972].position = base.Center;
                                                    Dust dust240 = Main.dust[num972];
                                                    dust240.velocity = (Vector2)(dust240.velocity * 0.2f);
                                                    Main.dust[num972].noGravity = true;
                                                }
                                                if (++this.frameCounter >= 4)
                                                {
                                                    this.frameCounter = 0;
                                                    if (++this.frame >= Main.projFrames[this.type])
                                                    {
                                                        this.frame = 0;
                                                    }
                                                }
                                                this.rotation = this.velocity.X * 0.1f;
                                            }
                                            if (this.type == 0x23d)
                                            {
                                                if (Main.rand.Next(2) == 0)
                                                {
                                                    color5 = new Color();
                                                    int num973 = Dust.NewDust(base.Center, 8, 8, 0xf2, 0f, 0f, 0, color5, 1f);
                                                    Main.dust[num973].position = base.Center;
                                                    Main.dust[num973].velocity = base.velocity;
                                                    Main.dust[num973].noGravity = true;
                                                    Main.dust[num973].scale = 1.5f;
                                                }
                                                this.alpha = 0xff;
                                            }
                                            if (this.type == 0x23e)
                                            {
                                                if (Main.rand.Next(10) == 0)
                                                {
                                                    color5 = new Color();
                                                    int num974 = Dust.NewDust(base.Center, 8, 8, 0xf2, 0f, 0f, 0, color5, 1f);
                                                    Main.dust[num974].position = base.Center;
                                                    Main.dust[num974].velocity = base.velocity;
                                                    Main.dust[num974].noGravity = true;
                                                    Main.dust[num974].scale = 1.5f;
                                                }
                                                if (flag47)
                                                {
                                                    int target = Main.npc[num971].target;
                                                    float num976 = base.velocity.ToRotation();
                                                    if (Collision.CanHitLine(base.Center, 0, 0, Main.player[target].Center, 0, 0))
                                                    {
                                                        num976 = base.DirectionTo(Main.player[target].Center).ToRotation();
                                                    }
                                                    this.rotation = this.rotation.AngleLerp(num976 + 1.570796f, 0.2f);
                                                }
                                                this.frame = 1;
                                            }
                                        }
                                        if (this.ai[0] == num964)
                                        {
                                            bool flag48 = true;
                                            int num977 = -1;
                                            if (!flag44)
                                            {
                                                int num978 = (int)this.ai[1];
                                                if (Main.npc[num978].active && (Main.npc[num978].type == num963))
                                                {
                                                    num977 = Main.npc[num978].target;
                                                }
                                                else
                                                {
                                                    flag48 = false;
                                                }
                                            }
                                            else
                                            {
                                                flag48 = false;
                                            }
                                            if (!flag48)
                                            {
                                                num977 = Player.FindClosest(base.position, base.width, base.height);
                                            }
                                            Vector2 vector176 = Main.player[num977].Center - base.Center;
                                            vector176.X += Main.rand.Next(-50, 0x33);
                                            vector176.Y += Main.rand.Next(-50, 0x33);
                                            vector176.X *= Main.rand.Next(80, 0x79) * 0.01f;
                                            vector176.Y *= Main.rand.Next(80, 0x79) * 0.01f;
                                            Vector2 vector177 = Vector2.Normalize(vector176);
                                            if (vector177.HasNaNs())
                                            {
                                                vector177 = Vector2.UnitY;
                                            }
                                            if (num967 == -1)
                                            {
                                                base.velocity = (Vector2)(vector177 * num969);
                                                this.netUpdate = true;
                                            }
                                            else
                                            {
                                                if ((Main.netMode != 1) && Collision.CanHitLine(base.Center, 0, 0, Main.player[num977].Center, 0, 0))
                                                {
                                                    NewProjectile(base.Center.X, base.Center.Y, vector177.X * num969, vector177.Y * num969, num967, num968, 1f, Main.myPlayer, 0f, 0f);
                                                }
                                                this.ai[0] = 0f;
                                            }
                                        }
                                        if (this.ai[0] >= num964)
                                        {
                                            this.rotation = this.rotation.AngleLerp(base.velocity.ToRotation() + 1.570796f, 0.4f);
                                            if (this.type == 0x21b)
                                            {
                                                if (++this.frameCounter >= 2)
                                                {
                                                    this.frameCounter = 0;
                                                    if (++this.frame >= Main.projFrames[this.type])
                                                    {
                                                        this.frame = 0;
                                                    }
                                                }
                                                if (Main.rand.Next(2) == 0)
                                                {
                                                    color5 = new Color();
                                                    int num979 = Dust.NewDust(base.position, base.width, base.height, 180, 0f, 0f, 100, color5, 1f);
                                                    Dust dust241 = Main.dust[num979];
                                                    dust241.scale += Main.rand.Next(50) * 0.01f;
                                                    Main.dust[num979].noGravity = true;
                                                    Dust dust242 = Main.dust[num979];
                                                    dust242.velocity = (Vector2)(dust242.velocity * 0.1f);
                                                    Main.dust[num979].fadeIn = Main.rand.NextFloat() * 1.5f;
                                                }
                                                if (Main.rand.Next(3) == 0)
                                                {
                                                    color5 = new Color();
                                                    int num980 = Dust.NewDust(base.position, base.width, base.height, 0xb0, 0f, 0f, 100, color5, 1f);
                                                    Dust dust243 = Main.dust[num980];
                                                    dust243.scale += 0.3f + (Main.rand.Next(50) * 0.01f);
                                                    Main.dust[num980].noGravity = true;
                                                    Dust dust244 = Main.dust[num980];
                                                    dust244.velocity = (Vector2)(dust244.velocity * 0.1f);
                                                    Main.dust[num980].fadeIn = Main.rand.NextFloat() * 1.5f;
                                                }
                                            }
                                            if (this.type == 0x23d)
                                            {
                                                if (Main.rand.Next(4) == 0)
                                                {
                                                    int num981 = Dust.NewDust(base.Center, 8, 8, 0xf2, 0f, 0f, 0, new Color(), 1f);
                                                    Main.dust[num981].position = base.Center;
                                                    Dust dust245 = Main.dust[num981];
                                                    dust245.velocity = (Vector2)(dust245.velocity * 0.2f);
                                                    Main.dust[num981].noGravity = true;
                                                    Main.dust[num981].scale = 1.5f;
                                                }
                                                this.alpha = 0;
                                            }
                                        }
                                        return;
                                    }
                                    float num959 = 20f;
                                    this.localAI[0]++;
                                    this.alpha = (int)MathHelper.Lerp(0f, 255f, this.localAI[0] / num959);
                                    int num960 = (int)this.ai[0];
                                    int num961 = -1;
                                    int num962 = -1;
                                    switch (this.type)
                                    {
                                        case 0x218:
                                            num961 = 0x217;
                                            num962 = 0;
                                            break;

                                        case 0x24f:
                                            num962 = 1;
                                            break;
                                    }
                                    if (num962 == 1)
                                    {
                                        if (((this.localAI[0] >= num959) || (num960 < 0)) || (((num960 > 0xff) || !Main.player[num960].active) || Main.player[num960].dead))
                                        {
                                            this.Kill();
                                            return;
                                        }
                                        if (this.type == 0x24f)
                                        {
                                            base.Center = Mount.GetMinecartMechPoint(Main.player[num960], 20, -19) - base.velocity;
                                            this.rotation = base.velocity.ToRotation() + 1.570796f;
                                            int introduced1839 = Math.Sign(this.velocity.X);
                                            if ((introduced1839 != Math.Sign(Main.player[num960].velocity.X)) && (Main.player[num960].velocity.X != 0f))
                                            {
                                                this.Kill();
                                                return;
                                            }
                                        }
                                        else
                                        {
                                            base.Center = Main.player[num960].Center - base.velocity;
                                        }
                                    }
                                    else if (num962 == 0)
                                    {
                                        if (((this.localAI[0] >= num959) || (num960 < 0)) || (((num960 > 0x3e8) || !Main.projectile[num960].active) || (Main.projectile[num960].type != num961)))
                                        {
                                            this.Kill();
                                            return;
                                        }
                                        base.Center = Main.projectile[num960].Center - base.velocity;
                                    }
                                    this.rotation = base.velocity.ToRotation() + 1.570796f;
                                    return;
                                }
                                if (++this.frameCounter >= 4)
                                {
                                    this.frameCounter = 0;
                                    if (++this.frame >= Main.projFrames[this.type])
                                    {
                                        this.frame = 0;
                                    }
                                }
                                this.ai[0]++;
                                if (this.ai[0] <= 40f)
                                {
                                    this.alpha -= 5;
                                    if (this.alpha < 0)
                                    {
                                        this.alpha = 0;
                                    }
                                    base.velocity = (Vector2)(base.velocity * 0.85f);
                                    if (this.ai[0] == 40f)
                                    {
                                        this.netUpdate = true;
                                        switch (Main.rand.Next(3))
                                        {
                                            case 0:
                                                this.ai[1] = 10f;
                                                break;

                                            case 1:
                                                this.ai[1] = 15f;
                                                break;

                                            case 2:
                                                this.ai[1] = 30f;
                                                break;
                                        }
                                    }
                                }
                                else if (this.ai[0] <= 60f)
                                {
                                    base.velocity = Vector2.Zero;
                                    if (this.ai[0] == 60f)
                                    {
                                        this.netUpdate = true;
                                    }
                                }
                                else if (this.ai[0] <= 210f)
                                {
                                    if (Main.netMode != 1)
                                    {
                                        this.localAI[0] = num1163 = this.localAI[0] + 1f;
                                        if (num1163 >= this.ai[1])
                                        {
                                            this.localAI[0] = 0f;
                                            int num934 = Item.NewItem((int)base.Center.X, (int)base.Center.Y, 0, 0, 0x49, 1, false, 0, false);
                                            Main.item[num934].velocity = (Vector2)(((Vector2.UnitY.RotatedByRandom(6.2831854820251465) * new Vector2(3f, 2f)) * ((Main.rand.NextFloat() * 0.5f) + 0.5f)) - (Vector2.UnitY * 1f));
                                        }
                                    }
                                    if (this.ai[0] == 210f)
                                    {
                                        this.netUpdate = true;
                                    }
                                }
                                else
                                {
                                    this.scale -= 0.03333334f;
                                    this.alpha += 15;
                                    if (this.ai[0] == 239f)
                                    {
                                        this.netUpdate = true;
                                    }
                                    if (this.ai[0] == 240f)
                                    {
                                        this.Kill();
                                    }
                                }
                                if ((this.alpha < 90) && (Main.rand.Next(3) == 0))
                                {
                                    Vector2 vector160 = (Vector2)((new Vector2((float)base.width, (float)base.height) * this.scale) * 0.85f);
                                    vector160 = (Vector2)(vector160 / 2f);
                                    Vector2 vector161 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * vector160;
                                    int num935 = Dust.NewDust(base.Center + vector161, 0, 0, 0xf6, 0f, 0f, 0, new Color(), 1f);
                                    Main.dust[num935].position = base.Center + vector161;
                                    Main.dust[num935].velocity = Vector2.Zero;
                                }
                                float num936 = 0.8f;
                                float num937 = 0.7098039f;
                                float num938 = 0.282353f;
                                Lighting.AddLight(base.Center, num936 * 0.3f, num937 * 0.3f, num938 * 0.3f);
                                return;
                            }
                            if (this.type != 0x1d1)
                            {
                                int num900;
                                if (this.type != 0x1d2)
                                {
                                    int num910;
                                    if (this.type != 580)
                                    {
                                        return;
                                    }
                                    if ((this.localAI[1] == 0f) && (this.ai[0] >= 900f))
                                    {
                                        this.ai[0] -= 1000f;
                                        this.localAI[1] = -1f;
                                    }
                                    this.frameCounter++;
                                    Lighting.AddLight(base.Center, 0.3f, 0.45f, 0.5f);
                                    if (base.velocity == Vector2.Zero)
                                    {
                                        if (this.frameCounter >= (this.extraUpdates * 2))
                                        {
                                            this.frameCounter = 0;
                                            bool flag36 = true;
                                            for (int num902 = 1; num902 < this.oldPos.Length; num902++)
                                            {
                                                if (this.oldPos[num902] != this.oldPos[0])
                                                {
                                                    flag36 = false;
                                                }
                                            }
                                            if (flag36)
                                            {
                                                this.Kill();
                                                return;
                                            }
                                        }
                                        if ((Main.rand.Next(this.extraUpdates) == 0) && ((base.velocity != Vector2.Zero) || (Main.rand.Next((this.localAI[1] == 2f) ? 2 : 6) == 0)))
                                        {
                                            for (int num903 = 0; num903 < 2; num903++)
                                            {
                                                float num904 = this.rotation + (((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.570796f);
                                                float num905 = (((float)Main.rand.NextDouble()) * 0.8f) + 1f;
                                                Vector2 vector148 = new Vector2(((float)Math.Cos((double)num904)) * num905, ((float)Math.Sin((double)num904)) * num905);
                                                color5 = new Color();
                                                int num906 = Dust.NewDust(base.Center, 0, 0, 0xe2, vector148.X, vector148.Y, 0, color5, 1f);
                                                Main.dust[num906].noGravity = true;
                                                Main.dust[num906].scale = 1.2f;
                                            }
                                            if (Main.rand.Next(5) == 0)
                                            {
                                                Vector2 vector149 = (Vector2)((base.velocity.RotatedBy(1.5707963705062866, new Vector2()) * (((float)Main.rand.NextDouble()) - 0.5f)) * base.width);
                                                int num907 = Dust.NewDust((base.Center + vector149) - ((Vector2)(Vector2.One * 4f)), 8, 8, 0x1f, 0f, 0f, 100, new Color(), 1.5f);
                                                Dust dust228 = Main.dust[num907];
                                                dust228.velocity = (Vector2)(dust228.velocity * 0.5f);
                                                Main.dust[num907].velocity.Y = -Math.Abs(Main.dust[num907].velocity.Y);
                                                return;
                                            }
                                        }
                                        return;
                                    }
                                    if (this.frameCounter < (this.extraUpdates * 2))
                                    {
                                        return;
                                    }
                                    this.frameCounter = 0;
                                    float num908 = this.velocity.Length();
                                    Random random2 = new Random((int)this.ai[1]);
                                    int num909 = 0;
                                    Vector2 vector150 = -Vector2.UnitY;
                                Label_23A47:
                                    num910 = random2.Next();
                                    this.ai[1] = num910;
                                    num910 = num910 % 100;
                                    Vector2 vector151 = ((((float)num910) / 100f) * 6.283185f).ToRotationVector2();
                                    if (vector151.Y > 0f)
                                    {
                                        vector151.Y *= -1f;
                                    }
                                    bool flag37 = false;
                                    if (vector151.Y > -0.02f)
                                    {
                                        flag37 = true;
                                    }
                                    if (((((vector151.X * (this.extraUpdates + 1)) * 2f) * num908) + this.localAI[0]) > 40f)
                                    {
                                        flag37 = true;
                                    }
                                    if (((((vector151.X * (this.extraUpdates + 1)) * 2f) * num908) + this.localAI[0]) < -40f)
                                    {
                                        flag37 = true;
                                    }
                                    if (flag37)
                                    {
                                        if (num909++ < 100)
                                        {
                                            goto Label_23A47;
                                        }
                                        base.velocity = Vector2.Zero;
                                        if (this.localAI[1] < 1f)
                                        {
                                            this.localAI[1] += 2f;
                                        }
                                    }
                                    else
                                    {
                                        vector150 = vector151;
                                    }
                                    if (base.velocity != Vector2.Zero)
                                    {
                                        this.localAI[0] += ((vector150.X * (this.extraUpdates + 1)) * 2f) * num908;
                                        vector240 = new Vector2();
                                        base.velocity = (Vector2)(vector150.RotatedBy(((double)(this.ai[0] + 1.570796f)), vector240) * num908);
                                        this.rotation = base.velocity.ToRotation() + 1.570796f;
                                        if (((Main.rand.Next(4) != 0) || (Main.netMode == 1)) || (this.localAI[1] != 0f))
                                        {
                                            return;
                                        }
                                        float num912 = (Main.rand.Next(-3, 4) * 1.047198f) / 3f;
                                        Vector2 vector152 = (Vector2)(this.ai[0].ToRotationVector2().RotatedBy(((double)num912), new Vector2()) * this.velocity.Length());
                                        if (Collision.CanHitLine(base.Center, 0, 0, base.Center + ((Vector2)(vector152 * 50f)), 0, 0))
                                        {
                                            return;
                                        }
                                        NewProjectile(base.Center.X - vector152.X, base.Center.Y - vector152.Y, vector152.X, vector152.Y, this.type, this.damage, this.knockBack, this.owner, vector152.ToRotation() + 1000f, this.ai[1]);
                                    }
                                    return;
                                }
                                this.frameCounter++;
                                Lighting.AddLight(base.Center, 0.3f, 0.45f, 0.5f);
                                if (base.velocity == Vector2.Zero)
                                {
                                    if (this.frameCounter >= (this.extraUpdates * 2))
                                    {
                                        this.frameCounter = 0;
                                        bool flag34 = true;
                                        for (int num892 = 1; num892 < this.oldPos.Length; num892++)
                                        {
                                            if (this.oldPos[num892] != this.oldPos[0])
                                            {
                                                flag34 = false;
                                            }
                                        }
                                        if (flag34)
                                        {
                                            this.Kill();
                                            return;
                                        }
                                    }
                                    if (Main.rand.Next(this.extraUpdates) == 0)
                                    {
                                        for (int num893 = 0; num893 < 2; num893++)
                                        {
                                            float num894 = this.rotation + (((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.570796f);
                                            float num895 = (((float)Main.rand.NextDouble()) * 0.8f) + 1f;
                                            Vector2 vector144 = new Vector2(((float)Math.Cos((double)num894)) * num895, ((float)Math.Sin((double)num894)) * num895);
                                            color5 = new Color();
                                            int num896 = Dust.NewDust(base.Center, 0, 0, 0xe2, vector144.X, vector144.Y, 0, color5, 1f);
                                            Main.dust[num896].noGravity = true;
                                            Main.dust[num896].scale = 1.2f;
                                        }
                                        if (Main.rand.Next(5) == 0)
                                        {
                                            Vector2 vector145 = (Vector2)((base.velocity.RotatedBy(1.5707963705062866, new Vector2()) * (((float)Main.rand.NextDouble()) - 0.5f)) * base.width);
                                            int num897 = Dust.NewDust((base.Center + vector145) - ((Vector2)(Vector2.One * 4f)), 8, 8, 0x1f, 0f, 0f, 100, new Color(), 1.5f);
                                            Dust dust227 = Main.dust[num897];
                                            dust227.velocity = (Vector2)(dust227.velocity * 0.5f);
                                            Main.dust[num897].velocity.Y = -Math.Abs(Main.dust[num897].velocity.Y);
                                            return;
                                        }
                                    }
                                    return;
                                }
                                if (this.frameCounter < (this.extraUpdates * 2))
                                {
                                    return;
                                }
                                this.frameCounter = 0;
                                float num898 = this.velocity.Length();
                                Random random = new Random((int)this.ai[1]);
                                int num899 = 0;
                                Vector2 vector146 = -Vector2.UnitY;
                            Label_23502:
                                num900 = random.Next();
                                this.ai[1] = num900;
                                num900 = num900 % 100;
                                Vector2 vector147 = ((((float)num900) / 100f) * 6.283185f).ToRotationVector2();
                                if (vector147.Y > 0f)
                                {
                                    vector147.Y *= -1f;
                                }
                                bool flag35 = false;
                                if (vector147.Y > -0.02f)
                                {
                                    flag35 = true;
                                }
                                if (((((vector147.X * (this.extraUpdates + 1)) * 2f) * num898) + this.localAI[0]) > 40f)
                                {
                                    flag35 = true;
                                }
                                if (((((vector147.X * (this.extraUpdates + 1)) * 2f) * num898) + this.localAI[0]) < -40f)
                                {
                                    flag35 = true;
                                }
                                if (flag35)
                                {
                                    if (num899++ < 100)
                                    {
                                        goto Label_23502;
                                    }
                                    base.velocity = Vector2.Zero;
                                    this.localAI[1] = 1f;
                                }
                                else
                                {
                                    vector146 = vector147;
                                }
                                if (base.velocity != Vector2.Zero)
                                {
                                    this.localAI[0] += ((vector146.X * (this.extraUpdates + 1)) * 2f) * num898;
                                    base.velocity = (Vector2)(vector146.RotatedBy(((double)(this.ai[0] + 1.570796f)), new Vector2()) * num898);
                                    this.rotation = base.velocity.ToRotation() + 1.570796f;
                                }
                                return;
                            }
                            if (this.localAI[1] == 0f)
                            {
                                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 0x79);
                                this.localAI[1] = 1f;
                            }
                            if (this.ai[0] < 180f)
                            {
                                this.alpha -= 5;
                                if (this.alpha < 0)
                                {
                                    this.alpha = 0;
                                }
                            }
                            else
                            {
                                this.alpha += 5;
                                if (this.alpha > 0xff)
                                {
                                    this.alpha = 0xff;
                                    this.Kill();
                                    return;
                                }
                            }
                            this.ai[0]++;
                            if ((((this.ai[0] % 30f) == 0f) && (this.ai[0] < 180f)) && (Main.netMode != 1))
                            {
                                int[] numArray4 = new int[5];
                                Vector2[] vectorArray = new Vector2[5];
                                int num880 = 0;
                                float num881 = 2000f;
                                for (int num882 = 0; num882 < 0xff; num882++)
                                {
                                    if (Main.player[num882].active && !Main.player[num882].dead)
                                    {
                                        Vector2 vector139 = Main.player[num882].Center;
                                        if ((Vector2.Distance(vector139, base.Center) < num881) && Collision.CanHit(base.Center, 1, 1, vector139, 1, 1))
                                        {
                                            numArray4[num880] = num882;
                                            vectorArray[num880] = vector139;
                                            if (++num880 >= vectorArray.Length)
                                            {
                                                break;
                                            }
                                        }
                                    }
                                }
                                for (int num884 = 0; num884 < num880; num884++)
                                {
                                    Vector2 vector140 = vectorArray[num884] - base.Center;
                                    float num885 = Main.rand.Next(100);
                                    Vector2 vector141 = (Vector2)(Vector2.Normalize(vector140.RotatedByRandom(0.78539818525314331)) * 7f);
                                    NewProjectile(base.Center.X, base.Center.Y, vector141.X, vector141.Y, 0x1d2, this.damage, 0f, Main.myPlayer, vector140.ToRotation(), num885);
                                }
                            }
                            Lighting.AddLight(base.Center, 0.4f, 0.85f, 0.9f);
                            if (++this.frameCounter >= 4)
                            {
                                this.frameCounter = 0;
                                if (++this.frame >= Main.projFrames[this.type])
                                {
                                    this.frame = 0;
                                }
                            }
                            if ((this.alpha < 150) && (this.ai[0] < 180f))
                            {
                                for (int num886 = 0; num886 < 1; num886++)
                                {
                                    float num887 = (((float)Main.rand.NextDouble()) * 1f) - 0.5f;
                                    if (num887 < -0.5f)
                                    {
                                        num887 = -0.5f;
                                    }
                                    if (num887 > 0.5f)
                                    {
                                        num887 = 0.5f;
                                    }
                                    vector240 = new Vector2();
                                    vector240 = new Vector2();
                                    Vector2 vector142 = new Vector2((-base.width * 0.2f) * this.scale, 0f).RotatedBy(((double)(num887 * 6.283185f)), vector240).RotatedBy((double)base.velocity.ToRotation(), vector240);
                                    int num888 = Dust.NewDust(base.Center - ((Vector2)(Vector2.One * 5f)), 10, 10, 0xe2, -this.velocity.X / 3f, -this.velocity.Y / 3f, 150, Color.Transparent, 0.7f);
                                    Main.dust[num888].position = base.Center + vector142;
                                    Main.dust[num888].velocity = (Vector2)(Vector2.Normalize(Main.dust[num888].position - base.Center) * 2f);
                                    Main.dust[num888].noGravity = true;
                                }
                                for (int num889 = 0; num889 < 1; num889++)
                                {
                                    float num890 = (((float)Main.rand.NextDouble()) * 1f) - 0.5f;
                                    if (num890 < -0.5f)
                                    {
                                        num890 = -0.5f;
                                    }
                                    if (num890 > 0.5f)
                                    {
                                        num890 = 0.5f;
                                    }
                                    vector240 = new Vector2();
                                    vector240 = new Vector2();
                                    Vector2 vector143 = new Vector2((-base.width * 0.6f) * this.scale, 0f).RotatedBy(((double)(num890 * 6.283185f)), vector240).RotatedBy((double)base.velocity.ToRotation(), vector240);
                                    int num891 = Dust.NewDust(base.Center - ((Vector2)(Vector2.One * 5f)), 10, 10, 0xe2, -this.velocity.X / 3f, -this.velocity.Y / 3f, 150, Color.Transparent, 0.7f);
                                    Main.dust[num891].velocity = Vector2.Zero;
                                    Main.dust[num891].position = base.Center + vector143;
                                    Main.dust[num891].noGravity = true;
                                }
                            }
                            return;
                        }
                        if (this.type == 0x73)
                        {
                            this.ai[0]++;
                            if (this.ai[0] < 30f)
                            {
                                base.velocity = (Vector2)(base.velocity * 1.125f);
                            }
                        }
                        if ((this.type == 0x73) && (this.localAI[1] < 5f))
                        {
                            this.localAI[1] = 5f;
                            for (int num312 = 5; num312 < 0x19; num312++)
                            {
                                float num313 = this.velocity.X * (30f / ((float)num312));
                                float num314 = this.velocity.Y * (30f / ((float)num312));
                                num313 *= 80f;
                                num314 *= 80f;
                                color5 = new Color();
                                int num315 = Dust.NewDust(new Vector2(this.position.X - num313, this.position.Y - num314), 8, 8, 0x1b, this.oldVelocity.X, this.oldVelocity.Y, 100, color5, 0.9f);
                                Dust dust125 = Main.dust[num315];
                                dust125.velocity = (Vector2)(dust125.velocity * 0.25f);
                                Dust dust126 = Main.dust[num315];
                                dust126.velocity -= (Vector2)(base.velocity * 5f);
                            }
                        }
                        if ((this.localAI[1] <= 7f) || (this.type != 0xad))
                        {
                            goto Label_E566;
                        }
                        num316 = Main.rand.Next(3);
                        switch (num316)
                        {
                            case 0:
                                num316 = 15;
                                goto Label_E4CE;

                            case 1:
                                num316 = 0x39;
                                goto Label_E4CE;
                        }
                        num316 = 0x3a;
                        goto Label_E4CE;
                    }
                    if (this.type != 0x1eb)
                    {
                        if (this.type == 0x22)
                        {
                            color5 = new Color();
                            int num116 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, color5, 3.5f);
                            Main.dust[num116].noGravity = true;
                            Dust dust65 = Main.dust[num116];
                            dust65.velocity = (Vector2)(dust65.velocity * 1.4f);
                            num116 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 1.5f);
                        }
                        else if (this.type == 0x4f)
                        {
                            if (this.soundDelay == 0)
                            {
                                float introduced1621 = Math.Abs(this.velocity.X);
                                if ((introduced1621 + Math.Abs(this.velocity.Y)) > 2f)
                                {
                                    this.soundDelay = 10;
                                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 9);
                                }
                            }
                            for (int num117 = 0; num117 < 1; num117++)
                            {
                                int num118 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 0x42, 0f, 0f, 100, new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB), 2.5f);
                                Dust dust66 = Main.dust[num118];
                                dust66.velocity = (Vector2)(dust66.velocity * 0.1f);
                                Dust dust67 = Main.dust[num118];
                                dust67.velocity += (Vector2)(base.velocity * 0.2f);
                                Main.dust[num118].position.X = ((this.position.X + (base.width / 2)) + 4f) + Main.rand.Next(-2, 3);
                                Main.dust[num118].position.Y = (this.position.Y + (base.height / 2)) + Main.rand.Next(-2, 3);
                                Main.dust[num118].noGravity = true;
                            }
                        }
                        else
                        {
                            if (this.soundDelay == 0)
                            {
                                float introduced1624 = Math.Abs(this.velocity.X);
                                if ((introduced1624 + Math.Abs(this.velocity.Y)) > 2f)
                                {
                                    this.soundDelay = 10;
                                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 9);
                                }
                            }
                            int num119 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 15, 0f, 0f, 100, new Color(), 2f);
                            Dust dust68 = Main.dust[num119];
                            dust68.velocity = (Vector2)(dust68.velocity * 0.3f);
                            Main.dust[num119].position.X = ((this.position.X + (base.width / 2)) + 4f) + Main.rand.Next(-4, 5);
                            Main.dust[num119].position.Y = (this.position.Y + (base.height / 2)) + Main.rand.Next(-4, 5);
                            Main.dust[num119].noGravity = true;
                        }
                        goto Label_5199;
                    }
                    if (Main.rand.Next(2) != 0)
                    {
                        goto Label_5199;
                    }
                    num114 = Main.rand.Next(3);
                    switch (num114)
                    {
                        case 0:
                            num114 = 15;
                            goto Label_4D0C;

                        case 1:
                            num114 = 0x39;
                            goto Label_4D0C;
                    }
                    num114 = 0x3a;
                    goto Label_4D0C;
                }
                if ((Main.player[this.owner].dead || Main.player[this.owner].stoned) || (Main.player[this.owner].webbed || Main.player[this.owner].frozen))
                {
                    this.Kill();
                    return;
                }
                mountedCenter = Main.player[this.owner].MountedCenter;
                Vector2 vector10 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                num76 = mountedCenter.X - vector10.X;
                num77 = mountedCenter.Y - vector10.Y;
                num78 = (float)Math.Sqrt((double)((num76 * num76) + (num77 * num77)));
                this.rotation = ((float)Math.Atan2((double)num77, (double)num76)) - 1.57f;
                if (this.type == 0x100)
                {
                    this.rotation = ((float)Math.Atan2((double)num77, (double)num76)) + 3.925f;
                }
                if (this.type == 0x1be)
                {
                    Lighting.AddLight(mountedCenter, 0f, 0.4f, 0.3f);
                    this.localAI[0]++;
                    if (this.localAI[0] >= 28f)
                    {
                        this.localAI[0] = 0f;
                    }
                    DelegateMethods.v3_1 = new Vector3(0f, 0.4f, 0.3f);
                    Utils.PlotTileLine(base.Center, mountedCenter, 8f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
                }
                if ((this.type < 0x286) || (this.type > 0x289))
                {
                    goto Label_3C0D;
                }
                zero = Vector3.Zero;
                switch (this.type)
                {
                    case 0x286:
                        zero = new Vector3(0.7f, 0.5f, 0.1f);
                        break;

                    case 0x287:
                        zero = new Vector3(0f, 0.6f, 0.7f);
                        break;

                    case 0x288:
                        zero = new Vector3(0.6f, 0.2f, 0.6f);
                        break;

                    case 0x289:
                        zero = new Vector3(0.6f, 0.6f, 0.9f);
                        break;
                }
            }
            else
            {
                if ((this.soundDelay == 0) && (this.type != 0x17f))
                {
                    this.soundDelay = 8;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 7);
                }
                if (this.type == 0x13)
                {
                    for (int num29 = 0; num29 < 2; num29++)
                    {
                        color5 = new Color();
                        int num30 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), base.width, base.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, color5, 2f);
                        Main.dust[num30].noGravity = true;
                        Main.dust[num30].velocity.X *= 0.3f;
                        Main.dust[num30].velocity.Y *= 0.3f;
                    }
                }
                else if (this.type == 0x21)
                {
                    if (Main.rand.Next(1) == 0)
                    {
                        color5 = new Color();
                        int num31 = Dust.NewDust(base.position, base.width, base.height, 40, this.velocity.X * 0.25f, this.velocity.Y * 0.25f, 0, color5, 1.4f);
                        Main.dust[num31].noGravity = true;
                    }
                }
                else if (this.type == 320)
                {
                    if (Main.rand.Next(3) == 0)
                    {
                        color5 = new Color();
                        int num32 = Dust.NewDust(base.position, base.width, base.height, 5, this.velocity.X * 0.25f, this.velocity.Y * 0.25f, 0, color5, 1.1f);
                        if (Main.rand.Next(2) == 0)
                        {
                            Main.dust[num32].scale = 0.9f;
                            Dust dust56 = Main.dust[num32];
                            dust56.velocity = (Vector2)(dust56.velocity * 0.2f);
                        }
                        else
                        {
                            Main.dust[num32].noGravity = true;
                        }
                    }
                }
                else if (this.type != 6)
                {
                    if ((this.type == 0x71) && (Main.rand.Next(1) == 0))
                    {
                        color5 = new Color();
                        int num34 = Dust.NewDust(base.position, base.width, base.height, 0x4c, this.velocity.X * 0.15f, this.velocity.Y * 0.15f, 0, color5, 1.1f);
                        Main.dust[num34].noGravity = true;
                        color5 = new Color();
                        Dust.NewDust(base.position, base.width, base.height, 15, this.velocity.X * 0.05f, this.velocity.Y * 0.05f, 150, color5, 0.6f);
                    }
                }
                else if (Main.rand.Next(5) == 0)
                {
                    int num33 = Main.rand.Next(3);
                    switch (num33)
                    {
                        case 0:
                            num33 = 15;
                            break;

                        case 1:
                            num33 = 0x39;
                            break;

                        default:
                            num33 = 0x3a;
                            break;
                    }
                    color5 = new Color();
                    Dust.NewDust(base.position, base.width, base.height, num33, this.velocity.X * 0.25f, this.velocity.Y * 0.25f, 150, color5, 0.7f);
                }
                if (this.ai[0] == 0f)
                {
                    this.ai[1]++;
                    if ((this.type == 0x6a) && (this.ai[1] >= 45f))
                    {
                        this.ai[0] = 1f;
                        this.ai[1] = 0f;
                        this.netUpdate = true;
                    }
                    if ((this.type == 320) || (this.type == 0x17f))
                    {
                        if (this.ai[1] >= 10f)
                        {
                            this.velocity.Y += 0.5f;
                            if ((this.type == 0x17f) && (this.velocity.Y < 0f))
                            {
                                this.velocity.Y += 0.35f;
                            }
                            this.velocity.X *= 0.95f;
                            if (this.velocity.Y > 16f)
                            {
                                this.velocity.Y = 16f;
                            }
                            if ((this.type == 0x17f) && (Vector2.Distance(base.Center, Main.player[this.owner].Center) > 800f))
                            {
                                this.ai[0] = 1f;
                            }
                        }
                    }
                    else if (this.type == 0xb6)
                    {
                        if (Main.rand.Next(2) == 0)
                        {
                            int num35 = Dust.NewDust(base.position, base.width, base.height, 0x39, 0f, 0f, 0xff, new Color(), 0.75f);
                            Dust dust57 = Main.dust[num35];
                            dust57.velocity = (Vector2)(dust57.velocity * 0.1f);
                            Main.dust[num35].noGravity = true;
                        }
                        if (this.velocity.X > 0f)
                        {
                            this.spriteDirection = 1;
                        }
                        else if (this.velocity.X < 0f)
                        {
                            this.spriteDirection = -1;
                        }
                        float num36 = this.position.X;
                        float num37 = this.position.Y;
                        bool flag = false;
                        if (this.ai[1] > 10f)
                        {
                            for (int num38 = 0; num38 < 200; num38++)
                            {
                                if (Main.npc[num38].CanBeChasedBy(this, false))
                                {
                                    float num39 = Main.npc[num38].position.X + (Main.npc[num38].width / 2);
                                    float num40 = Main.npc[num38].position.Y + (Main.npc[num38].height / 2);
                                    float introduced1606 = Math.Abs((float)((this.position.X + (base.width / 2)) - num39));
                                    float num41 = introduced1606 + Math.Abs((float)((this.position.Y + (base.height / 2)) - num40));
                                    if ((num41 < 800f) && Collision.CanHit(new Vector2(this.position.X + (base.width / 2), this.position.Y + (base.height / 2)), 1, 1, Main.npc[num38].position, Main.npc[num38].width, Main.npc[num38].height))
                                    {
                                        num36 = num39;
                                        num37 = num40;
                                        flag = true;
                                    }
                                }
                            }
                        }
                        if (!flag)
                        {
                            num36 = (this.position.X + (base.width / 2)) + (this.velocity.X * 100f);
                            num37 = (this.position.Y + (base.height / 2)) + (this.velocity.Y * 100f);
                            if (this.ai[1] >= 30f)
                            {
                                this.ai[0] = 1f;
                                this.ai[1] = 0f;
                                this.netUpdate = true;
                            }
                        }
                        float num42 = 12f;
                        float num43 = 0.25f;
                        Vector2 vector = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                        float num44 = num36 - vector.X;
                        float num45 = num37 - vector.Y;
                        float num46 = (float)Math.Sqrt((double)((num44 * num44) + (num45 * num45)));
                        num46 = num42 / num46;
                        num44 *= num46;
                        num45 *= num46;
                        if (this.velocity.X < num44)
                        {
                            this.velocity.X += num43;
                            if ((this.velocity.X < 0f) && (num44 > 0f))
                            {
                                this.velocity.X += num43 * 2f;
                            }
                        }
                        else if (this.velocity.X > num44)
                        {
                            this.velocity.X -= num43;
                            if ((this.velocity.X > 0f) && (num44 < 0f))
                            {
                                this.velocity.X -= num43 * 2f;
                            }
                        }
                        if (this.velocity.Y < num45)
                        {
                            this.velocity.Y += num43;
                            if ((this.velocity.Y < 0f) && (num45 > 0f))
                            {
                                this.velocity.Y += num43 * 2f;
                            }
                        }
                        else if (this.velocity.Y > num45)
                        {
                            this.velocity.Y -= num43;
                            if ((this.velocity.Y > 0f) && (num45 < 0f))
                            {
                                this.velocity.Y -= num43 * 2f;
                            }
                        }
                    }
                    else if (this.type == 0x12d)
                    {
                        if (this.ai[1] >= 20f)
                        {
                            this.ai[0] = 1f;
                            this.ai[1] = 0f;
                            this.netUpdate = true;
                        }
                    }
                    else if (this.ai[1] >= 30f)
                    {
                        this.ai[0] = 1f;
                        this.ai[1] = 0f;
                        this.netUpdate = true;
                    }
                }
                else
                {
                    this.tileCollide = false;
                    float num47 = 9f;
                    float num48 = 0.4f;
                    if (this.type == 0x13)
                    {
                        num47 = 13f;
                        num48 = 0.6f;
                    }
                    else if (this.type == 0x21)
                    {
                        num47 = 15f;
                        num48 = 0.8f;
                    }
                    else if (this.type == 0xb6)
                    {
                        num47 = 16f;
                        num48 = 1.2f;
                    }
                    else if (this.type == 0x6a)
                    {
                        num47 = 16f;
                        num48 = 1.2f;
                    }
                    else if (this.type == 0x110)
                    {
                        num47 = 15f;
                        num48 = 1f;
                    }
                    else if (this.type == 0x14d)
                    {
                        num47 = 12f;
                        num48 = 0.6f;
                    }
                    else if (this.type == 0x12d)
                    {
                        num47 = 15f;
                        num48 = 3f;
                    }
                    else if (this.type == 320)
                    {
                        num47 = 15f;
                        num48 = 3f;
                    }
                    else if (this.type == 0x17f)
                    {
                        num47 = 16f;
                        num48 = 4f;
                    }
                    Vector2 vector2 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                    float num49 = (Main.player[this.owner].position.X + (Main.player[this.owner].width / 2)) - vector2.X;
                    float num50 = (Main.player[this.owner].position.Y + (Main.player[this.owner].height / 2)) - vector2.Y;
                    float num51 = (float)Math.Sqrt((double)((num49 * num49) + (num50 * num50)));
                    if (num51 > 3000f)
                    {
                        this.Kill();
                    }
                    num51 = num47 / num51;
                    num49 *= num51;
                    num50 *= num51;
                    if (this.type == 0x17f)
                    {
                        Vector2 vector3 = new Vector2(num49, num50) - base.velocity;
                        if (vector3 != Vector2.Zero)
                        {
                            Vector2 vector4 = vector3;
                            vector4.Normalize();
                            base.velocity += (Vector2)(vector4 * Math.Min(num48, vector3.Length()));
                        }
                    }
                    else
                    {
                        if (this.velocity.X < num49)
                        {
                            this.velocity.X += num48;
                            if ((this.velocity.X < 0f) && (num49 > 0f))
                            {
                                this.velocity.X += num48;
                            }
                        }
                        else if (this.velocity.X > num49)
                        {
                            this.velocity.X -= num48;
                            if ((this.velocity.X > 0f) && (num49 < 0f))
                            {
                                this.velocity.X -= num48;
                            }
                        }
                        if (this.velocity.Y < num50)
                        {
                            this.velocity.Y += num48;
                            if ((this.velocity.Y < 0f) && (num50 > 0f))
                            {
                                this.velocity.Y += num48;
                            }
                        }
                        else if (this.velocity.Y > num50)
                        {
                            this.velocity.Y -= num48;
                            if ((this.velocity.Y > 0f) && (num50 < 0f))
                            {
                                this.velocity.Y -= num48;
                            }
                        }
                    }
                    if (Main.myPlayer == this.owner)
                    {
                        Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, base.width, base.height);
                        Rectangle rectangle2 = new Rectangle((int)Main.player[this.owner].position.X, (int)Main.player[this.owner].position.Y, Main.player[this.owner].width, Main.player[this.owner].height);
                        if (rectangle.Intersects(rectangle2))
                        {
                            this.Kill();
                        }
                    }
                }
                if (this.type == 0x6a)
                {
                    this.rotation += 0.3f * base.direction;
                    return;
                }
                if (this.type == 0x17f)
                {
                    if (this.ai[0] == 0f)
                    {
                        Vector2 vector5 = base.velocity;
                        vector5.Normalize();
                        this.rotation = ((float)Math.Atan2((double)vector5.Y, (double)vector5.X)) + 1.57f;
                        return;
                    }
                    Vector2 vector6 = base.Center - Main.player[this.owner].Center;
                    vector6.Normalize();
                    this.rotation = ((float)Math.Atan2((double)vector6.Y, (double)vector6.X)) + 1.57f;
                    return;
                }
                this.rotation += 0.4f * base.direction;
                return;
            }
            Lighting.AddLight(mountedCenter, zero);
            Lighting.AddLight(base.Center, zero);
            DelegateMethods.v3_1 = zero;
            Utils.PlotTileLine(base.Center, mountedCenter, 8f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
        Label_3C0D:
            if (this.ai[0] == 0f)
            {
                if ((((((num78 > 300f) && (this.type == 13)) || ((num78 > 400f) && (this.type == 0x20))) || (((num78 > 440f) && (this.type == 0x49)) || ((num78 > 440f) && (this.type == 0x4a)))) || ((((num78 > 250f) && (this.type == 0xa5)) || ((num78 > 350f) && (this.type == 0x100))) || (((num78 > 500f) && (this.type == 0x13b)) || ((num78 > 550f) && (this.type == 0x142))))) || (((((num78 > 400f) && (this.type == 0x14b)) || ((num78 > 550f) && (this.type == 0x14c))) || (((num78 > 400f) && (this.type == 0x174)) || ((num78 > 300f) && (this.type == 0x18c)))) || (((((num78 > 550f) && (this.type >= 0x286)) && (this.type <= 0x289)) || (((num78 > 480f) && (this.type >= 0x1e6)) && (this.type <= 0x1e9))) || ((num78 > 500f) && (this.type == 0x1be)))))
                {
                    this.ai[0] = 1f;
                }
                else if ((this.type >= 230) && (this.type <= 0xeb))
                {
                    int num79 = 300 + ((this.type - 230) * 30);
                    if (num78 > num79)
                    {
                        this.ai[0] = 1f;
                    }
                }
                Vector2 vector12 = base.Center - new Vector2(5f);
                Vector2 vector13 = base.Center + new Vector2(5f);
                Point point = (vector12 - new Vector2(16f)).ToTileCoordinates();
                Point point2 = (vector13 + new Vector2(32f)).ToTileCoordinates();
                int num80 = point.X;
                int num81 = point2.X;
                int num82 = point.Y;
                int num83 = point2.Y;
                if (num80 < 0)
                {
                    num80 = 0;
                }
                if (num81 > Main.maxTilesX)
                {
                    num81 = Main.maxTilesX;
                }
                if (num82 < 0)
                {
                    num82 = 0;
                }
                if (num83 > Main.maxTilesY)
                {
                    num83 = Main.maxTilesY;
                }
                for (int num84 = num80; num84 < num81; num84++)
                {
                    for (int num85 = num82; num85 < num83; num85++)
                    {
                        Vector2 vector14;
                        if (Main.tile[num84, num85] == null)
                        {
                            Main.tile[num84, num85] = new Tile();
                        }
                        vector14.X = num84 * 0x10;
                        vector14.Y = num85 * 0x10;
                        if ((((((vector12.X + 10f) > vector14.X) && (vector12.X < (vector14.X + 16f))) && (((vector12.Y + 10f) > vector14.Y) && (vector12.Y < (vector14.Y + 16f)))) && (Main.tile[num84, num85].nactive() && (Main.tileSolid[Main.tile[num84, num85].type] || (Main.tile[num84, num85].type == 0x13a)))) && ((this.type != 0x193) || (Main.tile[num84, num85].type == 0x13a)))
                        {
                            if (Main.player[this.owner].grapCount < 10)
                            {
                                Main.player[this.owner].grappling[Main.player[this.owner].grapCount] = base.whoAmI;
                                Player player1 = Main.player[this.owner];
                                player1.grapCount++;
                            }
                            if (Main.myPlayer == this.owner)
                            {
                                int num86 = 0;
                                int num87 = -1;
                                int timeLeft = 0x186a0;
                                if ((this.type == 0x49) || (this.type == 0x4a))
                                {
                                    for (int num89 = 0; num89 < 0x3e8; num89++)
                                    {
                                        if ((((num89 != base.whoAmI) && Main.projectile[num89].active) && ((Main.projectile[num89].owner == this.owner) && (Main.projectile[num89].aiStyle == 7))) && (Main.projectile[num89].ai[0] == 2f))
                                        {
                                            Main.projectile[num89].Kill();
                                        }
                                    }
                                }
                                else
                                {
                                    int num90 = 3;
                                    if (this.type == 0xa5)
                                    {
                                        num90 = 8;
                                    }
                                    if (this.type == 0x100)
                                    {
                                        num90 = 2;
                                    }
                                    if (this.type == 0x174)
                                    {
                                        num90 = 2;
                                    }
                                    if ((this.type >= 0x286) && (this.type <= 0x289))
                                    {
                                        num90 = 4;
                                    }
                                    for (int num91 = 0; num91 < 0x3e8; num91++)
                                    {
                                        if ((Main.projectile[num91].active && (Main.projectile[num91].owner == this.owner)) && (Main.projectile[num91].aiStyle == 7))
                                        {
                                            if (Main.projectile[num91].timeLeft < timeLeft)
                                            {
                                                num87 = num91;
                                                timeLeft = Main.projectile[num91].timeLeft;
                                            }
                                            num86++;
                                        }
                                    }
                                    if (num86 > num90)
                                    {
                                        Main.projectile[num87].Kill();
                                    }
                                }
                            }
                            WorldGen.KillTile(num84, num85, true, true, false);
                            Main.PlaySound(0, num84 * 0x10, num85 * 0x10, 1);
                            this.velocity.X = 0f;
                            this.velocity.Y = 0f;
                            this.ai[0] = 2f;
                            this.position.X = ((num84 * 0x10) + 8) - (base.width / 2);
                            this.position.Y = ((num85 * 0x10) + 8) - (base.height / 2);
                            this.damage = 0;
                            this.netUpdate = true;
                            if (Main.myPlayer == this.owner)
                            {
                                NetMessage.SendData(13, -1, -1, "", this.owner, 0f, 0f, 0f, 0, 0, 0);
                            }
                            break;
                        }
                    }
                    if (this.ai[0] == 2f)
                    {
                        return;
                    }
                }
                return;
            }
            if (this.ai[0] == 1f)
            {
                float num92 = 11f;
                if (this.type == 0x20)
                {
                    num92 = 15f;
                }
                if ((this.type == 0x49) || (this.type == 0x4a))
                {
                    num92 = 17f;
                }
                if (this.type == 0x13b)
                {
                    num92 = 20f;
                }
                if (this.type == 0x142)
                {
                    num92 = 22f;
                }
                if ((this.type >= 230) && (this.type <= 0xeb))
                {
                    num92 = 11f + ((this.type - 230) * 0.75f);
                }
                if (this.type == 0x1be)
                {
                    num92 = 20f;
                }
                if ((this.type >= 0x1e6) && (this.type <= 0x1e9))
                {
                    num92 = 18f;
                }
                if ((this.type >= 0x286) && (this.type <= 0x289))
                {
                    num92 = 24f;
                }
                if (this.type == 0x14c)
                {
                    num92 = 17f;
                }
                if (num78 < 24f)
                {
                    this.Kill();
                }
                num78 = num92 / num78;
                num76 *= num78;
                num77 *= num78;
                this.velocity.X = num76;
                this.velocity.Y = num77;
                return;
            }
            if (this.ai[0] == 2f)
            {
                int num93 = ((int)(this.position.X / 16f)) - 1;
                int num94 = ((int)((this.position.X + base.width) / 16f)) + 2;
                int num95 = ((int)(this.position.Y / 16f)) - 1;
                int num96 = ((int)((this.position.Y + base.height) / 16f)) + 2;
                if (num93 < 0)
                {
                    num93 = 0;
                }
                if (num94 > Main.maxTilesX)
                {
                    num94 = Main.maxTilesX;
                }
                if (num95 < 0)
                {
                    num95 = 0;
                }
                if (num96 > Main.maxTilesY)
                {
                    num96 = Main.maxTilesY;
                }
                bool flag2 = true;
                for (int num97 = num93; num97 < num94; num97++)
                {
                    for (int num98 = num95; num98 < num96; num98++)
                    {
                        Vector2 vector15;
                        if (Main.tile[num97, num98] == null)
                        {
                            Main.tile[num97, num98] = new Tile();
                        }
                        vector15.X = num97 * 0x10;
                        vector15.Y = num98 * 0x10;
                        if (((((this.position.X + (base.width / 2)) > vector15.X) && ((this.position.X + (base.width / 2)) < (vector15.X + 16f))) && (((this.position.Y + (base.height / 2)) > vector15.Y) && ((this.position.Y + (base.height / 2)) < (vector15.Y + 16f)))) && (Main.tile[num97, num98].nactive() && ((Main.tileSolid[Main.tile[num97, num98].type] || (Main.tile[num97, num98].type == 0x13a)) || (Main.tile[num97, num98].type == 5))))
                        {
                            flag2 = false;
                        }
                    }
                }
                if (flag2)
                {
                    this.ai[0] = 1f;
                    return;
                }
                if (Main.player[this.owner].grapCount >= 10)
                {
                    return;
                }
                Main.player[this.owner].grappling[Main.player[this.owner].grapCount] = base.whoAmI;
                Player player11 = Main.player[this.owner];
                player11.grapCount++;
            }
            return;
        Label_4D0C:
            num115 = Dust.NewDust(base.position, base.width, base.height, num114, this.velocity.X * 0.25f, this.velocity.Y * 0.25f, 0xff, new Color(), 0.7f);
            Dust dust64 = Main.dust[num115];
            dust64.velocity = (Vector2)(dust64.velocity * 0.25f);
            Main.dust[num115].position = (Vector2)((Main.dust[num115].position + base.position) / 2f);
        Label_5199:
            if ((Main.myPlayer == this.owner) && (this.ai[0] <= 0f))
            {
                if (Main.player[this.owner].channel)
                {
                    float num120 = 12f;
                    if (this.type == 0x10)
                    {
                        num120 = 15f;
                    }
                    if (this.type == 0x1eb)
                    {
                        num120 = 20f;
                    }
                    Vector2 vector16 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                    float num121 = (Main.mouseX + Main.screenPosition.X) - vector16.X;
                    float num122 = (Main.mouseY + Main.screenPosition.Y) - vector16.Y;
                    if (Main.player[this.owner].gravDir == -1f)
                    {
                        num122 = ((Main.screenPosition.Y + Main.screenHeight) - Main.mouseY) - vector16.Y;
                    }
                    float num123 = (float)Math.Sqrt((double)((num121 * num121) + (num122 * num122)));
                    num123 = (float)Math.Sqrt((double)((num121 * num121) + (num122 * num122)));
                    if (this.ai[0] < 0f)
                    {
                        this.ai[0]++;
                    }
                    if ((this.type == 0x1eb) && (num123 < 100f))
                    {
                        if (this.velocity.Length() < num120)
                        {
                            base.velocity = (Vector2)(base.velocity * 1.1f);
                            if (this.velocity.Length() > num120)
                            {
                                this.velocity.Normalize();
                                base.velocity = (Vector2)(base.velocity * num120);
                            }
                        }
                        if (this.ai[0] == 0f)
                        {
                            this.ai[0] = -10f;
                        }
                    }
                    else if (num123 > num120)
                    {
                        num123 = num120 / num123;
                        num121 *= num123;
                        num122 *= num123;
                        int num124 = (int)(num121 * 1000f);
                        int num125 = (int)(this.velocity.X * 1000f);
                        int num126 = (int)(num122 * 1000f);
                        int num127 = (int)(this.velocity.Y * 1000f);
                        if ((num124 != num125) || (num126 != num127))
                        {
                            this.netUpdate = true;
                        }
                        if (this.type == 0x1eb)
                        {
                            Vector2 vector17 = new Vector2(num121, num122);
                            base.velocity = (Vector2)(((base.velocity * 4f) + vector17) / 5f);
                        }
                        else
                        {
                            this.velocity.X = num121;
                            this.velocity.Y = num122;
                        }
                    }
                    else
                    {
                        int num128 = (int)(num121 * 1000f);
                        int num129 = (int)(this.velocity.X * 1000f);
                        int num130 = (int)(num122 * 1000f);
                        int num131 = (int)(this.velocity.Y * 1000f);
                        if ((num128 != num129) || (num130 != num131))
                        {
                            this.netUpdate = true;
                        }
                        this.velocity.X = num121;
                        this.velocity.Y = num122;
                    }
                }
                else if (this.ai[0] <= 0f)
                {
                    this.netUpdate = true;
                    if (this.type != 0x1eb)
                    {
                        float num132 = 12f;
                        Vector2 vector18 = new Vector2(this.position.X + (base.width * 0.5f), this.position.Y + (base.height * 0.5f));
                        float num133 = (Main.mouseX + Main.screenPosition.X) - vector18.X;
                        float num134 = (Main.mouseY + Main.screenPosition.Y) - vector18.Y;
                        if (Main.player[this.owner].gravDir == -1f)
                        {
                            num134 = ((Main.screenPosition.Y + Main.screenHeight) - Main.mouseY) - vector18.Y;
                        }
                        float num135 = (float)Math.Sqrt((double)((num133 * num133) + (num134 * num134)));
                        if ((num135 == 0f) || (this.ai[0] < 0f))
                        {
                            vector18 = new Vector2(Main.player[this.owner].position.X + (Main.player[this.owner].width / 2), Main.player[this.owner].position.Y + (Main.player[this.owner].height / 2));
                            num133 = (this.position.X + (base.width * 0.5f)) - vector18.X;
                            num134 = (this.position.Y + (base.height * 0.5f)) - vector18.Y;
                            num135 = (float)Math.Sqrt((double)((num133 * num133) + (num134 * num134)));
                        }
                        num135 = num132 / num135;
                        num133 *= num135;
                        num134 *= num135;
                        this.velocity.X = num133;
                        this.velocity.Y = num134;
                        if ((this.velocity.X == 0f) && (this.velocity.Y == 0f))
                        {
                            this.Kill();
                        }
                    }
                    this.ai[0] = 1f;
                }
            }
            if (this.type == 0x1eb)
            {
                this.localAI[0]++;
                if ((this.ai[0] > 0f) && (this.localAI[0] > 15f))
                {
                    this.tileCollide = false;
                    Vector2 vector19 = Main.player[this.owner].Center - base.Center;
                    if (vector19.Length() < 20f)
                    {
                        this.Kill();
                    }
                    vector19.Normalize();
                    vector19 = (Vector2)(vector19 * 25f);
                    base.velocity = (Vector2)(((base.velocity * 5f) + vector19) / 6f);
                }
                if ((this.ai[0] < 0f) || ((this.velocity.X == 0f) && (this.velocity.Y == 0f)))
                {
                    this.rotation += 0.3f;
                }
                else if (this.ai[0] > 0f)
                {
                    this.rotation += 0.3f * base.direction;
                }
                else
                {
                    this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 1.57f;
                }
            }
            else if (this.type == 0x22)
            {
                this.rotation += 0.3f * base.direction;
            }
            else if ((this.velocity.X != 0f) || (this.velocity.Y != 0f))
            {
                this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) - 2.355f;
            }
            if (this.velocity.Y > 16f)
            {
                this.velocity.Y = 16f;
            }
            return;
        Label_E4CE:
            color5 = new Color();
            int index = Dust.NewDust(new Vector2((this.position.X - (this.velocity.X * 4f)) + 2f, (this.position.Y + 2f) - (this.velocity.Y * 4f)), 8, 8, num316, 0f, 0f, 100, color5, 1.25f);
            Dust dust127 = Main.dust[index];
            dust127.velocity = (Vector2)(dust127.velocity * 0.1f);
        Label_E566:
            if ((this.localAI[1] > 7f) && (this.type == 0x84))
            {
                color5 = new Color();
                int num318 = Dust.NewDust(new Vector2((this.position.X - (this.velocity.X * 4f)) + 2f, (this.position.Y + 2f) - (this.velocity.Y * 4f)), 8, 8, 0x6b, this.oldVelocity.X, this.oldVelocity.Y, 100, color5, 1.25f);
                Dust dust128 = Main.dust[num318];
                dust128.velocity = (Vector2)(dust128.velocity * -0.25f);
                color5 = new Color();
                num318 = Dust.NewDust(new Vector2((this.position.X - (this.velocity.X * 4f)) + 2f, (this.position.Y + 2f) - (this.velocity.Y * 4f)), 8, 8, 0x6b, this.oldVelocity.X, this.oldVelocity.Y, 100, color5, 1.25f);
                Dust dust129 = Main.dust[num318];
                dust129.velocity = (Vector2)(dust129.velocity * -0.25f);
                Dust dust130 = Main.dust[num318];
                dust130.position -= (Vector2)(base.velocity * 0.5f);
            }
            if (this.localAI[1] < 15f)
            {
                this.localAI[1]++;
            }
            else
            {
                if ((this.type == 0x72) || (this.type == 0x73))
                {
                    int num319 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 4f), 8, 8, 0x1b, this.oldVelocity.X, this.oldVelocity.Y, 100, new Color(), 0.6f);
                    Dust dust131 = Main.dust[num319];
                    dust131.velocity = (Vector2)(dust131.velocity * -0.25f);
                }
                else if (this.type == 0x74)
                {
                    int num320 = Dust.NewDust(new Vector2((this.position.X - (this.velocity.X * 5f)) + 2f, (this.position.Y + 2f) - (this.velocity.Y * 5f)), 8, 8, 0x40, this.oldVelocity.X, this.oldVelocity.Y, 100, new Color(), 1.5f);
                    Dust dust132 = Main.dust[num320];
                    dust132.velocity = (Vector2)(dust132.velocity * -0.25f);
                    Main.dust[num320].noGravity = true;
                }
                if (this.localAI[0] == 0f)
                {
                    this.scale -= 0.02f;
                    this.alpha += 30;
                    if (this.alpha >= 250)
                    {
                        this.alpha = 0xff;
                        this.localAI[0] = 1f;
                    }
                }
                else if (this.localAI[0] == 1f)
                {
                    this.scale += 0.02f;
                    this.alpha -= 30;
                    if (this.alpha <= 0)
                    {
                        this.alpha = 0;
                        this.localAI[0] = 0f;
                    }
                }
            }
            if (this.ai[1] == 0f)
            {
                this.ai[1] = 1f;
                if (this.type == 0x84)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 60);
                }
                else
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                }
            }
            if (this.type == 0x9d)
            {
                this.rotation += base.direction * 0.4f;
                this.spriteDirection = base.direction;
            }
            else
            {
                this.rotation = ((float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X)) + 0.785f;
            }
            if (this.velocity.Y > 16f)
            {
                this.velocity.Y = 16f;
            }
        }


        private void AI_001()
        {
            if (type == 469 && wet && !honeyWet)
                Kill();
            if (type == 601)
            {
                Color portalColor = PortalHelper.GetPortalColor(owner, (int)ai[0]);
                Lighting.AddLight(Center + velocity * 3f, portalColor.ToVector3() * 0.5f);
                if (alpha > 0 && alpha <= 15)
                {
                    Color color = portalColor;
                    color.A = byte.MaxValue;
                    for (int index = 0; index < 4; ++index)
                    {
                        Vector2 vector2 = Utils.RotatedByRandom(Vector2.UnitY, 6.28318548202515) * (3f * Utils.NextFloat(Main.rand));
                        Dust dust = Main.dust[Dust.NewDust(Center, 0, 0, 264, 0.0f, 0.0f, 0, new Color(), 1f)];
                        dust.position = Center;
                        dust.velocity = velocity * 2f + Utils.RandomVector2(Main.rand, -1f, 1f);
                        dust.color = color;
                        dust.scale = 1.2f;
                        dust.noLight = true;
                        dust.noGravity = true;
                        dust.customData = Main.player[owner];
                    }
                }
                alpha -= 15;
                if (alpha < 0)
                    alpha = 0;
                if (++frameCounter >= 4)
                {
                    frameCounter = 0;
                    if (++frame >= Main.projFrames[type])
                        frame = 0;
                }
                if (alpha == 0)
                {
                    Color color = portalColor;
                    color.A = byte.MaxValue;
                    Dust dust = Main.dust[Dust.NewDust(Center, 0, 0, 263, 0.0f, 0.0f, 0, new Color(), 1f)];
                    dust.position = Center;
                    dust.velocity = velocity / 4f;
                    dust.color = color;
                    dust.noGravity = true;
                    dust.scale = 0.6f;
                }
            }
            if (type == 472)
            {
                int index1 = Dust.NewDust(position, width, height, 30, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index1].noGravity = true;
                Main.dust[index1].velocity *= 0.25f;
                Main.dust[index1].velocity += velocity * 0.75f;
                if (localAI[0] == 0.0)
                {
                    localAI[0] = 1f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 17);
                    for (int index2 = 0; index2 < 20; ++index2)
                    {
                        int index3 = Dust.NewDust(position, width, height, 30, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index3].noGravity = true;
                        Main.dust[index3].velocity *= 0.25f;
                        Main.dust[index3].velocity += velocity;
                        Main.dust[index3].velocity.X *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                        Main.dust[index3].velocity.Y *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                    }
                }
            }
            if (type == 323)
            {
                alpha -= 50;
                if (alpha < 0)
                    alpha = 0;
            }
            if (type == 436)
            {
                if (ai[1] == 0.0)
                {
                    ai[1] = 1f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 12);
                }
                alpha -= 40;
                if (alpha < 0)
                    alpha = 0;
                spriteDirection = direction;
                ++frameCounter;
                if (frameCounter >= 3)
                {
                    ++frame;
                    frameCounter = 0;
                    if (frame >= 4)
                        frame = 0;
                }
                Lighting.AddLight((int)Center.X / 16, (int)Center.Y / 16, 0.3f, 1.1f, 0.5f);
            }
            if (type == 467)
            {
                if (ai[1] == 0.0)
                {
                    ai[1] = 1f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 34);
                }
                else if (ai[1] == 1.0 && Main.netMode != 1)
                {
                    int num1 = -1;
                    float num2 = 2000f;
                    for (int index = 0; index < 255; ++index)
                    {
                        if (Main.player[index].active && !Main.player[index].dead)
                        {
                            Vector2 center = Main.player[index].Center;
                            float num3 = Vector2.Distance(center, Center);
                            if ((num3 < num2 || num1 == -1) && Collision.CanHit(Center, 1, 1, center, 1, 1))
                            {
                                num2 = num3;
                                num1 = index;
                            }
                        }
                    }
                    if (num2 < 20.0)
                    {
                        Kill();
                        return;
                    }
                    if (num1 != -1)
                    {
                        ai[1] = 21f;
                        ai[0] = num1;
                        netUpdate = true;
                    }
                }
                else if (ai[1] > 20.0 && ai[1] < 200.0)
                {
                    ++ai[1];
                    int index = (int)ai[0];
                    if (!Main.player[index].active || Main.player[index].dead)
                    {
                        ai[1] = 1f;
                        ai[0] = 0.0f;
                        netUpdate = true;
                    }
                    else
                    {
                        float curAngle = Utils.ToRotation(velocity);
                        Vector2 v = Main.player[index].Center - Center;
                        if (v.Length() < 20.0)
                        {
                            Kill();
                            return;
                        }
                        float targetAngle = Utils.ToRotation(v);
                        if (v == Vector2.Zero)
                            targetAngle = curAngle;
                        velocity = Utils.RotatedBy(new Vector2(velocity.Length(), 0.0f), Utils.AngleLerp(curAngle, targetAngle, 0.008f), new Vector2());
                    }
                }
                if (ai[1] >= 1.0 && ai[1] < 20.0)
                {
                    ++ai[1];
                    if (ai[1] == 20.0)
                        ai[1] = 1f;
                }
                alpha -= 40;
                if (alpha < 0)
                    alpha = 0;
                spriteDirection = direction;
                ++frameCounter;
                if (frameCounter >= 3)
                {
                    ++frame;
                    frameCounter = 0;
                    if (frame >= 4)
                        frame = 0;
                }
                Lighting.AddLight(Center, 1.1f, 0.9f, 0.4f);
                ++localAI[0];
                if (localAI[0] == 12.0)
                {
                    localAI[0] = 0.0f;
                    for (int index1 = 0; index1 < 12; ++index1)
                    {
                        Vector2 vector2 = Utils.RotatedBy(Vector2.UnitX * (float)-width / 2f + -Utils.RotatedBy(Vector2.UnitY, (double)index1 * 3.14159274101257 / 6.0, new Vector2()) * new Vector2(8f, 16f), rotation - 1.57079637050629, new Vector2());
                        int index2 = Dust.NewDust(Center, 0, 0, 6, 0.0f, 0.0f, 160, new Color(), 1f);
                        Main.dust[index2].scale = 1.1f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].position = Center + vector2;
                        Main.dust[index2].velocity = velocity * 0.1f;
                        Main.dust[index2].velocity = Vector2.Normalize(Center - velocity * 3f - Main.dust[index2].position) * 1.25f;
                    }
                }
                if (Main.rand.Next(4) == 0)
                {
                    for (int index1 = 0; index1 < 1; ++index1)
                    {
                        Vector2 vector2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.196349546313286), Utils.ToRotation(velocity), new Vector2());
                        int index2 = Dust.NewDust(position, width, height, 31, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.1f;
                        Main.dust[index2].position = Center + vector2 * width / 2f;
                        Main.dust[index2].fadeIn = 0.9f;
                    }
                }
                if (Main.rand.Next(32) == 0)
                {
                    for (int index1 = 0; index1 < 1; ++index1)
                    {
                        Vector2 vector2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.392699092626572), Utils.ToRotation(velocity), new Vector2());
                        int index2 = Dust.NewDust(position, width, height, 31, 0.0f, 0.0f, 155, new Color(), 0.8f);
                        Main.dust[index2].velocity *= 0.3f;
                        Main.dust[index2].position = Center + vector2 * width / 2f;
                        if (Main.rand.Next(2) == 0)
                            Main.dust[index2].fadeIn = 1.4f;
                    }
                }
                if (Main.rand.Next(2) == 0)
                {
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        Vector2 vector2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.785398185253143), Utils.ToRotation(velocity), new Vector2());
                        int index2 = Dust.NewDust(position, width, height, 6, 0.0f, 0.0f, 0, new Color(), 1.2f);
                        Main.dust[index2].velocity *= 0.3f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].position = Center + vector2 * width / 2f;
                        if (Main.rand.Next(2) == 0)
                            Main.dust[index2].fadeIn = 1.4f;
                    }
                }
            }
            if (type == 468)
            {
                if (ai[1] == 0.0)
                {
                    ai[1] = 1f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 34);
                }
                else if (ai[1] == 1.0 && Main.netMode != 1)
                {
                    int num1 = -1;
                    float num2 = 2000f;
                    for (int index = 0; index < 255; ++index)
                    {
                        if (Main.player[index].active && !Main.player[index].dead)
                        {
                            Vector2 center = Main.player[index].Center;
                            float num3 = Vector2.Distance(center, Center);
                            if ((num3 < num2 || num1 == -1) && Collision.CanHit(Center, 1, 1, center, 1, 1))
                            {
                                num2 = num3;
                                num1 = index;
                            }
                        }
                    }
                    if (num2 < 20.0)
                    {
                        Kill();
                        return;
                    }
                    if (num1 != -1)
                    {
                        ai[1] = 21f;
                        ai[0] = num1;
                        netUpdate = true;
                    }
                }
                else if (ai[1] > 20.0 && ai[1] < 200.0)
                {
                    ++ai[1];
                    int index = (int)ai[0];
                    if (!Main.player[index].active || Main.player[index].dead)
                    {
                        ai[1] = 1f;
                        ai[0] = 0.0f;
                        netUpdate = true;
                    }
                    else
                    {
                        float curAngle = Utils.ToRotation(velocity);
                        Vector2 v = Main.player[index].Center - Center;
                        if ((double)v.Length() < 20.0)
                        {
                            Kill();
                            return;
                        }
                        float targetAngle = Utils.ToRotation(v);
                        if (v == Vector2.Zero)
                            targetAngle = curAngle;
                        velocity = Utils.RotatedBy(new Vector2(velocity.Length(), 0.0f), Utils.AngleLerp(curAngle, targetAngle, 0.01f), new Vector2());
                    }
                }
                if (ai[1] >= 1.0 && ai[1] < 20.0)
                {
                    ++ai[1];
                    if (ai[1] == 20.0)
                        ai[1] = 1f;
                }
                alpha -= 40;
                if (alpha < 0)
                    alpha = 0;
                spriteDirection = direction;
                ++frameCounter;
                if (frameCounter >= 3)
                {
                    ++frame;
                    frameCounter = 0;
                    if (frame >= 4)
                        frame = 0;
                }
                Lighting.AddLight(Center, 0.2f, 0.1f, 0.6f);
                ++localAI[0];
                if (localAI[0] == 12.0)
                {
                    localAI[0] = 0.0f;
                    for (int index1 = 0; index1 < 12; ++index1)
                    {
                        Vector2 vector2 = Utils.RotatedBy(Vector2.UnitX * -width / 2f + -Utils.RotatedBy(Vector2.UnitY, index1 * 3.14159274101257 / 6.0, new Vector2()) * new Vector2(8f, 16f), rotation - 1.57079637050629, new Vector2());
                        int index2 = Dust.NewDust(Center, 0, 0, 27, 0.0f, 0.0f, 160, new Color(), 1f);
                        Main.dust[index2].scale = 1.1f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].position = Center + vector2;
                        Main.dust[index2].velocity = velocity * 0.1f;
                        Main.dust[index2].velocity = Vector2.Normalize(Center - velocity * 3f - Main.dust[index2].position) * 1.25f;
                    }
                }
                if (Main.rand.Next(4) == 0)
                {
                    for (int index1 = 0; index1 < 1; ++index1)
                    {
                        Vector2 vector2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.196349546313286), Utils.ToRotation(velocity), new Vector2());
                        int index2 = Dust.NewDust(position, width, height, 31, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.1f;
                        Main.dust[index2].position = Center + vector2 * width / 2f;
                        Main.dust[index2].fadeIn = 0.9f;
                    }
                }
                if (Main.rand.Next(32) == 0)
                {
                    for (int index1 = 0; index1 < 1; ++index1)
                    {
                        Vector2 vector2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.392699092626572), Utils.ToRotation(velocity), new Vector2());
                        int index2 = Dust.NewDust(position, width, height, 31, 0.0f, 0.0f, 155, new Color(), 0.8f);
                        Main.dust[index2].velocity *= 0.3f;
                        Main.dust[index2].position = Center + vector2 * width / 2f;
                        if (Main.rand.Next(2) == 0)
                            Main.dust[index2].fadeIn = 1.4f;
                    }
                }
                if (Main.rand.Next(2) == 0)
                {
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        Vector2 vector2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.785398185253143), Utils.ToRotation(velocity), new Vector2());
                        int index2 = Dust.NewDust(position, width, height, 27, 0.0f, 0.0f, 0, new Color(), 1.2f);
                        Main.dust[index2].velocity *= 0.3f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].position = Center + vector2 * width / 2f;
                        if (Main.rand.Next(2) == 0)
                            Main.dust[index2].fadeIn = 1.4f;
                    }
                }
            }
            if (type == 634 || type == 635)
            {
                float num1 = 5f;
                float num2 = 250f;
                float num3 = 6f;
                Vector2 vector2_1 = new Vector2(8f, 10f);
                float num4 = 1.2f;
                Vector3 rgb = new Vector3(0.7f, 0.1f, 0.5f);
                int num5 = 4 * MaxUpdates;
                int Type1 = Utils.SelectRandom(Main.rand, 242, 73, 72, 71, 255);
                int Type2 = 255;
                if (type == 635)
                {
                    vector2_1 = new Vector2(10f, 20f);
                    num4 = 1f;
                    num2 = 500f;
                    Type2 = 88;
                    num5 = 3 * MaxUpdates;
                    rgb = new Vector3(0.4f, 0.6f, 0.9f);
                    Type1 = Utils.SelectRandom(Main.rand, 242, 59, 88);
                }
                if (ai[1] == 0.0)
                {
                    ai[1] = 1f;
                    localAI[0] = -Main.rand.Next(48);
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 34);
                }
                else if (ai[1] == 1.0 && owner == Main.myPlayer)
                {
                    int num6 = -1;
                    float num7 = num2;
                    for (int index = 0; index < 200; ++index)
                    {
                        if (Main.npc[index].active && Main.npc[index].CanBeChasedBy(this, false))
                        {
                            Vector2 center = Main.npc[index].Center;
                            float num8 = Vector2.Distance(center, Center);
                            if (num8 < num7 && num6 == -1 && Collision.CanHitLine(Center, 1, 1, center, 1, 1))
                            {
                                num7 = num8;
                                num6 = index;
                            }
                        }
                    }
                    if (num7 < 20.0)
                    {
                        Kill();
                        return;
                    }
                    if (num6 != -1)
                    {
                        ai[1] = num1 + 1f;
                        ai[0] = num6;
                        netUpdate = true;
                    }
                }
                else if (ai[1] > num1)
                {
                    ++ai[1];
                    int index = (int)ai[0];
                    if (!Main.npc[index].active || !Main.npc[index].CanBeChasedBy(this, false))
                    {
                        ai[1] = 1f;
                        ai[0] = 0.0f;
                        netUpdate = true;
                    }
                    else
                    {
                        double num6 = Utils.ToRotation(velocity);
                        Vector2 vector2_2 = Main.npc[index].Center - Center;
                        if (vector2_2.Length() < 20.0)
                        {
                            Kill();
                            return;
                        }
                        if (vector2_2 != Vector2.Zero)
                        {
                            vector2_2.Normalize();
                            vector2_2 *= num3;
                        }
                        float num7 = 30f;
                        velocity = (velocity * (num7 - 1f) + vector2_2) / num7;
                    }
                }
                if (ai[1] >= 1.0 && ai[1] < num1)
                {
                    ++ai[1];
                    if (ai[1] == num1)
                        ai[1] = 1f;
                }
                alpha -= 40;
                if (alpha < 0)
                    alpha = 0;
                spriteDirection = direction;
                ++frameCounter;
                if (frameCounter >= num5)
                {
                    ++frame;
                    frameCounter = 0;
                    if (frame >= 4)
                        frame = 0;
                }
                Lighting.AddLight(Center, rgb);
                rotation = Utils.ToRotation(velocity);
                ++localAI[0];
                if (localAI[0] == 48.0)
                    localAI[0] = 0.0f;
                else if (alpha == 0)
                {
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        Vector2 vector2_2 = Vector2.UnitX * -30f;
                        Vector2 vector2_3 = -Utils.RotatedBy(Vector2.UnitY, localAI[0] * 0.130899697542191 + index1 * 3.14159274101257, new Vector2()) * vector2_1 - Utils.ToRotationVector2(rotation) * 10f;
                        int index2 = Dust.NewDust(Center, 0, 0, Type2, 0.0f, 0.0f, 160, new Color(), 1f);
                        Main.dust[index2].scale = num4;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].position = Center + vector2_3 + velocity * 2f;
                        Main.dust[index2].velocity = Vector2.Normalize(Center + velocity * 2f * 8f - Main.dust[index2].position) * 2f + velocity * 2f;
                    }
                }
                if (Main.rand.Next(12) == 0)
                {
                    for (int index1 = 0; index1 < 1; ++index1)
                    {
                        Vector2 vector2_2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.196349546313286), Utils.ToRotation(velocity), new Vector2());
                        int index2 = Dust.NewDust(position, width, height, 31, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.1f;
                        Main.dust[index2].position = Center + vector2_2 * width / 2f + velocity * 2f;
                        Main.dust[index2].fadeIn = 0.9f;
                    }
                }
                if (Main.rand.Next(64) == 0)
                {
                    for (int index1 = 0; index1 < 1; ++index1)
                    {
                        Vector2 vector2_2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.392699092626572), Utils.ToRotation(velocity), new Vector2());
                        int index2 = Dust.NewDust(position, width, height, 31, 0.0f, 0.0f, 155, new Color(), 0.8f);
                        Main.dust[index2].velocity *= 0.3f;
                        Main.dust[index2].position = Center + vector2_2 * width / 2f;
                        if (Main.rand.Next(2) == 0)
                            Main.dust[index2].fadeIn = 1.4f;
                    }
                }
                if (Main.rand.Next(4) == 0)
                {
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        Vector2 vector2_2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.785398185253143), Utils.ToRotation(velocity), new Vector2());
                        int index2 = Dust.NewDust(position, width, height, Type1, 0.0f, 0.0f, 0, new Color(), 1.2f);
                        Main.dust[index2].velocity *= 0.3f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].position = Center + vector2_2 * width / 2f;
                        if (Main.rand.Next(2) == 0)
                            Main.dust[index2].fadeIn = 1.4f;
                    }
                }
                if (Main.rand.Next(12) == 0 && type == 634)
                {
                    Vector2 vector2_2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.196349546313286), Utils.ToRotation(velocity), new Vector2());
                    int index = Dust.NewDust(position, width, height, Type2, 0.0f, 0.0f, 100, new Color(), 1f);
                    Main.dust[index].velocity *= 0.3f;
                    Main.dust[index].position = Center + vector2_2 * width / 2f;
                    Main.dust[index].fadeIn = 0.9f;
                    Main.dust[index].noGravity = true;
                }
                if (Main.rand.Next(3) == 0 && type == 635)
                {
                    Vector2 vector2_2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.196349546313286), Utils.ToRotation(velocity), new Vector2());
                    int index = Dust.NewDust(position, width, height, Type2, 0.0f, 0.0f, 100, new Color(), 1f);
                    Main.dust[index].velocity *= 0.3f;
                    Main.dust[index].position = Center + vector2_2 * width / 2f;
                    Main.dust[index].fadeIn = 1.2f;
                    Main.dust[index].scale = 1.5f;
                    Main.dust[index].noGravity = true;
                }
            }
            if (type == 459)
            {
                alpha -= 30;
                if (alpha < 0)
                    alpha = 0;
                spriteDirection = direction;
                ++frameCounter;
                if (frameCounter >= 3)
                {
                    ++frame;
                    frameCounter = 0;
                    if (frame >= 3)
                        frame = 0;
                }
                position = Center;
                scale = ai[1];
                width = height = (int)(22.0 * scale);
                Center = position;
                Lighting.AddLight((int)Center.X / 16, (int)Center.Y / 16, 0.4f, 0.85f, 0.9f);
                int num;
                if (scale < 0.85)
                {
                    num = Main.rand.Next(3) == 0 ? 1 : 0;
                }
                else
                {
                    num = 1;
                    penetrate = -1;
                    maxPenetrate = -1;
                }
                for (int index1 = 0; index1 < num; ++index1)
                {
                    int index2 = Dust.NewDust(position, width, height, 226, velocity.X, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].position -= Vector2.One * 3f;
                    Main.dust[index2].scale = 0.5f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity = velocity / 3f;
                    Main.dust[index2].alpha = 255 - (int)(255 * scale);
                }
            }
            if (type == 442)
            {
                frame = 0;
                if (alpha != 0)
                {
                    ++localAI[0];
                    if (localAI[0] >= 4.0)
                    {
                        alpha -= 90;
                        if (alpha < 0)
                        {
                            alpha = 0;
                            localAI[0] = 2f;
                        }
                    }
                }
                if (Vector2.Distance(Center, new Vector2(ai[0], ai[1]) * 16f + Vector2.One * 8f) <= 16.0)
                {
                    Kill();
                    return;
                }
                if (alpha == 0)
                {
                    ++localAI[1];
                    if (localAI[1] >= 120.0)
                    {
                        Kill();
                        return;
                    }
                    Lighting.AddLight((int)Center.X / 16, (int)Center.Y / 16, 0.3f, 0.45f, 0.8f);
                    ++localAI[0];
                    if (localAI[0] == 3.0)
                    {
                        localAI[0] = 0.0f;
                        for (int index1 = 0; index1 < 8; ++index1)
                        {
                            Vector2 vector2 = Utils.RotatedBy(Vector2.UnitX * -8f + -Utils.RotatedBy(Vector2.UnitY, (double)index1 * 3.14159274101257 / 4.0, new Vector2()) * new Vector2(2f, 4f), rotation - 1.57079637050629, new Vector2());
                            int index2 = Dust.NewDust(Center, 0, 0, 135, 0.0f, 0.0f, 0, new Color(), 1f);
                            Main.dust[index2].scale = 1.5f;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].position = Center + vector2;
                            Main.dust[index2].velocity = velocity * 0.66f;
                        }
                    }
                }
            }
            if (type == 440 || type == 449 || type == 606)
            {
                if (alpha > 0)
                    alpha -= 25;
                if (alpha < 0)
                    alpha = 0;
                if (type == 440)
                    Lighting.AddLight((int)Center.X / 16, (int)Center.Y / 16, 0.25f, 0.4f, 0.7f);
                if (type == 449)
                    Lighting.AddLight((int)Center.X / 16, (int)Center.Y / 16, 0.7f, 0.65f, 0.3f);
                if (type == 606)
                    Lighting.AddLight(Center, 0.7f, 0.3f, 0.3f);
                float num1 = 100f;
                float num2 = 3f;
                if (type == 606)
                {
                    num1 = 150f;
                    num2 = 5f;
                }
                if (ai[1] == 0.0)
                {
                    localAI[0] += num2;
                    if (localAI[0] == num2 * 1.0 && type == 606)
                    {
                        for (int index1 = 0; index1 < 4; ++index1)
                        {
                            int index2 = Dust.NewDust(Center - velocity / 2f, 0, 0, 182, 0.0f, 0.0f, 100, new Color(), 1.4f);
                            Main.dust[index2].velocity *= 0.2f;
                            Main.dust[index2].velocity += velocity / 10f;
                            Main.dust[index2].noGravity = true;
                        }
                    }
                    if (localAI[0] > num1)
                        localAI[0] = num1;
                }
                else
                {
                    localAI[0] -= num2;
                    if (localAI[0] <= 0.0)
                    {
                        Kill();
                        return;
                    }
                }
            }
            if (type == 438)
                Lighting.AddLight((int)Center.X / 16, (int)Center.Y / 16, 0.4f, 0.1f, 0.2f);
            if (type == 593)
            {
                Lighting.AddLight((int)Center.X / 16, (int)Center.Y / 16, 0.4f, 0.1f, 0.3f);
                if (++frameCounter >= 12)
                {
                    if (++frame >= Main.projFrames[type])
                        frame = 0;
                    frameCounter = 0;
                }
                if (Main.rand.Next(2) == 0)
                {
                    Vector2 spinningpoint = Utils.RotatedByRandom(Vector2.UnitY, 6.28318548202515);
                    Dust dust = Main.dust[Dust.NewDust(Center - spinningpoint * 8f, 0, 0, 240, 0.0f, 0.0f, 0, new Color(), 1f)];
                    dust.noGravity = true;
                    dust.position = Center - spinningpoint * 8f * scale;
                    dust.velocity = Utils.RotatedBy(spinningpoint, -1.57079637050629, new Vector2()) * 2f;
                    dust.velocity = Vector2.Zero;
                    dust.scale = 0.5f + Utils.NextFloat(Main.rand);
                    dust.fadeIn = 0.5f;
                }
            }
            if (type == 592)
                Lighting.AddLight((int)Center.X / 16, (int)Center.Y / 16, 0.15f, 0.15f, 0.4f);
            if (type == 462)
            {
                int index = Dust.NewDust(Center, 0, 0, 229, 0.0f, 0.0f, 100, new Color(), 1f);
                Main.dust[index].noLight = true;
                Main.dust[index].noGravity = true;
                Main.dust[index].velocity = velocity;
                Main.dust[index].position -= Vector2.One * 4f;
                Main.dust[index].scale = 0.8f;
                if (++frameCounter >= 9)
                {
                    frameCounter = 0;
                    if (++frame >= 5)
                        frame = 0;
                }
            }
            if (type == 437)
            {
                if (ai[1] == 0.0)
                {
                    ai[1] = 1f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 12);
                }
                if (localAI[0] == 0.0)
                {
                    localAI[0] = 1f;
                    for (int index1 = 0; index1 < 4; ++index1)
                    {
                        int index2 = Dust.NewDust(position, width, height, 226, velocity.X, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, Center, 0.25f);
                        Main.dust[index2].scale = 0.5f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity /= 2f;
                        Main.dust[index2].velocity += velocity * 0.66f;
                    }
                }
                if (ai[0] < 16.0)
                {
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        int index2 = Dust.NewDust(position, width, height, 226, velocity.X, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].position = position + new Vector2(((direction == 1 ? 1 : 0) * width), (2 + (height - 4) * index1));
                        Main.dust[index2].scale = 0.3f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity = Vector2.Zero;
                    }
                }
            }
            if (type == 435)
            {
                if (ai[1] == 0.0)
                {
                    ai[1] = 1f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 12);
                }
                alpha -= 40;
                if (alpha < 0)
                    alpha = 0;
                spriteDirection = direction;
                ++frameCounter;
                if (frameCounter >= 3)
                {
                    ++frame;
                    frameCounter = 0;
                    if (frame >= 4)
                        frame = 0;
                }
                Lighting.AddLight((int)Center.X / 16, (int)Center.Y / 16, 0.3f, 0.8f, 1.1f);
            }
            if (type == 408)
            {
                alpha -= 40;
                if (alpha < 0)
                    alpha = 0;
                spriteDirection = direction;
            }
            if (type == 282)
            {
                int index = Dust.NewDust(position, width, height, 171, 0.0f, 0.0f, 100, new Color(), 1f);
                Main.dust[index].scale = Main.rand.Next(1, 10) * 0.1f;
                Main.dust[index].noGravity = true;
                Main.dust[index].fadeIn = 1.5f;
                Main.dust[index].velocity *= 0.25f;
                Main.dust[index].velocity += velocity * 0.25f;
            }
            if (type == 275 || type == 276)
            {
                ++frameCounter;
                if (frameCounter > 1)
                {
                    frameCounter = 0;
                    ++frame;
                    if (frame > 1)
                        frame = 0;
                }
            }
            if (type == 225)
            {
                int index = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 40, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index].noGravity = true;
                Main.dust[index].scale = 1.3f;
                Main.dust[index].velocity *= 0.5f;
            }
            if (type == 174)
            {
                if (alpha == 0)
                {
                    int index = Dust.NewDust(oldPosition - velocity * 3f, width, height, 76, 0.0f, 0.0f, 50, new Color(), 1f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].noLight = true;
                    Main.dust[index].velocity *= 0.5f;
                }
                alpha -= 50;
                if (alpha < 0)
                    alpha = 0;
                if (ai[1] == 0.0)
                {
                    ai[1] = 1f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 17);
                }
            }
            else if (type == 605)
            {
                if (alpha == 0 && Main.rand.Next(3) == 0)
                {
                    int index = Dust.NewDust(position - velocity * 3f, width, height, 4, 0.0f, 0.0f, 50, new Color(78, 136, 255, 150), 1.2f);
                    Main.dust[index].velocity *= 0.3f;
                    Main.dust[index].velocity += velocity * 0.3f;
                    Main.dust[index].noGravity = true;
                }
                alpha -= 50;
                if (alpha < 0)
                    alpha = 0;
                if (ai[1] == 0.0)
                {
                    ai[1] = 1f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 17);
                }
            }
            else if (type == 176)
            {
                if (alpha == 0)
                {
                    int index = Dust.NewDust(oldPosition, width, height, 22, 0.0f, 0.0f, 100, new Color(), 0.5f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].noLight = true;
                    Main.dust[index].velocity *= 0.15f;
                    Main.dust[index].fadeIn = 0.8f;
                }
                alpha -= 50;
                if (alpha < 0)
                    alpha = 0;
                if (ai[1] == 0.0)
                {
                    ai[1] = 1f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 17);
                }
            }
            if (type == 350)
            {
                alpha -= 100;
                if (alpha < 0)
                    alpha = 0;
                Lighting.AddLight((int)Center.X / 16, (int)Center.Y / 16, 0.9f, 0.6f, 0.2f);
                if (alpha == 0)
                {
                    int num = 2;
                    if (Main.rand.Next(2) == 0)
                    {
                        int index = Dust.NewDust(new Vector2(Center.X - num, (float)(Center.Y - num - 2.0)) - velocity * 0.5f, num * 2, num * 2, 6, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index].scale *= (float)(1.79999995231628 + Main.rand.Next(10) * 0.100000001490116);
                        Main.dust[index].velocity *= 0.2f;
                        Main.dust[index].noGravity = true;
                    }
                    if (Main.rand.Next(4) == 0)
                    {
                        int index = Dust.NewDust(new Vector2(Center.X - num, (float)(Center.Y - num - 2.0)) - velocity * 0.5f, num * 2, num * 2, 31, 0.0f, 0.0f, 100, new Color(), 0.5f);
                        Main.dust[index].fadeIn = (float)(1.0 + Main.rand.Next(5) * 0.100000001490116);
                        Main.dust[index].velocity *= 0.05f;
                    }
                }
                if (ai[1] == 0.0)
                {
                    ai[1] = 1f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 42);
                }
            }
            if (type == 325)
            {
                alpha -= 100;
                if (alpha < 0)
                    alpha = 0;
                Lighting.AddLight((int)Center.X / 16, (int)Center.Y / 16, 0.9f, 0.6f, 0.2f);
                if (alpha == 0)
                {
                    int num = 2;
                    if (Main.rand.Next(2) == 0)
                    {
                        int index = Dust.NewDust(new Vector2(Center.X - num, (float)(Center.Y - num - 2.0)) - velocity * 0.5f, num * 2, num * 2, 6, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index].scale *= (float)(1.79999995231628 + Main.rand.Next(10) * 0.100000001490116);
                        Main.dust[index].velocity *= 0.2f;
                        Main.dust[index].noGravity = true;
                    }
                    if (Main.rand.Next(4) == 0)
                    {
                        int index = Dust.NewDust(new Vector2(Center.X - num, (float)(Center.Y - num - 2.0)) - velocity * 0.5f, num * 2, num * 2, 31, 0.0f, 0.0f, 100, new Color(), 0.5f);
                        Main.dust[index].fadeIn = (float)(1.0 + Main.rand.Next(5) * 0.100000001490116);
                        Main.dust[index].velocity *= 0.05f;
                    }
                }
                if (ai[1] == 0.0)
                {
                    ai[1] = 1f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 42);
                }
            }
            if (type == 469)
            {
                ++localAI[1];
                if (localAI[1] > 2.0)
                {
                    alpha -= 50;
                    if (alpha < 0)
                        alpha = 0;
                }
            }
            else if (type == 83 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 33);
            }
            else if (type == 408 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(4, (int)position.X, (int)position.Y, 19);
            }
            else if (type == 259 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 33);
            }
            else if (type == 110 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 11);
            }
            else if (type == 302 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 11);
            }
            else if (type == 438 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 12);
            }
            else if (type == 593 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 11);
            }
            else if (type == 592 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 12);
            }
            else if (type == 462 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, Main.rand.Next(124, 126));
                Vector2 vector2 = Vector2.Normalize(velocity);
                int num = Main.rand.Next(5, 10);
                for (int index1 = 0; index1 < num; ++index1)
                {
                    int index2 = Dust.NewDust(Center, 0, 0, 229, 0.0f, 0.0f, 100, new Color(), 1f);
                    --Main.dust[index2].velocity.Y;
                    Main.dust[index2].velocity += vector2 * 2f;
                    Main.dust[index2].position -= Vector2.One * 4f;
                    Main.dust[index2].noGravity = true;
                }
            }
            else if (type == 84 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 12);
            }
            else if (type == 389 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 12);
            }
            else if (type == 257 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 12);
            }
            else if (type == 100 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 33);
            }
            else if (type == 98 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 17);
            }
            else if (type == 184 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 17);
            }
            else if (type == 195 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 17);
            }
            else if (type == 275 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 17);
            }
            else if (type == 276 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 17);
            }
            else if ((type == 81 || type == 82) && ai[1] == 0.0)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 5);
                ai[1] = 1f;
            }
            else if (type == 180 && ai[1] == 0.0)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 11);
                ai[1] = 1f;
            }
            else if (type == 248 && ai[1] == 0.0)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 17);
                ai[1] = 1f;
            }
            else if (type == 576 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 12);
            }
            else if (type == 577 && ai[1] == 0.0)
            {
                ai[1] = 1f;
                Main.PlaySound(2, (int)position.X, (int)position.Y, 36);
            }
            else if (type == 639)
            {
                if (localAI[0] == 0.0 && localAI[1] == 0.0)
                {
                    localAI[0] = Center.X;
                    localAI[1] = Center.Y;
                    ai[0] = velocity.X;
                    ai[1] = velocity.Y;
                }
                alpha -= 25;
                if (alpha < 0)
                    alpha = 0;
            }
            else if (type == 640)
            {
                alpha -= 25;
                if (alpha < 0)
                    alpha = 0;
                if (velocity == Vector2.Zero)
                {
                    ai[0] = 0.0f;
                    bool flag = true;
                    for (int index = 1; index < oldPos.Length; ++index)
                    {
                        if (oldPos[index] != oldPos[0])
                            flag = false;
                    }
                    if (flag)
                    {
                        Kill();
                        return;
                    }
                    if (Main.rand.Next(extraUpdates) == 0 && (velocity != Vector2.Zero || Main.rand.Next(localAI[1] == 2.0 ? 2 : 6) == 0))
                    {
                        for (int index1 = 0; index1 < 2; ++index1)
                        {
                            float num1 = rotation + (float)((Main.rand.Next(2) == 1 ? -1.0 : 1.0) * 1.57079637050629);
                            float num2 = (float)(Main.rand.NextDouble() * 0.800000011920929 + 1.0);
                            Vector2 vector2 = new Vector2((float)Math.Cos(num1) * num2, (float)Math.Sin(num1) * num2);
                            int index2 = Dust.NewDust(Center, 0, 0, 229, vector2.X, vector2.Y, 0, new Color(), 1f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].scale = 1.2f;
                        }
                        if (Main.rand.Next(10) == 0)
                        {
                            int index = Dust.NewDust(Center + Utils.RotatedBy(velocity, 1.57079637050629, new Vector2()) * ((float)Main.rand.NextDouble() - 0.5f) * width - Vector2.One * 4f, 8, 8, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                            Main.dust[index].velocity *= 0.5f;
                            Main.dust[index].velocity.Y = -Math.Abs(Main.dust[index].velocity.Y);
                        }
                    }
                }
                else if (numUpdates == 1)
                {
                    float num1 = (float)(rotation + 1.57079637050629 + (Main.rand.Next(2) == 1 ? -1.0 : 1.0) * 1.57079637050629);
                    float num2 = (float)(Main.rand.NextDouble() * 0.25 + 0.25);
                    Vector2 vector2 = new Vector2((float)Math.Cos(num1) * num2, (float)Math.Sin(num1) * num2);
                    int index = Dust.NewDust(position, 0, 0, 229, vector2.X, vector2.Y, 0, new Color(), 1f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].scale = 1.2f;
                }
            }
            if (type == 41)
            {
                int index1 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.6f);
                Main.dust[index1].noGravity = true;
                int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 2f);
                Main.dust[index2].noGravity = true;
            }
            else if (type == 55)
            {
                int index = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 18, 0.0f, 0.0f, 0, new Color(), 0.9f);
                Main.dust[index].noGravity = true;
            }
            else if (type == 374)
            {
                if (localAI[0] == 0.0)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 17);
                    localAI[0] = 1f;
                }
                if (Main.rand.Next(2) == 0)
                {
                    int index = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 18, 0.0f, 0.0f, 0, new Color(), 0.9f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity *= 0.5f;
                }
            }
            else if (type == 376)
            {
                if (localAI[0] == 0.0)
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 20);
                ++localAI[0];
                if (localAI[0] > 3.0)
                {
                    int num = 1;
                    if (localAI[0] > 5.0)
                        num = 2;
                    for (int index1 = 0; index1 < num; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y + 2f), width, height, 6, velocity.X * 0.2f, velocity.Y * 0.2f, 100, new Color(), 2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity.X *= 0.3f;
                        Main.dust[index2].velocity.Y *= 0.3f;
                        Main.dust[index2].noLight = true;
                    }
                    if (wet && !lavaWet)
                    {
                        Kill();
                        return;
                    }
                }
            }
            else if (type == 91 && Main.rand.Next(2) == 0)
            {
                int index = Dust.NewDust(position, width, height, Main.rand.Next(2) != 0 ? 58 : 15, velocity.X * 0.25f, velocity.Y * 0.25f, 150, new Color(), 0.9f);
                Main.dust[index].velocity *= 0.25f;
            }
            if (type == 163 || type == 310)
            {
                if (alpha > 0)
                    alpha -= 25;
                if (alpha < 0)
                    alpha = 0;
            }
            switch (type)
            {
                case 389:
                case 180:
                case 279:
                case 283:
                case 284:
                case 285:
                case 286:
                case 287:
                case 104:
                case 110:
                case 158:
                case 159:
                case 160:
                case 161:
                case 83:
                case 84:
                case 89:
                case 100:
                case 14:
                case 20:
                case 36:
                    if (alpha > 0)
                        alpha -= 15;
                    if (alpha < 0)
                    {
                        alpha = 0;
                        break;
                    }
                    break;
                case 576:
                case 577:
                    ++localAI[1];
                    if (localAI[1] > 2.0)
                    {
                        if (alpha > 0)
                            alpha -= 15;
                        if (alpha < 0)
                        {
                            alpha = 0;
                            break;
                        }
                        break;
                    }
                    break;
            }
            if (type == 484)
            {
                int index = Dust.NewDust(position, width, height, 78, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index].noGravity = true;
                Main.dust[index].velocity *= 0.1f;
                Main.dust[index].scale = 0.75f;
                Main.dust[index].position = (Main.dust[index].position + Center) / 2f;
                Main.dust[index].position += velocity * Main.rand.Next(0, 101) * 0.01f;
            }
            if (type == 242 || type == 302 || (type == 438 || type == 462) || type == 592)
            {
                float num = (float)Math.Sqrt(velocity.X * velocity.X + velocity.Y * velocity.Y);
                if (alpha > 0)
                    alpha -= (byte)(num * 0.9);
                if (alpha < 0)
                    alpha = 0;
            }
            if (type == 638)
            {
                float num1 = velocity.Length();
                if (alpha > 0)
                    alpha -= (byte)(num1 * 0.3);
                if (alpha < 0)
                    alpha = 0;
                Rectangle hitbox = Hitbox;
                hitbox.Offset((int)velocity.X, (int)velocity.Y);
                bool flag = false;
                for (int index = 0; index < 200; ++index)
                {
                    if (Main.npc[index].active && !Main.npc[index].dontTakeDamage && (Main.npc[index].immune[owner] == 0 && npcImmune[index] == 0) && Main.npc[index].Hitbox.Intersects(hitbox))
                    {
                        flag = true;
                        break;
                    }
                }
                if (flag)
                {
                    int num2 = Main.rand.Next(15, 31);
                    for (int index1 = 0; index1 < num2; ++index1)
                    {
                        int index2 = Dust.NewDust(Center, 0, 0, 229, 0.0f, 0.0f, 100, new Color(), 0.8f);
                        Main.dust[index2].velocity *= 1.6f;
                        --Main.dust[index2].velocity.Y;
                        Main.dust[index2].velocity += velocity;
                        Main.dust[index2].noGravity = true;
                    }
                }
            }
            if (type == 257 || type == 593)
            {
                if (alpha > 0)
                    alpha -= 10;
                if (alpha < 0)
                    alpha = 0;
            }
            if (type == 88)
            {
                if (alpha > 0)
                    alpha -= 10;
                if (alpha < 0)
                    alpha = 0;
            }
            if (type == 532)
                ++ai[0];
            bool flag1 = true;
            switch (type)
            {
                case 606:
                case 616:
                case 634:
                case 635:
                case 638:
                case 639:
                case 592:
                case 593:
                case 601:
                case 498:
                case 576:
                case 577:
                case 585:
                case 467:
                case 468:
                case 469:
                case 472:
                case 483:
                case 484:
                case 485:
                case 449:
                case 459:
                case 462:
                case 389:
                case 435:
                case 436:
                case 438:
                case 440:
                case 442:
                case 348:
                case 349:
                case 350:
                case 355:
                case 374:
                case 376:
                case 302:
                case 323:
                case 325:
                case 270:
                case 279:
                case 283:
                case 284:
                case 285:
                case 286:
                case 287:
                case 299:
                case 257:
                case 259:
                case 265:
                case 184:
                case 242:
                case 248:
                case 158:
                case 159:
                case 160:
                case 161:
                case 180:
                case 98:
                case 100:
                case 104:
                case 110:
                case 55:
                case 83:
                case 84:
                case 88:
                case 89:
                case 20:
                case 36:
                case 38:
                case 5:
                case 14:
                    flag1 = false;
                    break;
            }
            if (flag1)
                ++ai[0];
            if (type == 270)
            {
                int index1 = (int)Player.FindClosest(Center, 1, 1);
                ++ai[1];
                if (ai[1] < 110.0 && ai[1] > 30.0)
                {
                    float num = velocity.Length();
                    Vector2 vector2_1 = Main.player[index1].Center - Center;
                    vector2_1.Normalize();
                    velocity = (velocity * 24f + vector2_1 * num) / 25f;
                    velocity.Normalize();
                    Projectile projectile = this;
                    Vector2 vector2_2 = projectile.velocity * num;
                    projectile.velocity = vector2_2;
                }
                if (ai[0] < 0.0)
                {
                    if (velocity.Length() < 18.0)
                    {
                        Projectile projectile = this;
                        Vector2 vector2 = projectile.velocity * 1.02f;
                        projectile.velocity = vector2;
                    }
                    if (localAI[0] == 0.0)
                    {
                        localAI[0] = 1f;
                        Main.PlaySound(2, (int)position.X, (int)position.Y, 8);
                        for (int index2 = 0; index2 < 10; ++index2)
                        {
                            int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 5, velocity.X, velocity.Y, 0, new Color(), 2f);
                            Main.dust[index3].noGravity = true;
                            Main.dust[index3].velocity = Center - Main.dust[index3].position;
                            Main.dust[index3].velocity.Normalize();
                            Main.dust[index3].velocity *= -5f;
                            Main.dust[index3].velocity += velocity / 2f;
                        }
                    }
                    friendly = false;
                    hostile = true;
                }
            }
            if (type == 585)
            {
                if (localAI[0] == 0.0)
                {
                    localAI[0] = 1f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 8);
                    for (int index1 = 0; index1 < 3; ++index1)
                    {
                        int index2 = Dust.NewDust(position, width, height, 27, velocity.X, velocity.Y, 0, new Color(), 2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity = Center - Main.dust[index2].position;
                        Main.dust[index2].velocity.Normalize();
                        Main.dust[index2].velocity *= -5f;
                        Main.dust[index2].velocity += velocity / 2f;
                        Main.dust[index2].noLight = true;
                    }
                }
                if (alpha > 0)
                    alpha -= 50;
                if (alpha < 0)
                    alpha = 0;
                ++frameCounter;
                if (frameCounter >= 12)
                    frameCounter = 0;
                frame = frameCounter / 2;
                if (frame > 3)
                    frame = 6 - frame;
                Vector3 vector3 = NPCID.Sets.MagicAuraColor[54].ToVector3();
                Lighting.AddLight(Center, vector3.X, vector3.Y, vector3.Z);
                if (Main.rand.Next(3) == 0)
                {
                    int index = Dust.NewDust(new Vector2(position.X + 4f, position.Y + 4f), width - 8, height - 8, 27, velocity.X * 0.2f, velocity.Y * 0.2f, 100, new Color(), 2f);
                    Main.dust[index].position -= velocity * 2f;
                    Main.dust[index].noLight = true;
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity.X *= 0.3f;
                    Main.dust[index].velocity.Y *= 0.3f;
                }
            }
            if (type == 594)
            {
                int num = (int)(43.0 - ai[1]) / 13;
                if (num < 1)
                    num = 1;
                int Type = ai[1] < 20.0 ? 6 : 31;
                for (int index1 = 0; index1 < num; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X + 4f, position.Y + 4f), width - 8, height - 8, Type, velocity.X * 0.2f, velocity.Y * 0.2f, 0, new Color(), 2f);
                    Main.dust[index2].position -= velocity * 2f;
                    Main.dust[index2].noLight = true;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity.X *= 0.3f;
                    Main.dust[index2].velocity.Y *= 0.3f;
                    if (Type == 6)
                        Main.dust[index2].fadeIn = Utils.NextFloat(Main.rand) * 2f;
                }
                ++ai[1];
                if (ai[1] > (double)(43 * MaxUpdates))
                {
                    Kill();
                    return;
                }
            }
            if (type == 622)
            {
                int Type = 229;
                if (Main.rand.Next(3) != 0)
                {
                    int index = Dust.NewDust(new Vector2(position.X + 4f, position.Y + 4f), width - 8, height - 8, Type, velocity.X * 0.2f, velocity.Y * 0.2f, 0, new Color(), 1.2f);
                    Main.dust[index].position -= velocity * 2f;
                    Main.dust[index].noLight = true;
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity.X *= 0.3f;
                    Main.dust[index].velocity.Y *= 0.3f;
                }
                ++ai[1];
                if (ai[1] > (double)(23 * MaxUpdates))
                {
                    Kill();
                    return;
                }
            }
            if (type == 587)
            {
                Color newColor = Main.hslToRgb(ai[1], 1f, 0.5f);
                newColor.A = 200;
                ++localAI[0];
                if (localAI[0] >= 2.0)
                {
                    if (localAI[0] == 2.0)
                    {
                        Main.PlaySound(2, (int)position.X, (int)position.Y, 5);
                        for (int index1 = 0; index1 < 4; ++index1)
                        {
                            int index2 = Dust.NewDust(position, width, height, 76, velocity.X, velocity.Y, 0, newColor, 1.1f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity = Center - Main.dust[index2].position;
                            Main.dust[index2].velocity.Normalize();
                            Main.dust[index2].velocity *= -3f;
                            Main.dust[index2].velocity += velocity / 2f;
                        }
                    }
                    else
                    {
                        ++frame;
                        if (frame > 2)
                            frame = 0;
                        for (int index1 = 0; index1 < 1; ++index1)
                        {
                            int index2 = Dust.NewDust(new Vector2(position.X + 4f, position.Y + 4f), width - 8, height - 8, 76, velocity.X * 0.2f, velocity.Y * 0.2f, 0, newColor, 0.9f);
                            Main.dust[index2].position = Center;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity = velocity * 0.5f;
                        }
                    }
                }
            }
            if (type == 349)
            {
                frame = (int)ai[0];
                velocity.Y += 0.2f;
                if (localAI[0] == 0.0 || localAI[0] == 2.0)
                {
                    scale += 0.01f;
                    alpha -= 50;
                    if (alpha <= 0)
                    {
                        localAI[0] = 1f;
                        alpha = 0;
                    }
                }
                else if (localAI[0] == 1.0)
                {
                    scale -= 0.01f;
                    alpha += 50;
                    if (alpha >= 255)
                    {
                        localAI[0] = 2f;
                        alpha = 255;
                    }
                }
            }
            if (type == 348)
            {
                if (localAI[1] == 0.0)
                {
                    localAI[1] = 1f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 8);
                }
                if (ai[0] == 0.0 || ai[0] == 2.0)
                {
                    scale += 0.01f;
                    alpha -= 50;
                    if (alpha <= 0)
                    {
                        ai[0] = 1f;
                        alpha = 0;
                    }
                }
                else if (ai[0] == 1.0)
                {
                    scale -= 0.01f;
                    alpha += 50;
                    if (alpha >= 255)
                    {
                        ai[0] = 2f;
                        alpha = 255;
                    }
                }
            }
            if (type == 572)
            {
                if (localAI[0] == 0.0)
                {
                    localAI[0] = 1f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 17);
                }
                for (int index1 = 0; index1 < 2; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 40, velocity.X, velocity.Y, 100, new Color(), 1f);
                    Main.dust[index2].velocity *= 0.5f;
                    Main.dust[index2].velocity += velocity;
                    Main.dust[index2].velocity *= 0.5f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].scale = 1.2f;
                    Main.dust[index2].position = (Center + position) / 2f;
                }
            }
            if (type == 577)
                Lighting.AddLight(Center, 0.1f, 0.3f, 0.4f);
            else if (type == 576)
            {
                Lighting.AddLight(Center, 0.4f, 0.2f, 0.4f);
                for (int index = 0; index < 5; ++index)
                {
                    Dust dust = Main.dust[Dust.NewDust(position, width, height, 242, velocity.X, velocity.Y, 100, new Color(), 1f)];
                    dust.velocity = Vector2.Zero;
                    dust.position -= velocity / 5f * index;
                    dust.noGravity = true;
                    dust.scale = 0.8f;
                    dust.noLight = true;
                }
            }
            else if (type == 581)
            {
                if (localAI[0] == 0.0)
                {
                    localAI[0] = 1f;
                    Main.PlaySound(2, (int)Center.X, (int)Center.Y, 17);
                }
                for (int index = 0; index < 2; ++index)
                {
                    int Type = Utils.SelectRandom<int>(Main.rand, 229, 161, 161);
                    Dust dust = Main.dust[Dust.NewDust(position, width, height, Type, velocity.X, velocity.Y, 100, new Color(), 1f)];
                    dust.velocity = dust.velocity / 4f + velocity / 2f;
                    dust.noGravity = true;
                    dust.scale = 1.2f;
                    dust.position = Center;
                    dust.noLight = true;
                }
            }
            if (type == 299)
            {
                if (localAI[0] == 6.0)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 8);
                    for (int index1 = 0; index1 < 40; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 181, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].velocity *= 3f;
                        Main.dust[index2].velocity += velocity * 0.75f;
                        Main.dust[index2].scale *= 1.2f;
                        Main.dust[index2].noGravity = true;
                    }
                }
                ++localAI[0];
                if (localAI[0] > 6.0)
                {
                    for (int index1 = 0; index1 < 3; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 181, velocity.X * 0.2f, velocity.Y * 0.2f, 100, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.6f;
                        Main.dust[index2].scale *= 1.4f;
                        Main.dust[index2].noGravity = true;
                    }
                }
            }
            else if (type == 270)
            {
                if (ai[0] < 0.0)
                    alpha = 0;
                if (alpha > 0)
                    alpha -= 50;
                if (alpha < 0)
                    alpha = 0;
                ++frame;
                if (frame > 2)
                    frame = 0;
                if (ai[0] < 0.0)
                {
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X + 4f, position.Y + 4f), width - 8, height - 8, 5, velocity.X * 0.2f, velocity.Y * 0.2f, 100, new Color(), 1.5f);
                        Main.dust[index2].position -= velocity;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity.X *= 0.3f;
                        Main.dust[index2].velocity.Y *= 0.3f;
                    }
                }
                else
                {
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X + 4f, position.Y + 4f), width - 8, height - 8, 6, velocity.X * 0.2f, velocity.Y * 0.2f, 100, new Color(), 2f);
                        Main.dust[index2].position -= velocity * 2f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity.X *= 0.3f;
                        Main.dust[index2].velocity.Y *= 0.3f;
                    }
                }
            }
            if (type == 259)
            {
                if (alpha > 0)
                    alpha -= 10;
                if (alpha < 0)
                    alpha = 0;
            }
            if (type == 265)
            {
                if (alpha > 0)
                    alpha -= 50;
                if (alpha < 0)
                    alpha = 0;
                if (alpha == 0)
                {
                    int index = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 163, velocity.X, velocity.Y, 100, new Color(), 1.2f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity *= 0.3f;
                    Main.dust[index].velocity -= velocity * 0.4f;
                }
            }
            if (type == 355)
            {
                if (alpha > 0)
                    alpha -= 50;
                if (alpha < 0)
                    alpha = 0;
                if (alpha == 0)
                {
                    int index = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 205, velocity.X, velocity.Y, 100, new Color(), 1.2f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity *= 0.3f;
                    Main.dust[index].velocity -= velocity * 0.4f;
                }
            }
            if (type == 357)
            {
                if (alpha < 170)
                {
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        float x = position.X - velocity.X / 10f * index1;
                        float y = position.Y - velocity.Y / 10f * index1;
                        int index2 = Dust.NewDust(new Vector2(x, y), 1, 1, 206, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].alpha = alpha;
                        Main.dust[index2].position.X = x;
                        Main.dust[index2].position.Y = y;
                        Main.dust[index2].velocity *= 0.0f;
                        Main.dust[index2].noGravity = true;
                    }
                }
                if (alpha > 0)
                    alpha -= 25;
                if (alpha < 0)
                    alpha = 0;
            }
            else if (type == 207)
            {
                if (alpha < 170)
                {
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        float x = position.X - velocity.X / 10f * index1;
                        float y = position.Y - velocity.Y / 10f * index1;
                        int index2 = Dust.NewDust(new Vector2(x, y), 1, 1, 75, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].alpha = alpha;
                        Main.dust[index2].position.X = x;
                        Main.dust[index2].position.Y = y;
                        Main.dust[index2].velocity *= 0.0f;
                        Main.dust[index2].noGravity = true;
                    }
                }
                float num1 = (float)Math.Sqrt(velocity.X * velocity.X + velocity.Y * velocity.Y);
                float num2 = localAI[0];
                if (num2 == 0.0)
                {
                    localAI[0] = num1;
                    num2 = num1;
                }
                if (alpha > 0)
                    alpha -= 25;
                if (alpha < 0)
                    alpha = 0;
                float num3 = position.X;
                float num4 = position.Y;
                float num5 = 300f;
                bool flag2 = false;
                int num6 = 0;
                if (ai[1] == 0.0)
                {
                    for (int index = 0; index < 200; ++index)
                    {
                        if (Main.npc[index].CanBeChasedBy(this, false) && (ai[1] == 0.0 || ai[1] == (double)(index + 1)))
                        {
                            float num7 = Main.npc[index].position.X + (float)(Main.npc[index].width / 2);
                            float num8 = Main.npc[index].position.Y + (float)(Main.npc[index].height / 2);
                            float num9 = Math.Abs(position.X + (width / 2) - num7) + Math.Abs(position.Y + (height / 2) - num8);
                            if (num9 < num5 && Collision.CanHit(new Vector2(position.X + (width / 2), position.Y + (height / 2)), 1, 1, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height))
                            {
                                num5 = num9;
                                num3 = num7;
                                num4 = num8;
                                flag2 = true;
                                num6 = index;
                            }
                        }
                    }
                    if (flag2)
                        ai[1] = (float)(num6 + 1);
                    flag2 = false;
                }
                if (ai[1] > 0.0)
                {
                    int index = (int)(ai[1] - 1.0);
                    if (Main.npc[index].active && Main.npc[index].CanBeChasedBy(this, true) && !Main.npc[index].dontTakeDamage)
                    {
                        if ((double)(Math.Abs(position.X + (width / 2) - (Main.npc[index].position.X + (float)(Main.npc[index].width / 2))) + Math.Abs(position.Y + (height / 2) - (Main.npc[index].position.Y + (float)(Main.npc[index].height / 2)))) < 1000.0)
                        {
                            flag2 = true;
                            num3 = Main.npc[index].position.X + (float)(Main.npc[index].width / 2);
                            num4 = Main.npc[index].position.Y + (float)(Main.npc[index].height / 2);
                        }
                    }
                    else
                        ai[1] = 0.0f;
                }
                if (!friendly)
                    flag2 = false;
                if (flag2)
                {
                    float num7 = num2;
                    Vector2 vector2 = new Vector2(position.X + width * 0.5f, position.Y + height * 0.5f);
                    float num8 = num3 - vector2.X;
                    float num9 = num4 - vector2.Y;
                    float num10 = (float)Math.Sqrt(num8 * num8 + num9 * num9);
                    float num11 = num7 / num10;
                    float num12 = num8 * num11;
                    float num13 = num9 * num11;
                    int num14 = 8;
                    velocity.X = (velocity.X * (float)(num14 - 1) + num12) / num14;
                    velocity.Y = (velocity.Y * (float)(num14 - 1) + num13) / num14;
                }
            }
            else if (type == 81 || type == 91)
            {
                if (ai[0] >= 20.0)
                {
                    ai[0] = 20f;
                    velocity.Y += 0.07f;
                }
            }
            else if (type == 174 || type == 605)
            {
                if (ai[0] >= 5.0)
                {
                    ai[0] = 5f;
                    velocity.Y += 0.15f;
                }
            }
            else if (type == 337)
            {
                if (position.Y > Main.player[owner].position.Y - 300.0)
                    tileCollide = true;
                if (position.Y < Main.worldSurface * 16.0)
                    tileCollide = true;
                frame = (int)ai[1];
                if (Main.rand.Next(2) == 0)
                {
                    int index = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 197, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index].velocity *= 0.5f;
                    Main.dust[index].noGravity = true;
                }
            }
            else if (type == 645)
            {
                if (ai[1] != -1.0 && position.Y > ai[1])
                    tileCollide = true;
                if (Utils.HasNaNs(position))
                {
                    Kill();
                    return;
                }
                bool flag2 = WorldGen.SolidTile(Framing.GetTileSafely((int)position.X / 16, (int)position.Y / 16));
                Dust dust = Main.dust[Dust.NewDust(new Vector2(position.X, position.Y), width, height, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                dust.position = Center;
                dust.velocity = Vector2.Zero;
                dust.noGravity = true;
                if (flag2)
                    dust.noLight = true;
                if (ai[1] == -1.0)
                {
                    ++ai[0];
                    velocity = Vector2.Zero;
                    tileCollide = false;
                    penetrate = -1;
                    position = Center;
                    width = height = 140;
                    Center = position;
                    alpha -= 10;
                    if (alpha < 0)
                        alpha = 0;
                    if (++frameCounter >= MaxUpdates * 3)
                    {
                        frameCounter = 0;
                        ++frame;
                    }
                    if (ai[0] < (double)(Main.projFrames[type] * MaxUpdates * 3))
                        return;
                    Kill();
                    return;
                }
                alpha = 255;
                if (numUpdates == 0)
                {
                    int num1 = -1;
                    float num2 = 60f;
                    for (int index = 0; index < 200; ++index)
                    {
                        NPC npc = Main.npc[index];
                        if (npc.CanBeChasedBy(this, false))
                        {
                            float num3 = Distance(npc.Center);
                            if (num3 < num2 && Collision.CanHitLine(Center, 0, 0, npc.Center, 0, 0))
                            {
                                num2 = num3;
                                num1 = index;
                            }
                        }
                    }
                    if (num1 != -1)
                    {
                        ai[0] = 0.0f;
                        ai[1] = -1f;
                        netUpdate = true;
                        return;
                    }
                }
            }
            else if (type >= 424 && type <= 426)
            {
                if (position.Y > Main.player[owner].position.Y - 300.0)
                    tileCollide = true;
                if (position.Y < Main.worldSurface * 16.0)
                    tileCollide = true;
                scale = ai[1];
                rotation += velocity.X * 2f;
                Vector2 vector2 = Center + Vector2.Normalize(velocity) * 10f;
                Dust dust1 = Main.dust[Dust.NewDust(position, width, height, 6, 0.0f, 0.0f, 0, new Color(), 1f)];
                dust1.position = vector2;
                dust1.velocity = Utils.RotatedBy(velocity, 1.57079637050629, new Vector2()) * 0.33f + velocity / 4f;
                dust1.position += Utils.RotatedBy(velocity, 1.57079637050629, new Vector2());
                dust1.fadeIn = 0.5f;
                dust1.noGravity = true;
                Dust dust2 = Main.dust[Dust.NewDust(position, width, height, 6, 0.0f, 0.0f, 0, new Color(), 1f)];
                dust2.position = vector2;
                dust2.velocity = Utils.RotatedBy(velocity, -1.57079637050629, new Vector2()) * 0.33f + velocity / 4f;
                dust2.position += Utils.RotatedBy(velocity, -1.57079637050629, new Vector2());
                dust2.fadeIn = 0.5f;
                dust2.noGravity = true;
                for (int index1 = 0; index1 < 1; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].velocity *= 0.5f;
                    Main.dust[index2].scale *= 1.3f;
                    Main.dust[index2].fadeIn = 1f;
                    Main.dust[index2].noGravity = true;
                }
            }
            else if (type == 344)
            {
                ++localAI[1];
                if (localAI[1] > 5.0)
                {
                    alpha -= 50;
                    if (alpha < 0)
                        alpha = 0;
                }
                frame = (int)ai[1];
                if (localAI[1] > 20.0)
                {
                    localAI[1] = 20f;
                    velocity.Y += 0.15f;
                }
                rotation += Main.windSpeed * 0.2f;
                velocity.X += Main.windSpeed * 0.1f;
            }
            else if (type == 336 || type == 345)
            {
                if (type == 345 && localAI[0] == 0.0)
                {
                    localAI[0] = 1f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 1);
                }
                if (ai[0] >= 50.0)
                {
                    ai[0] = 50f;
                    velocity.Y += 0.5f;
                }
            }
            else if (type == 246)
            {
                alpha -= 20;
                if (alpha < 0)
                    alpha = 0;
                if (ai[0] >= 60.0)
                {
                    ai[0] = 60f;
                    velocity.Y += 0.15f;
                }
            }
            else if (type == 311)
            {
                if (alpha > 0)
                    alpha -= 50;
                if (alpha < 0)
                    alpha = 0;
                if (ai[0] >= 30.0)
                {
                    ai[0] = 30f;
                    if (ai[1] == 0.0)
                        ai[1] = 1f;
                    velocity.Y += 0.5f;
                }
            }
            else if (type == 312)
            {
                if (ai[0] >= 5.0)
                    alpha = 0;
                if (ai[0] >= 20.0)
                {
                    ai[0] = 30f;
                    velocity.Y += 0.5f;
                }
            }
            else if (type != 239 && type != 264)
            {
                if (type == 176)
                {
                    if (ai[0] >= 15.0)
                    {
                        ai[0] = 15f;
                        velocity.Y += 0.05f;
                    }
                }
                else if (type == 275 || type == 276)
                {
                    if (alpha > 0)
                        alpha -= 30;
                    if (alpha < 0)
                        alpha = 0;
                    if (ai[0] >= 35.0)
                    {
                        ai[0] = 35f;
                        velocity.Y += 0.025f;
                    }
                    if (Main.expertMode)
                    {
                        float num1 = 18f;
                        int index = (int)Player.FindClosest(Center, 1, 1);
                        Vector2 vector2_1 = Main.player[index].Center - Center;
                        vector2_1.Normalize();
                        vector2_1 *= num1;
                        int num2 = 70;
                        velocity = (velocity * (float)(num2 - 1) + vector2_1) / num2;
                        if (velocity.Length() < 14.0)
                        {
                            velocity.Normalize();
                            Projectile projectile = this;
                            Vector2 vector2_2 = projectile.velocity * 14f;
                            projectile.velocity = vector2_2;
                        }
                        tileCollide = false;
                        if (timeLeft > 180)
                            timeLeft = 180;
                    }
                }
                else if (type == 172)
                {
                    if (ai[0] >= 17.0)
                    {
                        ai[0] = 17f;
                        velocity.Y += 0.085f;
                    }
                }
                else if (type == 117)
                {
                    if (ai[0] >= 35.0)
                    {
                        ai[0] = 35f;
                        velocity.Y += 0.06f;
                    }
                }
                else if (type == 120)
                {
                    int index = Dust.NewDust(new Vector2(position.X - velocity.X, position.Y - velocity.Y), width, height, 67, velocity.X, velocity.Y, 100, new Color(), 1.2f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity *= 0.3f;
                    if (ai[0] >= 30.0)
                    {
                        ai[0] = 30f;
                        velocity.Y += 0.05f;
                    }
                }
                else if (type == 195)
                {
                    if (ai[0] >= 20.0)
                    {
                        ai[0] = 20f;
                        velocity.Y += 0.075f;
                        tileCollide = true;
                    }
                    else
                        tileCollide = false;
                }
                else if (type == 267 || type == 477 || (type == 478 || type == 479))
                {
                    ++localAI[0];
                    if (localAI[0] > 3.0)
                        alpha = 0;
                    if (ai[0] >= 20.0)
                    {
                        ai[0] = 20f;
                        if (type != 477)
                            velocity.Y += 0.075f;
                    }
                    if (type == 479 && Main.myPlayer == owner)
                    {
                        if (ai[1] >= 0.0)
                            penetrate = -1;
                        else if (penetrate < 0)
                            penetrate = 1;
                        if (ai[1] >= 0.0)
                            ++ai[1];
                        if (ai[1] > Main.rand.Next(5, 30))
                        {
                            ai[1] = -1000f;
                            float num1 = velocity.Length();
                            Vector2 vector2_1 = velocity;
                            vector2_1.Normalize();
                            int num2 = Main.rand.Next(2, 4);
                            if (Main.rand.Next(4) == 0)
                                ++num2;
                            for (int index = 0; index < num2; ++index)
                            {
                                Vector2 vector2_2 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
                                vector2_2.Normalize();
                                Vector2 vector2_3 = vector2_2 + vector2_1 * 2f;
                                vector2_3.Normalize();
                                vector2_2 = vector2_3 * num1;
                                NewProjectile(Center.X, Center.Y, vector2_2.X, vector2_2.Y, type, damage, knockBack, owner, 0.0f, -1000f);
                            }
                        }
                    }
                    if (type == 478 && Main.myPlayer == owner)
                    {
                        ++ai[1];
                        if (ai[1] > Main.rand.Next(5, 20))
                        {
                            if (timeLeft > 40)
                                timeLeft -= 20;
                            ai[1] = 0.0f;
                            NewProjectile(Center.X, Center.Y, 0.0f, 0.0f, 480, (int)(damage * 0.8), knockBack * 0.5f, owner, 0.0f, 0.0f);
                        }
                    }
                }
                else if (type == 408)
                {
                    if (ai[0] >= 45.0)
                    {
                        ai[0] = 45f;
                        velocity.Y += 0.05f;
                    }
                }
                else if (type == 616)
                {
                    if (alpha < 170)
                    {
                        float num = 3f;
                        for (int index1 = 0; (double)index1 < num; ++index1)
                        {
                            int index2 = Dust.NewDust(position, 1, 1, 229, 0.0f, 0.0f, 0, new Color(), 1f);
                            Main.dust[index2].position = Center - velocity / num * index1;
                            Main.dust[index2].velocity *= 0.0f;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].alpha = 200;
                            Main.dust[index2].scale = 0.5f;
                        }
                    }
                    float num1 = (float)Math.Sqrt(velocity.X * velocity.X + velocity.Y * velocity.Y);
                    float num2 = localAI[0];
                    if (num2 == 0.0)
                    {
                        localAI[0] = num1;
                        num2 = num1;
                    }
                    if (alpha > 0)
                        alpha -= 25;
                    if (alpha < 0)
                        alpha = 0;
                    float num3 = position.X;
                    float num4 = position.Y;
                    float num5 = 800f;
                    bool flag2 = false;
                    int num6 = 0;
                    ++ai[0];
                    if (ai[0] > 20.0)
                    {
                        --ai[0];
                        if (ai[1] == 0.0)
                        {
                            for (int index = 0; index < 200; ++index)
                            {
                                if (Main.npc[index].CanBeChasedBy(this, false) && (ai[1] == 0.0 || ai[1] == (double)(index + 1)))
                                {
                                    float num7 = Main.npc[index].position.X + (float)(Main.npc[index].width / 2);
                                    float num8 = Main.npc[index].position.Y + (float)(Main.npc[index].height / 2);
                                    float num9 = Math.Abs(position.X + (width / 2) - num7) + Math.Abs(position.Y + (height / 2) - num8);
                                    if (num9 < num5 && Collision.CanHit(new Vector2(position.X + (width / 2), position.Y + (height / 2)), 1, 1, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height))
                                    {
                                        num5 = num9;
                                        num3 = num7;
                                        num4 = num8;
                                        flag2 = true;
                                        num6 = index;
                                    }
                                }
                            }
                            if (flag2)
                                ai[1] = (float)(num6 + 1);
                            flag2 = false;
                        }
                        if (ai[1] != 0.0)
                        {
                            int index = (int)(ai[1] - 1.0);
                            if (Main.npc[index].active && Main.npc[index].CanBeChasedBy(this, true) && (double)(Math.Abs(position.X + (width / 2) - (Main.npc[index].position.X + (float)(Main.npc[index].width / 2))) + Math.Abs(position.Y + (height / 2) - (Main.npc[index].position.Y + (float)(Main.npc[index].height / 2)))) < 1000.0)
                            {
                                flag2 = true;
                                num3 = Main.npc[index].position.X + (float)(Main.npc[index].width / 2);
                                num4 = Main.npc[index].position.Y + (float)(Main.npc[index].height / 2);
                            }
                        }
                        if (!friendly)
                            flag2 = false;
                        if (flag2)
                        {
                            float num7 = num2;
                            Vector2 vector2 = new Vector2(position.X + width * 0.5f, position.Y + height * 0.5f);
                            float num8 = num3 - vector2.X;
                            float num9 = num4 - vector2.Y;
                            float num10 = (float)Math.Sqrt(num8 * num8 + num9 * num9);
                            float num11 = num7 / num10;
                            float num12 = num8 * num11;
                            float num13 = num9 * num11;
                            int num14 = 8;
                            velocity.X = (velocity.X * (float)(num14 - 1) + num12) / num14;
                            velocity.Y = (velocity.Y * (float)(num14 - 1) + num13) / num14;
                        }
                    }
                }
                else if (type == 507 || type == 508)
                {
                    if (ai[0] > 45.0)
                    {
                        velocity.X *= 0.98f;
                        velocity.Y += 0.3f;
                    }
                }
                else if (type == 495)
                {
                    int index = Dust.NewDust(new Vector2(position.X - velocity.X, position.Y - velocity.Y), width, height, 27, velocity.X, velocity.Y, 100, new Color(), 1.2f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity *= 0.3f;
                    if (ai[0] >= 30.0)
                    {
                        ai[0] = 30f;
                        velocity.Y += 0.04f;
                    }
                }
                else if (type == 498)
                {
                    if (localAI[0] == 0.0)
                    {
                        ++localAI[0];
                        Main.PlaySound(2, (int)position.X, (int)position.Y, 17);
                    }
                    ++ai[0];
                    if (ai[0] >= 50.0)
                    {
                        velocity.X *= 0.98f;
                        velocity.Y += 0.15f;
                        rotation += direction * 0.5f;
                    }
                    else
                        rotation = (float)Math.Atan2(velocity.Y, velocity.X) + 1.57f;
                }
                else if (type == 437)
                {
                    if (ai[0] >= 12.0)
                    {
                        if (ai[0] >= 20.0)
                            Kill();
                        alpha += 30;
                    }
                }
                else if (type != 442 && type != 634 && type != 635)
                {
                    if (type == 639)
                    {
                        if (timeLeft <= MaxUpdates * 45 - 14)
                            velocity.Y += 0.1f;
                    }
                    else if (ai[0] >= 15.0)
                    {
                        ai[0] = 15f;
                        velocity.Y += 0.1f;
                    }
                }
            }
            if (type == 248)
            {
                if (velocity.X < 0.0)
                    rotation -= (float)((Math.Abs(velocity.X) + Math.Abs(velocity.Y)) * 0.0500000007450581);
                else
                    rotation += (float)((Math.Abs(velocity.X) + Math.Abs(velocity.Y)) * 0.0500000007450581);
            }
            else if (type == 270 || type == 585 || type == 601)
            {
                spriteDirection = direction;
                rotation = direction >= 0 ? (float)Math.Atan2(velocity.Y, velocity.X) : (float)Math.Atan2(-velocity.Y, -velocity.X);
            }
            else if (type == 311)
            {
                if (ai[1] != 0.0)
                    rotation += (float)(velocity.X * 0.100000001490116 + Main.rand.Next(-10, 11) * 0.025000000372529);
                else
                    rotation = (float)Math.Atan2(velocity.Y, velocity.X) + 1.57f;
            }
            else if (type == 312)
                rotation += velocity.X * 0.02f;
            else if (type == 408)
            {
                rotation = Utils.ToRotation(velocity);
                if (direction == -1)
                    rotation += 3.141593f;
            }
            else if (type == 435 || type == 459)
            {
                rotation = Utils.ToRotation(velocity);
                if (direction == -1)
                    rotation += 3.141593f;
            }
            else if (type == 436)
            {
                rotation = Utils.ToRotation(velocity);
                rotation += 3.141593f;
                if (direction == -1)
                    rotation += 3.141593f;
            }
            else if (type == 469)
            {
                if (velocity.X > 0.0)
                {
                    spriteDirection = -1;
                    rotation = (float)Math.Atan2(velocity.Y, velocity.X) + 1.57f;
                }
                else
                {
                    spriteDirection = 1;
                    rotation = (float)Math.Atan2(velocity.Y, velocity.X) + 1.57f;
                }
            }
            else if (type == 477)
            {
                if (localAI[1] < 5.0)
                {
                    rotation = (float)Math.Atan2(velocity.Y, velocity.X) + 1.57f;
                    ++localAI[1];
                }
                else
                    rotation = (float)((rotation * 2.0 + Math.Atan2(velocity.Y, velocity.X) + 1.57000005245209) / 3.0);
            }
            else if (type == 532)
                rotation += (float)(0.200000002980232 + Math.Abs(velocity.X) * 0.100000001490116);
            else if (type == 483)
                rotation += velocity.X * 0.05f;
            else if (type == 485)
            {
                velocity = (velocity * 39f + new Vector2(ai[0], ai[1])) / 40f;
                int index = Dust.NewDust(position, width, height, 6, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index].noGravity = true;
                Main.dust[index].velocity *= 0.2f;
                Main.dust[index].position = (Main.dust[index].position + Center) / 2f;
                ++frameCounter;
                if (frameCounter >= 2)
                {
                    frameCounter = 0;
                    ++frame;
                    if (frame >= 5)
                        frame = 0;
                }
                if (velocity.X < 0.0)
                {
                    spriteDirection = -1;
                    rotation = (float)Math.Atan2(-velocity.Y, -velocity.X);
                }
                else
                {
                    spriteDirection = 1;
                    rotation = (float)Math.Atan2(velocity.Y, velocity.X);
                }
            }
            else if (type == 640)
            {
                if (velocity != Vector2.Zero)
                    rotation = Utils.ToRotation(velocity) + 1.570796f;
            }
            else if (type != 344 && type != 498)
                rotation = (float)Math.Atan2(velocity.Y, velocity.X) + 1.57f;
            if (velocity.Y <= 16.0)
                return;
            velocity.Y = 16f;
        }

        private void AI_026()
        {
            if (!Main.player[owner].active)
            {
                active = false;
            }
            else
            {
                bool flag1 = false;
                bool flag2 = false;
                bool flag3 = false;
                bool flag4 = false;
                int num1 = 85;
                if (type == 324)
                    num1 = 120;
                if (type == 112)
                    num1 = 100;
                if (type == 127)
                    num1 = 50;
                if (type >= 191 && type <= 194)
                {
                    if (lavaWet)
                    {
                        ai[0] = 1f;
                        ai[1] = 0.0f;
                    }
                    num1 = 60 + 30 * minionPos;
                }
                else if (type == 266)
                    num1 = 60 + 30 * minionPos;
                if (type == 111)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].bunny = false;
                    if (Main.player[owner].bunny)
                        timeLeft = 2;
                }
                if (type == 112)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].penguin = false;
                    if (Main.player[owner].penguin)
                        timeLeft = 2;
                }
                if (type == 334)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].puppy = false;
                    if (Main.player[owner].puppy)
                        timeLeft = 2;
                }
                if (type == 353)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].grinch = false;
                    if (Main.player[owner].grinch)
                        timeLeft = 2;
                }
                if (type == 127)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].turtle = false;
                    if (Main.player[owner].turtle)
                        timeLeft = 2;
                }
                if (type == 175)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].eater = false;
                    if (Main.player[owner].eater)
                        timeLeft = 2;
                }
                if (type == 197)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].skeletron = false;
                    if (Main.player[owner].skeletron)
                        timeLeft = 2;
                }
                if (type == 198)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].hornet = false;
                    if (Main.player[owner].hornet)
                        timeLeft = 2;
                }
                if (type == 199)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].tiki = false;
                    if (Main.player[owner].tiki)
                        timeLeft = 2;
                }
                if (type == 200)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].lizard = false;
                    if (Main.player[owner].lizard)
                        timeLeft = 2;
                }
                if (type == 208)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].parrot = false;
                    if (Main.player[owner].parrot)
                        timeLeft = 2;
                }
                if (type == 209)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].truffle = false;
                    if (Main.player[owner].truffle)
                        timeLeft = 2;
                }
                if (type == 210)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].sapling = false;
                    if (Main.player[owner].sapling)
                        timeLeft = 2;
                }
                if (type == 324)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].cSapling = false;
                    if (Main.player[owner].cSapling)
                        timeLeft = 2;
                }
                if (type == 313)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].spider = false;
                    if (Main.player[owner].spider)
                        timeLeft = 2;
                }
                if (type == 314)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].squashling = false;
                    if (Main.player[owner].squashling)
                        timeLeft = 2;
                }
                if (type == 211)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].wisp = false;
                    if (Main.player[owner].wisp)
                        timeLeft = 2;
                }
                if (type == 236)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].dino = false;
                    if (Main.player[owner].dino)
                        timeLeft = 2;
                }
                if (type == 499)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].babyFaceMonster = false;
                    if (Main.player[owner].babyFaceMonster)
                        timeLeft = 2;
                }
                if (type == 266)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].slime = false;
                    if (Main.player[owner].slime)
                        timeLeft = 2;
                }
                if (type == 268)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].eyeSpring = false;
                    if (Main.player[owner].eyeSpring)
                        timeLeft = 2;
                }
                if (type == 269)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].snowman = false;
                    if (Main.player[owner].snowman)
                        timeLeft = 2;
                }
                if (type == 319)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].blackCat = false;
                    if (Main.player[owner].blackCat)
                        timeLeft = 2;
                }
                if (type == 380)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].zephyrfish = false;
                    if (Main.player[owner].zephyrfish)
                        timeLeft = 2;
                }
                if (type >= 191 && type <= 194)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].pygmy = false;
                    if (Main.player[owner].pygmy)
                        timeLeft = Main.rand.Next(2, 10);
                }
                if (type >= 390 && type <= 392)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].spiderMinion = false;
                    if (Main.player[owner].spiderMinion)
                        timeLeft = 2;
                }
                if (type == 398)
                {
                    if (Main.player[owner].dead)
                        Main.player[owner].miniMinotaur = false;
                    if (Main.player[owner].miniMinotaur)
                        timeLeft = 2;
                }
                if (type >= 191 && type <= 194 || type == 266 || type >= 390 && type <= 392)
                {
                    int num2 = 10;
                    int num3 = 40 * (minionPos + 1) * Main.player[owner].direction;
                    if (Main.player[owner].position.X + (Main.player[owner].width / 2) < position.X + (width / 2) - num2 + num3)
                        flag1 = true;
                    else if (Main.player[owner].position.X + (Main.player[owner].width / 2) > position.X + (width / 2) + num2 + num3)
                        flag2 = true;
                }
                else if (Main.player[owner].position.X + (Main.player[owner].width / 2) < position.X + (width / 2) - num1)
                    flag1 = true;
                else if (Main.player[owner].position.X + (Main.player[owner].width / 2) > position.X + (width / 2) + num1)
                    flag2 = true;
                if (type == 175)
                {
                    float num2 = 0.1f;
                    tileCollide = false;
                    int num3 = 300;
                    Vector2 vector2_1 = new Vector2(position.X + width * 0.5f, position.Y + height * 0.5f);
                    float num4 = Main.player[owner].position.X + (Main.player[owner].width / 2) - vector2_1.X;
                    float num5 = Main.player[owner].position.Y + (Main.player[owner].height / 2) - vector2_1.Y;
                    if (type == 127)
                        num5 = Main.player[owner].position.Y - vector2_1.Y;
                    float num6 = (float)Math.Sqrt(num4 * num4 + num5 * num5);
                    float num7 = 7f;
                    if (num6 < num3 && Main.player[owner].velocity.Y == 0.0 && (position.Y + (double)height <= Main.player[owner].position.Y + Main.player[owner].height && !Collision.SolidCollision(position, width, height)))
                    {
                        ai[0] = 0.0f;
                        if (velocity.Y < -6.0)
                            velocity.Y = -6f;
                    }
                    if (num6 < 150.0)
                    {
                        if (Math.Abs(velocity.X) > 2.0 || Math.Abs(velocity.Y) > 2.0)
                        {
                            Projectile projectile = this;
                            Vector2 vector2_2 = projectile.velocity * 0.99f;
                            projectile.velocity = vector2_2;
                        }
                        num2 = 0.01f;
                        if (num4 < -2.0)
                            num4 = -2f;
                        if (num4 > 2.0)
                            num4 = 2f;
                        if (num5 < -2.0)
                            num5 = -2f;
                        if (num5 > 2.0)
                            num5 = 2f;
                    }
                    else
                    {
                        if (num6 > 300.0)
                            num2 = 0.2f;
                        float num8 = num7 / num6;
                        num4 *= num8;
                        num5 *= num8;
                    }
                    if (Math.Abs(num4) > Math.Abs(num5) || num2 == 0.0500000007450581)
                    {
                        if (velocity.X < num4)
                        {
                            velocity.X += num2;
                            if (num2 > 0.0500000007450581 && velocity.X < 0.0)
                                velocity.X += num2;
                        }
                        if (velocity.X > num4)
                        {
                            velocity.X -= num2;
                            if (num2 > 0.0500000007450581 && velocity.X > 0.0)
                                velocity.X -= num2;
                        }
                    }
                    if (Math.Abs(num4) <= Math.Abs(num5) || num2 == 0.0500000007450581)
                    {
                        if (velocity.Y < num5)
                        {
                            velocity.Y += num2;
                            if (num2 > 0.0500000007450581 && velocity.Y < 0.0)
                                velocity.Y += num2;
                        }
                        if (velocity.Y > num5)
                        {
                            velocity.Y -= num2;
                            if (num2 > 0.0500000007450581 && velocity.Y > 0.0)
                                velocity.Y -= num2;
                        }
                    }
                    rotation = (float)Math.Atan2(velocity.Y, velocity.X) - 1.57f;
                    ++frameCounter;
                    if (frameCounter > 6)
                    {
                        ++frame;
                        frameCounter = 0;
                    }
                    if (frame <= 1)
                        return;
                    frame = 0;
                }
                else if (type == 197)
                {
                    float num2 = 0.1f;
                    tileCollide = false;
                    int num3 = 300;
                    Vector2 vector2_1 = new Vector2(position.X + width * 0.5f, position.Y + height * 0.5f);
                    float num4 = Main.player[owner].position.X + (Main.player[owner].width / 2) - vector2_1.X;
                    float num5 = Main.player[owner].position.Y + (Main.player[owner].height / 2) - vector2_1.Y;
                    if (type == 127)
                        num5 = Main.player[owner].position.Y - vector2_1.Y;
                    float num6 = (float)Math.Sqrt(num4 * num4 + num5 * num5);
                    float num7 = 3f;
                    if (num6 > 500.0)
                        localAI[0] = 10000f;
                    if (localAI[0] >= 10000.0)
                        num7 = 14f;
                    if (num6 < num3 && Main.player[owner].velocity.Y == 0.0 && (position.Y + (double)height <= Main.player[owner].position.Y + Main.player[owner].height && !Collision.SolidCollision(position, width, height)))
                    {
                        ai[0] = 0.0f;
                        if (velocity.Y < -6.0)
                            velocity.Y = -6f;
                    }
                    if (num6 < 150.0)
                    {
                        if (Math.Abs(velocity.X) > 2.0 || Math.Abs(velocity.Y) > 2.0)
                        {
                            Projectile projectile = this;
                            Vector2 vector2_2 = projectile.velocity * 0.99f;
                            projectile.velocity = vector2_2;
                        }
                        num2 = 0.01f;
                        if (num4 < -2.0)
                            num4 = -2f;
                        if (num4 > 2.0)
                            num4 = 2f;
                        if (num5 < -2.0)
                            num5 = -2f;
                        if (num5 > 2.0)
                            num5 = 2f;
                    }
                    else
                    {
                        if (num6 > 300.0)
                            num2 = 0.2f;
                        float num8 = num7 / num6;
                        num4 *= num8;
                        num5 *= num8;
                    }
                    if (velocity.X < num4)
                    {
                        velocity.X += num2;
                        if (num2 > 0.0500000007450581 && velocity.X < 0.0)
                            velocity.X += num2;
                    }
                    if (velocity.X > num4)
                    {
                        velocity.X -= num2;
                        if (num2 > 0.0500000007450581 && velocity.X > 0.0)
                            velocity.X -= num2;
                    }
                    if (velocity.Y < num5)
                    {
                        velocity.Y += num2;
                        if (num2 > 0.0500000007450581 && velocity.Y < 0.0)
                            velocity.Y += num2;
                    }
                    if (velocity.Y > num5)
                    {
                        velocity.Y -= num2;
                        if (num2 > 0.0500000007450581 && velocity.Y > 0.0)
                            velocity.Y -= num2;
                    }
                    localAI[0] += Main.rand.Next(10);
                    if (localAI[0] > 10000.0)
                    {
                        if (localAI[1] == 0.0)
                            localAI[1] = velocity.X >= 0.0 ? 1f : -1f;
                        rotation += 0.25f * localAI[1];
                        if (localAI[0] > 12000.0)
                            localAI[0] = 0.0f;
                    }
                    else
                    {
                        localAI[1] = 0.0f;
                        float num8 = velocity.X * 0.1f;
                        if (rotation > num8)
                        {
                            rotation -= (float)((Math.Abs(velocity.X) + Math.Abs(velocity.Y)) * 0.00999999977648258);
                            if (rotation < num8)
                                rotation = num8;
                        }
                        if (rotation < num8)
                        {
                            rotation += (float)((Math.Abs(velocity.X) + Math.Abs(velocity.Y)) * 0.00999999977648258);
                            if (rotation > num8)
                                rotation = num8;
                        }
                    }
                    if (rotation > 6.28)
                        rotation -= 6.28f;
                    if (rotation >= -6.28)
                        return;
                    rotation += 6.28f;
                }
                else if (type == 198 || type == 380)
                {
                    float num2 = 0.4f;
                    if (type == 380)
                        num2 = 0.3f;
                    tileCollide = false;
                    int num3 = 100;
                    Vector2 vector2_1 = new Vector2(position.X + width * 0.5f, position.Y + height * 0.5f);
                    float num4 = Main.player[owner].position.X + (Main.player[owner].width / 2) - vector2_1.X;
                    float num5 = Main.player[owner].position.Y + (Main.player[owner].height / 2) - vector2_1.Y + Main.rand.Next(-10, 21);
                    float num6 = num4 + Main.rand.Next(-10, 21) + (60 * -Main.player[owner].direction);
                    float num7 = num5 - 60f;
                    if (type == 127)
                        num7 = Main.player[owner].position.Y - vector2_1.Y;
                    float num8 = (float)Math.Sqrt(num6 * num6 + num7 * num7);
                    float num9 = 14f;
                    if (type == 380)
                        num9 = 6f;
                    if (num8 < num3 && Main.player[owner].velocity.Y == 0.0 && (position.Y + (double)height <= Main.player[owner].position.Y + Main.player[owner].height && !Collision.SolidCollision(position, width, height)))
                    {
                        ai[0] = 0.0f;
                        if (velocity.Y < -6.0)
                            velocity.Y = -6f;
                    }
                    if (num8 < 50.0)
                    {
                        if (Math.Abs(velocity.X) > 2.0 || Math.Abs(velocity.Y) > 2.0)
                        {
                            Projectile projectile = this;
                            Vector2 vector2_2 = projectile.velocity * 0.99f;
                            projectile.velocity = vector2_2;
                        }
                        num2 = 0.01f;
                    }
                    else
                    {
                        if (type == 380)
                        {
                            if (num8 < 100.0)
                                num2 = 0.1f;
                            if (num8 > 300.0)
                                num2 = 0.4f;
                        }
                        else if (type == 198)
                        {
                            if (num8 < 100.0)
                                num2 = 0.1f;
                            if (num8 > 300.0)
                                num2 = 0.6f;
                        }
                        float num10 = num9 / num8;
                        num6 *= num10;
                        num7 *= num10;
                    }
                    if (velocity.X < num6)
                    {
                        velocity.X += num2;
                        if (num2 > 0.0500000007450581 && velocity.X < 0.0)
                            velocity.X += num2;
                    }
                    if (velocity.X > num6)
                    {
                        velocity.X -= num2;
                        if (num2 > 0.0500000007450581 && velocity.X > 0.0)
                            velocity.X -= num2;
                    }
                    if (velocity.Y < num7)
                    {
                        velocity.Y += num2;
                        if (num2 > 0.0500000007450581 && velocity.Y < 0.0)
                            velocity.Y += num2 * 2f;
                    }
                    if (velocity.Y > num7)
                    {
                        velocity.Y -= num2;
                        if (num2 > 0.0500000007450581 && velocity.Y > 0.0)
                            velocity.Y -= num2 * 2f;
                    }
                    if (velocity.X > 0.25)
                        direction = -1;
                    else if (velocity.X < -0.25)
                        direction = 1;
                    spriteDirection = direction;
                    rotation = velocity.X * 0.05f;
                    ++frameCounter;
                    int num11 = 2;
                    if (type == 380)
                        num11 = 5;
                    if (frameCounter > num11)
                    {
                        ++frame;
                        frameCounter = 0;
                    }
                    if (frame <= 3)
                        return;
                    frame = 0;
                }
                else if (type == 211)
                {
                    float num2 = 0.2f;
                    float num3 = 5f;
                    tileCollide = false;
                    Vector2 vector2_1 = new Vector2(position.X + width * 0.5f, position.Y + height * 0.5f);
                    float num4 = Main.player[owner].position.X + (Main.player[owner].width / 2) - vector2_1.X;
                    float num5 = Main.player[owner].position.Y + Main.player[owner].gfxOffY + (Main.player[owner].height / 2) - vector2_1.Y;
                    if (Main.player[owner].controlLeft)
                        num4 -= 120f;
                    else if (Main.player[owner].controlRight)
                        num4 += 120f;
                    float num6;
                    if (Main.player[owner].controlDown)
                    {
                        num6 = num5 + 120f;
                    }
                    else
                    {
                        if (Main.player[owner].controlUp)
                            num5 -= 120f;
                        num6 = num5 - 60f;
                    }
                    float num7 = (float)Math.Sqrt(num4 * num4 + num6 * num6);
                    if (num7 > 1000.0)
                    {
                        position.X += num4;
                        position.Y += num6;
                    }
                    if (localAI[0] == 1.0)
                    {
                        if (num7 < 10.0 && Math.Abs(Main.player[owner].velocity.X) + Math.Abs(Main.player[owner].velocity.Y) < num3 && Main.player[owner].velocity.Y == 0.0)
                            localAI[0] = 0.0f;
                        float num8 = 12f;
                        if (num7 < num8)
                        {
                            velocity.X = num4;
                            velocity.Y = num6;
                        }
                        else
                        {
                            float num9 = num8 / num7;
                            velocity.X = num4 * num9;
                            velocity.Y = num6 * num9;
                        }
                        if (velocity.X > 0.5)
                            direction = -1;
                        else if (velocity.X < -0.5)
                            direction = 1;
                        spriteDirection = direction;
                        rotation -= (float)(0.200000002980232 + Math.Abs(velocity.X) * 0.025000000372529) * direction;
                        ++frameCounter;
                        if (frameCounter > 3)
                        {
                            ++frame;
                            frameCounter = 0;
                        }
                        if (frame < 5)
                            frame = 5;
                        if (frame > 9)
                            frame = 5;
                        for (int index1 = 0; index1 < 2; ++index1)
                        {
                            int index2 = Dust.NewDust(new Vector2(position.X + 3f, position.Y + 4f), 14, 14, 156, 0.0f, 0.0f, 0, new Color(), 1f);
                            Main.dust[index2].velocity *= 0.2f;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].scale = 1.25f;
                            Main.dust[index2].shader = GameShaders.Armor.GetSecondaryShader(Main.player[owner].cLight, Main.player[owner]);
                        }
                    }
                    else
                    {
                        if (num7 > 200.0)
                            localAI[0] = 1f;
                        if (velocity.X > 0.5)
                            direction = -1;
                        else if (velocity.X < -0.5)
                            direction = 1;
                        spriteDirection = direction;
                        if (num7 < 10.0)
                        {
                            velocity.X = num4;
                            velocity.Y = num6;
                            rotation = velocity.X * 0.05f;
                            if (num7 < num3)
                            {
                                Projectile projectile1 = this;
                                Vector2 vector2_2 = projectile1.position + velocity;
                                projectile1.position = vector2_2;
                                Projectile projectile2 = this;
                                Vector2 vector2_3 = projectile2.velocity * 0.0f;
                                projectile2.velocity = vector2_3;
                                num2 = 0.0f;
                            }
                            direction = -Main.player[owner].direction;
                        }
                        float num8 = num3 / num7;
                        float num9 = num4 * num8;
                        float num10 = num6 * num8;
                        if (velocity.X < num9)
                        {
                            velocity.X += num2;
                            if (velocity.X < 0.0)
                                velocity.X *= 0.99f;
                        }
                        if (velocity.X > num9)
                        {
                            velocity.X -= num2;
                            if (velocity.X > 0.0)
                                velocity.X *= 0.99f;
                        }
                        if (velocity.Y < num10)
                        {
                            velocity.Y += num2;
                            if (velocity.Y < 0.0)
                                velocity.Y *= 0.99f;
                        }
                        if (velocity.Y > num10)
                        {
                            velocity.Y -= num2;
                            if (velocity.Y > 0.0)
                                velocity.Y *= 0.99f;
                        }
                        if (velocity.X != 0.0 || velocity.Y != 0.0)
                            rotation = velocity.X * 0.05f;
                        ++frameCounter;
                        if (frameCounter > 3)
                        {
                            ++frame;
                            frameCounter = 0;
                        }
                        if (frame <= 4)
                            return;
                        frame = 0;
                    }
                }
                else if (type == 199)
                {
                    float num2 = 0.1f;
                    tileCollide = false;
                    int num3 = 200;
                    Vector2 vector2 = new Vector2(position.X + width * 0.5f, position.Y + height * 0.5f);
                    float num4 = Main.player[owner].position.X + (Main.player[owner].width / 2) - vector2.X;
                    float num5 = Main.player[owner].position.Y + (Main.player[owner].height / 2) - vector2.Y - 60f;
                    float num6 = num4 - 2f;
                    if (type == 127)
                        num5 = Main.player[owner].position.Y - vector2.Y;
                    float num7 = (float)Math.Sqrt(num6 * num6 + num5 * num5);
                    float num8 = 4f;
                    float num9 = num7;
                    if (num7 < num3 && Main.player[owner].velocity.Y == 0.0 && (position.Y + (double)height <= Main.player[owner].position.Y + Main.player[owner].height && !Collision.SolidCollision(position, width, height)))
                    {
                        ai[0] = 0.0f;
                        if (velocity.Y < -6.0)
                            velocity.Y = -6f;
                    }
                    if (num7 < 4.0)
                    {
                        velocity.X = num6;
                        velocity.Y = num5;
                        num2 = 0.0f;
                    }
                    else
                    {
                        if (num7 > 350.0)
                        {
                            num2 = 0.2f;
                            num8 = 10f;
                        }
                        float num10 = num8 / num7;
                        num6 *= num10;
                        num5 *= num10;
                    }
                    if (velocity.X < num6)
                    {
                        velocity.X += num2;
                        if (velocity.X < 0.0)
                            velocity.X += num2;
                    }
                    if (velocity.X > num6)
                    {
                        velocity.X -= num2;
                        if (velocity.X > 0.0)
                            velocity.X -= num2;
                    }
                    if (velocity.Y < num5)
                    {
                        velocity.Y += num2;
                        if (velocity.Y < 0.0)
                            velocity.Y += num2;
                    }
                    if (velocity.Y > num5)
                    {
                        velocity.Y -= num2;
                        if (velocity.Y > 0.0)
                            velocity.Y -= num2;
                    }
                    direction = -Main.player[owner].direction;
                    spriteDirection = 1;
                    rotation = velocity.Y * 0.05f * (float)-direction;
                    if (num9 >= 50.0)
                    {
                        ++frameCounter;
                        if (frameCounter <= 6)
                            return;
                        frameCounter = 0;
                        if (velocity.X < 0.0)
                        {
                            if (frame < 2)
                                ++frame;
                            if (frame <= 2)
                                return;
                            --frame;
                        }
                        else
                        {
                            if (frame < 6)
                                ++frame;
                            if (frame <= 6)
                                return;
                            --frame;
                        }
                    }
                    else
                    {
                        ++frameCounter;
                        if (frameCounter > 6)
                        {
                            frame += direction;
                            frameCounter = 0;
                        }
                        if (frame > 7)
                            frame = 0;
                        if (frame >= 0)
                            return;
                        frame = 7;
                    }
                }
                else
                {
                    if (ai[1] == 0.0)
                    {
                        int num2 = 500;
                        if (type == 127)
                            num2 = 200;
                        if (type == 208)
                            num2 = 300;
                        if (type >= 191 && type <= 194 || type == 266 || type >= 390 && type <= 392)
                        {
                            num2 += 40 * minionPos;
                            if (localAI[0] > 0.0)
                                num2 += 500;
                            if (type == 266 && localAI[0] > 0.0)
                                num2 += 100;
                            if (type >= 390 && type <= 392 && localAI[0] > 0.0)
                                num2 += 400;
                        }
                        if (Main.player[owner].rocketDelay2 > 0)
                            ai[0] = 1f;
                        Vector2 vector2 = new Vector2(position.X + width * 0.5f, position.Y + height * 0.5f);
                        float num3 = Main.player[owner].position.X + (Main.player[owner].width / 2) - vector2.X;
                        if (type >= 191)
                        {
                            int num4 = type;
                        }
                        float num5 = Main.player[owner].position.Y + (Main.player[owner].height / 2) - vector2.Y;
                        float num6 = (float)Math.Sqrt(num3 * num3 + num5 * num5);
                        if (num6 > 2000.0)
                        {
                            position.X = Main.player[owner].position.X + (Main.player[owner].width / 2) - (width / 2);
                            position.Y = Main.player[owner].position.Y + (Main.player[owner].height / 2) - (height / 2);
                        }
                        else if (num6 > num2 || Math.Abs(num5) > 300.0 && ((type < 191 || type > 194) && type != 266 && (type < 390 || type > 392) || localAI[0] <= 0.0))
                        {
                            if (type != 324)
                            {
                                if (num5 > 0.0 && velocity.Y < 0.0)
                                    velocity.Y = 0.0f;
                                if (num5 < 0.0 && velocity.Y > 0.0)
                                    velocity.Y = 0.0f;
                            }
                            ai[0] = 1f;
                        }
                    }
                    if (type == 209 && ai[0] != 0.0)
                    {
                        if (Main.player[owner].velocity.Y == 0.0 && alpha >= 100)
                        {
                            position.X = Main.player[owner].position.X + (Main.player[owner].width / 2) - (width / 2);
                            position.Y = Main.player[owner].position.Y + (float)Main.player[owner].height - height;
                            ai[0] = 0.0f;
                        }
                        else
                        {
                            velocity.X = 0.0f;
                            velocity.Y = 0.0f;
                            alpha += 5;
                            if (alpha <= 255)
                                return;
                            alpha = 255;
                        }
                    }
                    else if (ai[0] != 0.0)
                    {
                        float num2 = 0.2f;
                        int num3 = 200;
                        if (type == 127)
                            num3 = 100;
                        if (type >= 191 && type <= 194)
                        {
                            num2 = 0.5f;
                            num3 = 100;
                        }
                        tileCollide = false;
                        Vector2 vector2_1 = new Vector2(position.X + width * 0.5f, position.Y + height * 0.5f);
                        float num4 = Main.player[owner].position.X + (Main.player[owner].width / 2) - vector2_1.X;
                        if (type >= 191 && type <= 194 || type == 266 || type >= 390 && type <= 392)
                        {
                            num4 -= (float)(40 * Main.player[owner].direction);
                            float num5 = 700f;
                            if (type >= 191 && type <= 194)
                                num5 += 100f;
                            bool flag5 = false;
                            int num6 = -1;
                            for (int index = 0; index < 200; ++index)
                            {
                                if (Main.npc[index].CanBeChasedBy(this, false))
                                {
                                    float num7 = Main.npc[index].position.X + (float)(Main.npc[index].width / 2);
                                    float num8 = Main.npc[index].position.Y + (float)(Main.npc[index].height / 2);
                                    if ((double)(Math.Abs(Main.player[owner].position.X + (Main.player[owner].width / 2) - num7) + Math.Abs(Main.player[owner].position.Y + (Main.player[owner].height / 2) - num8)) < num5)
                                    {
                                        if (Collision.CanHit(position, width, height, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height))
                                            num6 = index;
                                        flag5 = true;
                                        break;
                                    }
                                }
                            }
                            if (!flag5)
                                num4 -= (float)(40 * minionPos * Main.player[owner].direction);
                            if (flag5 && num6 >= 0)
                                ai[0] = 0.0f;
                        }
                        float num9 = Main.player[owner].position.Y + (Main.player[owner].height / 2) - vector2_1.Y;
                        if (type == 127)
                            num9 = Main.player[owner].position.Y - vector2_1.Y;
                        float num10 = (float)Math.Sqrt(num4 * num4 + num9 * num9);
                        float num11 = 10f;
                        float num12 = num10;
                        if (type == 111)
                            num11 = 11f;
                        if (type == 127)
                            num11 = 9f;
                        if (type == 324)
                            num11 = 20f;
                        if (type >= 191 && type <= 194)
                        {
                            num2 = 0.4f;
                            num11 = 12f;
                            if (num11 < Math.Abs(Main.player[owner].velocity.X) + Math.Abs(Main.player[owner].velocity.Y))
                                num11 = Math.Abs(Main.player[owner].velocity.X) + Math.Abs(Main.player[owner].velocity.Y);
                        }
                        if (type == 208 && Math.Abs(Main.player[owner].velocity.X) + Math.Abs(Main.player[owner].velocity.Y) > 4.0)
                            num3 = -1;
                        if (num10 < num3 && Main.player[owner].velocity.Y == 0.0 && (position.Y + (double)height <= Main.player[owner].position.Y + Main.player[owner].height && !Collision.SolidCollision(position, width, height)))
                        {
                            ai[0] = 0.0f;
                            if (velocity.Y < -6.0)
                                velocity.Y = -6f;
                        }
                        float num13;
                        float num14;
                        if (num10 < 60.0)
                        {
                            num13 = velocity.X;
                            num14 = velocity.Y;
                        }
                        else
                        {
                            float num5 = num11 / num10;
                            num13 = num4 * num5;
                            num14 = num9 * num5;
                        }
                        if (type == 324)
                        {
                            if (num12 > 1000.0)
                            {
                                if (Math.Abs(velocity.X) + Math.Abs(velocity.Y) < num11 - 1.25)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 1.025f;
                                    projectile.velocity = vector2_2;
                                }
                                if (Math.Abs(velocity.X) + Math.Abs(velocity.Y) > num11 + 1.25)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 0.975f;
                                    projectile.velocity = vector2_2;
                                }
                            }
                            else if (num12 > 600.0)
                            {
                                if (Math.Abs(velocity.X) + Math.Abs(velocity.Y) < num11 - 1.0)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 1.05f;
                                    projectile.velocity = vector2_2;
                                }
                                if (Math.Abs(velocity.X) + Math.Abs(velocity.Y) > num11 + 1.0)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 0.95f;
                                    projectile.velocity = vector2_2;
                                }
                            }
                            else if (num12 > 400.0)
                            {
                                if (Math.Abs(velocity.X) + Math.Abs(velocity.Y) < num11 - 0.5)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 1.075f;
                                    projectile.velocity = vector2_2;
                                }
                                if (Math.Abs(velocity.X) + Math.Abs(velocity.Y) > num11 + 0.5)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 0.925f;
                                    projectile.velocity = vector2_2;
                                }
                            }
                            else
                            {
                                if (Math.Abs(velocity.X) + Math.Abs(velocity.Y) < num11 - 0.25)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 1.1f;
                                    projectile.velocity = vector2_2;
                                }
                                if (Math.Abs(velocity.X) + Math.Abs(velocity.Y) > num11 + 0.25)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 0.9f;
                                    projectile.velocity = vector2_2;
                                }
                            }
                            velocity.X = (float)((velocity.X * 34.0 + num13) / 35.0);
                            velocity.Y = (float)((velocity.Y * 34.0 + num14) / 35.0);
                        }
                        else
                        {
                            if (velocity.X < num13)
                            {
                                velocity.X += num2;
                                if (velocity.X < 0.0)
                                    velocity.X += num2 * 1.5f;
                            }
                            if (velocity.X > num13)
                            {
                                velocity.X -= num2;
                                if (velocity.X > 0.0)
                                    velocity.X -= num2 * 1.5f;
                            }
                            if (velocity.Y < num14)
                            {
                                velocity.Y += num2;
                                if (velocity.Y < 0.0)
                                    velocity.Y += num2 * 1.5f;
                            }
                            if (velocity.Y > num14)
                            {
                                velocity.Y -= num2;
                                if (velocity.Y > 0.0)
                                    velocity.Y -= num2 * 1.5f;
                            }
                        }
                        if (type == 111)
                            frame = 7;
                        if (type == 112)
                            frame = 2;
                        if (type >= 191 && type <= 194 && frame < 12)
                        {
                            frame = Main.rand.Next(12, 18);
                            frameCounter = 0;
                        }
                        if (type != 313)
                        {
                            if (velocity.X > 0.5)
                                spriteDirection = -1;
                            else if (velocity.X < -0.5)
                                spriteDirection = 1;
                        }
                        if (type == 398)
                        {
                            if (velocity.X > 0.5)
                                spriteDirection = 1;
                            else if (velocity.X < -0.5)
                                spriteDirection = -1;
                        }
                        if (type == 112)
                            rotation = spriteDirection != -1 ? (float)Math.Atan2(velocity.Y, velocity.X) + 1.57f : (float)Math.Atan2(velocity.Y, velocity.X) + 1.57f;
                        else if (type >= 390 && type <= 392)
                        {
                            int index1 = (int)(Center.X / 16.0);
                            int index2 = (int)(Center.Y / 16.0);
                            if (Main.tile[index1, index2] != null && Main.tile[index1, index2].wall > 0)
                            {
                                rotation = Utils.ToRotation(velocity) + 1.570796f;
                                frameCounter = frameCounter + (int)(Math.Abs(velocity.X) + Math.Abs(velocity.Y));
                                if (frameCounter > 5)
                                {
                                    ++frame;
                                    frameCounter = 0;
                                }
                                if (frame > 7)
                                    frame = 4;
                                if (frame < 4)
                                    frame = 7;
                            }
                            else
                            {
                                frameCounter = frameCounter + 1;
                                if (frameCounter > 2)
                                {
                                    ++frame;
                                    frameCounter = 0;
                                }
                                if (frame < 8 || frame > 10)
                                    frame = 8;
                                rotation = velocity.X * 0.1f;
                            }
                        }
                        else if (type == 334)
                        {
                            frameCounter = frameCounter + 1;
                            if (frameCounter > 1)
                            {
                                ++frame;
                                frameCounter = 0;
                            }
                            if (frame < 7 || frame > 10)
                                frame = 7;
                            rotation = velocity.X * 0.1f;
                        }
                        else if (type == 353)
                        {
                            frameCounter = frameCounter + 1;
                            if (frameCounter > 6)
                            {
                                ++frame;
                                frameCounter = 0;
                            }
                            if (frame < 10 || frame > 13)
                                frame = 10;
                            rotation = velocity.X * 0.05f;
                        }
                        else if (type == 127)
                        {
                            frameCounter = frameCounter + 3;
                            if (frameCounter > 6)
                            {
                                ++frame;
                                frameCounter = 0;
                            }
                            if (frame <= 5 || frame > 15)
                                frame = 6;
                            rotation = velocity.X * 0.1f;
                        }
                        else if (type == 269)
                        {
                            if (frame == 6)
                                frameCounter = 0;
                            else if (frame < 4 || frame > 6)
                            {
                                frameCounter = 0;
                                frame = 4;
                            }
                            else
                            {
                                frameCounter = frameCounter + 1;
                                if (frameCounter > 6)
                                {
                                    ++frame;
                                    frameCounter = 0;
                                }
                            }
                            rotation = velocity.X * 0.05f;
                        }
                        else if (type == 266)
                        {
                            frameCounter = frameCounter + 1;
                            if (frameCounter > 6)
                            {
                                ++frame;
                                frameCounter = 0;
                            }
                            if (frame < 2 || frame > 5)
                                frame = 2;
                            rotation = velocity.X * 0.1f;
                        }
                        else if (type == 324)
                        {
                            frameCounter = frameCounter + 1;
                            if (frameCounter > 1)
                            {
                                ++frame;
                                frameCounter = 0;
                            }
                            if (frame < 6 || frame > 9)
                                frame = 6;
                            rotation = (float)Math.Atan2(velocity.Y, velocity.X) + 1.58f;
                            Lighting.AddLight((int)Center.X / 16, (int)Center.Y / 16, 0.9f, 0.6f, 0.2f);
                            for (int index1 = 0; index1 < 2; ++index1)
                            {
                                int num5 = 4;
                                int index2 = Dust.NewDust(new Vector2(Center.X - num5, Center.Y - num5) - velocity * 0.0f, num5 * 2, num5 * 2, 6, 0.0f, 0.0f, 100, new Color(), 1f);
                                Main.dust[index2].scale *= (float)(1.79999995231628 + Main.rand.Next(10) * 0.100000001490116);
                                Main.dust[index2].velocity *= 0.2f;
                                if (index1 == 1)
                                    Main.dust[index2].position -= velocity * 0.5f;
                                Main.dust[index2].noGravity = true;
                                int index3 = Dust.NewDust(new Vector2(Center.X - num5, Center.Y - num5) - velocity * 0.0f, num5 * 2, num5 * 2, 31, 0.0f, 0.0f, 100, new Color(), 0.5f);
                                Main.dust[index3].fadeIn = (float)(1.0 + Main.rand.Next(5) * 0.100000001490116);
                                Main.dust[index3].velocity *= 0.05f;
                                if (index1 == 1)
                                    Main.dust[index3].position -= velocity * 0.5f;
                            }
                        }
                        else if (type == 268)
                        {
                            frameCounter = frameCounter + 1;
                            if (frameCounter > 4)
                            {
                                ++frame;
                                frameCounter = 0;
                            }
                            if (frame < 6 || frame > 7)
                                frame = 6;
                            rotation = (float)Math.Atan2(velocity.Y, velocity.X) + 1.58f;
                        }
                        else if (type == 200)
                        {
                            frameCounter = frameCounter + 3;
                            if (frameCounter > 6)
                            {
                                ++frame;
                                frameCounter = 0;
                            }
                            if (frame <= 5 || frame > 9)
                                frame = 6;
                            rotation = velocity.X * 0.1f;
                        }
                        else if (type == 208)
                        {
                            rotation = velocity.X * 0.075f;
                            ++frameCounter;
                            if (frameCounter > 6)
                            {
                                ++frame;
                                frameCounter = 0;
                            }
                            if (frame > 4)
                                frame = 1;
                            if (frame < 1)
                                frame = 1;
                        }
                        else if (type == 236)
                        {
                            rotation = velocity.Y * 0.05f * direction;
                            if (velocity.Y < 0.0)
                                frameCounter += 2;
                            else
                                ++frameCounter;
                            if (frameCounter >= 6)
                            {
                                ++frame;
                                frameCounter = 0;
                            }
                            if (frame > 12)
                                frame = 9;
                            if (frame < 9)
                                frame = 9;
                        }
                        else if (type == 499)
                        {
                            rotation = velocity.Y * 0.05f * direction;
                            if (velocity.Y < 0.0)
                                frameCounter += 2;
                            else
                                ++frameCounter;
                            if (frameCounter >= 6)
                            {
                                ++frame;
                                frameCounter = 0;
                            }
                            if (frame >= 12)
                                frame = 8;
                            if (frame < 8)
                                frame = 8;
                        }
                        else if (type == 314)
                        {
                            rotation = (float)Math.Atan2(velocity.Y, velocity.X) + 1.58f;
                            ++frameCounter;
                            if (frameCounter >= 3)
                            {
                                ++frame;
                                frameCounter = 0;
                            }
                            if (frame > 12)
                                frame = 7;
                            if (frame < 7)
                                frame = 7;
                        }
                        else if (type == 319)
                        {
                            rotation = velocity.X * 0.05f;
                            ++frameCounter;
                            if (frameCounter >= 6)
                            {
                                ++frame;
                                frameCounter = 0;
                            }
                            if (frame > 10)
                                frame = 6;
                            if (frame < 6)
                                frame = 6;
                        }
                        else if (type == 210)
                        {
                            rotation = (float)Math.Atan2(velocity.Y, velocity.X) + 1.58f;
                            frameCounter += 3;
                            if (frameCounter > 6)
                            {
                                ++frame;
                                frameCounter = 0;
                            }
                            if (frame > 11)
                                frame = 7;
                            if (frame < 7)
                                frame = 7;
                        }
                        else if (type == 313)
                        {
                            position.Y += height;
                            height = 54;
                            position.Y -= height;
                            position.X += (width / 2);
                            width = 54;
                            position.X -= (width / 2);
                            rotation += velocity.X * 0.01f;
                            frameCounter = 0;
                            frame = 11;
                        }
                        else if (type == 398)
                        {
                            frameCounter = frameCounter + 1;
                            if (frameCounter > 1)
                            {
                                ++frame;
                                frameCounter = 0;
                            }
                            if (frame < 6 || frame > 9)
                                frame = 6;
                            rotation = velocity.X * 0.1f;
                        }
                        else
                            rotation = spriteDirection != -1 ? (float)Math.Atan2(velocity.Y, velocity.X) + 3.14f : (float)Math.Atan2(velocity.Y, velocity.X);
                        if (type >= 191 && type <= 194 || (type == 499 || type == 398) || (type == 390 || type == 391 || (type == 392 || type == 127)) || (type == 200 || type == 208 || (type == 210 || type == 236) || (type == 266 || type == 268 || (type == 269 || type == 313))) || (type == 314 || type == 319 || (type == 324 || type == 334) || type == 353))
                            return;
                        int index4 = Dust.NewDust(new Vector2((float)(position.X + (width / 2) - 4.0), (float)(position.Y + (height / 2) - 4.0)) - velocity, 8, 8, 16, (float)(-velocity.X * 0.5), velocity.Y * 0.5f, 50, new Color(), 1.7f);
                        Main.dust[index4].velocity.X = Main.dust[index4].velocity.X * 0.2f;
                        Main.dust[index4].velocity.Y = Main.dust[index4].velocity.Y * 0.2f;
                        Main.dust[index4].noGravity = true;
                    }
                    else
                    {
                        if (type >= 191 && type <= 194)
                        {
                            float num2 = (40 * minionPos);
                            int num3 = 30;
                            int num4 = 60;
                            --localAI[0];
                            if (localAI[0] < 0.0)
                                localAI[0] = 0.0f;
                            if (ai[1] > 0.0)
                            {
                                --ai[1];
                            }
                            else
                            {
                                float num5 = position.X;
                                float num6 = position.Y;
                                float num7 = 100000f;
                                float num8 = num7;
                                int num9 = -1;
                                for (int index = 0; index < 200; ++index)
                                {
                                    if (Main.npc[index].CanBeChasedBy(this, false))
                                    {
                                        float num10 = Main.npc[index].position.X + (Main.npc[index].width / 2);
                                        float num11 = Main.npc[index].position.Y + (Main.npc[index].height / 2);
                                        float num12 = Math.Abs(position.X + (width / 2) - num10) + Math.Abs(position.Y + (height / 2) - num11);
                                        if (num12 < num7)
                                        {
                                            if (num9 == -1 && num12 <= num8)
                                            {
                                                num8 = num12;
                                                num5 = num10;
                                                num6 = num11;
                                            }
                                            if (Collision.CanHit(position, width, height, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height))
                                            {
                                                num7 = num12;
                                                num5 = num10;
                                                num6 = num11;
                                                num9 = index;
                                            }
                                        }
                                    }
                                }
                                if (num9 == -1 && num8 < num7)
                                    num7 = num8;
                                float num13 = 400f;
                                if (position.Y > Main.worldSurface * 16.0)
                                    num13 = 200f;
                                if (num7 < num13 + num2 && num9 == -1)
                                {
                                    float num10 = num5 - (position.X + (width / 2));
                                    if (num10 < -5.0)
                                    {
                                        flag1 = true;
                                        flag2 = false;
                                    }
                                    else if (num10 > 5.0)
                                    {
                                        flag2 = true;
                                        flag1 = false;
                                    }
                                }
                                else if (num9 >= 0 && num7 < 800.0 + num2)
                                {
                                    localAI[0] = num4;
                                    float num10 = num5 - (position.X + (width / 2));
                                    if (num10 > 300.0 || num10 < -300.0)
                                    {
                                        if (num10 < -50.0)
                                        {
                                            flag1 = true;
                                            flag2 = false;
                                        }
                                        else if (num10 > 50.0)
                                        {
                                            flag2 = true;
                                            flag1 = false;
                                        }
                                    }
                                    else if (owner == Main.myPlayer)
                                    {
                                        ai[1] = num3;
                                        float num11 = 12f;
                                        Vector2 vector2 = new Vector2(position.X + width * 0.5f, (float)(position.Y + (height / 2) - 8.0));
                                        float num12 = num5 - vector2.X + Main.rand.Next(-20, 21);
                                        float num14 = (float)((double)(Math.Abs(num12) * 0.1f) * Main.rand.Next(0, 100) * (1.0 / 1000.0));
                                        float num15 = num6 - vector2.Y + Main.rand.Next(-20, 21) - num14;
                                        float num16 = (float)Math.Sqrt(num12 * num12 + num15 * num15);
                                        float num17 = num11 / num16;
                                        float SpeedX = num12 * num17;
                                        float SpeedY = num15 * num17;
                                        int Damage = damage;
                                        int Type = 195;
                                        int index = NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, knockBack, Main.myPlayer, 0.0f, 0.0f);
                                        Main.projectile[index].timeLeft = 300;
                                        if (SpeedX < 0.0)
                                            direction = -1;
                                        if (SpeedX > 0.0)
                                            direction = 1;
                                        netUpdate = true;
                                    }
                                }
                            }
                        }
                        bool flag5 = false;
                        Vector2 vector2_1 = Vector2.Zero;
                        bool flag6 = false;
                        if (type == 266 || type >= 390 && type <= 392)
                        {
                            float num2 = (40 * minionPos);
                            int num3 = 60;
                            --localAI[0];
                            if (localAI[0] < 0.0)
                                localAI[0] = 0.0f;
                            if (ai[1] > 0.0)
                            {
                                --ai[1];
                            }
                            else
                            {
                                float x = position.X;
                                float y = position.Y;
                                float num4 = 100000f;
                                float num5 = num4;
                                int index1 = -1;
                                for (int index2 = 0; index2 < 200; ++index2)
                                {
                                    if (Main.npc[index2].CanBeChasedBy(this, false))
                                    {
                                        float num6 = Main.npc[index2].position.X + (Main.npc[index2].width / 2);
                                        float num7 = Main.npc[index2].position.Y + (Main.npc[index2].height / 2);
                                        float num8 = Math.Abs(position.X + (width / 2) - num6) + Math.Abs(position.Y + (height / 2) - num7);
                                        if (num8 < num4)
                                        {
                                            if (index1 == -1 && num8 <= num5)
                                            {
                                                num5 = num8;
                                                x = num6;
                                                y = num7;
                                            }
                                            if (Collision.CanHit(position, width, height, Main.npc[index2].position, Main.npc[index2].width, Main.npc[index2].height))
                                            {
                                                num4 = num8;
                                                x = num6;
                                                y = num7;
                                                index1 = index2;
                                            }
                                        }
                                    }
                                }
                                if (type >= 390 && type <= 392 && !Collision.SolidCollision(position, width, height))
                                    tileCollide = true;
                                if (index1 == -1 && num5 < num4)
                                    num4 = num5;
                                else if (index1 >= 0)
                                {
                                    flag5 = true;
                                    vector2_1 = new Vector2(x, y) - Center;
                                    if (type >= 390 && type <= 392)
                                    {
                                        if (Main.npc[index1].position.Y > position.Y + (double)height)
                                        {
                                            int index2 = (int)(Center.X / 16.0);
                                            int index3 = (int)((position.Y + (double)height + 1.0) / 16.0);
                                            if (Main.tile[index2, index3] != null && Main.tile[index2, index3].active() && Main.tile[index2, index3].type == 19)
                                                tileCollide = false;
                                        }
                                        Rectangle rectangle1 = new Rectangle((int)position.X, (int)position.Y, width, height);
                                        Rectangle rectangle2 = new Rectangle((int)Main.npc[index1].position.X, (int)Main.npc[index1].position.Y, Main.npc[index1].width, Main.npc[index1].height);
                                        int num6 = 10;
                                        rectangle2.X -= num6;
                                        rectangle2.Y -= num6;
                                        rectangle2.Width += num6 * 2;
                                        rectangle2.Height += num6 * 2;
                                        if (rectangle1.Intersects(rectangle2))
                                        {
                                            flag6 = true;
                                            Vector2 v = Main.npc[index1].Center - Center;
                                            if (velocity.Y > 0.0 && v.Y < 0.0)
                                                velocity.Y *= 0.5f;
                                            if (velocity.Y < 0.0 && v.Y > 0.0)
                                                velocity.Y *= 0.5f;
                                            if (velocity.X > 0.0 && v.X < 0.0)
                                                velocity.X *= 0.5f;
                                            if (velocity.X < 0.0 && v.X > 0.0)
                                                velocity.X *= 0.5f;
                                            if (v.Length() > 14.0)
                                            {
                                                v.Normalize();
                                                v *= 14f;
                                            }
                                            rotation = (float)((rotation * 5.0 + Utils.ToRotation(v) + 1.57079637050629) / 6.0);
                                            velocity = (velocity * 9f + v) / 10f;
                                            for (int index2 = 0; index2 < 1000; ++index2)
                                            {
                                                if (whoAmI != index2 && owner == Main.projectile[index2].owner && (Main.projectile[index2].type >= 390 && Main.projectile[index2].type <= 392) && (Main.projectile[index2].Center - Center).Length() < 15.0)
                                                {
                                                    float num7 = 0.5f;
                                                    if (Center.Y > Main.projectile[index2].Center.Y)
                                                    {
                                                        Main.projectile[index2].velocity.Y -= num7;
                                                        velocity.Y += num7;
                                                    }
                                                    else
                                                    {
                                                        Main.projectile[index2].velocity.Y += num7;
                                                        velocity.Y -= num7;
                                                    }
                                                    if (Center.X > Main.projectile[index2].Center.X)
                                                    {
                                                        velocity.X += num7;
                                                        Main.projectile[index2].velocity.X -= num7;
                                                    }
                                                    else
                                                    {
                                                        velocity.X -= num7;
                                                        Main.projectile[index2].velocity.Y += num7;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                float num9 = 300f;
                                if (position.Y > Main.worldSurface * 16.0)
                                    num9 = 150f;
                                if (type >= 390 && type <= 392)
                                {
                                    num9 = 500f;
                                    if (position.Y > Main.worldSurface * 16.0)
                                        num9 = 250f;
                                }
                                if (num4 < num9 + num2 && index1 == -1)
                                {
                                    float num6 = x - (position.X + (width / 2));
                                    if (num6 < -5.0)
                                    {
                                        flag1 = true;
                                        flag2 = false;
                                    }
                                    else if (num6 > 5.0)
                                    {
                                        flag2 = true;
                                        flag1 = false;
                                    }
                                }
                                bool flag7 = false;
                                if (type >= 390 && type <= 392 && localAI[1] > 0.0)
                                {
                                    flag7 = true;
                                    --localAI[1];
                                }
                                if (index1 >= 0 && num4 < 800.0 + num2)
                                {
                                    friendly = true;
                                    localAI[0] = num3;
                                    float num6 = x - (position.X + (width / 2));
                                    if (num6 < -10.0)
                                    {
                                        flag1 = true;
                                        flag2 = false;
                                    }
                                    else if (num6 > 10.0)
                                    {
                                        flag2 = true;
                                        flag1 = false;
                                    }
                                    if (y < Center.Y - 100.0 && num6 > -50.0 && (num6 < 50.0 && velocity.Y == 0.0))
                                    {
                                        float num7 = Math.Abs(y - Center.Y);
                                        if (num7 < 120.0)
                                            velocity.Y = -10f;
                                        else if (num7 < 210.0)
                                            velocity.Y = -13f;
                                        else if (num7 < 270.0)
                                            velocity.Y = -15f;
                                        else if (num7 < 310.0)
                                            velocity.Y = -17f;
                                        else if (num7 < 380.0)
                                            velocity.Y = -18f;
                                    }
                                    if (flag7)
                                    {
                                        friendly = false;
                                        if (velocity.X < 0.0)
                                            flag1 = true;
                                        else if (velocity.X > 0.0)
                                            flag2 = true;
                                    }
                                }
                                else
                                    friendly = false;
                            }
                        }
                        if (ai[1] != 0.0)
                        {
                            flag1 = false;
                            flag2 = false;
                        }
                        else if (type >= 191 && type <= 194 && localAI[0] == 0.0)
                            direction = Main.player[owner].direction;
                        else if (type >= 390 && type <= 392)
                        {
                            int index1 = (int)(Center.X / 16.0);
                            int index2 = (int)(Center.Y / 16.0);
                            if (Main.tile[index1, index2] != null && Main.tile[index1, index2].wall > 0)
                                flag1 = flag2 = false;
                        }
                        if (type == 127)
                        {
                            if (rotation > -0.1 && rotation < 0.1)
                                rotation = 0.0f;
                            else if (rotation < 0.0)
                                rotation += 0.1f;
                            else
                                rotation -= 0.1f;
                        }
                        else if (type != 313 && !flag6)
                            rotation = 0.0f;
                        if (type < 390 || type > 392)
                            tileCollide = true;
                        float num18 = 0.08f;
                        float num19 = 6.5f;
                        if (type == 127)
                        {
                            num19 = 2f;
                            num18 = 0.04f;
                        }
                        if (type == 112)
                        {
                            num19 = 6f;
                            num18 = 0.06f;
                        }
                        if (type == 334)
                        {
                            num19 = 8f;
                            num18 = 0.08f;
                        }
                        if (type == 268)
                        {
                            num19 = 8f;
                            num18 = 0.4f;
                        }
                        if (type == 324)
                        {
                            num18 = 0.1f;
                            num19 = 3f;
                        }
                        if (type >= 191 && type <= 194 || type == 266 || type >= 390 && type <= 392)
                        {
                            num19 = 6f;
                            num18 = 0.2f;
                            if (num19 < Math.Abs(Main.player[owner].velocity.X) + Math.Abs(Main.player[owner].velocity.Y))
                            {
                                num19 = Math.Abs(Main.player[owner].velocity.X) + Math.Abs(Main.player[owner].velocity.Y);
                                num18 = 0.3f;
                            }
                        }
                        if (type >= 390 && type <= 392)
                            num18 *= 2f;
                        if (flag1)
                        {
                            if (velocity.X > -3.5)
                                velocity.X -= num18;
                            else
                                velocity.X -= num18 * 0.25f;
                        }
                        else if (flag2)
                        {
                            if (velocity.X < 3.5)
                                velocity.X += num18;
                            else
                                velocity.X += num18 * 0.25f;
                        }
                        else
                        {
                            velocity.X *= 0.9f;
                            if (velocity.X >= -num18 && velocity.X <= num18)
                                velocity.X = 0.0f;
                        }
                        if (type == 208)
                        {
                            velocity.X *= 0.95f;
                            if (velocity.X > -0.1 && velocity.X < 0.1)
                                velocity.X = 0.0f;
                            flag1 = false;
                            flag2 = false;
                        }
                        if (flag1 || flag2)
                        {
                            int num2 = (int)(position.X + (width / 2)) / 16;
                            int j = (int)(position.Y + (height / 2)) / 16;
                            if (type == 236)
                                num2 += direction;
                            if (flag1)
                                --num2;
                            if (flag2)
                                ++num2;
                            if (WorldGen.SolidTile(num2 + (int)velocity.X, j))
                                flag4 = true;
                        }
                        if (Main.player[owner].position.Y + Main.player[owner].height - 8.0 > position.Y + (double)height)
                            flag3 = true;
                        if (type == 268 && frameCounter < 10)
                            flag4 = false;
                        Collision.StepUp(ref position, ref velocity, width, height, ref stepSpeed, ref gfxOffY, 1, false, 0);
                        if (velocity.Y == 0.0 || type == 200)
                        {
                            if (!flag3 && (velocity.X < 0.0 || velocity.X > 0.0))
                            {
                                int i = (int)(position.X + (width / 2)) / 16;
                                int j = (int)(position.Y + (height / 2)) / 16 + 1;
                                if (flag1)
                                    --i;
                                if (flag2)
                                    ++i;
                                WorldGen.SolidTile(i, j);
                            }
                            if (flag4)
                            {
                                int i1 = (int)(position.X + (width / 2)) / 16;
                                int j = (int)(position.Y + (double)height) / 16 + 1;
                                if (WorldGen.SolidTile(i1, j) || Main.tile[i1, j].halfBrick() || (Main.tile[i1, j].slope() > 0 || type == 200))
                                {
                                    if (type == 200)
                                    {
                                        velocity.Y = -3.1f;
                                    }
                                    else
                                    {
                                        try
                                        {
                                            int num2 = (int)(position.X + (width / 2)) / 16;
                                            int num3 = (int)(position.Y + (height / 2)) / 16;
                                            if (flag1)
                                                --num2;
                                            if (flag2)
                                                ++num2;
                                            int i2 = num2 + (int)velocity.X;
                                            if (!WorldGen.SolidTile(i2, num3 - 1) && !WorldGen.SolidTile(i2, num3 - 2))
                                                velocity.Y = -5.1f;
                                            else if (!WorldGen.SolidTile(i2, num3 - 2))
                                                velocity.Y = -7.1f;
                                            else if (WorldGen.SolidTile(i2, num3 - 5))
                                                velocity.Y = -11.1f;
                                            else if (WorldGen.SolidTile(i2, num3 - 4))
                                                velocity.Y = -10.1f;
                                            else
                                                velocity.Y = -9.1f;
                                        }
                                        catch
                                        {
                                            velocity.Y = -9.1f;
                                        }
                                    }
                                    if (type == 127)
                                        ai[0] = 1f;
                                }
                            }
                            else if (type == 266 && (flag1 || flag2))
                                velocity.Y -= 6f;
                        }
                        if (velocity.X > num19)
                            velocity.X = num19;
                        if (velocity.X < -num19)
                            velocity.X = -num19;
                        if (velocity.X < 0.0)
                            direction = -1;
                        if (velocity.X > 0.0)
                            direction = 1;
                        if (velocity.X > num18 && flag2)
                            direction = 1;
                        if (velocity.X < -num18 && flag1)
                            direction = -1;
                        if (type != 313)
                        {
                            if (direction == -1)
                                spriteDirection = 1;
                            if (direction == 1)
                                spriteDirection = -1;
                        }
                        if (type == 398)
                            spriteDirection = direction;
                        if (type >= 191 && type <= 194)
                        {
                            if (ai[1] > 0.0)
                            {
                                if (localAI[1] == 0.0)
                                {
                                    localAI[1] = 1f;
                                    frame = 1;
                                }
                                if (frame != 0)
                                {
                                    ++frameCounter;
                                    if (frameCounter > 4)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame == 4)
                                        frame = 0;
                                }
                            }
                            else if (velocity.Y == 0.0)
                            {
                                localAI[1] = 0.0f;
                                if (velocity.X == 0.0)
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                                else if (velocity.X < -0.8 || velocity.X > 0.8)
                                {
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                    ++frameCounter;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame < 5)
                                        frame = 5;
                                    if (frame >= 11)
                                        frame = 5;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else if (velocity.Y < 0.0)
                            {
                                frameCounter = 0;
                                frame = 4;
                            }
                            else if (velocity.Y > 0.0)
                            {
                                frameCounter = 0;
                                frame = 4;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y > 10.0)
                                velocity.Y = 10f;
                            double num2 = velocity.Y;
                        }
                        else if (type == 268)
                        {
                            if (velocity.Y == 0.0)
                            {
                                if (frame > 5)
                                    frameCounter = 0;
                                if (velocity.X == 0.0)
                                {
                                    int num2 = 3;
                                    ++frameCounter;
                                    if (frameCounter < num2)
                                        frame = 0;
                                    else if (frameCounter < num2 * 2)
                                        frame = 1;
                                    else if (frameCounter < num2 * 3)
                                        frame = 2;
                                    else if (frameCounter < num2 * 4)
                                        frame = 3;
                                    else
                                        frameCounter = num2 * 4;
                                }
                                else
                                {
                                    velocity.X *= 0.8f;
                                    ++frameCounter;
                                    int num2 = 3;
                                    if (frameCounter < num2)
                                        frame = 0;
                                    else if (frameCounter < num2 * 2)
                                        frame = 1;
                                    else if (frameCounter < num2 * 3)
                                        frame = 2;
                                    else if (frameCounter < num2 * 4)
                                        frame = 3;
                                    else if (flag1 || flag2)
                                    {
                                        velocity.X *= 2f;
                                        frame = 4;
                                        velocity.Y = -6.1f;
                                        frameCounter = 0;
                                        for (int index1 = 0; index1 < 4; ++index1)
                                        {
                                            int index2 = Dust.NewDust(new Vector2(position.X, (float)(position.Y + (double)height - 2.0)), width, 4, 5, 0.0f, 0.0f, 0, new Color(), 1f);
                                            Main.dust[index2].velocity += velocity;
                                            Main.dust[index2].velocity *= 0.4f;
                                        }
                                    }
                                    else
                                        frameCounter = num2 * 4;
                                }
                            }
                            else if (velocity.Y < 0.0)
                            {
                                frameCounter = 0;
                                frame = 5;
                            }
                            else
                            {
                                frame = 4;
                                frameCounter = 3;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y <= 10.0)
                                return;
                            velocity.Y = 10f;
                        }
                        else if (type == 269)
                        {
                            if (velocity.Y >= 0.0 && velocity.Y <= 0.8)
                            {
                                if (velocity.X == 0.0)
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                                else if (velocity.X < -0.8 || velocity.X > 0.8)
                                {
                                    int index = Dust.NewDust(new Vector2(position.X, (float)(position.Y + (double)height - 2.0)), width, 6, 76, 0.0f, 0.0f, 0, new Color(), 1f);
                                    Main.dust[index].noGravity = true;
                                    Main.dust[index].velocity *= 0.3f;
                                    Main.dust[index].noLight = true;
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                    ++frameCounter;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame > 3)
                                        frame = 0;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else
                            {
                                frameCounter = 0;
                                frame = 2;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y <= 10.0)
                                return;
                            velocity.Y = 10f;
                        }
                        else if (type == 313)
                        {
                            int index1 = (int)(Center.X / 16.0);
                            int index2 = (int)(Center.Y / 16.0);
                            if (Main.tile[index1, index2] != null && Main.tile[index1, index2].wall > 0)
                            {
                                position.Y += height;
                                height = 34;
                                position.Y -= height;
                                position.X += (width / 2);
                                width = 34;
                                position.X -= (width / 2);
                                float num2 = 4f;
                                Vector2 vector2_2 = new Vector2(position.X + width * 0.5f, position.Y + height * 0.5f);
                                float num3 = Main.player[owner].Center.X - vector2_2.X;
                                float num4 = Main.player[owner].Center.Y - vector2_2.Y;
                                float num5 = (float)Math.Sqrt(num3 * num3 + num4 * num4);
                                float num6 = num2 / num5;
                                float num7 = num3 * num6;
                                float num8 = num4 * num6;
                                if (num5 < 120.0)
                                {
                                    velocity.X *= 0.9f;
                                    velocity.Y *= 0.9f;
                                    if (Math.Abs(velocity.X) + Math.Abs(velocity.Y) < 0.1)
                                    {
                                        Projectile projectile = this;
                                        Vector2 vector2_3 = projectile.velocity * 0.0f;
                                        projectile.velocity = vector2_3;
                                    }
                                }
                                else
                                {
                                    velocity.X = (float)((velocity.X * 9.0 + num7) / 10.0);
                                    velocity.Y = (float)((velocity.Y * 9.0 + num8) / 10.0);
                                }
                                if (num5 >= 120.0)
                                {
                                    spriteDirection = direction;
                                    rotation = (float)Math.Atan2(velocity.Y * (double)-direction, velocity.X * (double)-direction);
                                }
                                frameCounter = frameCounter + (int)(Math.Abs(velocity.X) + Math.Abs(velocity.Y));
                                if (frameCounter > 6)
                                {
                                    ++frame;
                                    frameCounter = 0;
                                }
                                if (frame > 10)
                                    frame = 5;
                                if (frame >= 5)
                                    return;
                                frame = 10;
                            }
                            else
                            {
                                rotation = 0.0f;
                                if (direction == -1)
                                    spriteDirection = 1;
                                if (direction == 1)
                                    spriteDirection = -1;
                                position.Y += height;
                                height = 30;
                                position.Y -= height;
                                position.X += (width / 2);
                                width = 30;
                                position.X -= (width / 2);
                                if (velocity.Y >= 0.0 && velocity.Y <= 0.8)
                                {
                                    if (velocity.X == 0.0)
                                    {
                                        frame = 0;
                                        frameCounter = 0;
                                    }
                                    else if (velocity.X < -0.8 || velocity.X > 0.8)
                                    {
                                        frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                        ++frameCounter;
                                        if (frameCounter > 6)
                                        {
                                            ++frame;
                                            frameCounter = 0;
                                        }
                                        if (frame > 3)
                                            frame = 0;
                                    }
                                    else
                                    {
                                        frame = 0;
                                        frameCounter = 0;
                                    }
                                }
                                else
                                {
                                    frameCounter = 0;
                                    frame = 4;
                                }
                                velocity.Y += 0.4f;
                                if (velocity.Y <= 10.0)
                                    return;
                                velocity.Y = 10f;
                            }
                        }
                        else if (type >= 390 && type <= 392)
                        {
                            int index1 = (int)(Center.X / 16.0);
                            int index2 = (int)(Center.Y / 16.0);
                            if (Main.tile[index1, index2] != null && Main.tile[index1, index2].wall > 0)
                            {
                                position.Y += height;
                                height = 34;
                                position.Y -= height;
                                position.X += (width / 2);
                                width = 34;
                                position.X -= (width / 2);
                                float num2 = 9f;
                                float num3 = (float)(40 * (minionPos + 1));
                                Vector2 v = Main.player[owner].Center - Center;
                                if (flag5)
                                {
                                    v = vector2_1;
                                    num3 = 10f;
                                }
                                else if (!Collision.CanHitLine(Center, 1, 1, Main.player[owner].Center, 1, 1))
                                    ai[0] = 1f;
                                if ((double)v.Length() < num3)
                                {
                                    Projectile projectile1 = this;
                                    Vector2 vector2_2 = projectile1.velocity * 0.9f;
                                    projectile1.velocity = vector2_2;
                                    if (Math.Abs(velocity.X) + Math.Abs(velocity.Y) < 0.1)
                                    {
                                        Projectile projectile2 = this;
                                        Vector2 vector2_3 = projectile2.velocity * 0.0f;
                                        projectile2.velocity = vector2_3;
                                    }
                                }
                                else if (v.Length() < 800.0 || !flag5)
                                    velocity = (velocity * 9f + Vector2.Normalize(v) * num2) / 10f;
                                if ((double)v.Length() >= num3)
                                {
                                    spriteDirection = direction;
                                    rotation = Utils.ToRotation(velocity) + 1.570796f;
                                }
                                else
                                    rotation = Utils.ToRotation(v) + 1.570796f;
                                frameCounter = frameCounter + (int)(Math.Abs(velocity.X) + Math.Abs(velocity.Y));
                                if (frameCounter > 5)
                                {
                                    ++frame;
                                    frameCounter = 0;
                                }
                                if (frame > 7)
                                    frame = 4;
                                if (frame >= 4)
                                    return;
                                frame = 7;
                            }
                            else
                            {
                                if (!flag6)
                                    rotation = 0.0f;
                                if (direction == -1)
                                    spriteDirection = 1;
                                if (direction == 1)
                                    spriteDirection = -1;
                                position.Y += height;
                                height = 30;
                                position.Y -= height;
                                position.X += (width / 2);
                                width = 30;
                                position.X -= (width / 2);
                                if (!flag5 && !Collision.CanHitLine(Center, 1, 1, Main.player[owner].Center, 1, 1))
                                    ai[0] = 1f;
                                if (!flag6 && frame >= 4 && frame <= 7)
                                {
                                    Vector2 vector2_2 = Main.player[owner].Center - Center;
                                    if (flag5)
                                        vector2_2 = vector2_1;
                                    float num2 = -vector2_2.Y;
                                    if (vector2_2.Y <= 0.0)
                                    {
                                        if (num2 < 120.0)
                                            velocity.Y = -10f;
                                        else if (num2 < 210.0)
                                            velocity.Y = -13f;
                                        else if (num2 < 270.0)
                                            velocity.Y = -15f;
                                        else if (num2 < 310.0)
                                            velocity.Y = -17f;
                                        else if (num2 < 380.0)
                                            velocity.Y = -18f;
                                    }
                                }
                                if (flag6)
                                {
                                    ++frameCounter;
                                    if (frameCounter > 3)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame >= 8)
                                        frame = 4;
                                    if (frame <= 3)
                                        frame = 7;
                                }
                                else if (velocity.Y >= 0.0 && velocity.Y <= 0.8)
                                {
                                    if (velocity.X == 0.0)
                                    {
                                        frame = 0;
                                        frameCounter = 0;
                                    }
                                    else if (velocity.X < -0.8 || velocity.X > 0.8)
                                    {
                                        frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                        ++frameCounter;
                                        if (frameCounter > 5)
                                        {
                                            ++frame;
                                            frameCounter = 0;
                                        }
                                        if (frame > 2)
                                            frame = 0;
                                    }
                                    else
                                    {
                                        frame = 0;
                                        frameCounter = 0;
                                    }
                                }
                                else
                                {
                                    frameCounter = 0;
                                    frame = 3;
                                }
                                velocity.Y += 0.4f;
                                if (velocity.Y <= 10.0)
                                    return;
                                velocity.Y = 10f;
                            }
                        }
                        else if (type == 314)
                        {
                            if (velocity.Y >= 0.0 && velocity.Y <= 0.8)
                            {
                                if (velocity.X == 0.0)
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                                else if (velocity.X < -0.8 || velocity.X > 0.8)
                                {
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                    ++frameCounter;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame > 6)
                                        frame = 1;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else
                            {
                                frameCounter = 0;
                                frame = 7;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y <= 10.0)
                                return;
                            velocity.Y = 10f;
                        }
                        else if (type == 319)
                        {
                            if (velocity.Y >= 0.0 && velocity.Y <= 0.8)
                            {
                                if (velocity.X == 0.0)
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                                else if (velocity.X < -0.8 || velocity.X > 0.8)
                                {
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                    ++frameCounter;
                                    if (frameCounter > 8)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame > 5)
                                        frame = 2;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else
                            {
                                frameCounter = 0;
                                frame = 1;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y <= 10.0)
                                return;
                            velocity.Y = 10f;
                        }
                        else if (type == 236)
                        {
                            if (velocity.Y >= 0.0 && velocity.Y <= 0.8)
                            {
                                if (velocity.X == 0.0)
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                                else if (velocity.X < -0.8 || velocity.X > 0.8)
                                {
                                    if (frame < 2)
                                        frame = 2;
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                    ++frameCounter;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame > 8)
                                        frame = 2;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else
                            {
                                frameCounter = 0;
                                frame = 1;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y <= 10.0)
                                return;
                            velocity.Y = 10f;
                        }
                        else if (type == 499)
                        {
                            if (velocity.Y >= 0.0 && velocity.Y <= 0.8)
                            {
                                if (velocity.X == 0.0)
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                                else if (velocity.X < -0.8 || velocity.X > 0.8)
                                {
                                    if (frame < 2)
                                        frame = 2;
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                    ++frameCounter;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame >= 8)
                                        frame = 2;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else
                            {
                                frameCounter = 0;
                                frame = 1;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y <= 10.0)
                                return;
                            velocity.Y = 10f;
                        }
                        else if (type == 266)
                        {
                            if (velocity.Y >= 0.0 && velocity.Y <= 0.8)
                            {
                                if (velocity.X == 0.0)
                                    ++frameCounter;
                                else
                                    frameCounter += 3;
                            }
                            else
                                frameCounter += 5;
                            if (frameCounter >= 20)
                            {
                                frameCounter -= 20;
                                ++frame;
                            }
                            if (frame > 1)
                                frame = 0;
                            if (wet && Main.player[owner].position.Y + Main.player[owner].height < position.Y + (double)height && localAI[0] == 0.0)
                            {
                                if (velocity.Y > -4.0)
                                    velocity.Y -= 0.2f;
                                if (velocity.Y > 0.0)
                                    velocity.Y *= 0.95f;
                            }
                            else
                                velocity.Y += 0.4f;
                            if (velocity.Y <= 10.0)
                                return;
                            velocity.Y = 10f;
                        }
                        else if (type == 334)
                        {
                            if (velocity.Y == 0.0)
                            {
                                if (velocity.X == 0.0)
                                {
                                    if (frame > 0)
                                    {
                                        frameCounter += 2;
                                        if (frameCounter > 6)
                                        {
                                            ++frame;
                                            frameCounter = 0;
                                        }
                                        if (frame >= 7)
                                            frame = 0;
                                    }
                                    else
                                    {
                                        frame = 0;
                                        frameCounter = 0;
                                    }
                                }
                                else if (velocity.X < -0.8 || velocity.X > 0.8)
                                {
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X * 0.75);
                                    ++frameCounter;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame >= 7 || frame < 1)
                                        frame = 1;
                                }
                                else if (frame > 0)
                                {
                                    frameCounter += 2;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame >= 7)
                                        frame = 0;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else if (velocity.Y < 0.0)
                            {
                                frameCounter = 0;
                                frame = 2;
                            }
                            else if (velocity.Y > 0.0)
                            {
                                frameCounter = 0;
                                frame = 4;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y <= 10.0)
                                return;
                            velocity.Y = 10f;
                        }
                        else if (type == 353)
                        {
                            if (velocity.Y == 0.0)
                            {
                                if (velocity.X == 0.0)
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                                else if (velocity.X < -0.8 || velocity.X > 0.8)
                                {
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                    ++frameCounter;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame > 9)
                                        frame = 2;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else if (velocity.Y < 0.0)
                            {
                                frameCounter = 0;
                                frame = 1;
                            }
                            else if (velocity.Y > 0.0)
                            {
                                frameCounter = 0;
                                frame = 1;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y <= 10.0)
                                return;
                            velocity.Y = 10f;
                        }
                        else if (type == 111)
                        {
                            if (velocity.Y == 0.0)
                            {
                                if (velocity.X == 0.0)
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                                else if (velocity.X < -0.8 || velocity.X > 0.8)
                                {
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                    ++frameCounter;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame >= 7)
                                        frame = 0;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else if (velocity.Y < 0.0)
                            {
                                frameCounter = 0;
                                frame = 4;
                            }
                            else if (velocity.Y > 0.0)
                            {
                                frameCounter = 0;
                                frame = 6;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y <= 10.0)
                                return;
                            velocity.Y = 10f;
                        }
                        else if (type == 112)
                        {
                            if (velocity.Y == 0.0)
                            {
                                if (velocity.X == 0.0)
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                                else if (velocity.X < -0.8 || velocity.X > 0.8)
                                {
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                    ++frameCounter;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame >= 3)
                                        frame = 0;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else if (velocity.Y < 0.0)
                            {
                                frameCounter = 0;
                                frame = 2;
                            }
                            else if (velocity.Y > 0.0)
                            {
                                frameCounter = 0;
                                frame = 2;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y <= 10.0)
                                return;
                            velocity.Y = 10f;
                        }
                        else if (type == 127)
                        {
                            if (velocity.Y == 0.0)
                            {
                                if (velocity.X == 0.0)
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                                else if (velocity.X < -0.1 || velocity.X > 0.1)
                                {
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                    ++frameCounter;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame > 5)
                                        frame = 0;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else
                            {
                                frame = 0;
                                frameCounter = 0;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y <= 10.0)
                                return;
                            velocity.Y = 10f;
                        }
                        else if (type == 200)
                        {
                            if (velocity.Y == 0.0)
                            {
                                if (velocity.X == 0.0)
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                                else if (velocity.X < -0.1 || velocity.X > 0.1)
                                {
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                    ++frameCounter;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame > 5)
                                        frame = 0;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else
                            {
                                rotation = velocity.X * 0.1f;
                                ++frameCounter;
                                if (velocity.Y < 0.0)
                                    frameCounter += 2;
                                if (frameCounter > 6)
                                {
                                    ++frame;
                                    frameCounter = 0;
                                }
                                if (frame > 9)
                                    frame = 6;
                                if (frame < 6)
                                    frame = 6;
                            }
                            velocity.Y += 0.1f;
                            if (velocity.Y <= 4.0)
                                return;
                            velocity.Y = 4f;
                        }
                        else if (type == 208)
                        {
                            if (velocity.Y == 0.0 && velocity.X == 0.0)
                            {
                                if (Main.player[owner].position.X + (Main.player[owner].width / 2) < position.X + (width / 2))
                                    direction = -1;
                                else if (Main.player[owner].position.X + (Main.player[owner].width / 2) > position.X + (width / 2))
                                    direction = 1;
                                rotation = 0.0f;
                                frame = 0;
                            }
                            else
                            {
                                rotation = velocity.X * 0.075f;
                                ++frameCounter;
                                if (frameCounter > 6)
                                {
                                    ++frame;
                                    frameCounter = 0;
                                }
                                if (frame > 4)
                                    frame = 1;
                                if (frame < 1)
                                    frame = 1;
                            }
                            velocity.Y += 0.1f;
                            if (velocity.Y <= 4.0)
                                return;
                            velocity.Y = 4f;
                        }
                        else if (type == 209)
                        {
                            if (alpha > 0)
                            {
                                alpha -= 5;
                                if (alpha < 0)
                                    alpha = 0;
                            }
                            if (velocity.Y == 0.0)
                            {
                                if (velocity.X == 0.0)
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                                else if (velocity.X < -0.1 || velocity.X > 0.1)
                                {
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                    ++frameCounter;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame > 11)
                                        frame = 2;
                                    if (frame < 2)
                                        frame = 2;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else
                            {
                                frame = 1;
                                frameCounter = 0;
                                rotation = 0.0f;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y <= 10.0)
                                return;
                            velocity.Y = 10f;
                        }
                        else if (type == 324)
                        {
                            if (velocity.Y == 0.0)
                            {
                                if (velocity.X < -0.1 || velocity.X > 0.1)
                                {
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                    ++frameCounter;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame > 5)
                                        frame = 2;
                                    if (frame < 2)
                                        frame = 2;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else
                            {
                                frameCounter = 0;
                                frame = 1;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y <= 14.0)
                                return;
                            velocity.Y = 14f;
                        }
                        else if (type == 210)
                        {
                            if (velocity.Y == 0.0)
                            {
                                if (velocity.X < -0.1 || velocity.X > 0.1)
                                {
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                    ++frameCounter;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame > 6)
                                        frame = 0;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else
                            {
                                rotation = velocity.X * 0.05f;
                                ++frameCounter;
                                if (frameCounter > 6)
                                {
                                    ++frame;
                                    frameCounter = 0;
                                }
                                if (frame > 11)
                                    frame = 7;
                                if (frame < 7)
                                    frame = 7;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y <= 10.0)
                                return;
                            velocity.Y = 10f;
                        }
                        else
                        {
                            if (type != 398)
                                return;
                            if (velocity.Y == 0.0)
                            {
                                if (velocity.X == 0.0)
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                                else if (velocity.X < -0.8 || velocity.X > 0.8)
                                {
                                    frameCounter = frameCounter + (int)Math.Abs(velocity.X);
                                    ++frameCounter;
                                    if (frameCounter > 6)
                                    {
                                        ++frame;
                                        frameCounter = 0;
                                    }
                                    if (frame >= 5)
                                        frame = 0;
                                }
                                else
                                {
                                    frame = 0;
                                    frameCounter = 0;
                                }
                            }
                            else if (velocity.Y != 0.0)
                            {
                                frameCounter = 0;
                                frame = 5;
                            }
                            velocity.Y += 0.4f;
                            if (velocity.Y <= 10.0)
                                return;
                            velocity.Y = 10f;
                        }
                    }
                }
            }
        }

        private void AI_062()
        {
            if (type == 373)
            {
                if (Main.player[owner].dead)
                    Main.player[owner].hornetMinion = false;
                if (Main.player[owner].hornetMinion)
                    timeLeft = 2;
            }
            if (type == 375)
            {
                if (Main.player[owner].dead)
                    Main.player[owner].impMinion = false;
                if (Main.player[owner].impMinion)
                    timeLeft = 2;
            }
            if (type == 407)
            {
                if (Main.player[owner].dead)
                    Main.player[owner].sharknadoMinion = false;
                if (Main.player[owner].sharknadoMinion)
                    timeLeft = 2;
            }
            if (type == 423)
            {
                if (Main.player[owner].dead)
                    Main.player[owner].UFOMinion = false;
                if (Main.player[owner].UFOMinion)
                    timeLeft = 2;
            }
            if (type == 613)
            {
                if (Main.player[owner].dead)
                    Main.player[owner].stardustMinion = false;
                if (Main.player[owner].stardustMinion)
                    timeLeft = 2;
                Lighting.AddLight(Center, 0.2f, 0.6f, 0.7f);
                if (localAI[1] > 0.0)
                    --localAI[1];
            }
            if (type == 423)
            {
                if (ai[0] == 2.0)
                {
                    --ai[1];
                    tileCollide = false;
                    if (ai[1] > 3.0)
                    {
                        int index = Dust.NewDust(Center, 0, 0, 220 + Main.rand.Next(2), velocity.X, velocity.Y, 100, new Color(), 1f);
                        Main.dust[index].scale = (float)(0.5 + Main.rand.NextDouble() * 0.300000011920929);
                        Main.dust[index].velocity /= 2.5f;
                        Main.dust[index].noGravity = true;
                        Main.dust[index].noLight = true;
                        Main.dust[index].frame.Y = 80;
                    }
                    if (ai[1] != 0.0)
                        return;
                    ai[1] = 30f;
                    ai[0] = 0.0f;
                    Projectile projectile = this;
                    Vector2 vector2 = projectile.velocity / 5f;
                    projectile.velocity = vector2;
                    velocity.Y = 0.0f;
                    extraUpdates = 0;
                    numUpdates = 0;
                    netUpdate = true;
                    extraUpdates = 0;
                    numUpdates = 0;
                }
                if (extraUpdates > 1)
                    extraUpdates = 0;
                if (numUpdates > 1)
                    numUpdates = 0;
            }
            if (type == 613)
            {
                if (ai[0] == 2.0)
                {
                    --ai[1];
                    tileCollide = false;
                    if (ai[1] > 3.0)
                    {
                        if (numUpdates < 20)
                        {
                            for (int index = 0; index < 3; ++index)
                            {
                                Dust dust = Main.dust[Dust.NewDust(position, width, height, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                                dust.noGravity = true;
                                dust.position = Center;
                                dust.velocity *= 3f;
                                dust.velocity += velocity * 3f;
                                dust.fadeIn = 1f;
                            }
                        }
                        float num1 = (float)(2.0 - numUpdates / 30.0);
                        if (scale > 0.0)
                        {
                            float num2 = 2f;
                            for (int index = 0; (double)index < num2; ++index)
                            {
                                Dust dust = Main.dust[Dust.NewDust(position, width, height, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                                dust.noGravity = true;
                                dust.position = Center + Utils.RotatedBy(Vector2.UnitY, numUpdates * 0.104719758033752 + whoAmI * 0.785398185253143 + 1.57079637050629, new Vector2()) * (height / 2) - velocity * ((float)index / num2);
                                dust.velocity = velocity / 3f;
                                dust.fadeIn = num1 / 2f;
                                dust.scale = num1;
                            }
                        }
                    }
                    if (ai[1] != 0.0)
                        return;
                    ai[1] = 30f;
                    ai[0] = 0.0f;
                    Projectile projectile = this;
                    Vector2 vector2 = projectile.velocity / 5f;
                    projectile.velocity = vector2;
                    velocity.Y = 0.0f;
                    extraUpdates = 0;
                    numUpdates = 0;
                    netUpdate = true;
                    float num = 15f;
                    for (int index = 0; index < num; ++index)
                    {
                        Dust dust = Main.dust[Dust.NewDust(position, width, height, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                        dust.noGravity = true;
                        dust.position = Center - velocity * 5f;
                        dust.velocity *= 3f;
                        dust.velocity += velocity * 3f;
                        dust.fadeIn = 1f;
                        if (Main.rand.Next(3) != 0)
                        {
                            dust.fadeIn = 2f;
                            dust.scale = 2f;
                            dust.velocity /= 8f;
                        }
                    }
                    for (int index = 0; index < num; ++index)
                    {
                        Dust dust = Main.dust[Dust.NewDust(position, width, height, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                        dust.noGravity = true;
                        dust.position = Center;
                        dust.velocity *= 3f;
                        dust.velocity += velocity * 3f;
                        dust.fadeIn = 1f;
                        if (Main.rand.Next(3) != 0)
                        {
                            dust.fadeIn = 2f;
                            dust.scale = 2f;
                            dust.velocity /= 8f;
                        }
                    }
                    extraUpdates = 0;
                    numUpdates = 0;
                }
                if (extraUpdates > 1)
                    extraUpdates = 0;
                if (numUpdates > 1)
                    numUpdates = 0;
            }
            if (type == 423 && localAI[0] > 0.0)
                --localAI[0];
            if (type == 613 && localAI[0] > 0.0)
                --localAI[0];
            float num3 = 0.05f;
            float num4 = width;
            if (type == 407)
            {
                num3 = 0.1f;
                num4 *= 2f;
            }
            for (int index = 0; index < 1000; ++index)
            {
                if (index != whoAmI && Main.projectile[index].active && (Main.projectile[index].owner == owner && Main.projectile[index].type == type) && Math.Abs(position.X - Main.projectile[index].position.X) + Math.Abs(position.Y - Main.projectile[index].position.Y) < num4)
                {
                    if (position.X < Main.projectile[index].position.X)
                        velocity.X -= num3;
                    else
                        velocity.X += num3;
                    if (position.Y < Main.projectile[index].position.Y)
                        velocity.Y -= num3;
                    else
                        velocity.Y += num3;
                }
            }
            Vector2 vector2_1 = position;
            float num5 = 400f;
            if (type == 423)
                num5 = 300f;
            if (type == 613)
                num5 = 300f;
            bool flag = false;
            int ai1 = -1;
            tileCollide = true;
            if (type == 407)
            {
                tileCollide = false;
                if (Collision.SolidCollision(position, width, height))
                {
                    alpha += 20;
                    if (alpha > 150)
                        alpha = 150;
                }
                else
                {
                    alpha -= 50;
                    if (alpha < 60)
                        alpha = 60;
                }
            }
            if (type == 407 || type == 613 || type == 423)
            {
                Vector2 center = Main.player[owner].Center;
                Vector2 vector2_2 = new Vector2(0.5f);
                if (type == 423)
                    vector2_2.Y = 0.0f;
                for (int index = 0; index < 200; ++index)
                {
                    NPC npc = Main.npc[index];
                    if (npc.CanBeChasedBy(this, false))
                    {
                        Vector2 vector2_3 = npc.position + npc.Size * vector2_2;
                        float num1 = Vector2.Distance(vector2_3, center);
                        if ((Vector2.Distance(center, vector2_1) > num1 && num1 < num5 || !flag) && Collision.CanHitLine(position, width, height, npc.position, npc.width, npc.height))
                        {
                            num5 = num1;
                            vector2_1 = vector2_3;
                            flag = true;
                            ai1 = index;
                        }
                    }
                }
            }
            else
            {
                for (int index = 0; index < 200; ++index)
                {
                    NPC npc = Main.npc[index];
                    if (npc.CanBeChasedBy(this, false))
                    {
                        float num1 = Vector2.Distance(npc.Center, Center);
                        if ((Vector2.Distance(Center, vector2_1) > num1 && num1 < num5 || !flag) && Collision.CanHitLine(position, width, height, npc.position, npc.width, npc.height))
                        {
                            num5 = num1;
                            vector2_1 = npc.Center;
                            flag = true;
                            ai1 = index;
                        }
                    }
                }
            }
            int num7 = 500;
            if (flag)
                num7 = 1000;
            if (flag && type == 423)
                num7 = 1200;
            if (flag && type == 613)
                num7 = 1350;
            Player player = Main.player[owner];
            if (Vector2.Distance(player.Center, Center) > num7)
            {
                ai[0] = 1f;
                netUpdate = true;
            }
            if (ai[0] == 1.0)
                tileCollide = false;
            if (flag && ai[0] == 0.0)
            {
                Vector2 vector2_2 = vector2_1 - Center;
                float num1 = vector2_2.Length();
                vector2_2.Normalize();
                if (type == 423)
                {
                    Vector2 vector2_3 = vector2_1 - Vector2.UnitY * 80f;
                    int index = (int)vector2_3.Y / 16;
                    if (index < 0)
                        index = 0;
                    Tile tile1 = Main.tile[(int)vector2_3.X / 16, index];
                    if (tile1 != null && tile1.active() && (Main.tileSolid[tile1.type] && !Main.tileSolidTop[tile1.type]))
                    {
                        vector2_3 += Vector2.UnitY * 16f;
                        Tile tile2 = Main.tile[(int)vector2_3.X / 16, (int)vector2_3.Y / 16];
                        if (tile2 != null && tile2.active() && (Main.tileSolid[tile2.type] && !Main.tileSolidTop[tile2.type]))
                            vector2_3 += Vector2.UnitY * 16f;
                    }
                    vector2_2 = vector2_3 - Center;
                    num1 = vector2_2.Length();
                    vector2_2.Normalize();
                    if (num1 > 300.0 && num1 <= 800.0 && localAI[0] == 0.0)
                    {
                        ai[0] = 2f;
                        ai[1] = (int)(num1 / 10.0);
                        extraUpdates = (int)ai[1];
                        velocity = vector2_2 * 10f;
                        localAI[0] = 60f;
                        return;
                    }
                }
                if (type == 613)
                {
                    Vector2 vector2_3 = vector2_1;
                    Vector2 vector2_4 = Center - vector2_3;
                    if (vector2_4 == Vector2.Zero)
                        vector2_4 = -Vector2.UnitY;
                    vector2_4.Normalize();
                    Vector2 vector2_5 = vector2_3 + vector2_4 * 60f;
                    int index = (int)vector2_5.Y / 16;
                    if (index < 0)
                        index = 0;
                    Tile tile1 = Main.tile[(int)vector2_5.X / 16, index];
                    if (tile1 != null && tile1.active() && (Main.tileSolid[tile1.type] && !Main.tileSolidTop[tile1.type]))
                    {
                        vector2_5 += Vector2.UnitY * 16f;
                        Tile tile2 = Main.tile[(int)vector2_5.X / 16, (int)vector2_5.Y / 16];
                        if (tile2 != null && tile2.active() && (Main.tileSolid[tile2.type] && !Main.tileSolidTop[tile2.type]))
                            vector2_5 += Vector2.UnitY * 16f;
                    }
                    vector2_2 = vector2_5 - Center;
                    num1 = vector2_2.Length();
                    vector2_2.Normalize();
                    if (num1 > 400.0 && num1 <= 800.0 && localAI[0] == 0.0)
                    {
                        ai[0] = 2f;
                        ai[1] = (float)(int)(num1 / 10.0);
                        extraUpdates = (int)ai[1];
                        velocity = vector2_2 * 10f;
                        localAI[0] = 60f;
                        return;
                    }
                }
                if (type == 407)
                {
                    if (num1 > 400.0)
                    {
                        float num2 = 2f;
                        vector2_2 *= num2;
                        velocity = (velocity * 20f + vector2_2) / 21f;
                    }
                    else
                    {
                        Projectile projectile = this;
                        Vector2 vector2_3 = projectile.velocity * 0.96f;
                        projectile.velocity = vector2_3;
                    }
                }
                if (num1 > 200.0)
                {
                    float num2 = 6f;
                    Vector2 vector2_3 = vector2_2 * num2;
                    velocity.X = (float)((velocity.X * 40.0 + vector2_3.X) / 41.0);
                    velocity.Y = (float)((velocity.Y * 40.0 + vector2_3.Y) / 41.0);
                }
                else if (type == 423 || type == 613)
                {
                    if (num1 > 70.0 && num1 < 130.0)
                    {
                        float num2 = 7f;
                        if (num1 < 100.0)
                            num2 = -3f;
                        Vector2 vector2_3 = vector2_2 * num2;
                        velocity = (velocity * 20f + vector2_3) / 21f;
                        if (Math.Abs(vector2_3.X) > Math.Abs(vector2_3.Y))
                            velocity.X = (float)((velocity.X * 10.0 + vector2_3.X) / 11.0);
                    }
                    else
                    {
                        Projectile projectile = this;
                        Vector2 vector2_3 = projectile.velocity * 0.97f;
                        projectile.velocity = vector2_3;
                    }
                }
                else if (type == 375)
                {
                    if (num1 < 150.0)
                    {
                        float num2 = 4f;
                        Vector2 vector2_3 = vector2_2 * -num2;
                        velocity.X = (float)((velocity.X * 40.0 + vector2_3.X) / 41.0);
                        velocity.Y = (float)((velocity.Y * 40.0 + vector2_3.Y) / 41.0);
                    }
                    else
                    {
                        Projectile projectile = this;
                        Vector2 vector2_3 = projectile.velocity * 0.97f;
                        projectile.velocity = vector2_3;
                    }
                }
                else if (velocity.Y > -1.0)
                    velocity.Y -= 0.1f;
            }
            else
            {
                if (!Collision.CanHitLine(Center, 1, 1, Main.player[owner].Center, 1, 1))
                    ai[0] = 1f;
                float num1 = 6f;
                if (ai[0] == 1.0)
                    num1 = 15f;
                if (type == 407)
                    num1 = 9f;
                Vector2 center = Center;
                Vector2 vector2_2 = player.Center - center + new Vector2(0.0f, -60f);
                if (type == 407)
                    vector2_2 += new Vector2(0.0f, 40f);
                if (type == 375)
                {
                    ai[1] = 3600f;
                    netUpdate = true;
                    vector2_2 = player.Center - center;
                    int num2 = 1;
                    for (int index = 0; index < whoAmI; ++index)
                    {
                        if (Main.projectile[index].active && Main.projectile[index].owner == owner && Main.projectile[index].type == type)
                            ++num2;
                    }
                    vector2_2.X -= (10 * Main.player[owner].direction);
                    vector2_2.X -= (num2 * 40 * Main.player[owner].direction);
                    vector2_2.Y -= 10f;
                }
                float num8 = vector2_2.Length();
                if (num8 > 200.0 && num1 < 9.0)
                    num1 = 9f;
                if (type == 375)
                    num1 = (int)(num1 * 0.75);
                if (num8 < 100.0 && ai[0] == 1.0 && !Collision.SolidCollision(position, width, height))
                {
                    ai[0] = 0.0f;
                    netUpdate = true;
                }
                if (num8 > 2000.0)
                {
                    position.X = Main.player[owner].Center.X - (width / 2);
                    position.Y = Main.player[owner].Center.Y - (width / 2);
                }
                if (type == 375)
                {
                    if (num8 > 10.0)
                    {
                        vector2_2.Normalize();
                        if (num8 < 50.0)
                            num1 /= 2f;
                        vector2_2 *= num1;
                        velocity = (velocity * 20f + vector2_2) / 21f;
                    }
                    else
                    {
                        direction = Main.player[owner].direction;
                        Projectile projectile = this;
                        Vector2 vector2_3 = projectile.velocity * 0.9f;
                        projectile.velocity = vector2_3;
                    }
                }
                else if (type == 407)
                {
                    if (Math.Abs(vector2_2.X) > 40.0 || Math.Abs(vector2_2.Y) > 10.0)
                    {
                        vector2_2.Normalize();
                        vector2_2 *= num1;
                        vector2_2 *= new Vector2(1.25f, 0.65f);
                        velocity = (velocity * 20f + vector2_2) / 21f;
                    }
                    else
                    {
                        if (velocity.X == 0.0 && velocity.Y == 0.0)
                        {
                            velocity.X = -0.15f;
                            velocity.Y = -0.05f;
                        }
                        Projectile projectile = this;
                        Vector2 vector2_3 = projectile.velocity * 1.01f;
                        projectile.velocity = vector2_3;
                    }
                }
                else if (num8 > 70.0)
                {
                    vector2_2.Normalize();
                    vector2_2 *= num1;
                    velocity = (velocity * 20f + vector2_2) / 21f;
                }
                else
                {
                    if (velocity.X == 0.0 && velocity.Y == 0.0)
                    {
                        velocity.X = -0.15f;
                        velocity.Y = -0.05f;
                    }
                    Projectile projectile = this;
                    Vector2 vector2_3 = projectile.velocity * 1.01f;
                    projectile.velocity = vector2_3;
                }
            }
            rotation = velocity.X * 0.05f;
            ++frameCounter;
            if (type == 373)
            {
                if (frameCounter > 1)
                {
                    ++frame;
                    frameCounter = 0;
                }
                if (frame > 2)
                    frame = 0;
            }
            if (type == 375)
            {
                if (frameCounter >= 16)
                    frameCounter = 0;
                frame = frameCounter / 4;
                if (ai[1] > 0.0 && ai[1] < 16.0)
                    frame += 4;
                if (Main.rand.Next(6) == 0)
                {
                    int index = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 2f);
                    Main.dust[index].velocity *= 0.3f;
                    Main.dust[index].noGravity = true;
                    Main.dust[index].noLight = true;
                }
            }
            if (type == 407)
            {
                int num1 = 2;
                if (frameCounter >= 6 * num1)
                    frameCounter = 0;
                frame = frameCounter / num1;
                if (Main.rand.Next(5) == 0)
                {
                    int index = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 217, 0.0f, 0.0f, 100, new Color(), 2f);
                    Main.dust[index].velocity *= 0.3f;
                    Main.dust[index].noGravity = true;
                    Main.dust[index].noLight = true;
                }
            }
            if (type == 423 || type == 613)
            {
                int num1 = 3;
                if (frameCounter >= 4 * num1)
                    frameCounter = 0;
                frame = frameCounter / num1;
            }
            if (velocity.X > 0.0)
                spriteDirection = direction = -1;
            else if (velocity.X < 0.0)
                spriteDirection = direction = 1;
            if (type == 373)
            {
                if (ai[1] > 0.0)
                    ai[1] += Main.rand.Next(1, 4);
                if (ai[1] > 90.0)
                {
                    ai[1] = 0.0f;
                    netUpdate = true;
                }
            }
            else if (type == 375)
            {
                if (ai[1] > 0.0)
                {
                    ++ai[1];
                    if (Main.rand.Next(3) == 0)
                        ++ai[1];
                }
                if (ai[1] > Main.rand.Next(180, 900))
                {
                    ai[1] = 0.0f;
                    netUpdate = true;
                }
            }
            else if (type == 407)
            {
                if (ai[1] > 0.0)
                {
                    ++ai[1];
                    if (Main.rand.Next(3) != 0)
                        ++ai[1];
                }
                if (ai[1] > 60.0)
                {
                    ai[1] = 0.0f;
                    netUpdate = true;
                }
            }
            else if (type == 423)
            {
                if (ai[1] > 0.0)
                {
                    ++ai[1];
                    if (Main.rand.Next(3) != 0)
                        ++ai[1];
                }
                if (ai[1] > 30.0)
                {
                    ai[1] = 0.0f;
                    netUpdate = true;
                }
            }
            else if (type == 613)
            {
                if (ai[1] > 0.0)
                {
                    ++ai[1];
                    if (Main.rand.Next(3) != 0)
                        ++ai[1];
                }
                if (ai[1] > 60.0)
                {
                    ai[1] = 0.0f;
                    netUpdate = true;
                }
            }
            if (ai[0] != 0.0)
                return;
            float num9 = 0.0f;
            int Type = 0;
            if (type == 373)
            {
                num9 = 10f;
                Type = 374;
            }
            else if (type == 375)
            {
                num9 = 11f;
                Type = 376;
            }
            else if (type == 407)
            {
                num9 = 14f;
                Type = 408;
            }
            else if (type == 423)
            {
                num9 = 4f;
                Type = 433;
            }
            else if (type == 613)
            {
                num9 = 14f;
                Type = 614;
            }
            if (!flag)
                return;
            if (type == 375)
            {
                if ((vector2_1 - Center).X > 0.0)
                    spriteDirection = direction = -1;
                else if ((vector2_1 - Center).X < 0.0)
                    spriteDirection = direction = 1;
            }
            if (type == 407 && Collision.SolidCollision(position, width, height))
                return;
            if (type == 423)
            {
                if (Math.Abs(Utils.ToRotation(vector2_1 - Center) - 1.570796f) > 0.785398185253143)
                {
                    Projectile projectile = this;
                    Vector2 vector2_2 = projectile.velocity + Vector2.Normalize(vector2_1 - Center - Vector2.UnitY * 80f);
                    projectile.velocity = vector2_2;
                }
                else
                {
                    if ((vector2_1 - Center).Length() > 400.0 || ai[1] != 0.0)
                        return;
                    ++ai[1];
                    if (Main.myPlayer != owner)
                        return;
                    Vector2 vector2_2 = vector2_1 - Center;
                    vector2_2.Normalize();
                    Vector2 vector2_3 = vector2_2 * num9;
                    NewProjectile(Center.X, Center.Y, vector2_3.X, vector2_3.Y, Type, damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    netUpdate = true;
                }
            }
            else if (ai[1] == 0.0 && type == 613)
            {
                if ((double)(vector2_1 - Center).Length() > 500.0 || ai[1] != 0.0)
                    return;
                ++ai[1];
                if (Main.myPlayer == owner)
                {
                    Vector2 vector2_2 = vector2_1 - Center;
                    vector2_2.Normalize();
                    Vector2 vector2_3 = vector2_2 * num9;
                    int index = NewProjectile(Center.X, Center.Y, vector2_3.X, vector2_3.Y, Type, damage, 0.0f, Main.myPlayer, 0.0f, ai1);
                    Main.projectile[index].timeLeft = 300;
                    Main.projectile[index].netUpdate = true;
                    Projectile projectile = this;
                    Vector2 vector2_4 = projectile.velocity - vector2_3 / 3f;
                    projectile.velocity = vector2_4;
                    netUpdate = true;
                }
                for (int index1 = 0; index1 < 5; ++index1)
                {
                    int num1 = width / 4;
                    Vector2 vector2_2 = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f) * Main.rand.Next(24, 41) / 8f;
                    int index2 = Dust.NewDust(Center - Vector2.One * num1, num1 * 2, num1 * 2, 88, 0.0f, 0.0f, 0, new Color(), 1f);
                    Dust dust = Main.dust[index2];
                    Vector2 vector2_3 = Vector2.Normalize(dust.position - Center);
                    dust.position = Center + vector2_3 * num1 * scale - new Vector2(4f);
                    dust.velocity = index1 >= 30 ? 2f * vector2_3 * Main.rand.Next(45, 91) / 10f : vector2_3 * dust.velocity.Length() * 2f;
                    dust.noGravity = true;
                    dust.scale = 0.7f + Utils.NextFloat(Main.rand);
                }
            }
            else
            {
                if (ai[1] != 0.0)
                    return;
                ++ai[1];
                if (Main.myPlayer != owner)
                    return;
                Vector2 vector2_2 = vector2_1 - Center;
                vector2_2.Normalize();
                Vector2 vector2_3 = vector2_2 * num9;
                int index = NewProjectile(Center.X, Center.Y, vector2_3.X, vector2_3.Y, Type, damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                Main.projectile[index].timeLeft = 300;
                Main.projectile[index].netUpdate = true;
                netUpdate = true;
            }
        }

        private void AI_075()
        {
            Player player = Main.player[owner];
            float num1 = 1.570796f;
            Vector2 vector2_1 = player.RotatedRelativePoint(player.MountedCenter, true);
            if (type == 439)
            {
                ++ai[0];
                int num2 = 0;
                if (ai[0] >= 40.0)
                    ++num2;
                if (ai[0] >= 80.0)
                    ++num2;
                if (ai[0] >= 120.0)
                    ++num2;
                int num3 = 24;
                int num4 = 6;
                ++ai[1];
                bool flag = false;
                if (ai[1] >= (double)(num3 - num4 * num2))
                {
                    ai[1] = 0.0f;
                    flag = true;
                }
                frameCounter += 1 + num2;
                if (frameCounter >= 4)
                {
                    frameCounter = 0;
                    ++frame;
                    if (frame >= 6)
                        frame = 0;
                }
                if (soundDelay <= 0)
                {
                    soundDelay = num3 - num4 * num2;
                    if (ai[0] != 1.0)
                        Main.PlaySound(2, (int)position.X, (int)position.Y, 91);
                }
                if (ai[1] == 1.0 && ai[0] != 1.0)
                {
                    Vector2 vector2_2 = Center + Utils.RotatedBy(Vector2.UnitX * 24f, rotation - 1.57079637050629, new Vector2());
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        int index2 = Dust.NewDust(vector2_2 - Vector2.One * 8f, 16, 16, 135, velocity.X / 2f, velocity.Y / 2f, 100, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.66f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].scale = 1.4f;
                    }
                }
                if (flag && Main.myPlayer == owner)
                {
                    if (player.channel && player.CheckMana(player.inventory[player.selectedItem].mana, true, false) && !player.noItems)
                    {
                        float num5 = player.inventory[player.selectedItem].shootSpeed * scale;
                        Vector2 vector2_2 = vector2_1;
                        Vector2 vector2_3 = Main.screenPosition + new Vector2(Main.mouseX, Main.mouseY) - vector2_2;
                        if (player.gravDir == -1.0)
                            vector2_3.Y = (Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector2_2.Y;
                        Vector2 vector2_4 = Vector2.Normalize(vector2_3);
                        if (float.IsNaN(vector2_4.X) || float.IsNaN(vector2_4.Y))
                            vector2_4 = -Vector2.UnitY;
                        vector2_4 *= num5;
                        if (vector2_4.X != velocity.X || vector2_4.Y != velocity.Y)
                            netUpdate = true;
                        velocity = vector2_4;
                        int Type = 440;
                        float num6 = 14f;
                        int num7 = 7;
                        for (int index = 0; index < 2; ++index)
                        {
                            Vector2 vector2_5 = Center + new Vector2(Main.rand.Next(-num7, num7 + 1), Main.rand.Next(-num7, num7 + 1));
                            Vector2 spinningpoint = Vector2.Normalize(velocity) * num6;
                            spinningpoint = Utils.RotatedBy(spinningpoint, Main.rand.NextDouble() * 0.196349546313286 - 0.0981747731566429, new Vector2());
                            if (float.IsNaN(spinningpoint.X) || float.IsNaN(spinningpoint.Y))
                                spinningpoint = -Vector2.UnitY;
                            NewProjectile(vector2_5.X, vector2_5.Y, spinningpoint.X, spinningpoint.Y, Type, damage, knockBack, owner, 0.0f, 0.0f);
                        }
                    }
                    else
                        Kill();
                }
            }
            if (type == 445)
            {
                ++localAI[0];
                if (localAI[0] >= 60.0)
                    localAI[0] = 0.0f;
                if (Vector2.Distance(vector2_1, Center) >= 5.0)
                {
                    float num2 = localAI[0] / 60f;
                    if (num2 > 0.5)
                        num2 = 1f - num2;
                    Vector3 vector3 = Vector3.Lerp(new Vector3(0.0f, 1f, 0.7f), new Vector3(0.0f, 0.7f, 1f), (float)(1.0 - num2 * 2.0)) * 0.5f;
                    if (Vector2.Distance(vector2_1, Center) >= 30.0)
                    {
                        Vector2 vector2_2 = Center - vector2_1;
                        vector2_2.Normalize();
                        Vector2 vector2_3 = vector2_2 * (Vector2.Distance(vector2_1, Center) - 30f);
                        DelegateMethods.v3_1 = vector3 * 0.8f;
                        Utils.PlotTileLine(Center - vector2_3, Center, 8f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
                    }
                    Lighting.AddLight((int)Center.X / 16, (int)Center.Y / 16, vector3.X, vector3.Y, vector3.Z);
                }
                if (Main.myPlayer == owner)
                {
                    if (localAI[1] > 0.0)
                        --localAI[1];
                    if (!player.channel || player.noItems)
                        Kill();
                    else if (localAI[1] == 0.0)
                    {
                        Vector2 vector2_2 = vector2_1;
                        Vector2 vector2_3 = Main.screenPosition + new Vector2(Main.mouseX, Main.mouseY) - vector2_2;
                        if (player.gravDir == -1.0)
                            vector2_3.Y = (Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector2_2.Y;
                        if (Main.tile[Player.tileTargetX, Player.tileTargetY].active())
                        {
                            vector2_3 = new Vector2(Player.tileTargetX, Player.tileTargetY) * 16f + Vector2.One * 8f - vector2_2;
                            localAI[1] = 2f;
                        }
                        Vector2 vector2_4 = Vector2.Lerp(vector2_3, velocity, 0.7f);
                        if (float.IsNaN(vector2_4.X) || float.IsNaN(vector2_4.Y))
                            vector2_4 = -Vector2.UnitY;
                        float num2 = 30f;
                        if (vector2_4.Length() < num2)
                            vector2_4 = Vector2.Normalize(vector2_4) * num2;
                        int num3 = player.inventory[player.selectedItem].tileBoost;
                        int num4 = -Player.tileRangeX - num3 + 1;
                        int num5 = Player.tileRangeX + num3 - 1;
                        int num6 = -Player.tileRangeY - num3;
                        int num7 = Player.tileRangeY + num3 - 1;
                        int num8 = 12;
                        bool flag = false;
                        if (vector2_4.X < (num4 * 16 - num8))
                            flag = true;
                        if (vector2_4.Y < (num6 * 16 - num8))
                            flag = true;
                        if (vector2_4.X > (num5 * 16 + num8))
                            flag = true;
                        if (vector2_4.Y > (num7 * 16 + num8))
                            flag = true;
                        if (flag)
                        {
                            Vector2 vector2_5 = Vector2.Normalize(vector2_4);
                            float num9 = -1f;
                            if (vector2_5.X < 0.0 && ((num4 * 16 - num8) / vector2_5.X < num9 || num9 == -1.0))
                                num9 = (num4 * 16 - num8) / vector2_5.X;
                            if (vector2_5.X > 0.0 && ((num5 * 16 + num8) / vector2_5.X < num9 || num9 == -1.0))
                                num9 = (num5 * 16 + num8) / vector2_5.X;
                            if (vector2_5.Y < 0.0 && ((num6 * 16 - num8) / vector2_5.Y < num9 || num9 == -1.0))
                                num9 = (num6 * 16 - num8) / vector2_5.Y;
                            if (vector2_5.Y > 0.0 && ((num7 * 16 + num8) / vector2_5.Y < num9 || num9 == -1.0))
                                num9 = (num7 * 16 + num8) / vector2_5.Y;
                            vector2_4 = vector2_5 * num9;
                        }
                        if (vector2_4.X != velocity.X || vector2_4.Y != velocity.Y)
                            netUpdate = true;
                        velocity = vector2_4;
                    }
                }
            }
            if (type == 460)
            {
                ++ai[0];
                int num2 = 0;
                if (ai[0] >= 60.0)
                    ++num2;
                if (ai[0] >= 180.0)
                    ++num2;
                bool flag1 = false;
                if (ai[0] == 60.0 || ai[0] == 180.0 || ai[0] > 180.0 && ai[0] % 20.0 == 0.0)
                    flag1 = true;
                bool flag2 = ai[0] >= 180.0;
                int num3 = 10;
                if (!flag2)
                    ++ai[1];
                bool flag3 = false;
                if (flag2 && ai[0] % 20.0 == 0.0)
                    flag3 = true;
                if (ai[1] >= num3 && !flag2)
                {
                    ai[1] = 0.0f;
                    flag3 = true;
                    if (!flag2)
                    {
                        float num4 = player.inventory[player.selectedItem].shootSpeed * scale;
                        Vector2 vector2_2 = vector2_1;
                        Vector2 vector2_3 = Main.screenPosition + new Vector2(Main.mouseX, Main.mouseY) - vector2_2;
                        if (player.gravDir == -1.0)
                            vector2_3.Y = (Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector2_2.Y;
                        Vector2 vector2_4 = Vector2.Normalize(vector2_3);
                        if (float.IsNaN(vector2_4.X) || float.IsNaN(vector2_4.Y))
                            vector2_4 = -Vector2.UnitY;
                        vector2_4 *= num4;
                        if (vector2_4.X != velocity.X || vector2_4.Y != velocity.Y)
                            netUpdate = true;
                        velocity = vector2_4;
                    }
                }
                if (soundDelay <= 0 && !flag2)
                {
                    soundDelay = num3 - num2;
                    soundDelay *= 2;
                    if (ai[0] != 1.0)
                        Main.PlaySound(2, (int)position.X, (int)position.Y, 15);
                }
                if (ai[0] > 10.0 && !flag2)
                {
                    Vector2 vector2_2 = Center + Utils.RotatedBy(Vector2.UnitX * 18f, rotation - 1.57079637050629, new Vector2());
                    for (int index1 = 0; index1 < num2 + 1; ++index1)
                    {
                        int Type = 226;
                        float num4 = 0.4f;
                        if (index1 % 2 == 1)
                        {
                            Type = 226;
                            num4 = 0.65f;
                        }
                        Vector2 vector2_3 = vector2_2 + Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f) * (12f - (num2 * 2));
                        int index2 = Dust.NewDust(vector2_3 - Vector2.One * 8f, 16, 16, Type, velocity.X / 2f, velocity.Y / 2f, 0, new Color(), 1f);
                        Main.dust[index2].velocity = Vector2.Normalize(vector2_2 - vector2_3) * 1.5f * (float)(10.0 - num2 * 2.0) / 10f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].scale = num4;
                        Main.dust[index2].customData = player;
                    }
                }
                if (flag3 && Main.myPlayer == owner)
                {
                    bool flag4 = !flag1 || player.CheckMana(player.inventory[player.selectedItem].mana, true, false);
                    if (player.channel && flag4 && !player.noItems)
                    {
                        if (ai[0] == 180.0)
                        {
                            Vector2 center = Center;
                            Vector2 vector2_2 = Vector2.Normalize(velocity);
                            if (float.IsNaN(vector2_2.X) || float.IsNaN(vector2_2.Y))
                                vector2_2 = -Vector2.UnitY;
                            int Damage = (int)(damage * 3.0);
                            ai[1] = NewProjectile(center.X, center.Y, vector2_2.X, vector2_2.Y, 461, Damage, knockBack, owner, 0.0f, whoAmI);
                            netUpdate = true;
                        }
                        else if (flag2)
                        {
                            Projectile projectile = Main.projectile[(int)ai[1]];
                            if (!projectile.active || projectile.type != 461)
                            {
                                Kill();
                                return;
                            }
                        }
                    }
                    else
                    {
                        if (!flag2)
                        {
                            int Type = 459;
                            float num4 = 10f;
                            Vector2 center = Center;
                            Vector2 vector2_2 = Vector2.Normalize(velocity) * num4;
                            if (float.IsNaN(vector2_2.X) || float.IsNaN(vector2_2.Y))
                                vector2_2 = -Vector2.UnitY;
                            float ai1 = (float)(0.699999988079071 + num2 * 0.300000011920929);
                            int Damage = ai1 < 1.0 ? damage : (int)(damage * 2.0);
                            NewProjectile(center.X, center.Y, vector2_2.X, vector2_2.Y, Type, Damage, knockBack, owner, 0.0f, ai1);
                        }
                        Kill();
                    }
                }
            }
            if (type == 633)
            {
                float num2 = 30f;
                if (ai[0] > 90.0)
                    num2 = 15f;
                if (ai[0] > 120.0)
                    num2 = 5f;
                damage = (int)(player.inventory[player.selectedItem].damage * player.magicDamage);
                ++ai[0];
                ++ai[1];
                bool flag1 = false;
                if (ai[0] % num2 == 0.0)
                    flag1 = true;
                int num3 = 10;
                bool flag2 = false;
                if (ai[0] % num2 == 0.0)
                    flag2 = true;
                if (ai[1] >= 1.0)
                {
                    ai[1] = 0.0f;
                    flag2 = true;
                    if (Main.myPlayer == owner)
                    {
                        float num4 = player.inventory[player.selectedItem].shootSpeed * scale;
                        Vector2 vector2_2 = vector2_1;
                        Vector2 vector2_3 = Main.screenPosition + new Vector2(Main.mouseX, Main.mouseY) - vector2_2;
                        if (player.gravDir == -1.0)
                            vector2_3.Y = (Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector2_2.Y;
                        Vector2 vector2_4 = Vector2.Normalize(vector2_3);
                        if (float.IsNaN(vector2_4.X) || float.IsNaN(vector2_4.Y))
                            vector2_4 = -Vector2.UnitY;
                        vector2_4 = Vector2.Normalize(Vector2.Lerp(vector2_4, Vector2.Normalize(velocity), 0.92f));
                        vector2_4 *= num4;
                        if (vector2_4.X != velocity.X || vector2_4.Y != velocity.Y)
                            netUpdate = true;
                        velocity = vector2_4;
                    }
                }
                ++frameCounter;
                if (frameCounter >= (ai[0] < 120.0 ? 4 : 1))
                {
                    frameCounter = 0;
                    if (++frame >= 5)
                        frame = 0;
                }
                if (soundDelay <= 0)
                {
                    soundDelay = num3;
                    soundDelay *= 2;
                    if (ai[0] != 1.0)
                        Main.PlaySound(2, (int)position.X, (int)position.Y, 15);
                }
                if (flag2 && Main.myPlayer == owner)
                {
                    bool flag3 = !flag1 || player.CheckMana(player.inventory[player.selectedItem].mana, true, false);
                    if (player.channel && flag3 && !player.noItems)
                    {
                        if (ai[0] == 1.0)
                        {
                            Vector2 center = Center;
                            Vector2 vector2_2 = Vector2.Normalize(velocity);
                            if (float.IsNaN(vector2_2.X) || float.IsNaN(vector2_2.Y))
                                vector2_2 = -Vector2.UnitY;
                            int Damage = damage;
                            for (int index = 0; index < 6; ++index)
                                NewProjectile(center.X, center.Y, vector2_2.X, vector2_2.Y, 632, Damage, knockBack, owner, index, whoAmI);
                            netUpdate = true;
                        }
                    }
                    else
                        Kill();
                }
            }
            if (type == 595)
            {
                num1 = 0.0f;
                if (spriteDirection == -1)
                    num1 = 3.141593f;
                if (++frame >= Main.projFrames[type])
                    frame = 0;
                --soundDelay;
                if (soundDelay <= 0)
                {
                    Main.PlaySound(2, (int)Center.X, (int)Center.Y, 1);
                    soundDelay = 12;
                }
                if (Main.myPlayer == owner)
                {
                    if (player.channel && !player.noItems)
                    {
                        float num2 = 1f;
                        if (player.inventory[player.selectedItem].shoot == type)
                            num2 = player.inventory[player.selectedItem].shootSpeed * scale;
                        Vector2 vec = Main.MouseWorld - vector2_1;
                        vec.Normalize();
                        if (Utils.HasNaNs(vec))
                            vec = Vector2.UnitX * player.direction;
                        vec *= num2;
                        if ((double)vec.X != velocity.X || (double)vec.Y != velocity.Y)
                            netUpdate = true;
                        velocity = vec;
                    }
                    else
                        Kill();
                }
                Vector2 position = Center + velocity * 3f;
                Lighting.AddLight(position, 0.8f, 0.8f, 0.8f);
                if (Main.rand.Next(3) == 0)
                {
                    int index = Dust.NewDust(position - Size / 2f, width, height, 63, velocity.X, velocity.Y, 100, new Color(), 2f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].position -= velocity;
                }
            }
            if (type == 600)
            {
                if (ai[0] == 0.0)
                {
                    if (ai[1] != 0.0)
                        Main.PlaySound(2, (int)position.X, (int)position.Y, 114);
                    else
                        Main.PlaySound(2, (int)position.X, (int)position.Y, 115);
                }
                ++ai[0];
                if (Main.myPlayer == owner && ai[0] == 1.0)
                {
                    float num2 = player.inventory[player.selectedItem].shootSpeed * scale;
                    Vector2 vector2_2 = vector2_1;
                    Vector2 vector2_3 = Main.screenPosition + new Vector2(Main.mouseX, Main.mouseY) - vector2_2;
                    if (player.gravDir == -1.0)
                        vector2_3.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector2_2.Y;
                    Vector2 vector2_4 = Vector2.Normalize(vector2_3);
                    if (float.IsNaN(vector2_4.X) || float.IsNaN(vector2_4.Y))
                        vector2_4 = -Vector2.UnitY;
                    vector2_4 *= num2;
                    if (vector2_4.X != velocity.X || vector2_4.Y != velocity.Y)
                        netUpdate = true;
                    velocity = vector2_4;
                    int Type = 601;
                    float num3 = 3f;
                    Vector2 center = Center;
                    Vector2 vector2_5 = Vector2.Normalize(velocity) * num3;
                    if (float.IsNaN(vector2_5.X) || float.IsNaN(vector2_5.Y))
                        vector2_5 = -Vector2.UnitY;
                    NewProjectile(center.X, center.Y, vector2_5.X, vector2_5.Y, Type, damage, knockBack, owner, ai[1], 0.0f);
                }
                if (ai[0] >= 30.0)
                    Kill();
            }
            if (type == 611)
            {
                if (localAI[1] > 0.0)
                    --localAI[1];
                alpha -= 42;
                if (alpha < 0)
                    alpha = 0;
                if (localAI[0] == 0.0)
                    localAI[0] = Utils.ToRotation(velocity);
                float num2 = Utils.ToRotationVector2(localAI[0]).X >= 0.0 ? 1f : -1f;
                if (ai[1] <= 0.0)
                    num2 *= -1f;
                Vector2 spinningpoint = Utils.ToRotationVector2(num2 * (float)(ai[0] / 30.0 * 6.28318548202515 - 1.57079637050629));
                spinningpoint.Y *= (float)Math.Sin(ai[1]);
                if (ai[1] <= 0.0)
                    spinningpoint.Y *= -1f;
                Vector2 vector2_2 = Utils.RotatedBy(spinningpoint, localAI[0], new Vector2());
                ++ai[0];
                if (ai[0] < 30.0)
                {
                    Projectile projectile = this;
                    Vector2 vector2_3 = projectile.velocity + 48f * vector2_2;
                    projectile.velocity = vector2_3;
                }
                else
                    Kill();
            }
            if (type == 615)
            {
                num1 = 0.0f;
                if (spriteDirection == -1)
                    num1 = 3.141593f;
                ++ai[0];
                int num2 = 0;
                if (ai[0] >= 40.0)
                    ++num2;
                if (ai[0] >= 80.0)
                    ++num2;
                if (ai[0] >= 120.0)
                    ++num2;
                int num3 = 5;
                int num4 = 0;
                --ai[1];
                bool flag = false;
                int num5 = -1;
                if (ai[1] <= 0.0)
                {
                    ai[1] = (float)(num3 - num4 * num2);
                    flag = true;
                    if ((int)ai[0] / (num3 - num4 * num2) % 7 == 0)
                        num5 = 0;
                }
                frameCounter += 1 + num2;
                if (frameCounter >= 4)
                {
                    frameCounter = 0;
                    ++frame;
                    if (frame >= Main.projFrames[type])
                        frame = 0;
                }
                if (soundDelay <= 0)
                {
                    soundDelay = num3 - num4 * num2;
                    if (ai[0] != 1.0)
                        Main.PlaySound(2, (int)position.X, (int)position.Y, 36);
                }
                if (flag && Main.myPlayer == owner)
                {
                    bool canShoot = player.channel && player.HasAmmo(player.inventory[player.selectedItem], true) && !player.noItems;
                    int shoot = 14;
                    float speed = 14f;
                    int Damage = player.inventory[player.selectedItem].damage;
                    float KnockBack = player.inventory[player.selectedItem].knockBack;
                    if (canShoot)
                    {
                        player.PickAmmo(player.inventory[player.selectedItem], ref shoot, ref speed, ref canShoot, ref Damage, ref KnockBack, false);
                        float num6 = player.inventory[player.selectedItem].shootSpeed * scale;
                        Vector2 vector2_2 = vector2_1;
                        Vector2 vector2_3 = Main.screenPosition + new Vector2(Main.mouseX, Main.mouseY) - vector2_2;
                        if (player.gravDir == -1.0)
                            vector2_3.Y = (Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector2_2.Y;
                        Vector2 spinningpoint1 = Vector2.Normalize(vector2_3);
                        if (float.IsNaN(spinningpoint1.X) || float.IsNaN(spinningpoint1.Y))
                            spinningpoint1 = -Vector2.UnitY;
                        spinningpoint1 *= num6;
                        spinningpoint1 = Utils.RotatedBy(spinningpoint1, Main.rand.NextDouble() * 0.130899697542191 - 0.0654498487710953, new Vector2());
                        if ((double)spinningpoint1.X != velocity.X || (double)spinningpoint1.Y != velocity.Y)
                            netUpdate = true;
                        velocity = spinningpoint1;
                        for (int index = 0; index < 1; ++index)
                        {
                            Vector2 spinningpoint2 = Vector2.Normalize(velocity) * speed;
                            spinningpoint2 = Utils.RotatedBy(spinningpoint2, Main.rand.NextDouble() * 0.196349546313286 - 0.0981747731566429, new Vector2());
                            if (float.IsNaN(spinningpoint2.X) || float.IsNaN(spinningpoint2.Y))
                                spinningpoint2 = -Vector2.UnitY;
                            NewProjectile(vector2_2.X, vector2_2.Y, spinningpoint2.X, spinningpoint2.Y, shoot, Damage, KnockBack, owner, 0.0f, 0.0f);
                        }
                        if (num5 == 0)
                        {
                            shoot = 616;
                            float num7 = 8f;
                            for (int index = 0; index < 1; ++index)
                            {
                                Vector2 spinningpoint2 = Vector2.Normalize(velocity) * num7;
                                spinningpoint2 = Utils.RotatedBy(spinningpoint2, Main.rand.NextDouble() * 0.392699092626572 - 0.196349546313286, new Vector2());
                                if (float.IsNaN(spinningpoint2.X) || float.IsNaN(spinningpoint2.Y))
                                    spinningpoint2 = -Vector2.UnitY;
                                NewProjectile(vector2_2.X, vector2_2.Y, spinningpoint2.X, spinningpoint2.Y, shoot, Damage + 20, KnockBack * 1.25f, owner, 0.0f, 0.0f);
                            }
                        }
                    }
                    else
                        Kill();
                }
            }
            if (type == 630)
            {
                num1 = 0.0f;
                if (spriteDirection == -1)
                    num1 = 3.141593f;
                ++ai[0];
                int num2 = 0;
                if (ai[0] >= 40.0)
                    ++num2;
                if (ai[0] >= 80.0)
                    ++num2;
                if (ai[0] >= 120.0)
                    ++num2;
                int num3 = 24;
                int num4 = 2;
                --ai[1];
                bool flag = false;
                if (ai[1] <= 0.0)
                {
                    ai[1] = (num3 - num4 * num2);
                    flag = true;
                    int num5 = (int)ai[0] / (num3 - num4 * num2);
                }
                bool canShoot = player.channel && player.HasAmmo(player.inventory[player.selectedItem], true) && !player.noItems;
                if (localAI[0] > 0.0)
                    --localAI[0];
                if (soundDelay <= 0 && canShoot)
                {
                    soundDelay = num3 - num4 * num2;
                    if (ai[0] != 1.0)
                        Main.PlaySound(2, (int)position.X, (int)position.Y, 5);
                    localAI[0] = 12f;
                }
                player.phantasmTime = 2;
                if (flag && Main.myPlayer == owner)
                {
                    int shoot = 14;
                    float speed = 14f;
                    int Damage = player.inventory[player.selectedItem].damage;
                    float KnockBack = player.inventory[player.selectedItem].knockBack;
                    if (canShoot)
                    {
                        player.PickAmmo(player.inventory[player.selectedItem], ref shoot, ref speed, ref canShoot, ref Damage, ref KnockBack, false);
                        float num5 = player.inventory[player.selectedItem].shootSpeed * scale;
                        Vector2 vector2_2 = vector2_1;
                        Vector2 vector2_3 = Main.screenPosition + new Vector2(Main.mouseX, Main.mouseY) - vector2_2;
                        if (player.gravDir == -1.0)
                            vector2_3.Y = (Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector2_2.Y;
                        Vector2 vector2_4 = Vector2.Normalize(vector2_3);
                        if (float.IsNaN(vector2_4.X) || float.IsNaN(vector2_4.Y))
                            vector2_4 = -Vector2.UnitY;
                        vector2_4 *= num5;
                        if (vector2_4.X != velocity.X || vector2_4.Y != velocity.Y)
                            netUpdate = true;
                        velocity = vector2_4 * 0.55f;
                        for (int index1 = 0; index1 < 4; ++index1)
                        {
                            Vector2 vector2_5 = Vector2.Normalize(velocity) * speed * (float)(0.600000023841858 + Utils.NextFloat(Main.rand) * 0.800000011920929);
                            if (float.IsNaN(vector2_5.X) || float.IsNaN(vector2_5.Y))
                                vector2_5 = -Vector2.UnitY;
                            Vector2 vector2_6 = vector2_2 + Utils.RandomVector2(Main.rand, -15f, 15f);
                            int index2 = NewProjectile(vector2_6.X, vector2_6.Y, vector2_5.X, vector2_5.Y, shoot, Damage, KnockBack, owner, 0.0f, 0.0f);
                            Main.projectile[index2].noDropItem = true;
                        }
                    }
                    else
                        Kill();
                }
            }
            position = player.RotatedRelativePoint(player.MountedCenter, true) - Size / 2f;
            rotation = Utils.ToRotation(velocity) + num1;
            spriteDirection = direction;
            timeLeft = 2;
            player.ChangeDir(direction);
            player.heldProj = whoAmI;
            player.itemTime = 2;
            player.itemAnimation = 2;
            player.itemRotation = (float)Math.Atan2(velocity.Y * (double)direction, velocity.X * (double)direction);
            if (type == 460 || type == 611)
            {
                Vector2 vector2_2 = Main.OffsetsPlayerOnhand[player.bodyFrame.Y / 56] * 2f;
                if (player.direction != 1)
                    vector2_2.X = (float)player.bodyFrame.Width - vector2_2.X;
                if (player.gravDir != 1.0)
                    vector2_2.Y = (float)player.bodyFrame.Height - vector2_2.Y;
                Vector2 vector2_3 = vector2_2 - new Vector2((player.bodyFrame.Width - player.width), (player.bodyFrame.Height - 42)) / 2f;
                Center = player.RotatedRelativePoint(player.position + vector2_3, true) - velocity;
            }
            if (type == 615)
                position.Y += player.gravDir * 2f;
            if (type != 611 || alpha != 0)
                return;
            for (int index = 0; index < 2; ++index)
            {
                Dust dust = Main.dust[Dust.NewDust(position + velocity * 2f, width, height, 6, 0.0f, 0.0f, 100, Color.Transparent, 2f)];
                dust.noGravity = true;
                dust.velocity *= 2f;
                dust.velocity += Utils.ToRotationVector2(localAI[0]);
                dust.fadeIn = 1.5f;
            }
            float num10 = 18f;
            for (int index = 0; (double)index < num10; ++index)
            {
                if (Main.rand.Next(4) == 0)
                {
                    Vector2 Position = position + velocity + velocity * ((float)index / num10);
                    Dust dust = Main.dust[Dust.NewDust(Position, width, height, 6, 0.0f, 0.0f, 100, Color.Transparent, 1f)];
                    dust.noGravity = true;
                    dust.fadeIn = 0.5f;
                    dust.velocity += Utils.ToRotationVector2(localAI[0]);
                    dust.noLight = true;
                }
            }
        }

        private void AI_099_1()
        {
            timeLeft = 6;
            bool flag1 = true;
            float num1 = 250f;
            float num2 = 0.1f;
            float num3 = 15f;
            float num4 = 12f;
            float num5 = num1 * 0.5f;
            float num6 = num3 * 0.8f;
            float num7 = num4 * 1.5f;
            if (owner == Main.myPlayer)
            {
                bool flag2 = false;
                for (int index = 0; index < 1000; ++index)
                {
                    if (Main.projectile[index].active && Main.projectile[index].owner == owner && Main.projectile[index].aiStyle == 99 && (Main.projectile[index].type < 556 || Main.projectile[index].type > 561))
                        flag2 = true;
                }
                if (!flag2)
                {
                    ai[0] = -1f;
                    netUpdate = true;
                }
            }
            if (Main.player[owner].yoyoString)
                num5 += (float)(num5 * 0.25 + 10.0);
            rotation += 0.5f;
            if (Main.player[owner].dead)
            {
                Kill();
            }
            else
            {
                if (!flag1)
                {
                    Main.player[owner].heldProj = whoAmI;
                    Main.player[owner].itemAnimation = 2;
                    Main.player[owner].itemTime = 2;
                    if (position.X + (width / 2) > Main.player[owner].position.X + (Main.player[owner].width / 2))
                    {
                        Main.player[owner].ChangeDir(1);
                        direction = 1;
                    }
                    else
                    {
                        Main.player[owner].ChangeDir(-1);
                        direction = -1;
                    }
                }
                if (ai[0] == 0.0 || ai[0] == 1.0)
                {
                    if (ai[0] == 1.0)
                        num5 *= 0.75f;
                    float num8 = num7 * 0.5f;
                    bool flag2 = false;
                    Vector2 vector2_1 = Main.player[owner].Center - Center;
                    if ((double)vector2_1.Length() > num5 * 0.9)
                        flag2 = true;
                    if ((double)vector2_1.Length() > num5)
                    {
                        float num9 = vector2_1.Length() - num5;
                        Vector2 vector2_2;
                        vector2_2.X = vector2_1.Y;
                        vector2_2.Y = vector2_1.X;
                        vector2_1.Normalize();
                        vector2_1 *= num5;
                        position = Main.player[owner].Center - vector2_1;
                        position.X -= (width / 2);
                        position.Y -= (height / 2);
                        float num10 = velocity.Length();
                        velocity.Normalize();
                        if (num9 > num10 - 1.0)
                            num9 = num10 - 1f;
                        Projectile projectile = this;
                        Vector2 vector2_3 = projectile.velocity * (num10 - num9);
                        projectile.velocity = vector2_3;
                        velocity.Length();
                        Vector2 vector2_4 = new Vector2(Center.X, Center.Y);
                        Vector2 vector2_5 = new Vector2(Main.player[owner].Center.X, Main.player[owner].Center.Y);
                        if (vector2_4.Y < vector2_5.Y)
                            vector2_2.Y = Math.Abs(vector2_2.Y);
                        else if (vector2_4.Y > vector2_5.Y)
                            vector2_2.Y = -Math.Abs(vector2_2.Y);
                        if (vector2_4.X < vector2_5.X)
                            vector2_2.X = Math.Abs(vector2_2.X);
                        else if (vector2_4.X > vector2_5.X)
                            vector2_2.X = -Math.Abs(vector2_2.X);
                        vector2_2.Normalize();
                        Vector2 vector2_6 = vector2_2 * velocity.Length();
                        Vector2 vector2_7 = new Vector2(vector2_6.X, vector2_6.Y);
                        if (Math.Abs(velocity.X) > Math.Abs(velocity.Y))
                        {
                            Vector2 vector2_8 = velocity;
                            vector2_8.Y += vector2_6.Y;
                            vector2_8.Normalize();
                            vector2_8 *= velocity.Length();
                            if (Math.Abs(vector2_6.X) < 0.1 || Math.Abs(vector2_6.Y) < 0.1)
                                velocity = vector2_8;
                            else
                                velocity = (vector2_8 + velocity * 2f) / 3f;
                        }
                        else
                        {
                            Vector2 vector2_8 = velocity;
                            vector2_8.X += vector2_6.X;
                            vector2_8.Normalize();
                            vector2_8 *= velocity.Length();
                            if (Math.Abs(vector2_6.X) < 0.2 || Math.Abs(vector2_6.Y) < 0.2)
                                velocity = vector2_8;
                            else
                                velocity = (vector2_8 + velocity * 2f) / 3f;
                        }
                    }
                    if (Main.myPlayer == owner)
                    {
                        if (Main.player[owner].channel)
                        {
                            Vector2 vector2_2 = new Vector2((Main.mouseX - Main.lastMouseX), (Main.mouseY - Main.lastMouseY));
                            if (velocity.X != 0.0 || velocity.Y != 0.0)
                            {
                                if (flag1)
                                    vector2_2 *= -1f;
                                if (flag2)
                                {
                                    if (Center.X < Main.player[owner].Center.X && vector2_2.X < 0.0)
                                        vector2_2.X = 0.0f;
                                    if (Center.X > Main.player[owner].Center.X && vector2_2.X > 0.0)
                                        vector2_2.X = 0.0f;
                                    if (Center.Y < Main.player[owner].Center.Y && vector2_2.Y < 0.0)
                                        vector2_2.Y = 0.0f;
                                    if (Center.Y > Main.player[owner].Center.Y && vector2_2.Y > 0.0)
                                        vector2_2.Y = 0.0f;
                                }
                                Projectile projectile = this;
                                Vector2 vector2_3 = projectile.velocity + vector2_2 * num2;
                                projectile.velocity = vector2_3;
                                netUpdate = true;
                            }
                        }
                        else
                        {
                            ai[0] = 10f;
                            netUpdate = true;
                        }
                    }
                    if (flag1 || type == 562 || (type == 547 || type == 555) || (type == 564 || type == 552 || (type == 563 || type == 549)) || (type == 550 || type == 554 || (type == 553 || type == 603)))
                    {
                        float num9 = 800f;
                        Vector2 vector2_2 = new Vector2();
                        bool flag3 = false;
                        if (type == 549)
                            num9 = 200f;
                        if (type == 554)
                            num9 = 400f;
                        if (type == 553)
                            num9 = 250f;
                        if (type == 603)
                            num9 = 320f;
                        for (int index = 0; index < 200; ++index)
                        {
                            if (Main.npc[index].CanBeChasedBy(this, false))
                            {
                                float num10 = Main.npc[index].position.X + (Main.npc[index].width / 2);
                                float num11 = Main.npc[index].position.Y + (Main.npc[index].height / 2);
                                float num12 = Math.Abs(position.X + (width / 2) - num10) + Math.Abs(position.Y + (height / 2) - num11);
                                if (num12 < num9 && (type != 563 || num12 >= 200.0) && Collision.CanHit(position, width, height, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height) && (Main.npc[index].Center - Main.player[owner].Center).Length() < num5 * 0.9)
                                {
                                    num9 = num12;
                                    vector2_2.X = num10;
                                    vector2_2.Y = num11;
                                    flag3 = true;
                                }
                            }
                        }
                        if (flag3)
                        {
                            vector2_2 -= Center;
                            vector2_2.Normalize();
                            if (type == 563)
                            {
                                vector2_2 *= 4f;
                                velocity = (velocity * 14f + vector2_2) / 15f;
                            }
                            else if (type == 553)
                            {
                                vector2_2 *= 5f;
                                velocity = (velocity * 12f + vector2_2) / 13f;
                            }
                            else if (type == 603)
                            {
                                vector2_2 *= 16f;
                                velocity = (velocity * 9f + vector2_2) / 10f;
                            }
                            else if (type == 554)
                            {
                                vector2_2 *= 8f;
                                velocity = (velocity * 6f + vector2_2) / 7f;
                            }
                            else
                            {
                                vector2_2 *= 6f;
                                velocity = (velocity * 7f + vector2_2) / 8f;
                            }
                        }
                    }
                    if (velocity.Length() > num6)
                    {
                        velocity.Normalize();
                        Projectile projectile = this;
                        Vector2 vector2_2 = projectile.velocity * num6;
                        projectile.velocity = vector2_2;
                    }
                    if (velocity.Length() >= num8)
                        return;
                    velocity.Normalize();
                    Projectile projectile1 = this;
                    Vector2 vector2_9 = projectile1.velocity * num8;
                    projectile1.velocity = vector2_9;
                }
                else
                {
                    tileCollide = false;
                    Vector2 vec = Main.player[owner].Center - Center;
                    if (vec.Length() < 40.0 || Utils.HasNaNs(vec))
                    {
                        Kill();
                    }
                    else
                    {
                        float num8 = num6 * 1.5f;
                        if (type == 546)
                            num8 *= 1.5f;
                        if (type == 554)
                            num8 *= 1.25f;
                        if (type == 555)
                            num8 *= 1.35f;
                        if (type == 562)
                            num8 *= 1.25f;
                        float num9 = 12f;
                        vec.Normalize();
                        vec *= num8;
                        velocity = (velocity * (num9 - 1f) + vec) / num9;
                    }
                }
            }
        }

        private void AI_099_2()
        {
            bool flag1 = false;
            for (int index = 0; index < whoAmI; ++index)
            {
                if (Main.projectile[index].active && Main.projectile[index].owner == owner && Main.projectile[index].type == type)
                    flag1 = true;
            }
            if (owner == Main.myPlayer)
            {
                ++localAI[0];
                if (flag1)
                    localAI[0] += Main.rand.Next(10, 31) * 0.1f;
                float num = localAI[0] / 60f / (float)((1.0 + Main.player[owner].meleeSpeed) / 2.0);
                if (type == 541 && num > 3.0)
                    ai[0] = -1f;
                if (type == 548 && num > 5.0)
                    ai[0] = -1f;
                if (type == 542 && num > 7.0)
                    ai[0] = -1f;
                if (type == 543 && num > 6.0)
                    ai[0] = -1f;
                if (type == 544 && num > 8.0)
                    ai[0] = -1f;
                if (type == 534 && num > 9.0)
                    ai[0] = -1f;
                if (type == 564 && num > 11.0)
                    ai[0] = -1f;
                if (type == 545 && num > 13.0)
                    ai[0] = -1f;
                if (type == 563 && num > 10.0)
                    ai[0] = -1f;
                if (type == 562 && num > 8.0)
                    ai[0] = -1f;
                if (type == 553 && num > 12.0)
                    ai[0] = -1f;
                if (type == 546 && num > 16.0)
                    ai[0] = -1f;
                if (type == 552 && num > 15.0)
                    ai[0] = -1f;
                if (type == 549 && num > 14.0)
                    ai[0] = -1f;
            }
            if (type == 603 && owner == Main.myPlayer)
            {
                ++localAI[1];
                if (localAI[1] >= 6.0)
                {
                    float num1 = 400f;
                    Vector2 vector2_1 = velocity;
                    Vector2 vector2_2 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
                    vector2_2.Normalize();
                    Vector2 vector2_3 = vector2_2 * (Main.rand.Next(10, 41) * 0.1f);
                    if (Main.rand.Next(3) == 0)
                        vector2_3 *= 2f;
                    Vector2 vector2_4 = vector2_1 * 0.25f + vector2_3;
                    for (int index = 0; index < 200; ++index)
                    {
                        if (Main.npc[index].CanBeChasedBy(this, false))
                        {
                            float num2 = Main.npc[index].position.X + (float)(Main.npc[index].width / 2);
                            float num3 = Main.npc[index].position.Y + (float)(Main.npc[index].height / 2);
                            float num4 = Math.Abs(position.X + (width / 2) - num2) + Math.Abs(position.Y + (height / 2) - num3);
                            if (num4 < num1 && Collision.CanHit(position, width, height, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height))
                            {
                                num1 = num4;
                                vector2_4.X = num2;
                                vector2_4.Y = num3;
                                Vector2 vector2_5 = vector2_4 - Center;
                                vector2_5.Normalize();
                                vector2_4 = vector2_5 * 8f;
                            }
                        }
                    }
                    Vector2 vector2_6 = vector2_4 * 0.8f;
                    NewProjectile(Center.X, Center.Y, vector2_6.X, vector2_6.Y, 604, damage, knockBack, owner, 0.0f, 0.0f);
                    localAI[1] = 0.0f;
                }
            }
            bool flag2 = false;
            if (type >= 556 && type <= 561)
                flag2 = true;
            if (Main.player[owner].dead)
            {
                Kill();
            }
            else
            {
                if (!flag2 && !flag1)
                {
                    Main.player[owner].heldProj = whoAmI;
                    Main.player[owner].itemAnimation = 2;
                    Main.player[owner].itemTime = 2;
                    if (position.X + (width / 2) > Main.player[owner].position.X + (Main.player[owner].width / 2))
                    {
                        Main.player[owner].ChangeDir(1);
                        direction = 1;
                    }
                    else
                    {
                        Main.player[owner].ChangeDir(-1);
                        direction = -1;
                    }
                }
                if (Utils.HasNaNs(velocity))
                    Kill();
                timeLeft = 6;
                float num1 = 10f;
                float num2 = 200f;
                if (type == 541)
                {
                    num2 = 130f;
                    num1 = 9f;
                }
                else if (type == 548)
                {
                    num2 = 170f;
                    num1 = 11f;
                }
                else if (type == 542)
                {
                    num2 = 195f;
                    num1 = 12.5f;
                }
                else if (type == 543)
                {
                    num2 = 207f;
                    num1 = 12f;
                }
                else if (type == 544)
                {
                    num2 = 215f;
                    num1 = 13f;
                }
                else if (type == 534)
                {
                    num2 = 220f;
                    num1 = 13f;
                }
                else if (type == 564)
                {
                    num2 = 225f;
                    num1 = 14f;
                }
                else if (type == 545)
                {
                    if (Main.rand.Next(6) == 0)
                    {
                        int index = Dust.NewDust(position, width, height, 6, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index].noGravity = true;
                    }
                    num2 = 235f;
                    num1 = 14f;
                }
                else if (type == 562)
                {
                    num2 = 235f;
                    num1 = 15f;
                }
                else if (type == 563)
                {
                    num2 = 250f;
                    num1 = 12f;
                }
                else if (type == 546)
                {
                    num2 = 275f;
                    num1 = 17f;
                }
                else if (type == 552)
                {
                    num2 = 270f;
                    num1 = 14f;
                }
                else if (type == 553)
                {
                    if (Main.rand.Next(2) == 0)
                    {
                        int index = Dust.NewDust(position, width, height, 6, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index].noGravity = true;
                        Main.dust[index].scale = 1.6f;
                    }
                    num2 = 275f;
                    num1 = 15f;
                }
                else if (type == 547)
                {
                    num2 = 280f;
                    num1 = 17f;
                }
                else if (type == 549)
                {
                    num2 = 290f;
                    num1 = 16f;
                }
                else if (type == 554)
                {
                    num2 = 340f;
                    num1 = 16f;
                }
                else if (type == 550 || type == 551)
                {
                    num2 = 370f;
                    num1 = 16f;
                }
                else if (type == 555)
                {
                    num2 = 360f;
                    num1 = 16.5f;
                }
                else if (type == 603)
                {
                    num2 = 400f;
                    num1 = 17.5f;
                }
                if (Main.player[owner].yoyoString)
                    num2 = (float)(num2 * 1.25 + 30.0);
                float num3 = num2 / (float)((1.0 + Main.player[owner].meleeSpeed * 3.0) / 4.0);
                float num4 = num1 / (float)((1.0 + Main.player[owner].meleeSpeed * 3.0) / 4.0);
                float num5 = (float)(14.0 - num4 / 2.0);
                float num6 = (float)(5.0 + num4 / 2.0);
                if (flag1)
                    num6 += 20f;
                if (ai[0] >= 0.0)
                {
                    if (velocity.Length() > num4)
                    {
                        Projectile projectile = this;
                        Vector2 vector2 = projectile.velocity * 0.98f;
                        projectile.velocity = vector2;
                    }
                    bool flag3 = false;
                    bool flag4 = false;
                    Vector2 vector2_1 = Main.player[owner].Center - Center;
                    if ((double)vector2_1.Length() > num3)
                    {
                        flag3 = true;
                        if ((double)vector2_1.Length() > num3 * 1.3)
                            flag4 = true;
                    }
                    if (owner == Main.myPlayer)
                    {
                        if (!Main.player[owner].channel || Main.player[owner].stoned || Main.player[owner].frozen)
                        {
                            ai[0] = -1f;
                            ai[1] = 0.0f;
                            netUpdate = true;
                        }
                        else
                        {
                            Vector2 vector2_2 = Main.ReverseGravitySupport(Main.MouseScreen, 0.0f) + Main.screenPosition;
                            float x = vector2_2.X;
                            float y = vector2_2.Y;
                            Vector2 vector2_3 = new Vector2(x, y) - Main.player[owner].Center;
                            if (vector2_3.Length() > num3)
                            {
                                vector2_3.Normalize();
                                Vector2 vector2_4 = vector2_3 * num3;
                                Vector2 vector2_5 = Main.player[owner].Center + vector2_4;
                                x = vector2_5.X;
                                y = vector2_5.Y;
                            }
                            if (ai[0] != (double)x || ai[1] != (double)y)
                            {
                                Vector2 vector2_4 = new Vector2(x, y) - Main.player[owner].Center;
                                if (vector2_4.Length() > num3 - 1.0)
                                {
                                    vector2_4.Normalize();
                                    Vector2 vector2_5 = vector2_4 * (num3 - 1f);
                                    Vector2 vector2_6 = Main.player[owner].Center + vector2_5;
                                    x = vector2_6.X;
                                    y = vector2_6.Y;
                                }
                                ai[0] = x;
                                ai[1] = y;
                                netUpdate = true;
                            }
                        }
                    }
                    if (flag4 && owner == Main.myPlayer)
                    {
                        ai[0] = -1f;
                        netUpdate = true;
                    }
                    if (ai[0] >= 0.0)
                    {
                        if (flag3)
                        {
                            num5 /= 2f;
                            num4 *= 2f;
                            if (Center.X > Main.player[owner].Center.X && velocity.X > 0.0)
                                velocity.X *= 0.5f;
                            if (Center.Y > Main.player[owner].Center.Y && velocity.Y > 0.0)
                                velocity.Y *= 0.5f;
                            if (Center.X < Main.player[owner].Center.X && velocity.X > 0.0)
                                velocity.X *= 0.5f;
                            if (Center.Y < Main.player[owner].Center.Y && velocity.Y > 0.0)
                                velocity.Y *= 0.5f;
                        }
                        Vector2 vector2_2 = new Vector2(ai[0], ai[1]) - Center;
                        double num7 = velocity.Length();
                        if (vector2_2.Length() > num6)
                        {
                            vector2_2.Normalize();
                            vector2_2 *= num4;
                            velocity = (velocity * (num5 - 1f) + vector2_2) / num5;
                        }
                        else if (flag1)
                        {
                            if (velocity.Length() < num4 * 0.6)
                            {
                                vector2_2 = velocity;
                                vector2_2.Normalize();
                                vector2_2 *= num4 * 0.6f;
                                velocity = (velocity * (num5 - 1f) + vector2_2) / num5;
                            }
                        }
                        else
                        {
                            Projectile projectile = this;
                            Vector2 vector2_3 = projectile.velocity * 0.8f;
                            projectile.velocity = vector2_3;
                        }
                        if (flag1 && !flag3 && velocity.Length() < num4 * 0.6)
                        {
                            velocity.Normalize();
                            Projectile projectile = this;
                            Vector2 vector2_3 = projectile.velocity * (num4 * 0.6f);
                            projectile.velocity = vector2_3;
                        }
                    }
                }
                else
                {
                    float num7 = (float)(int)(num5 * 0.8);
                    float num8 = num4 * 1.5f;
                    tileCollide = false;
                    Vector2 vector2 = Main.player[owner].position - Center;
                    float num9 = vector2.Length();
                    if (num9 < num8 + 10.0 || num9 == 0.0)
                    {
                        Kill();
                    }
                    else
                    {
                        vector2.Normalize();
                        vector2 *= num8;
                        velocity = (velocity * (num7 - 1f) + vector2) / num7;
                    }
                }
                rotation += 0.45f;
            }
        }

        public void Kill()
        {
            if (!active)
                return;
            int num1 = timeLeft;
            timeLeft = 0;
            if (type == 634 || type == 635)
            {
                int num2 = Utils.SelectRandom<int>(Main.rand, 242, 73, 72, 71, 255);
                int Type1 = 255;
                int Type2 = 255;
                int num3 = 50;
                float Scale1 = 1.7f;
                float Scale2 = 0.8f;
                float Scale3 = 2f;
                Vector2 vector2 = Utils.ToRotationVector2(rotation - 1.570796f) * velocity.Length() * (float)MaxUpdates;
                if (type == 635)
                {
                    Type1 = 88;
                    Type2 = 88;
                    num2 = Utils.SelectRandom<int>(Main.rand, 242, 59, 88);
                    Scale1 = 3.7f;
                    Scale2 = 1.5f;
                    Scale3 = 2.2f;
                    vector2 *= 0.5f;
                }
                Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                position = Center;
                width = height = num3;
                Center = position;
                maxPenetrate = -1;
                penetrate = -1;
                Damage();
                for (int index1 = 0; index1 < 40; ++index1)
                {
                    int Type3 = Utils.SelectRandom<int>(Main.rand, 242, 73, 72, 71, 255);
                    if (type == 635)
                        Type3 = Utils.SelectRandom<int>(Main.rand, 242, 59, 88);
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, Type3, 0.0f, 0.0f, 200, new Color(), Scale1);
                    Main.dust[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    Main.dust[index2].velocity += vector2 * Utils.NextFloat(Main.rand);
                    int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, Type1, 0.0f, 0.0f, 100, new Color(), Scale2);
                    Main.dust[index3].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                    Main.dust[index3].fadeIn = 1f;
                    Main.dust[index3].color = Color.Crimson * 0.5f;
                    Main.dust[index3].velocity += vector2 * Utils.NextFloat(Main.rand);
                }
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, Type2, 0.0f, 0.0f, 0, new Color(), Scale3);
                    Main.dust[index2].position = Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), Utils.ToRotation(velocity), new Vector2()) * width / 3f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 0.5f;
                    Main.dust[index2].velocity += vector2 * (float)(0.600000023841858 + 0.600000023841858 * (double)Utils.NextFloat(Main.rand));
                }
            }
            else if (type == 641)
            {
                if (owner == Main.myPlayer)
                {
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (Main.projectile[index].active && Main.projectile[index].owner == owner && Main.projectile[index].type == 642)
                            Main.projectile[index].Kill();
                    }
                }
            }
            else if (type == 643)
            {
                if (owner == Main.myPlayer)
                {
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (Main.projectile[index].active && Main.projectile[index].owner == owner && Main.projectile[index].type == 644)
                            Main.projectile[index].Kill();
                    }
                }
            }
            else if (type == 645)
            {
                bool flag = WorldGen.SolidTile(Framing.GetTileSafely((int)position.X / 16, (int)position.Y / 16));
                for (int index = 0; index < 4; ++index)
                    Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                for (int index1 = 0; index1 < 4; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 229, 0.0f, 0.0f, 0, new Color(), 2.5f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    if (flag)
                        Main.dust[index2].noLight = true;
                    int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 229, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                    if (flag)
                        Main.dust[index3].noLight = true;
                }
                for (int index1 = 0; index1 < 1; ++index1)
                {
                    int index2 = Gore.NewGore(position + new Vector2((width * Main.rand.Next(100)) / 100f, (height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += Main.rand.Next(-10, 11) * 0.05f;
                }
            }
            else if (type == 636)
            {
                Rectangle hitbox = Hitbox;
                int index1 = 0;
                while (index1 < 6)
                {
                    hitbox.X = (int)oldPos[index1].X;
                    hitbox.Y = (int)oldPos[index1].Y;
                    for (int index2 = 0; index2 < 5; ++index2)
                    {
                        int Type = Utils.SelectRandom<int>(Main.rand, 6, 259, 158);
                        int index3 = Dust.NewDust(Utils.TopLeft(hitbox), width, height, Type, 2.5f * direction, -2.5f, 0, new Color(), 1f);
                        Main.dust[index3].alpha = 200;
                        Main.dust[index3].velocity *= 2.4f;
                        Main.dust[index3].scale += Utils.NextFloat(Main.rand);
                    }
                    index1 += 3;
                }
            }
            else if (type == 614)
            {
                for (int index = 0; index < 10; ++index)
                {
                    Dust dust = Main.dust[Dust.NewDust(position, width, height, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                    dust.noGravity = true;
                    dust.velocity *= 3f;
                }
            }
            if (type == 644)
            {
                Vector2 spinningpoint = Utils.RotatedByRandom(new Vector2(0.0f, -3f), 3.14159274101257);
                float num2 = Main.rand.Next(7, 13);
                Vector2 vector2 = new Vector2(2.1f, 2f);
                Color newColor = Main.hslToRgb(ai[0], 1f, 0.5f);
                newColor.A = byte.MaxValue;
                for (float num3 = 0.0f; num3 < num2; ++num3)
                {
                    int dustIndex = Dust.NewDust(Center, 0, 0, 267, 0.0f, 0.0f, 0, newColor, 1f);
                    Main.dust[dustIndex].position = Center;
                    Main.dust[dustIndex].velocity = Utils.RotatedBy(spinningpoint, 6.28318548202515 * num3 / num2, new Vector2()) * vector2 * (float)(0.800000011920929 + (double)Utils.NextFloat(Main.rand) * 0.400000005960464);
                    Main.dust[dustIndex].noGravity = true;
                    Main.dust[dustIndex].scale = 2f;
                    Main.dust[dustIndex].fadeIn = Utils.NextFloat(Main.rand) * 2f;
                    Dust dust = Dust.CloneDust(dustIndex);
                    dust.scale /= 2f;
                    dust.fadeIn /= 2f;
                    dust.color = new Color(255, 255, 255, 255);
                }
                for (float num3 = 0.0f; num3 < num2; ++num3)
                {
                    int dustIndex = Dust.NewDust(Center, 0, 0, 267, 0.0f, 0.0f, 0, newColor, 1f);
                    Main.dust[dustIndex].position = Center;
                    Main.dust[dustIndex].velocity = Utils.RotatedBy(spinningpoint, 6.28318548202515 * num3 / num2, new Vector2()) * vector2 * (float)(0.800000011920929 + (double)Utils.NextFloat(Main.rand) * 0.400000005960464);
                    Main.dust[dustIndex].velocity *= Utils.NextFloat(Main.rand) * 0.8f;
                    Main.dust[dustIndex].noGravity = true;
                    Main.dust[dustIndex].scale = Utils.NextFloat(Main.rand) * 1f;
                    Main.dust[dustIndex].fadeIn = Utils.NextFloat(Main.rand) * 2f;
                    Dust dust = Dust.CloneDust(dustIndex);
                    dust.scale /= 2f;
                    dust.fadeIn /= 2f;
                    dust.color = new Color(255, 255, 255, 255);
                }
                if (Main.myPlayer == owner)
                {
                    friendly = true;
                    int num3 = width;
                    int num4 = height;
                    int num5 = penetrate;
                    position = Center;
                    width = height = 60;
                    Center = position;
                    penetrate = -1;
                    maxPenetrate = -1;
                    Damage();
                    penetrate = num5;
                    position = Center;
                    width = num3;
                    height = num4;
                    Center = position;
                }
            }
            if (type == 608)
            {
                maxPenetrate = -1;
                penetrate = -1;
                Damage();
                Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                for (int index1 = 0; index1 < 4; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                }
                for (int index1 = 0; index1 < 30; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 200, new Color(), 3.7f);
                    Main.dust[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    Main.dust[index2].shader = GameShaders.Armor.GetSecondaryShader(Main.player[owner].ArmorSetDye(), Main.player[owner]);
                    int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                    Main.dust[index3].fadeIn = 2.5f;
                    Main.dust[index3].shader = GameShaders.Armor.GetSecondaryShader(Main.player[owner].ArmorSetDye(), Main.player[owner]);
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 0, new Color(), 2.7f);
                    Main.dust[index2].position = Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), Utils.ToRotation(velocity), new Vector2()) * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    Main.dust[index2].shader = GameShaders.Armor.GetSecondaryShader(Main.player[owner].ArmorSetDye(), Main.player[owner]);
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 0, new Color(), 1.5f);
                    Main.dust[index2].position = Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), Utils.ToRotation(velocity), new Vector2()) * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 2; ++index1)
                {
                    int index2 = Gore.NewGore(position + new Vector2((width * Main.rand.Next(100)) / 100f, (height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += Main.rand.Next(-10, 11) * 0.05f;
                }
            }
            else if (type == 617)
            {
                position = Center;
                width = height = 176;
                Center = position;
                maxPenetrate = -1;
                penetrate = -1;
                Damage();
                Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                for (int index1 = 0; index1 < 4; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 240, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                }
                for (int index1 = 0; index1 < 30; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 62, 0.0f, 0.0f, 200, new Color(), 3.7f);
                    Main.dust[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 90, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                    Main.dust[index3].fadeIn = 1f;
                    Main.dust[index3].color = Color.Crimson * 0.5f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 62, 0.0f, 0.0f, 0, new Color(), 2.7f);
                    Main.dust[index2].position = Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), Utils.ToRotation(velocity), new Vector2()) * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 240, 0.0f, 0.0f, 0, new Color(), 1.5f);
                    Main.dust[index2].position = Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), Utils.ToRotation(velocity), new Vector2()) * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 2; ++index1)
                {
                    int index2 = Gore.NewGore(position + new Vector2((width * Main.rand.Next(100)) / 100f, (height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += Main.rand.Next(-10, 11) * 0.05f;
                }
                if (Main.myPlayer == owner)
                {
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (Main.projectile[index].active && Main.projectile[index].type == 618 && Main.projectile[index].ai[1] == (double)whoAmI)
                            Main.projectile[index].Kill();
                    }
                    int num2 = Main.rand.Next(5, 9);
                    int num3 = Main.rand.Next(5, 9);
                    int num4 = Utils.SelectRandom<int>(Main.rand, 86, 90);
                    int num5 = num4 == 86 ? 90 : 86;
                    for (int index = 0; index < num2; ++index)
                    {
                        Vector2 vector2_1 = Center + Utils.RandomVector2(Main.rand, -30f, 30f);
                        Vector2 vector2_2 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
                        while (vector2_2.X == 0.0 && vector2_2.Y == 0.0)
                            vector2_2 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
                        vector2_2.Normalize();
                        if (vector2_2.Y > 0.200000002980232)
                            vector2_2.Y *= -1f;
                        vector2_2 *= Main.rand.Next(70, 101) * 0.1f;
                        NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 620, (int)(damage * 0.8), knockBack * 0.8f, owner, num4, 0.0f);
                    }
                    for (int index = 0; index < num3; ++index)
                    {
                        Vector2 vector2_1 = Center + Utils.RandomVector2(Main.rand, -30f, 30f);
                        Vector2 vector2_2 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
                        while (vector2_2.X == 0.0 && vector2_2.Y == 0.0)
                            vector2_2 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
                        vector2_2.Normalize();
                        if (vector2_2.Y > 0.400000005960464)
                            vector2_2.Y *= -1f;
                        vector2_2 *= Main.rand.Next(40, 81) * 0.1f;
                        NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 620, (int)(damage * 0.8), knockBack * 0.8f, owner, num5, 0.0f);
                    }
                }
            }
            else if (type == 620 || type == 618)
            {
                if (type == 618)
                    ai[0] = 86f;
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, (int)ai[0], velocity.X * 0.1f, velocity.Y * 0.1f, 0, new Color(), 0.5f);
                    if (Main.rand.Next(3) == 0)
                    {
                        Main.dust[index2].fadeIn = (float)(0.75 + Main.rand.Next(-10, 11) * 0.00999999977648258);
                        Main.dust[index2].scale = (float)(0.25 + Main.rand.Next(-10, 11) * 0.00499999988824129);
                        ++Main.dust[index2].type;
                    }
                    else
                        Main.dust[index2].scale = (float)(1.0 + Main.rand.Next(-10, 11) * 0.00999999977648258);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.25f;
                    Main.dust[index2].velocity -= oldVelocity / 10f;
                }
            }
            else if (type == 619)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 50);
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, (int)ai[0], velocity.X * 0.1f, velocity.Y * 0.1f, 0, new Color(), 0.5f);
                    if (Main.rand.Next(3) == 0)
                    {
                        Main.dust[index2].fadeIn = (float)(1.10000002384186 + Main.rand.Next(-10, 11) * 0.00999999977648258);
                        Main.dust[index2].scale = (float)(0.349999994039536 + Main.rand.Next(-10, 11) * 0.00999999977648258);
                        ++Main.dust[index2].type;
                    }
                    else
                        Main.dust[index2].scale = (float)(1.20000004768372 + Main.rand.Next(-10, 11) * 0.00999999977648258);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 2.5f;
                    Main.dust[index2].velocity -= oldVelocity / 10f;
                }
                if (Main.myPlayer == owner)
                {
                    int num2 = Main.rand.Next(3, 6);
                    for (int index = 0; index < num2; ++index)
                    {
                        Vector2 vector2 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
                        while (vector2.X == 0.0 && vector2.Y == 0.0)
                            vector2 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
                        vector2.Normalize();
                        vector2 *= Main.rand.Next(70, 101) * 0.1f;
                        NewProjectile(oldPosition.X + (width / 2), oldPosition.Y + (height / 2), vector2.X, vector2.Y, 620, (int)(damage * 0.8), knockBack * 0.8f, owner, ai[0], 0.0f);
                    }
                }
            }
            if (type == 601)
            {
                Color portalColor = PortalHelper.GetPortalColor(owner, (int)ai[0]);
                portalColor.A = byte.MaxValue;
                for (int index = 0; index < 6; ++index)
                {
                    Vector2 vector2 = Utils.RotatedByRandom(Vector2.UnitY, 6.28318548202515) * (3f * Utils.NextFloat(Main.rand));
                    Dust dust = Main.dust[Dust.NewDust(Center, 0, 0, 263, 0.0f, 0.0f, 0, new Color(), 1f)];
                    dust.position = Center;
                    dust.velocity = vector2 + velocity / 5f;
                    dust.color = portalColor;
                    dust.scale = 2f;
                    dust.noLight = true;
                    dust.noGravity = true;
                }
            }
            if (type == 596)
            {
                position = Center;
                width = height = 60;
                Center = position;
                int num2 = 40;
                if (Main.expertMode)
                    num2 = 30;
                damage = num2;
                Damage();
                Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                for (int index1 = 0; index1 < 4; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                }
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 27, 0.0f, 0.0f, 0, new Color(), 2.5f);
                    Main.dust[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 2f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 0, new Color(), 1.5f);
                    Main.dust[index2].position = Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), Utils.ToRotation(velocity), new Vector2()) * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 2f;
                }
            }
            else if (type >= 625 && type <= 628)
            {
                for (int index1 = 0; index1 < 6; ++index1)
                {
                    int index2 = Dust.NewDust(position, width, height, 135, 0.0f, 0.0f, 100, new Color(), 2f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].noLight = true;
                }
            }
            if (type == 631)
            {
                int num2 = Main.rand.Next(5, 10);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(Center, 0, 0, 229, 0.0f, 0.0f, 100, new Color(), 1f);
                    Main.dust[index2].velocity *= 1.6f;
                    --Main.dust[index2].velocity.Y;
                    Main.dust[index2].position -= Vector2.One * 4f;
                    Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, Center, 0.5f);
                    Main.dust[index2].noGravity = true;
                }
            }
            if (type == 539)
            {
                position = Center;
                width = height = 80;
                Center = position;
                Damage();
                Main.PlaySound(4, (int)position.X, (int)position.Y, 7);
                for (int index1 = 0; index1 < 4; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                }
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 176, 0.0f, 0.0f, 200, new Color(), 3.7f);
                    Main.dust[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 180, 0.0f, 0.0f, 0, new Color(), 2.7f);
                    Main.dust[index2].position = Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), Utils.ToRotation(velocity), new Vector2()) * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 0, new Color(), 1.5f);
                    Main.dust[index2].position = Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), Utils.ToRotation(velocity), new Vector2()) * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
            }
            else if (type == 585)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 27);
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(position, width, height, 26, 0.0f, 0.0f, 100, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.2f;
                    Main.dust[index2].scale = 1.3f;
                    Main.dust[index2].velocity -= oldVelocity * 0.3f;
                    int index3 = Dust.NewDust(new Vector2(position.X + 4f, position.Y + 4f), width - 8, height - 8, 27, 0.0f, 0.0f, 100, new Color(), 2f);
                    Main.dust[index3].noGravity = true;
                    Main.dust[index3].velocity *= 3f;
                }
            }
            else if (type == 590)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 27);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(position, width, height, 165, 0.0f, 0.0f, 50, new Color(), 1.5f);
                    Main.dust[index2].velocity *= 2f;
                    Main.dust[index2].noGravity = true;
                }
                float Scale = (float)(0.600000023841858 + (double)Utils.NextFloat(Main.rand) * 0.400000005960464);
                int index3 = Gore.NewGore(position, Vector2.Zero, 375, Scale);
                Main.gore[index3].velocity *= 0.3f;
                int index4 = Gore.NewGore(position, Vector2.Zero, 376, Scale);
                Main.gore[index4].velocity *= 0.3f;
                int index5 = Gore.NewGore(position, Vector2.Zero, 377, Scale);
                Main.gore[index5].velocity *= 0.3f;
            }
            else if (type == 587)
            {
                Color newColor = Main.hslToRgb(ai[1], 1f, 0.5f);
                newColor.A = (byte)200;
                Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(position, width, height, 76, 0.0f, 0.0f, 0, newColor, 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.2f;
                    Main.dust[index2].scale = 0.9f;
                    Main.dust[index2].velocity -= oldVelocity * 0.3f;
                    int index3 = Dust.NewDust(new Vector2(position.X + 4f, position.Y + 4f), width - 8, height - 8, 76, 0.0f, 0.0f, 0, newColor, 1.1f);
                    Main.dust[index3].noGravity = true;
                    Main.dust[index3].velocity *= 2f;
                }
            }
            else if (type == 572)
            {
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 40, velocity.X * 0.1f, velocity.Y * 0.1f, 100, new Color(), 1f);
                    Main.dust[index2].velocity *= 3f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].scale = 1.25f;
                    Main.dust[index2].position = (Center + position) / 2f;
                }
            }
            else if (type == 581)
            {
                for (int index = 0; index < 30; ++index)
                {
                    int Type = Utils.SelectRandom<int>(Main.rand, 229, 229, 161);
                    Dust dust = Main.dust[Dust.NewDust(position, width, height, Type, 0.0f, 0.0f, 0, new Color(), 1f)];
                    dust.noGravity = true;
                    dust.scale = 1.25f + Utils.NextFloat(Main.rand);
                    dust.fadeIn = 0.25f;
                    dust.velocity *= 2f;
                    dust.noLight = true;
                }
            }
            if (type == 405)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 54);
                Vector2 center = Center;
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int num2 = 10;
                    Vector2 vector2_1 = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f) * Main.rand.Next(24, 41) / 8f;
                    int index2 = Dust.NewDust(Center - Vector2.One * num2, num2 * 2, num2 * 2, 212, 0.0f, 0.0f, 0, new Color(), 1f);
                    Dust dust = Main.dust[index2];
                    Vector2 vector2_2 = Vector2.Normalize(dust.position - Center);
                    dust.position = Center + vector2_2 * num2 * scale;
                    dust.velocity = index1 >= 30 ? vector2_2 * Main.rand.Next(45, 91) / 10f : vector2_2 * dust.velocity.Length();
                    dust.color = Main.hslToRgb((float)(0.400000005960464 + Main.rand.NextDouble() * 0.200000002980232), 0.9f, 0.5f);
                    dust.color = Color.Lerp(dust.color, Color.White, 0.3f);
                    dust.noGravity = true;
                    dust.scale = 0.7f;
                }
            }
            if (type == 501)
            {
                Main.PlaySound(13, (int)position.X, (int)position.Y, 1);
                int num2 = 20;
                position.X -= num2;
                position.Y -= num2;
                width += num2 * 2;
                height += num2 * 2;
                int num3 = num2 + 20;
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(position, width, height, 188, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].velocity *= 0.5f;
                }
                for (int index1 = 0; index1 < 5; ++index1)
                {
                    int index2 = Gore.NewGore(new Vector2(position.X + Main.rand.Next(width), position.Y + Main.rand.Next(height)), new Vector2(), Main.rand.Next(435, 438), 1f);
                    Main.gore[index2].velocity *= 0.5f;
                    if (index1 == 0)
                    {
                        ++Main.gore[index2].velocity.X;
                        ++Main.gore[index2].velocity.Y;
                    }
                    else if (index1 == 1)
                    {
                        --Main.gore[index2].velocity.X;
                        ++Main.gore[index2].velocity.Y;
                    }
                    else if (index1 == 2)
                    {
                        ++Main.gore[index2].velocity.X;
                        --Main.gore[index2].velocity.Y;
                    }
                    else
                    {
                        --Main.gore[index2].velocity.X;
                        --Main.gore[index2].velocity.Y;
                    }
                    Main.gore[index2].velocity *= 0.5f;
                }
                position.X -= num3;
                position.Y -= num3;
                width += num3 * 2;
                height += num3 * 2;
                Damage();
            }
            if (type == 410)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 54);
                Vector2 center = Center;
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int num2 = (int)(10.0 * ai[1]);
                    Vector2 vector2_1 = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f) * Main.rand.Next(24, 41) / 8f;
                    int index2 = Dust.NewDust(Center - Vector2.One * num2, num2 * 2, num2 * 2, 212, 0.0f, 0.0f, 0, new Color(), 1f);
                    Dust dust = Main.dust[index2];
                    Vector2 vector2_2 = Vector2.Normalize(dust.position - Center);
                    dust.position = Center + vector2_2 * num2 * scale;
                    dust.velocity = index1 >= 30 ? vector2_2 * Main.rand.Next(45, 91) / 10f : vector2_2 * dust.velocity.Length();
                    dust.color = Main.hslToRgb((float)(0.400000005960464 + Main.rand.NextDouble() * 0.200000002980232), 0.9f, 0.5f);
                    dust.color = Color.Lerp(dust.color, Color.White, 0.3f);
                    dust.noGravity = true;
                    dust.scale = 0.7f;
                }
            }
            if (type == 629 && Main.netMode != 1)
            {
                switch (Main.npc[(int)ai[0]].type)
                {
                    case 507:
                        if (NPC.ShieldStrengthTowerNebula != 0)
                            Main.npc[(int)ai[0]].ai[3] = 1f;
                        NPC.ShieldStrengthTowerNebula = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerNebula - 1), 0.0f, (float)NPC.ShieldStrengthTowerMax);
                        break;
                    case 517:
                        if (NPC.ShieldStrengthTowerSolar != 0)
                            Main.npc[(int)ai[0]].ai[3] = 1f;
                        NPC.ShieldStrengthTowerSolar = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerSolar - 1), 0.0f, (float)NPC.ShieldStrengthTowerMax);
                        break;
                    case 422:
                        if (NPC.ShieldStrengthTowerVortex != 0)
                            Main.npc[(int)ai[0]].ai[3] = 1f;
                        NPC.ShieldStrengthTowerVortex = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerVortex - 1), 0.0f, (float)NPC.ShieldStrengthTowerMax);
                        break;
                    case 493:
                        if (NPC.ShieldStrengthTowerStardust != 0)
                            Main.npc[(int)ai[0]].ai[3] = 1f;
                        NPC.ShieldStrengthTowerStardust = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerStardust - 1), 0.0f, (float)NPC.ShieldStrengthTowerMax);
                        break;
                }
                Main.npc[(int)ai[0]].netUpdate = true;
                NetMessage.SendData(101, -1, -1, "", 0, 0.0f, 0.0f, 0.0f, 0, 0, 0);
            }
            if (aiStyle == 105 && owner == Main.myPlayer && ai[1] == 0.0)
            {
                Vector2 vector2_1 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
                vector2_1.Normalize();
                Vector2 vector2_2 = vector2_1 * 0.3f;
                NewProjectile(Center.X, Center.Y, vector2_2.X, vector2_2.Y, Main.rand.Next(569, 572), damage, 0.0f, owner, 0.0f, 0.0f);
            }
            if (type == 452)
            {
                Main.PlaySound(29, (int)position.X, (int)position.Y, 103);
                position = Center;
                width = height = 144;
                position.X -= (width / 2);
                position.Y -= (height / 2);
                for (int index = 0; index < 4; ++index)
                    Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                for (int index1 = 0; index1 < 40; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 229, 0.0f, 0.0f, 0, new Color(), 2.5f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 229, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                }
                for (int index1 = 0; index1 < 1; ++index1)
                {
                    int index2 = Gore.NewGore(position + new Vector2((width * Main.rand.Next(100)) / 100f, (height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += Main.rand.Next(-10, 11) * 0.05f;
                }
                Damage();
            }
            if (type == 454)
            {
                Main.PlaySound(4, (int)position.X, (int)position.Y, 6);
                position = Center;
                width = height = 208;
                position.X -= (width / 2);
                position.Y -= (height / 2);
                for (int index1 = 0; index1 < 7; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = Utils.RotatedBy(new Vector2((width / 2), 0.0f), 6.28318548202515 * (float)Main.rand.NextDouble(), new Vector2()) * (float)Main.rand.NextDouble() + Center;
                }
                for (int index1 = 0; index1 < 60; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 229, 0.0f, 0.0f, 0, new Color(), 2.5f);
                    Main.dust[index2].position = Utils.RotatedBy(new Vector2((width / 2), 0.0f), 6.28318548202515 * (float)Main.rand.NextDouble(), new Vector2()) * (float)Main.rand.NextDouble() + Center;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1f;
                    int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 229, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].position = Utils.RotatedBy(new Vector2((width / 2), 0.0f), 6.28318548202515 * (float)Main.rand.NextDouble(), new Vector2()) * (float)Main.rand.NextDouble() + Center;
                    Main.dust[index3].velocity *= 1f;
                    Main.dust[index3].noGravity = true;
                }
                for (int index1 = 0; index1 < 3; ++index1)
                {
                    int index2 = Gore.NewGore(position + new Vector2((width * Main.rand.Next(100)) / 100f, (height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += Main.rand.Next(-10, 11) * 0.05f;
                }
                Damage();
            }
            if (type == 467)
            {
                position = Center;
                width = height = 176;
                Center = position;
                Damage();
                Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                for (int index1 = 0; index1 < 4; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                }
                for (int index1 = 0; index1 < 30; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 200, new Color(), 3.7f);
                    Main.dust[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                    Main.dust[index3].fadeIn = 2.5f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 0, new Color(), 2.7f);
                    Main.dust[index2].position = Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), Utils.ToRotation(velocity), new Vector2()) * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 0, new Color(), 1.5f);
                    Main.dust[index2].position = Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), Utils.ToRotation(velocity), new Vector2()) * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 2; ++index1)
                {
                    int index2 = Gore.NewGore(position + new Vector2((width * Main.rand.Next(100)) / 100f, (height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += Main.rand.Next(-10, 11) * 0.05f;
                }
            }
            if (type == 468)
            {
                position = Center;
                width = height = 176;
                Center = position;
                Damage();
                Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                for (int index1 = 0; index1 < 4; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                }
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 27, 0.0f, 0.0f, 200, new Color(), 3.7f);
                    Main.dust[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 27, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                    Main.dust[index3].fadeIn = 2.5f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 27, 0.0f, 0.0f, 0, new Color(), 2.7f);
                    Main.dust[index2].position = Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), Utils.ToRotation(velocity), new Vector2()) * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 0, new Color(), 1.5f);
                    Main.dust[index2].position = Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), Utils.ToRotation(velocity), new Vector2()) * width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 2; ++index1)
                {
                    int index2 = Gore.NewGore(position + new Vector2((width * Main.rand.Next(100)) / 100f, (height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].position = Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * width / 2f;
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += Main.rand.Next(-10, 11) * 0.05f;
                }
            }
            if (type == 485)
            {
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(position, width, height, 6, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= oldVelocity * Main.rand.Next(20, 60) * 0.01f;
                }
            }
            else if (type == 484)
            {
                for (int index1 = 0; index1 < 5; ++index1)
                {
                    int index2 = Dust.NewDust(position, width, height, 78, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= oldVelocity / 5f;
                    Main.dust[index2].scale = 0.85f;
                }
            }
            else if (type == 483)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                if (owner == Main.myPlayer)
                {
                    int length = Main.rand.Next(4, 8);
                    int[] numArray = new int[length];
                    int maxValue = 0;
                    for (int index = 0; index < 200; ++index)
                    {
                        if (Main.npc[index].CanBeChasedBy(this, true) && Collision.CanHitLine(position, width, height, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height))
                        {
                            numArray[maxValue] = index;
                            ++maxValue;
                            if (maxValue == length)
                                break;
                        }
                    }
                    if (maxValue > 1)
                    {
                        for (int index1 = 0; index1 < 100; ++index1)
                        {
                            int index2 = Main.rand.Next(maxValue);
                            int index3 = index2;
                            while (index3 == index2)
                                index3 = Main.rand.Next(maxValue);
                            int num2 = numArray[index2];
                            numArray[index2] = numArray[index3];
                            numArray[index3] = num2;
                        }
                    }
                    Vector2 vector2_1 = new Vector2(-1f, -1f);
                    for (int index = 0; index < maxValue; ++index)
                    {
                        Vector2 vector2_2 = Main.npc[numArray[index]].Center - Center;
                        vector2_2.Normalize();
                        vector2_1 += vector2_2;
                    }
                    vector2_1.Normalize();
                    for (int index = 0; index < length; ++index)
                    {
                        float num2 = Main.rand.Next(8, 15);
                        Vector2 vector2_2 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
                        vector2_2.Normalize();
                        if (maxValue > 0)
                        {
                            vector2_2 += vector2_1;
                            vector2_2.Normalize();
                        }
                        vector2_2 *= num2;
                        if (maxValue > 0)
                        {
                            --maxValue;
                            vector2_2 = Main.npc[numArray[maxValue]].Center - Center;
                            vector2_2.Normalize();
                            vector2_2 *= num2;
                        }
                        NewProjectile(Center.X, Center.Y, vector2_2.X, vector2_2.Y, 484, (int)(damage * 0.7), knockBack * 0.7f, owner, 0.0f, 0.0f);
                    }
                }
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(position, width, height, 78, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 4f;
                }
                for (int index1 = 0; index1 < 7; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].velocity *= 0.9f;
                    Main.dust[index2].scale = 0.9f;
                }
                for (int index1 = 0; index1 < 3; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].velocity *= 2f;
                }
                int index4 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                Main.gore[index4].velocity *= 0.3f;
                Main.gore[index4].velocity.X += Main.rand.Next(-1, 2);
                Main.gore[index4].velocity.Y += Main.rand.Next(-1, 2);
                if (owner == Main.myPlayer)
                {
                    int num2 = 100;
                    position.X -= (float)(num2 / 2);
                    position.Y -= (float)(num2 / 2);
                    width += num2;
                    ++height;
                    penetrate = -1;
                    Damage();
                }
            }
            if (type == 523)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 54);
                for (int index1 = 0; index1 < 25; ++index1)
                {
                    int index2 = Dust.NewDust(position, width, height, 256, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].position = (Main.dust[index2].position + position) / 2f;
                    Main.dust[index2].velocity = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
                    Main.dust[index2].velocity.Normalize();
                    Main.dust[index2].velocity *= Main.rand.Next(1, 30) * 0.1f;
                    Main.dust[index2].alpha = alpha;
                }
            }
            else if (type == 522)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 118);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 254, velocity.X * 0.1f, velocity.Y * 0.1f, 0, new Color(), 0.5f);
                    if (Main.rand.Next(3) == 0)
                    {
                        Main.dust[index2].fadeIn = (float)(0.75 + Main.rand.Next(-10, 11) * 0.00999999977648258);
                        Main.dust[index2].scale = (float)(0.25 + Main.rand.Next(-10, 11) * 0.00499999988824129);
                        ++Main.dust[index2].type;
                    }
                    else
                        Main.dust[index2].scale = (float)(1.0 + Main.rand.Next(-10, 11) * 0.00999999977648258);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.25f;
                    Main.dust[index2].velocity -= oldVelocity / 10f;
                }
            }
            else if (type == 521)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 110);
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 254, velocity.X * 0.1f, velocity.Y * 0.1f, 0, new Color(), 0.5f);
                    if (Main.rand.Next(3) == 0)
                    {
                        Main.dust[index2].fadeIn = (float)(1.10000002384186 + Main.rand.Next(-10, 11) * 0.00999999977648258);
                        Main.dust[index2].scale = (float)(0.349999994039536 + Main.rand.Next(-10, 11) * 0.00999999977648258);
                        ++Main.dust[index2].type;
                    }
                    else
                        Main.dust[index2].scale = (float)(1.20000004768372 + Main.rand.Next(-10, 11) * 0.00999999977648258);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 2.5f;
                    Main.dust[index2].velocity -= oldVelocity / 10f;
                }
                if (Main.myPlayer == owner)
                {
                    int num2 = Main.rand.Next(3, 6);
                    for (int index = 0; index < num2; ++index)
                    {
                        Vector2 vector2 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
                        while (vector2.X == 0.0 && vector2.Y == 0.0)
                            vector2 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
                        vector2.Normalize();
                        vector2 *= Main.rand.Next(70, 101) * 0.1f;
                        NewProjectile(oldPosition.X + (width / 2), oldPosition.Y + (height / 2), vector2.X, vector2.Y, 522, (int)(damage * 0.8), knockBack * 0.8f, owner, 0.0f, 0.0f);
                    }
                }
            }
            if (type == 520)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 50);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 252, velocity.X * 0.1f, velocity.Y * 0.1f, 0, new Color(), 0.75f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= oldVelocity / 3f;
                }
            }
            if (type == 459)
            {
                int num2 = 3;
                int num3 = 10;
                int num4 = 0;
                if (scale >= 1.0)
                {
                    position = Center;
                    width = height = 144;
                    Center = position;
                    num2 = 7;
                    num3 = 30;
                    num4 = 2;
                    Damage();
                }
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = Utils.RotatedBy(new Vector2((width / 2), 0.0f), 6.28318548202515 * (float)Main.rand.NextDouble(), new Vector2()) * (float)Main.rand.NextDouble() + Center;
                }
                for (int index1 = 0; index1 < num3; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 226, 0.0f, 0.0f, 0, new Color(), 1.5f);
                    Main.dust[index2].position = Utils.RotatedBy(new Vector2((width / 2), 0.0f), 6.28318548202515 * (float)Main.rand.NextDouble(), new Vector2()) * (float)Main.rand.NextDouble() + Center;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1f;
                }
                for (int index1 = 0; index1 < num4; ++index1)
                {
                    int index2 = Gore.NewGore(position + new Vector2((width * Main.rand.Next(100)) / 100f, (height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += Main.rand.Next(-10, 11) * 0.05f;
                }
            }
            if (owner != Main.myPlayer && type == 453 && Main.player[owner].mount.AbilityActive)
                Main.player[owner].mount.UseAbility(Main.player[owner], position, false);
            if (type == 441)
                Main.player[owner].mount.StopAbilityCharge();
            if (type == 444)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 96);
                int num2 = Main.rand.Next(5, 9);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(Center, 0, 0, 171, 0.0f, 0.0f, 100, new Color(), 1.4f);
                    Main.dust[index2].velocity *= 0.8f;
                    Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, Center, 0.5f);
                    Main.dust[index2].noGravity = true;
                }
                if (owner == Main.myPlayer)
                {
                    Vector2 vector2_1 = Main.screenPosition + new Vector2(Main.mouseX, Main.mouseY);
                    if (Main.player[owner].gravDir == -1.0)
                        vector2_1.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y;
                    Vector2 vector2_2 = Vector2.Normalize(vector2_1 - Center) * localAI[1];
                    NewProjectile(Center.X, Center.Y, vector2_2.X, vector2_2.Y, (int)localAI[0], damage, knockBack, owner, 0.0f, 0.0f);
                }
            }
            if (type == 472)
            {
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(position, width, height, 30, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 0.45f;
                    Main.dust[index2].velocity += velocity * 0.9f;
                }
            }
            if (type == 639 || type == 640)
            {
                int num2 = Main.rand.Next(5, 10);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(Center, 0, 0, 220, 0.0f, 0.0f, 100, new Color(), 0.5f);
                    Main.dust[index2].velocity *= 1.6f;
                    --Main.dust[index2].velocity.Y;
                    Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, Center, 0.5f);
                    Main.dust[index2].noGravity = true;
                }
                if (owner == Main.myPlayer && type == 639)
                {
                    int num3 = num1 + 1;
                    int nextSlot = Projectile.GetNextSlot();
                    if (Main.ProjectileUpdateLoopIndex < nextSlot && Main.ProjectileUpdateLoopIndex != -1)
                        ++num3;
                    Vector2 vector2 = new Vector2(ai[0], ai[1]);
                    NewProjectile(localAI[0], localAI[1], vector2.X, vector2.Y, 640, damage, knockBack, owner, 0.0f, num3);
                }
            }
            if (type == 435)
            {
                int num2 = Main.rand.Next(5, 10);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(Center, 0, 0, 226, 0.0f, 0.0f, 100, new Color(), 0.5f);
                    Main.dust[index2].velocity *= 1.6f;
                    --Main.dust[index2].velocity.Y;
                    Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, Center, 0.5f);
                    Main.dust[index2].noGravity = true;
                }
            }
            if (type == 436)
            {
                int num2 = Main.rand.Next(5, 10);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(Center, 0, 0, 220, 0.0f, 0.0f, 100, new Color(), 0.5f);
                    Main.dust[index2].velocity *= 1.6f;
                    --Main.dust[index2].velocity.Y;
                    Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, Center, 0.5f);
                    Main.dust[index2].noGravity = true;
                }
            }
            if (type == 462)
            {
                int num2 = Main.rand.Next(5, 10);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(Center, 0, 0, 229, 0.0f, 0.0f, 100, new Color(), 0.5f);
                    Main.dust[index2].velocity *= 1.6f;
                    --Main.dust[index2].velocity.Y;
                    Main.dust[index2].position -= Vector2.One * 4f;
                    Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, Center, 0.5f);
                    Main.dust[index2].noGravity = true;
                }
            }
            if (type == 442)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 94);
                int num2 = Main.rand.Next(3, 7);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(position, width, height, 135, 0.0f, 0.0f, 100, new Color(), 2.1f);
                    Main.dust[index2].velocity *= 2f;
                    Main.dust[index2].noGravity = true;
                }
                if (Main.myPlayer == owner)
                {
                    Rectangle rectangle = new Rectangle((int)Center.X - 40, (int)Center.Y - 40, 80, 80);
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (index != whoAmI && Main.projectile[index].active && (Main.projectile[index].owner == owner && Main.projectile[index].type == 443) && Main.projectile[index].getRect().Intersects(rectangle))
                        {
                            Main.projectile[index].ai[1] = 1f;
                            Main.projectile[index].velocity = (Center - Main.projectile[index].Center) / 5f;
                            Main.projectile[index].netUpdate = true;
                        }
                    }
                    NewProjectile(Center.X, Center.Y, 0.0f, 0.0f, 443, damage, 0.0f, owner, 0.0f, 0.0f);
                }
            }
            if (type == 440)
            {
                int num2 = Main.rand.Next(3, 7);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(Center - velocity / 2f, 0, 0, 135, 0.0f, 0.0f, 100, new Color(), 2.1f);
                    Main.dust[index2].velocity *= 2f;
                    Main.dust[index2].noGravity = true;
                }
            }
            if (type == 606)
            {
                int num2 = Main.rand.Next(3, 7);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(Center - velocity / 2f, 0, 0, 182, 0.0f, 0.0f, 100, new Color(), 1.6f);
                    Main.dust[index2].velocity *= 1.5f;
                    Main.dust[index2].noGravity = true;
                }
            }
            if (type == 449)
            {
                int num2 = Main.rand.Next(3, 7);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(Center - velocity / 2f, 0, 0, 228, 0.0f, 0.0f, 100, new Color(), 2.1f);
                    Main.dust[index2].velocity *= 2f;
                    Main.dust[index2].noGravity = true;
                }
            }
            if (type == 495)
            {
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(Center, 10, 10, 27, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= oldVelocity * 0.3f;
                }
            }
            if (type == 497)
            {
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(Center, 10, 10, 27, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 2f;
                    Main.dust[index2].velocity -= oldVelocity * 0.3f;
                    Main.dust[index2].scale += Main.rand.Next(150) * (1.0f / 1000.0f);
                }
            }
            if (type == 448)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                position = Center;
                width = height = 112;
                position.X -= (width / 2);
                position.Y -= (height / 2);
                for (int index = 0; index < 4; ++index)
                    Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                for (int index1 = 0; index1 < 40; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 228, 0.0f, 0.0f, 0, new Color(), 2.5f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 228, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                }
                for (int index1 = 0; index1 < 1; ++index1)
                {
                    int index2 = Gore.NewGore(position + new Vector2((width * Main.rand.Next(100)) / 100f, (height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += Main.rand.Next(-10, 11) * 0.05f;
                }
                Damage();
            }
            if (type == 616)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                position = Center;
                width = height = 80;
                position.X -= (width / 2);
                position.Y -= (height / 2);
                for (int index = 0; index < 4; ++index)
                    Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                for (int index1 = 0; index1 < 40; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 229, 0.0f, 0.0f, 200, new Color(), 2.5f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 2f;
                    int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 229, 0.0f, 0.0f, 200, new Color(), 1.5f);
                    Main.dust[index3].velocity *= 1.2f;
                    Main.dust[index3].noGravity = true;
                }
                for (int index1 = 0; index1 < 1; ++index1)
                {
                    int index2 = Gore.NewGore(position + new Vector2((width * Main.rand.Next(100)) / 100f, (height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += Main.rand.Next(-10, 11) * 0.05f;
                }
                Damage();
            }
            if (type == 502)
            {
                Vector2 vector2 = new Vector2(width, height) / 2f;
                for (int index1 = 0; index1 < oldPos.Length; ++index1)
                {
                    if (!(oldPos[index1] == Vector2.Zero))
                    {
                        int index2 = Dust.NewDust(oldPos[index1] + vector2, 0, 0, 66, 0.0f, 0.0f, 150, Color.Transparent, 0.7f);
                        Main.dust[index2].color = Main.hslToRgb(Utils.NextFloat(Main.rand), 1f, 0.5f);
                        Main.dust[index2].noGravity = true;
                    }
                }
            }
            if (type == 510)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 107);
                Gore.NewGore(Center, -oldVelocity * 0.2f, 704, 1f);
                Gore.NewGore(Center, -oldVelocity * 0.2f, 705, 1f);
                if (owner == Main.myPlayer)
                {
                    int num2 = Main.rand.Next(20, 31);
                    for (int index = 0; index < num2; ++index)
                    {
                        Vector2 vector2 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
                        vector2.Normalize();
                        vector2 *= Main.rand.Next(10, 201) * 0.01f;
                        NewProjectile(Center.X, Center.Y, vector2.X, vector2.Y, 511 + Main.rand.Next(3), damage, 1f, owner, 0.0f, Main.rand.Next(-45, 1));
                    }
                }
            }
            if (type == 408)
            {
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(Center - Vector2.One * 10f, 50, 50, 5, 0.0f, -2f, 0, new Color(), 1f);
                    Main.dust[index2].velocity /= 2f;
                }
                int num2 = 10;
                int index3 = Gore.NewGore(Center, velocity * 0.8f, 584, 1f);
                Main.gore[index3].timeLeft /= num2;
                int index4 = Gore.NewGore(Center, velocity * 0.9f, 585, 1f);
                Main.gore[index4].timeLeft /= num2;
                int index5 = Gore.NewGore(Center, velocity * 1f, 586, 1f);
                Main.gore[index5].timeLeft /= num2;
            }
            if (type == 385)
            {
                Main.PlaySound(4, (int)Center.X, (int)Center.Y, 19);
                int num2 = 36;
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    Vector2 vector2_1 = Utils.RotatedBy(Vector2.Normalize(velocity) * new Vector2(width / 2f, height) * 0.75f, (double)(index1 - (num2 / 2 - 1)) * 6.28318548202515 / num2, new Vector2()) + Center;
                    Vector2 vector2_2 = vector2_1 - Center;
                    int index2 = Dust.NewDust(vector2_1 + vector2_2, 0, 0, 172, vector2_2.X * 2f, vector2_2.Y * 2f, 100, new Color(), 1.4f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].noLight = true;
                    Main.dust[index2].velocity = vector2_2;
                }
                if (owner == Main.myPlayer)
                {
                    if (ai[1] < 1.0)
                    {
                        int index = NewProjectile(Center.X - (direction * 30), Center.Y - 4f, (float)-direction * 0.01f, 0.0f, 384, Main.expertMode ? 25 : 40, 4f, owner, 16f, 15f);
                        Main.projectile[index].netUpdate = true;
                    }
                    else
                    {
                        int num3 = (int)(Center.Y / 16.0);
                        int index1 = (int)(Center.X / 16.0);
                        int num4 = 100;
                        if (index1 < 10)
                            index1 = 10;
                        if (index1 > Main.maxTilesX - 10)
                            index1 = Main.maxTilesX - 10;
                        if (num3 < 10)
                            num3 = 10;
                        if (num3 > Main.maxTilesY - num4 - 10)
                            num3 = Main.maxTilesY - num4 - 10;
                        for (int index2 = num3; index2 < num3 + num4; ++index2)
                        {
                            Tile tile = Main.tile[index1, index2];
                            if (tile.active() && (Main.tileSolid[(int)tile.type] || (int)tile.liquid != 0))
                            {
                                num3 = index2;
                                break;
                            }
                        }
                        int Damage = Main.expertMode ? 50 : 80;
                        int index3 = NewProjectile((float)(index1 * 16 + 8), (float)(num3 * 16 - 24), 0.0f, 0.0f, 386, Damage, 4f, Main.myPlayer, 16f, 24f);
                        Main.projectile[index3].netUpdate = true;
                    }
                }
            }
            else if (type >= 424 && type <= 426)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 89);
                position.X += (width / 2);
                position.Y += (height / 2);
                width = (int)(128.0 * scale);
                height = (int)(128.0 * scale);
                position.X -= (width / 2);
                position.Y -= (height / 2);
                for (int index = 0; index < 8; ++index)
                    Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                for (int index1 = 0; index1 < 32; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                }
                for (int index1 = 0; index1 < 2; ++index1)
                {
                    int index2 = Gore.NewGore(position + new Vector2((width * Main.rand.Next(100)) / 100f, (height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += Main.rand.Next(-10, 11) * 0.05f;
                }
                if (owner == Main.myPlayer)
                {
                    localAI[1] = -1f;
                    maxPenetrate = 0;
                    Damage();
                }
                for (int index1 = 0; index1 < 5; ++index1)
                {
                    int index2 = Dust.NewDust(position, width, height, Utils.SelectRandom<int>(Main.rand, 6, 259, 158), 2.5f * direction, -2.5f, 0, new Color(), 1f);
                    Main.dust[index2].alpha = 200;
                    Main.dust[index2].velocity *= 2.4f;
                    Main.dust[index2].scale += Utils.NextFloat(Main.rand);
                }
            }
            if (type == 399)
            {
                Main.PlaySound(13, (int)position.X, (int)position.Y, 1);
                Vector2 vector2 = new Vector2(20f, 20f);
                for (int index = 0; index < 5; ++index)
                    Dust.NewDust(Center - vector2 / 2f, (int)vector2.X, (int)vector2.Y, 12, 0.0f, 0.0f, 0, Color.Red, 1f);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(Center - vector2 / 2f, (int)vector2.X, (int)vector2.Y, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].velocity *= 1.4f;
                }
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(Center - vector2 / 2f, (int)vector2.X, (int)vector2.Y, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 5f;
                    int index3 = Dust.NewDust(Center - vector2 / 2f, (int)vector2.X, (int)vector2.Y, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].velocity *= 3f;
                }
                if (Main.myPlayer == owner)
                {
                    for (int index = 0; index < 6; ++index)
                    {
                        float SpeedX = (float)(-velocity.X * Main.rand.Next(20, 50) * 0.00999999977648258 + Main.rand.Next(-20, 21) * 0.400000005960464);
                        float SpeedY = (float)(-Math.Abs(velocity.Y) * Main.rand.Next(30, 50) * 0.00999999977648258 + Main.rand.Next(-20, 5) * 0.400000005960464);
                        NewProjectile(Center.X + SpeedX, Center.Y + SpeedY, SpeedX, SpeedY, 400 + Main.rand.Next(3), (int)(damage * 0.5), 0.0f, owner, 0.0f, 0.0f);
                    }
                }
            }
            if (type == 384 || type == 386)
            {
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(position, width, height, 212, (direction * 2), 0.0f, 100, new Color(), 1.4f);
                    Dust dust = Main.dust[index2];
                    dust.color = Color.CornflowerBlue;
                    dust.color = Color.Lerp(dust.color, Color.White, 0.3f);
                    dust.noGravity = true;
                }
            }
            if (type == 507 || type == 508)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                Vector2 vector2_1 = position;
                Vector2 vector2_2 = oldVelocity;
                vector2_2.Normalize();
                Vector2 Position = vector2_1 + vector2_2 * 16f;
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(Position, width, height, 81, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].position = (Main.dust[index2].position + Center) / 2f;
                    Main.dust[index2].velocity += oldVelocity * 0.4f;
                    Main.dust[index2].velocity *= 0.5f;
                    Main.dust[index2].noGravity = true;
                    Position -= vector2_2 * 8f;
                }
            }
            if (type == 598)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                Vector2 vector2_1 = position;
                Vector2 vector2_2 = Utils.ToRotationVector2(rotation - 1.570796f);
                Vector2 Position = vector2_1 + vector2_2 * 16f;
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(Position, width, height, 81, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].position = (Main.dust[index2].position + Center) / 2f;
                    Main.dust[index2].velocity += vector2_2 * 2f;
                    Main.dust[index2].velocity *= 0.5f;
                    Main.dust[index2].noGravity = true;
                    Position -= vector2_2 * 8f;
                }
            }
            if (type == 1 || type == 81 || type == 98)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                for (int index = 0; index < 10; ++index)
                    Dust.NewDust(new Vector2(position.X, position.Y), width, height, 7, 0.0f, 0.0f, 0, new Color(), 1f);
            }
            if (type == 336 || type == 345)
            {
                for (int index1 = 0; index1 < 6; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 196, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].scale = scale;
                }
            }
            if (type == 358)
            {
                velocity = oldVelocity * 0.2f;
                for (int index1 = 0; index1 < 100; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 211, 0.0f, 0.0f, 75, new Color(), 1.2f);
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].alpha += 25;
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].alpha += 25;
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].alpha += 25;
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].scale = 0.6f;
                    else
                        Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 0.3f;
                    Main.dust[index2].velocity += velocity;
                    Main.dust[index2].velocity *= (float)(1.0 + Main.rand.Next(-100, 101) * 0.00999999977648258);
                    Main.dust[index2].velocity.X += Main.rand.Next(-50, 51) * 0.015f;
                    Main.dust[index2].velocity.Y += Main.rand.Next(-50, 51) * 0.015f;
                    Main.dust[index2].position = Center;
                }
            }
            if (type == 406)
            {
                int Alpha = 175;
                Color newColor = new Color(0, 80, 255, 100);
                velocity = oldVelocity * 0.2f;
                for (int index1 = 0; index1 < 40; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 4, 0.0f, 0.0f, Alpha, newColor, 1.6f);
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].alpha += 25;
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].alpha += 25;
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].alpha += 25;
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].scale = 0.6f;
                    else
                        Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 0.3f;
                    Main.dust[index2].velocity += velocity;
                    Main.dust[index2].velocity *= (float)(1.0 + Main.rand.Next(-100, 101) * 0.00999999977648258);
                    Main.dust[index2].velocity.X += Main.rand.Next(-50, 51) * 0.015f;
                    Main.dust[index2].velocity.Y += Main.rand.Next(-50, 51) * 0.015f;
                    Main.dust[index2].position = Center;
                }
            }
            if (type == 344)
            {
                for (int index1 = 0; index1 < 3; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 197, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].scale = scale;
                }
            }
            else if (type == 343)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 27);
                for (int index1 = 4; index1 < 31; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(oldPosition.X - oldVelocity.X * (30f / index1), oldPosition.Y - oldVelocity.Y * (30f / index1)), 8, 8, 197, oldVelocity.X, oldVelocity.Y, 100, new Color(), 1.2f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 0.5f;
                }
            }
            else if (type == 349)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 27);
                for (int index1 = 0; index1 < 3; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 76, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].noLight = true;
                    Main.dust[index2].scale = 0.7f;
                }
            }
            if (type == 323)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 7, 0.0f, 0.0f, 0, new Color(), 1f);
                    if (Main.rand.Next(2) == 0)
                    {
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].scale = 1.3f;
                        Main.dust[index2].velocity *= 1.5f;
                        Main.dust[index2].velocity -= oldVelocity * 0.5f;
                        Main.dust[index2].velocity *= 1.5f;
                    }
                    else
                    {
                        Main.dust[index2].velocity *= 0.75f;
                        Main.dust[index2].velocity -= oldVelocity * 0.25f;
                        Main.dust[index2].scale = 0.8f;
                    }
                }
            }
            if (type == 589)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 27);
                Color newColor = Color.Red;
                if (ai[1] == 1.0)
                    newColor = Color.Green;
                if (ai[1] == 2.0)
                    newColor = Color.Purple;
                if (ai[1] == 3.0)
                    newColor = Color.Gold;
                if (ai[1] == 4.0)
                    newColor = Color.White;
                newColor.A = (byte)100;
                for (int index1 = 0; index1 < 30; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 11, 0.0f, 0.0f, 0, newColor, 1f);
                    Main.dust[index2].velocity *= (float)(1.0 + (double)Utils.NextFloat(Main.rand) * 1.0);
                    if (index1 < 10)
                    {
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 0.5f;
                    }
                }
            }
            if (type == 346)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 27);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int Type = 10;
                    if (ai[1] == 1.0)
                        Type = 4;
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, Type, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                }
            }
            if (type == 335)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 27);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 90 - (int)ai[1], 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noLight = true;
                    Main.dust[index2].scale = 0.8f;
                }
            }
            if (type == 318)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 30, 0.0f, 0.0f, 0, new Color(), 1f);
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].noGravity = true;
                }
            }
            if (type == 378)
            {
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 30, 0.0f, 0.0f, 0, new Color(), 1f);
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].noGravity = true;
                }
            }
            else if (type == 311)
            {
                for (int index1 = 0; index1 < 5; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 189, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].scale = 0.85f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity += velocity * 0.5f;
                }
            }
            else if (type == 316)
            {
                for (int index1 = 0; index1 < 5; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 195, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].scale = 0.85f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity += velocity * 0.5f;
                }
            }
            else if (type == 184 || type == 195)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                for (int index = 0; index < 5; ++index)
                    Dust.NewDust(new Vector2(position.X, position.Y), width, height, 7, 0.0f, 0.0f, 0, new Color(), 1f);
            }
            else if (type == 275 || type == 276)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                for (int index = 0; index < 5; ++index)
                    Dust.NewDust(new Vector2(position.X, position.Y), width, height, 7, 0.0f, 0.0f, 0, new Color(), 1f);
            }
            else if (type == 291)
            {
                if (owner == Main.myPlayer)
                    NewProjectile(Center.X, Center.Y, 0.0f, 0.0f, 292, damage, knockBack, owner, 0.0f, 0.0f);
            }
            else if (type == 295)
            {
                if (owner == Main.myPlayer)
                    NewProjectile(Center.X, Center.Y, 0.0f, 0.0f, 296, (int)(damage * 0.65), knockBack, owner, 0.0f, 0.0f);
            }
            else if (type == 270)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 27);
                if (ai[0] < 0.0)
                {
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(position, width, height, 26, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 1.2f;
                        Main.dust[index2].scale = 1.3f;
                        Main.dust[index2].velocity -= oldVelocity * 0.3f;
                        int index3 = Dust.NewDust(new Vector2(position.X + 4f, position.Y + 4f), width - 8, height - 8, 5, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].noGravity = true;
                        Main.dust[index3].velocity *= 3f;
                    }
                }
                else
                {
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(position, width, height, 26, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 1.2f;
                        Main.dust[index2].scale = 1.3f;
                        Main.dust[index2].velocity -= oldVelocity * 0.3f;
                        int index3 = Dust.NewDust(new Vector2(position.X + 4f, position.Y + 4f), width - 8, height - 8, 6, 0.0f, 0.0f, 100, new Color(), 2f);
                        Main.dust[index3].noGravity = true;
                        Main.dust[index3].velocity *= 3f;
                    }
                }
            }
            else if (type == 265)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 27);
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 163, 0.0f, 0.0f, 100, new Color(), 1.2f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.2f;
                    Main.dust[index2].velocity -= oldVelocity * 0.3f;
                }
            }
            else if (type == 355)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 27);
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 205, 0.0f, 0.0f, 100, new Color(), 1.2f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.2f;
                    Main.dust[index2].velocity -= oldVelocity * 0.3f;
                }
            }
            else if (type == 304)
            {
                for (int index1 = 0; index1 < 3; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 182, 0.0f, 0.0f, 100, new Color(), 0.8f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.2f;
                    Main.dust[index2].velocity -= oldVelocity * 0.3f;
                }
            }
            else if (type == 263)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 27);
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 92, velocity.X, velocity.Y, Main.rand.Next(0, 101), new Color(), (float)(1.0 + Main.rand.Next(40) * 0.00999999977648258));
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 2f;
                }
            }
            else if (type == 261)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                for (int index = 0; index < 5; ++index)
                    Dust.NewDust(new Vector2(position.X, position.Y), width, height, 148, 0.0f, 0.0f, 0, new Color(), 1f);
            }
            else if (type == 229)
            {
                for (int index1 = 0; index1 < 25; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 157, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.5f;
                    Main.dust[index2].scale = 1.5f;
                }
            }
            else if (type == 239)
            {
                int index = Dust.NewDust(new Vector2(position.X, (float)(position.Y + (double)height - 2.0)), 2, 2, 154, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index].position.X -= 2f;
                Main.dust[index].alpha = 38;
                Main.dust[index].velocity *= 0.1f;
                Main.dust[index].velocity += -oldVelocity * 0.25f;
                Main.dust[index].scale = 0.95f;
            }
            else if (type == 245)
            {
                int index = Dust.NewDust(new Vector2(position.X, (float)(position.Y + (double)height - 2.0)), 2, 2, 114, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index].noGravity = true;
                Main.dust[index].position.X -= 2f;
                Main.dust[index].alpha = 38;
                Main.dust[index].velocity *= 0.1f;
                Main.dust[index].velocity += -oldVelocity * 0.25f;
                Main.dust[index].scale = 0.95f;
            }
            else if (type == 264)
            {
                int index = Dust.NewDust(new Vector2(position.X, (float)(position.Y + (double)height - 2.0)), 2, 2, 54, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index].noGravity = true;
                Main.dust[index].position.X -= 2f;
                Main.dust[index].alpha = 38;
                Main.dust[index].velocity *= 0.1f;
                Main.dust[index].velocity += -oldVelocity * 0.25f;
                Main.dust[index].scale = 0.95f;
            }
            else if (type == 206 || type == 225)
            {
                Main.PlaySound(6, (int)position.X, (int)position.Y, 1);
                for (int index = 0; index < 5; ++index)
                    Dust.NewDust(new Vector2(position.X, position.Y), width, height, 40, 0.0f, 0.0f, 0, new Color(), 1f);
            }
            else if (type == 227)
            {
                Main.PlaySound(6, (int)position.X, (int)position.Y, 1);
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 157, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity += oldVelocity;
                    Main.dust[index2].scale = 1.5f;
                }
            }
            else if (type == 237 && owner == Main.myPlayer)
                NewProjectile(Center.X, Center.Y, 0.0f, 0.0f, 238, damage, knockBack, owner, 0.0f, 0.0f);
            else if (type == 243 && owner == Main.myPlayer)
                NewProjectile(Center.X, Center.Y, 0.0f, 0.0f, 244, damage, knockBack, owner, 0.0f, 0.0f);
            else if (type == 120)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X - velocity.X, position.Y - velocity.Y), width, height, 67, velocity.X, velocity.Y, 100, new Color(), 1f);
                    if (index1 < 5)
                        Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 0.2f;
                }
            }
            else if (type == 181 || type == 189 || type == 566)
            {
                for (int index1 = 0; index1 < 6; ++index1)
                {
                    int index2 = Dust.NewDust(position, width, height, 150, velocity.X, velocity.Y, 50, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].scale = 1f;
                }
            }
            else if (type == 178)
            {
                for (int index1 = 0; index1 < 85; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, Main.rand.Next(139, 143), velocity.X, velocity.Y, 0, new Color(), 1.2f);
                    Main.dust[index2].velocity.X += Main.rand.Next(-50, 51) * 0.01f;
                    Main.dust[index2].velocity.Y += Main.rand.Next(-50, 51) * 0.01f;
                    Main.dust[index2].velocity.X *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.dust[index2].velocity.Y *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.dust[index2].velocity.X += Main.rand.Next(-50, 51) * 0.05f;
                    Main.dust[index2].velocity.Y += Main.rand.Next(-50, 51) * 0.05f;
                    Main.dust[index2].scale *= (float)(1.0 + Main.rand.Next(-30, 31) * 0.00999999977648258);
                }
                for (int index1 = 0; index1 < 40; ++index1)
                {
                    int index2 = Gore.NewGore(position, velocity, Main.rand.Next(276, 283), 1f);
                    Main.gore[index2].velocity.X += Main.rand.Next(-50, 51) * 0.01f;
                    Main.gore[index2].velocity.Y += Main.rand.Next(-50, 51) * 0.01f;
                    Main.gore[index2].velocity.X *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.gore[index2].velocity.Y *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.gore[index2].scale *= (float)(1.0 + Main.rand.Next(-20, 21) * 0.00999999977648258);
                    Main.gore[index2].velocity.X += Main.rand.Next(-50, 51) * 0.05f;
                    Main.gore[index2].velocity.Y += Main.rand.Next(-50, 51) * 0.05f;
                }
            }
            else if (type == 289)
            {
                for (int index1 = 0; index1 < 30; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, Main.rand.Next(139, 143), velocity.X, velocity.Y, 0, new Color(), 1.2f);
                    Main.dust[index2].velocity.X += Main.rand.Next(-50, 51) * 0.01f;
                    Main.dust[index2].velocity.Y += Main.rand.Next(-50, 51) * 0.01f;
                    Main.dust[index2].velocity.X *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.dust[index2].velocity.Y *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.dust[index2].velocity.X += Main.rand.Next(-50, 51) * 0.05f;
                    Main.dust[index2].velocity.Y += Main.rand.Next(-50, 51) * 0.05f;
                    Main.dust[index2].scale *= (float)(1.0 + Main.rand.Next(-30, 31) * 0.00999999977648258);
                }
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Gore.NewGore(position, velocity, Main.rand.Next(276, 283), 1f);
                    Main.gore[index2].velocity.X += Main.rand.Next(-50, 51) * 0.01f;
                    Main.gore[index2].velocity.Y += Main.rand.Next(-50, 51) * 0.01f;
                    Main.gore[index2].velocity.X *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.gore[index2].velocity.Y *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.gore[index2].scale *= (float)(1.0 + Main.rand.Next(-20, 21) * 0.00999999977648258);
                    Main.gore[index2].velocity.X += Main.rand.Next(-50, 51) * 0.05f;
                    Main.gore[index2].velocity.Y += Main.rand.Next(-50, 51) * 0.05f;
                }
            }
            else if (type == 475 || type == 505 || type == 506)
            {
                if (ai[1] == 0.0)
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                if (ai[1] < 10.0)
                {
                    Vector2 Position = new Vector2(position.X + width * 0.5f, position.Y + height * 0.5f);
                    float num2 = -velocity.X;
                    float num3 = -velocity.Y;
                    float num4 = 1f;
                    if (ai[0] <= 17.0)
                        num4 = ai[0] / 17f;
                    int num5 = (int)(30.0 * num4);
                    float num6 = 1f;
                    if (ai[0] <= 30.0)
                        num6 = ai[0] / 30f;
                    float num7 = 0.4f * num6;
                    float num8 = num7;
                    float num9 = num3 + num8;
                    for (int index1 = 0; index1 < num5; ++index1)
                    {
                        float num10 = (float)Math.Sqrt(num2 * num2 + num9 * num9);
                        float num11 = 5.6f;
                        if (Math.Abs(num2) + Math.Abs(num9) < 1.0)
                            num11 *= Math.Abs(num2) + Math.Abs(num9) / 1f;
                        float num12 = num11 / num10;
                        float num13 = num2 * num12;
                        float num14 = num9 * num12;
                        Math.Atan2(num14, num13);
                        int Type = 3;
                        if (type == 506)
                            Type = 30;
                        if (type == 505)
                            Type = 239;
                        if ((double)index1 > ai[1])
                        {
                            for (int index2 = 0; index2 < 4; ++index2)
                            {
                                int index3 = Dust.NewDust(Position, width, height, Type, 0.0f, 0.0f, 0, new Color(), 1f);
                                Main.dust[index3].noGravity = true;
                                Main.dust[index3].velocity *= 0.3f;
                            }
                        }
                        Position.X += num13;
                        Position.Y += num14;
                        num2 = -velocity.X;
                        float num15 = -velocity.Y;
                        num8 += num7;
                        num9 = num15 + num8;
                    }
                }
            }
            else if (type == 171)
            {
                if (ai[1] == 0.0)
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                if (ai[1] < 10.0)
                {
                    Vector2 Position = new Vector2(position.X + width * 0.5f, position.Y + height * 0.5f);
                    float num2 = -velocity.X;
                    float num3 = -velocity.Y;
                    float num4 = 1f;
                    if (ai[0] <= 17.0)
                        num4 = ai[0] / 17f;
                    int num5 = (int)(30.0 * num4);
                    float num6 = 1f;
                    if (ai[0] <= 30.0)
                        num6 = ai[0] / 30f;
                    float num7 = 0.4f * num6;
                    float num8 = num7;
                    float num9 = num3 + num8;
                    for (int index1 = 0; index1 < num5; ++index1)
                    {
                        float num10 = (float)Math.Sqrt(num2 * num2 + num9 * num9);
                        float num11 = 5.6f;
                        if (Math.Abs(num2) + Math.Abs(num9) < 1.0)
                            num11 *= Math.Abs(num2) + Math.Abs(num9) / 1f;
                        float num12 = num11 / num10;
                        float num13 = num2 * num12;
                        float num14 = num9 * num12;
                        Math.Atan2(num14, num13);
                        if ((double)index1 > ai[1])
                        {
                            for (int index2 = 0; index2 < 4; ++index2)
                            {
                                int index3 = Dust.NewDust(Position, width, height, 129, 0.0f, 0.0f, 0, new Color(), 1f);
                                Main.dust[index3].noGravity = true;
                                Main.dust[index3].velocity *= 0.3f;
                            }
                        }
                        Position.X += num13;
                        Position.Y += num14;
                        num2 = -velocity.X;
                        float num15 = -velocity.Y;
                        num8 += num7;
                        num9 = num15 + num8;
                    }
                }
            }
            else if (type == 117)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                for (int index = 0; index < 10; ++index)
                    Dust.NewDust(new Vector2(position.X, position.Y), width, height, 26, 0.0f, 0.0f, 0, new Color(), 1f);
            }
            else if (type == 166)
            {
                Main.PlaySound(2, (int)position.X, (int)position.Y, 51);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 76, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= oldVelocity * 0.25f;
                }
            }
            else if (type == 158)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 9, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= velocity * 0.5f;
                }
            }
            else if (type == 159)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 11, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= velocity * 0.5f;
                }
            }
            else if (type == 160)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 19, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= velocity * 0.5f;
                }
            }
            else if (type == 161)
            {
                Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 11, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= velocity * 0.5f;
                }
            }
            else if (type >= 191 && type <= 194)
            {
                int index = Gore.NewGore(new Vector2(position.X - (width / 2), position.Y - (height / 2)), new Vector2(0.0f, 0.0f), Main.rand.Next(61, 64), scale);
                Main.gore[index].velocity *= 0.1f;
            }
            else if (!Main.projPet[type])
            {
                if (type == 93)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(position, width, height, 57, 0.0f, 0.0f, 100, new Color(), 0.5f);
                        Main.dust[index2].velocity.X *= 2f;
                        Main.dust[index2].velocity.Y *= 2f;
                    }
                }
                else if (type == 99)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(position, width, height, 1, 0.0f, 0.0f, 0, new Color(), 1f);
                        if (Main.rand.Next(2) == 0)
                            Main.dust[index2].scale *= 1.4f;
                        Projectile projectile = this;
                        Vector2 vector2 = projectile.velocity * 1.9f;
                        projectile.velocity = vector2;
                    }
                }
                else if (type == 91 || type == 92)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(position, width, height, 58, velocity.X * 0.1f, velocity.Y * 0.1f, 150, new Color(), 1.2f);
                    for (int index = 0; index < 3; ++index)
                        Gore.NewGore(position, new Vector2(velocity.X * 0.05f, velocity.Y * 0.05f), Main.rand.Next(16, 18), 1f);
                    if (type == 12 && damage < 500)
                    {
                        for (int index = 0; index < 10; ++index)
                            Dust.NewDust(position, width, height, 57, velocity.X * 0.1f, velocity.Y * 0.1f, 150, new Color(), 1.2f);
                        for (int index = 0; index < 3; ++index)
                            Gore.NewGore(position, new Vector2(velocity.X * 0.05f, velocity.Y * 0.05f), Main.rand.Next(16, 18), 1f);
                    }
                    if ((type == 91 || type == 92 && ai[0] > 0.0) && owner == Main.myPlayer)
                    {
                        float num2 = position.X + Main.rand.Next(-400, 400);
                        float num3 = position.Y - Main.rand.Next(600, 900);
                        Vector2 vector2 = new Vector2(num2, num3);
                        float num4 = position.X + (width / 2) - vector2.X;
                        float num5 = position.Y + (height / 2) - vector2.Y;
                        float num6 = 22f / (float)Math.Sqrt(num4 * num4 + num5 * num5);
                        float SpeedX = num4 * num6;
                        float SpeedY = num5 * num6;
                        int Damage = damage;
                        int index = NewProjectile(num2, num3, SpeedX, SpeedY, 92, Damage, knockBack, owner, 0.0f, 0.0f);
                        if (type == 91)
                        {
                            Main.projectile[index].ai[1] = position.Y;
                            Main.projectile[index].ai[0] = 1f;
                        }
                        else
                            Main.projectile[index].ai[1] = position.Y;
                    }
                }
                else if (type == 89)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 68, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 1.5f;
                        Main.dust[index2].scale *= 0.9f;
                    }
                    if (type == 89 && owner == Main.myPlayer)
                    {
                        for (int index = 0; index < 3; ++index)
                        {
                            float SpeedX = (float)(-velocity.X * Main.rand.Next(40, 70) * 0.00999999977648258 + Main.rand.Next(-20, 21) * 0.400000005960464);
                            float SpeedY = (float)(-velocity.Y * Main.rand.Next(40, 70) * 0.00999999977648258 + Main.rand.Next(-20, 21) * 0.400000005960464);
                            NewProjectile(position.X + SpeedX, position.Y + SpeedY, SpeedX, SpeedY, 90, (int)(damage * 0.5), 0.0f, owner, 0.0f, 0.0f);
                        }
                    }
                }
                else if (type == 177)
                {
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 137, 0.0f, 0.0f, Main.rand.Next(0, 101), new Color(), (float)(1.0 + Main.rand.Next(-20, 40) * 0.00999999977648258));
                        Main.dust[index2].velocity -= oldVelocity * 0.2f;
                        if (Main.rand.Next(3) == 0)
                        {
                            Main.dust[index2].scale *= 0.8f;
                            Main.dust[index2].velocity *= 0.5f;
                        }
                        else
                            Main.dust[index2].noGravity = true;
                    }
                }
                else if (type == 119 || type == 118 || (type == 128 || type == 359))
                {
                    int num2 = 10;
                    if (type == 119 || type == 359)
                        num2 = 20;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 27);
                    for (int index1 = 0; index1 < num2; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 92, 0.0f, 0.0f, 0, new Color(), 1f);
                        if (Main.rand.Next(3) != 0)
                        {
                            Main.dust[index2].velocity *= 2f;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].scale *= 1.75f;
                        }
                        else
                            Main.dust[index2].scale *= 0.5f;
                    }
                }
                else if (type == 309)
                {
                    int num2 = 10;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 27);
                    for (int index1 = 0; index1 < num2; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 185, 0.0f, 0.0f, 0, new Color(), 1f);
                        if (Main.rand.Next(2) == 0)
                        {
                            Main.dust[index2].velocity *= 2f;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].scale *= 1.75f;
                        }
                    }
                }
                else if (type == 308)
                {
                    int num2 = 80;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 27);
                    for (int index1 = 0; index1 < num2; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y + 16f), width, height - 16, 185, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 2f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].scale *= 1.15f;
                    }
                }
                else if (aiStyle == 29 && type <= 126)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    int Type = type - 121 + 86;
                    for (int index1 = 0; index1 < 15; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, Type, oldVelocity.X, oldVelocity.Y, 50, new Color(), 1.2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].scale *= 1.25f;
                        Main.dust[index2].velocity *= 0.5f;
                    }
                }
                else if (type == 597)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index1 = 0; index1 < 15; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 262, oldVelocity.X, oldVelocity.Y, 50, new Color(), 1.2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].scale *= 1.25f;
                        Main.dust[index2].velocity *= 0.5f;
                    }
                }
                else if (type == 337)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 27);
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 197, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].noGravity = true;
                    }
                }
                else if (type == 379 || type == 377)
                {
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(position, width, height, 171, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].scale = Main.rand.Next(1, 10) * 0.1f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].fadeIn = 1.5f;
                        Main.dust[index2].velocity *= 0.75f;
                    }
                }
                else if (type == 80)
                {
                    if (ai[0] >= 0.0)
                    {
                        Main.PlaySound(2, (int)position.X, (int)position.Y, 27);
                        for (int index = 0; index < 10; ++index)
                            Dust.NewDust(new Vector2(position.X, position.Y), width, height, 67, 0.0f, 0.0f, 0, new Color(), 1f);
                    }
                    int i = (int)position.X / 16;
                    int j = (int)position.Y / 16;
                    if (Main.tile[i, j] == null)
                        Main.tile[i, j] = new Tile();
                    if (Main.tile[i, j].type == 127 && Main.tile[i, j].active())
                        WorldGen.KillTile(i, j, false, false, false);
                }
                else if (type == 76 || type == 77 || type == 78)
                {
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(position, width, height, 27, 0.0f, 0.0f, 80, new Color(), 1.5f);
                        Main.dust[index2].noGravity = true;
                    }
                }
                else if (type == 55)
                {
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 18, 0.0f, 0.0f, 0, new Color(), 1.5f);
                        Main.dust[index2].noGravity = true;
                    }
                }
                else if (type == 51 || type == 267)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index = 0; index < 5; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 0, 0.0f, 0.0f, 0, new Color(), 0.7f);
                }
                else if (type == 478)
                {
                    if (owner == Main.myPlayer)
                        NewProjectile(Center.X, Center.Y, 0.0f, 0.0f, 480, (int)(damage * 0.8), knockBack * 0.5f, owner, 0.0f, 0.0f);
                }
                else if (type == 477 || type == 479)
                {
                    int num2 = 0;
                    while (num2 < 5)
                        ++num2;
                    Collision.HitTiles(position, velocity, width, height);
                }
                else if (type == 2 || type == 82)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1f);
                }
                else if (type == 474)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index = 0; index < 20; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 26, 0.0f, 0.0f, 0, new Color(), 0.9f);
                }
                else if (type == 172)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index = 0; index < 20; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 135, 0.0f, 0.0f, 100, new Color(), 1f);
                }
                else if (type == 103)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 75, 0.0f, 0.0f, 100, new Color(), 1f);
                        if (Main.rand.Next(2) == 0)
                        {
                            Main.dust[index2].scale *= 2.5f;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity *= 5f;
                        }
                    }
                }
                else if (type == 278)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 169, 0.0f, 0.0f, 100, new Color(), 1f);
                        if (Main.rand.Next(2) == 0)
                        {
                            Main.dust[index2].scale *= 1.5f;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity *= 5f;
                        }
                    }
                }
                else if (type == 3 || type == 48 || (type == 54 || type == 599))
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 1, velocity.X * 0.1f, velocity.Y * 0.1f, 0, new Color(), 0.75f);
                }
                else if (type == 330)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 0, velocity.X * 0.4f, velocity.Y * 0.4f, 0, new Color(), 0.75f);
                }
                else if (type == 4)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 14, 0.0f, 0.0f, 150, new Color(), 1.1f);
                }
                else if (type == 5)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index = 0; index < 60; ++index)
                    {
                        int Type;
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                Type = 15;
                                break;
                            case 1:
                                Type = 57;
                                break;
                            default:
                                Type = 58;
                                break;
                        }
                        Dust.NewDust(position, width, height, Type, velocity.X * 0.5f, velocity.Y * 0.5f, 150, new Color(), 1.5f);
                    }
                }
                else if (type == 9 || type == 12 || type == 503)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    int num2 = 10;
                    int num3 = 3;
                    if (type == 503)
                    {
                        num2 = 40;
                        num3 = 2;
                        Projectile projectile = this;
                        Vector2 vector2 = projectile.velocity / 2f;
                        projectile.velocity = vector2;
                    }
                    for (int index = 0; index < num2; ++index)
                        Dust.NewDust(position, width, height, 58, velocity.X * 0.1f, velocity.Y * 0.1f, 150, new Color(), 1.2f);
                    for (int index = 0; index < num3; ++index)
                    {
                        int Type = Main.rand.Next(16, 18);
                        if (type == 503)
                            Type = 16;
                        Gore.NewGore(position, new Vector2(velocity.X * 0.05f, velocity.Y * 0.05f), Type, 1f);
                    }
                    if (type == 12 && damage < 100)
                    {
                        for (int index = 0; index < 10; ++index)
                            Dust.NewDust(position, width, height, 57, velocity.X * 0.1f, velocity.Y * 0.1f, 150, new Color(), 1.2f);
                        for (int index = 0; index < 3; ++index)
                            Gore.NewGore(position, new Vector2(velocity.X * 0.05f, velocity.Y * 0.05f), Main.rand.Next(16, 18), 1f);
                    }
                }
                else if (type == 281)
                {
                    Main.PlaySound(4, (int)position.X, (int)position.Y, 1);
                    int index1 = Gore.NewGore(position, new Vector2(Main.rand.Next(-20, 21) * 0.2f, Main.rand.Next(-20, 21) * 0.2f), 76, 1f);
                    Main.gore[index1].velocity -= velocity * 0.5f;
                    int index2 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(Main.rand.Next(-20, 21) * 0.2f, Main.rand.Next(-20, 21) * 0.2f), 77, 1f);
                    Main.gore[index2].velocity -= velocity * 0.5f;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    for (int index3 = 0; index3 < 20; ++index3)
                    {
                        int index4 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index4].velocity *= 1.4f;
                    }
                    for (int index3 = 0; index3 < 10; ++index3)
                    {
                        int index4 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index4].noGravity = true;
                        Main.dust[index4].velocity *= 5f;
                        int index5 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index5].velocity *= 3f;
                    }
                    int index6 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index6].velocity *= 0.4f;
                    ++Main.gore[index6].velocity.X;
                    ++Main.gore[index6].velocity.Y;
                    int index7 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index7].velocity *= 0.4f;
                    --Main.gore[index7].velocity.X;
                    ++Main.gore[index7].velocity.Y;
                    int index8 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index8].velocity *= 0.4f;
                    ++Main.gore[index8].velocity.X;
                    --Main.gore[index8].velocity.Y;
                    int index9 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index9].velocity *= 0.4f;
                    --Main.gore[index9].velocity.X;
                    --Main.gore[index9].velocity.Y;
                    position.X += (width / 2);
                    position.Y += (height / 2);
                    width = 128;
                    height = 128;
                    position.X -= (width / 2);
                    position.Y -= (height / 2);
                    Damage();
                }
                else if (type == 162)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 1.4f;
                    }
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 5f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 3f;
                    }
                    int index4 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index4].velocity *= 0.4f;
                    ++Main.gore[index4].velocity.X;
                    ++Main.gore[index4].velocity.Y;
                    int index5 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index5].velocity *= 0.4f;
                    --Main.gore[index5].velocity.X;
                    ++Main.gore[index5].velocity.Y;
                    int index6 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index6].velocity *= 0.4f;
                    ++Main.gore[index6].velocity.X;
                    --Main.gore[index6].velocity.Y;
                    int index7 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index7].velocity *= 0.4f;
                    --Main.gore[index7].velocity.X;
                    --Main.gore[index7].velocity.Y;
                    position.X += (width / 2);
                    position.Y += (height / 2);
                    width = 128;
                    height = 128;
                    position.X -= (width / 2);
                    position.Y -= (height / 2);
                    Damage();
                }
                else if (type == 240)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 1.4f;
                    }
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 5f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 3f;
                    }
                    int index4 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index4].velocity *= 0.4f;
                    ++Main.gore[index4].velocity.X;
                    ++Main.gore[index4].velocity.Y;
                    int index5 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index5].velocity *= 0.4f;
                    --Main.gore[index5].velocity.X;
                    ++Main.gore[index5].velocity.Y;
                    int index6 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index6].velocity *= 0.4f;
                    ++Main.gore[index6].velocity.X;
                    --Main.gore[index6].velocity.Y;
                    int index7 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index7].velocity *= 0.4f;
                    --Main.gore[index7].velocity.X;
                    --Main.gore[index7].velocity.Y;
                    position.X += (width / 2);
                    position.Y += (height / 2);
                    width = 96;
                    height = 96;
                    position.X -= (width / 2);
                    position.Y -= (height / 2);
                    Damage();
                }
                else if (type == 283 || type == 282)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(position, width, height, 171, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].scale = Main.rand.Next(1, 10) * 0.1f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].fadeIn = 1.5f;
                        Main.dust[index2].velocity *= 0.75f;
                    }
                }
                else if (type == 284)
                {
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, Main.rand.Next(139, 143), (float)(-velocity.X * 0.300000011920929), (float)(-velocity.Y * 0.300000011920929), 0, new Color(), 1.2f);
                        Main.dust[index2].velocity.X += Main.rand.Next(-50, 51) * 0.01f;
                        Main.dust[index2].velocity.Y += Main.rand.Next(-50, 51) * 0.01f;
                        Main.dust[index2].velocity.X *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                        Main.dust[index2].velocity.Y *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                        Main.dust[index2].velocity.X += Main.rand.Next(-50, 51) * 0.05f;
                        Main.dust[index2].velocity.Y += Main.rand.Next(-50, 51) * 0.05f;
                        Main.dust[index2].scale *= (float)(1.0 + Main.rand.Next(-30, 31) * 0.00999999977648258);
                    }
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Gore.NewGore(position, -velocity * 0.3f, Main.rand.Next(276, 283), 1f);
                        Main.gore[index2].velocity.X += Main.rand.Next(-50, 51) * 0.01f;
                        Main.gore[index2].velocity.Y += Main.rand.Next(-50, 51) * 0.01f;
                        Main.gore[index2].velocity.X *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                        Main.gore[index2].velocity.Y *= (float)(1.0 + Main.rand.Next(-50, 51) * 0.00999999977648258);
                        Main.gore[index2].scale *= (float)(1.0 + Main.rand.Next(-20, 21) * 0.00999999977648258);
                        Main.gore[index2].velocity.X += Main.rand.Next(-50, 51) * 0.05f;
                        Main.gore[index2].velocity.Y += Main.rand.Next(-50, 51) * 0.05f;
                    }
                }
                else if (type == 286)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    for (int index = 0; index < 7; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    for (int index1 = 0; index1 < 3; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 3f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 2f;
                    }
                    int index4 = Gore.NewGore(new Vector2(position.X - 10f, position.Y - 10f), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index4].velocity *= 0.3f;
                    Main.gore[index4].velocity.X += Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index4].velocity.Y += Main.rand.Next(-10, 11) * 0.05f;
                    if (owner == Main.myPlayer)
                    {
                        localAI[1] = -1f;
                        maxPenetrate = 0;
                        position.X += (width / 2);
                        position.Y += (height / 2);
                        width = 80;
                        height = 80;
                        position.X -= (width / 2);
                        position.Y -= (height / 2);
                        Damage();
                    }
                }
                else if (type == 14 || type == 20 || (type == 36 || type == 83) || (type == 84 || type == 389 || (type == 104 || type == 279)) || (type == 100 || type == 110 || (type == 180 || type == 207) || (type == 357 || type == 242 || (type == 302 || type == 257))) || (type == 259 || type == 285 || (type == 287 || type == 576) || type == 577))
                {
                    Collision.HitTiles(position, velocity, width, height);
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                }
                else if (type == 638)
                {
                    Collision.HitTiles(position, velocity, width, height);
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    int num2 = Main.rand.Next(2, 5);
                    for (int index1 = 0; index1 < num2; ++index1)
                    {
                        int index2 = Dust.NewDust(Center, 0, 0, 229, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].velocity *= 1.6f;
                        --Main.dust[index2].velocity.Y;
                        Main.dust[index2].position -= Vector2.One * 4f;
                        Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, Center, 0.5f);
                        Main.dust[index2].noGravity = true;
                    }
                }
                else if (type == 15 || type == 34 || type == 321)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, (float)(-velocity.X * 0.200000002980232), (float)(-velocity.Y * 0.200000002980232), 100, new Color(), 2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 2f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, (float)(-velocity.X * 0.200000002980232), (float)(-velocity.Y * 0.200000002980232), 100, new Color(), 1f);
                        Main.dust[index3].velocity *= 2f;
                    }
                }
                else if (type == 253)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 135, (float)(-velocity.X * 0.200000002980232), (float)(-velocity.Y * 0.200000002980232), 100, new Color(), 2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 2f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 135, (float)(-velocity.X * 0.200000002980232), (float)(-velocity.Y * 0.200000002980232), 100, new Color(), 1f);
                        Main.dust[index3].velocity *= 2f;
                    }
                }
                else if (type == 95 || type == 96)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 75, (float)(-velocity.X * 0.200000002980232), (float)(-velocity.Y * 0.200000002980232), 100, new Color(), 2f * scale);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 2f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 75, (float)(-velocity.X * 0.200000002980232), (float)(-velocity.Y * 0.200000002980232), 100, new Color(), 1f * scale);
                        Main.dust[index3].velocity *= 2f;
                    }
                }
                else if (type == 79)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 66, 0.0f, 0.0f, 100, new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB), 2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 4f;
                    }
                }
                else if (type == 16)
                {
                    if (type == 16 && penetrate == 1)
                    {
                        maxPenetrate = -1;
                        penetrate = -1;
                        int num2 = 60;
                        position.X -= (float)(num2 / 2);
                        position.Y -= (float)(num2 / 2);
                        width += num2;
                        height += num2;
                        tileCollide = false;
                        Projectile projectile = this;
                        Vector2 vector2 = projectile.velocity * 0.01f;
                        projectile.velocity = vector2;
                        Damage();
                        scale = 0.01f;
                    }
                    position.X += (width / 2);
                    width = 10;
                    position.X -= (width / 2);
                    position.Y += (height / 2);
                    height = 10;
                    position.Y -= (height / 2);
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X - velocity.X, position.Y - velocity.Y), width, height, 15, 0.0f, 0.0f, 100, new Color(), 2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 2f;
                        Dust.NewDust(new Vector2(position.X - velocity.X, position.Y - velocity.Y), width, height, 15, 0.0f, 0.0f, 100, new Color(), 1f);
                    }
                }
                else if (type == 17)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index = 0; index < 5; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 0, 0.0f, 0.0f, 0, new Color(), 1f);
                }
                else if (type == 31 || type == 42)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 32, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.6f;
                    }
                }
                else if (type >= 411 && type <= 414)
                {
                    int Type = 9;
                    if (type == 412 || type == 414)
                        Type = 11;
                    if (type == 413)
                        Type = 19;
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, Type, 0.0f, velocity.Y / 2f, 0, new Color(), 1f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity -= velocity * 0.5f;
                    }
                }
                else if (type == 109)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 51, 0.0f, 0.0f, 0, new Color(), 0.6f);
                        Main.dust[index2].velocity *= 0.6f;
                    }
                }
                else if (type == 39)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 38, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.6f;
                    }
                }
                else if (type == 71)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 53, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.6f;
                    }
                }
                else if (type == 40)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 36, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.6f;
                    }
                }
                else if (type == 21 || type == 471 || type == 532)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 26, 0.0f, 0.0f, 0, new Color(), 0.8f);
                }
                else if (type == 583)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 4, 0.0f, 0.0f, 100, new Color(20, 250, 20, 240), 0.8f);
                }
                else if (type == 584)
                {
                    Main.PlaySound(0, (int)position.X, (int)position.Y, 1);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 4, 0.0f, 0.0f, 100, new Color(250, 20, 120, 240), 0.8f);
                }
                else if (type == 24)
                {
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 1, velocity.X * 0.1f, velocity.Y * 0.1f, 0, new Color(), 0.75f);
                }
                else if (type == 27)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 172, velocity.X * 0.1f, velocity.Y * 0.1f, 100, new Color(), 1f);
                        Main.dust[index2].noGravity = true;
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 172, velocity.X * 0.1f, velocity.Y * 0.1f, 100, new Color(), 0.5f);
                    }
                }
                else if (type == 38)
                {
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 42, velocity.X * 0.1f, velocity.Y * 0.1f, 0, new Color(), 1f);
                }
                else if (type == 44 || type == 45)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 27, velocity.X, velocity.Y, 100, new Color(), 1.7f);
                        Main.dust[index2].noGravity = true;
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 27, velocity.X, velocity.Y, 100, new Color(), 1f);
                    }
                }
                else if (type == 41)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 3f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 2f;
                    }
                    int index4 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index4].velocity *= 0.4f;
                    Main.gore[index4].velocity.X += Main.rand.Next(-10, 11) * 0.1f;
                    Main.gore[index4].velocity.Y += Main.rand.Next(-10, 11) * 0.1f;
                    int index5 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index5].velocity *= 0.4f;
                    Main.gore[index5].velocity.X += Main.rand.Next(-10, 11) * 0.1f;
                    Main.gore[index5].velocity.Y += Main.rand.Next(-10, 11) * 0.1f;
                    if (owner == Main.myPlayer)
                    {
                        penetrate = -1;
                        position.X += (width / 2);
                        position.Y += (height / 2);
                        width = 64;
                        height = 64;
                        position.X -= (width / 2);
                        position.Y -= (height / 2);
                        Damage();
                    }
                }
                else if (type == 514)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.3f);
                        Main.dust[index2].velocity *= 1.4f;
                    }
                    for (int index1 = 0; index1 < 6; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 2.1f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 4.6f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.3f);
                        Main.dust[index3].velocity *= 3.3f;
                        if (Main.rand.Next(2) == 0)
                        {
                            int index4 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.1f);
                            Main.dust[index4].velocity *= 2.7f;
                        }
                    }
                    if (owner == Main.myPlayer)
                    {
                        penetrate = -1;
                        position.X += (width / 2);
                        position.Y += (height / 2);
                        width = 112;
                        height = 112;
                        position.X -= (width / 2);
                        position.Y -= (height / 2);
                        ai[0] = 2f;
                        Damage();
                    }
                }
                else if (type == 306)
                {
                    Main.PlaySound(3, (int)position.X, (int)position.Y, 1);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 184, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].scale *= 1.1f;
                        Main.dust[index2].noGravity = true;
                    }
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 184, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 2.5f;
                        Main.dust[index2].scale *= 0.8f;
                        Main.dust[index2].noGravity = true;
                    }
                    if (owner == Main.myPlayer)
                    {
                        int num2 = 2;
                        if (Main.rand.Next(10) == 0)
                            ++num2;
                        if (Main.rand.Next(10) == 0)
                            ++num2;
                        if (Main.rand.Next(10) == 0)
                            ++num2;
                        for (int index = 0; index < num2; ++index)
                            NewProjectile(position.X, position.Y, Main.rand.Next(-35, 36) * 0.02f * 10f, Main.rand.Next(-35, 36) * 0.02f * 10f, 307, (int)(damage * 0.7), (int)(knockBack * 0.35), Main.myPlayer, 0.0f, 0.0f);
                    }
                }
                else if (type == 469)
                {
                    if (owner == Main.myPlayer)
                    {
                        int num2 = 6;
                        for (int index1 = 0; index1 < num2; ++index1)
                        {
                            if (index1 % 2 != 1 || Main.rand.Next(3) == 0)
                            {
                                Vector2 vector2_1 = position;
                                Vector2 vector2_2 = oldVelocity;
                                vector2_2.Normalize();
                                vector2_2 *= 8f;
                                float num3 = Main.rand.Next(-35, 36) * 0.01f;
                                float num4 = Main.rand.Next(-35, 36) * 0.01f;
                                Vector2 vector2_3 = vector2_1 - vector2_2 * index1;
                                float SpeedX = num3 + oldVelocity.X / 6f;
                                float SpeedY = num4 + oldVelocity.Y / 6f;
                                int index2 = NewProjectile(vector2_3.X, vector2_3.Y, SpeedX, SpeedY, Main.player[owner].beeType(), Main.player[owner].beeDamage(damage / 3), Main.player[owner].beeKB(0.0f), Main.myPlayer, 0.0f, 0.0f);
                                Main.projectile[index2].magic = false;
                                Main.projectile[index2].ranged = true;
                                Main.projectile[index2].penetrate = 2;
                            }
                        }
                    }
                }
                else if (type == 183)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 1f;
                    }
                    int index3 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    ++Main.gore[index3].velocity.X;
                    ++Main.gore[index3].velocity.Y;
                    Main.gore[index3].velocity *= 0.3f;
                    int index4 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    --Main.gore[index4].velocity.X;
                    ++Main.gore[index4].velocity.Y;
                    Main.gore[index4].velocity *= 0.3f;
                    int index5 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    ++Main.gore[index5].velocity.X;
                    --Main.gore[index5].velocity.Y;
                    Main.gore[index5].velocity *= 0.3f;
                    int index6 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    --Main.gore[index6].velocity.X;
                    --Main.gore[index6].velocity.Y;
                    Main.gore[index6].velocity *= 0.3f;
                    if (owner == Main.myPlayer)
                    {
                        int num2 = Main.rand.Next(15, 25);
                        for (int index1 = 0; index1 < num2; ++index1)
                            NewProjectile(position.X, position.Y, Main.rand.Next(-35, 36) * 0.02f, Main.rand.Next(-35, 36) * 0.02f, Main.player[owner].beeType(), Main.player[owner].beeDamage(damage), Main.player[owner].beeKB(0.0f), Main.myPlayer, 0.0f, 0.0f);
                    }
                }
                else if (aiStyle == 34)
                {
                    if (owner != Main.myPlayer)
                        timeLeft = 60;
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    if (type == 167)
                    {
                        for (int index1 = 0; index1 < 400; ++index1)
                        {
                            float num2 = 16f;
                            if (index1 < 300)
                                num2 = 12f;
                            if (index1 < 200)
                                num2 = 8f;
                            if (index1 < 100)
                                num2 = 4f;
                            int index2 = Dust.NewDust(new Vector2(position.X, position.Y), 6, 6, 130, 0.0f, 0.0f, 100, new Color(), 1f);
                            float num3 = Main.dust[index2].velocity.X;
                            float num4 = Main.dust[index2].velocity.Y;
                            if (num3 == 0.0 && num4 == 0.0)
                                num3 = 1f;
                            float num5 = (float)Math.Sqrt(num3 * num3 + num4 * num4);
                            float num6 = num2 / num5;
                            float num7 = num3 * num6;
                            float num8 = num4 * num6;
                            Main.dust[index2].velocity *= 0.5f;
                            Main.dust[index2].velocity.X += num7;
                            Main.dust[index2].velocity.Y += num8;
                            Main.dust[index2].scale = 1.3f;
                            Main.dust[index2].noGravity = true;
                        }
                    }
                    if (type == 168)
                    {
                        for (int index1 = 0; index1 < 400; ++index1)
                        {
                            float num2 = (float)(2.0 * ((double)index1 / 100.0));
                            if (index1 > 100)
                                num2 = 10f;
                            if (index1 > 250)
                                num2 = 13f;
                            int index2 = Dust.NewDust(new Vector2(position.X, position.Y), 6, 6, 131, 0.0f, 0.0f, 100, new Color(), 1f);
                            float num3 = Main.dust[index2].velocity.X;
                            float num4 = Main.dust[index2].velocity.Y;
                            if (num3 == 0.0 && num4 == 0.0)
                                num3 = 1f;
                            float num5 = (float)Math.Sqrt(num3 * num3 + num4 * num4);
                            float num6 = num2 / num5;
                            float num7;
                            float num8;
                            if (index1 <= 200)
                            {
                                num7 = num3 * num6;
                                num8 = num4 * num6;
                            }
                            else
                            {
                                num7 = (float)(num3 * num6 * 1.25);
                                num8 = (float)(num4 * num6 * 0.75);
                            }
                            Main.dust[index2].velocity *= 0.5f;
                            Main.dust[index2].velocity.X += num7;
                            Main.dust[index2].velocity.Y += num8;
                            if (index1 > 100)
                            {
                                Main.dust[index2].scale = 1.3f;
                                Main.dust[index2].noGravity = true;
                            }
                        }
                    }
                    if (type == 169)
                    {
                        Vector2 spinningpoint = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f);
                        float num2 = Main.rand.Next(5, 9);
                        float num3 = Main.rand.Next(12, 17);
                        float num4 = Main.rand.Next(3, 7);
                        float num5 = 20f;
                        for (float num6 = 0.0f; num6 < num2; ++num6)
                        {
                            for (int index1 = 0; index1 < 2; ++index1)
                            {
                                Vector2 vector2_1 = Utils.RotatedBy(spinningpoint, (index1 == 0 ? 1.0 : -1.0) * 6.28318548202515 / (num2 * 2.0), new Vector2());
                                for (float num7 = 0.0f; num7 < num5; ++num7)
                                {
                                    Vector2 vector2_2 = Vector2.Lerp(spinningpoint, vector2_1, num7 / num5);
                                    float num8 = MathHelper.Lerp(num3, num4, num7 / num5);
                                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), 6, 6, 133, 0.0f, 0.0f, 100, new Color(), 1.3f);
                                    Main.dust[index2].velocity *= 0.1f;
                                    Main.dust[index2].noGravity = true;
                                    Main.dust[index2].velocity += vector2_2 * num8;
                                }
                            }
                            spinningpoint = Utils.RotatedBy(spinningpoint, 6.28318548202515 / num2, new Vector2());
                        }
                        for (float num6 = 0.0f; num6 < num2; ++num6)
                        {
                            for (int index1 = 0; index1 < 2; ++index1)
                            {
                                Vector2 vector2_1 = Utils.RotatedBy(spinningpoint, (index1 == 0 ? 1.0 : -1.0) * 6.28318548202515 / (num2 * 2.0), new Vector2());
                                for (float num7 = 0.0f; num7 < num5; ++num7)
                                {
                                    Vector2 vector2_2 = Vector2.Lerp(spinningpoint, vector2_1, num7 / num5);
                                    float num8 = MathHelper.Lerp(num3, num4, num7 / num5) / 2f;
                                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), 6, 6, 133, 0.0f, 0.0f, 100, new Color(), 1.3f);
                                    Main.dust[index2].velocity *= 0.1f;
                                    Main.dust[index2].noGravity = true;
                                    Main.dust[index2].velocity += vector2_2 * num8;
                                }
                            }
                            spinningpoint = Utils.RotatedBy(spinningpoint, 6.28318548202515 / num2, new Vector2());
                        }
                        for (int index1 = 0; index1 < 100; ++index1)
                        {
                            float num6 = num3;
                            int index2 = Dust.NewDust(new Vector2(position.X, position.Y), 6, 6, 132, 0.0f, 0.0f, 100, new Color(), 1f);
                            float num7 = Main.dust[index2].velocity.X;
                            float num8 = Main.dust[index2].velocity.Y;
                            if (num7 == 0.0 && num8 == 0.0)
                                num7 = 1f;
                            float num9 = (float)Math.Sqrt(num7 * num7 + num8 * num8);
                            float num10 = num6 / num9;
                            float num11 = num7 * num10;
                            float num12 = num8 * num10;
                            Main.dust[index2].velocity *= 0.5f;
                            Main.dust[index2].velocity.X += num11;
                            Main.dust[index2].velocity.Y += num12;
                            Main.dust[index2].scale = 1.3f;
                            Main.dust[index2].noGravity = true;
                        }
                    }
                    if (type == 170)
                    {
                        for (int index1 = 0; index1 < 400; ++index1)
                        {
                            int Type = 133;
                            float num2 = 16f;
                            if (index1 > 100)
                                num2 = 11f;
                            if (index1 > 100)
                                Type = 134;
                            if (index1 > 200)
                                num2 = 8f;
                            if (index1 > 200)
                                Type = 133;
                            if (index1 > 300)
                                num2 = 5f;
                            if (index1 > 300)
                                Type = 134;
                            int index2 = Dust.NewDust(new Vector2(position.X, position.Y), 6, 6, Type, 0.0f, 0.0f, 100, new Color(), 1f);
                            float num3 = Main.dust[index2].velocity.X;
                            float num4 = Main.dust[index2].velocity.Y;
                            if (num3 == 0.0 && num4 == 0.0)
                                num3 = 1f;
                            float num5 = (float)Math.Sqrt(num3 * num3 + num4 * num4);
                            float num6 = num2 / num5;
                            float num7;
                            float num8;
                            if (index1 > 300)
                            {
                                num7 = (float)(num3 * num6 * 0.699999988079071);
                                num8 = num4 * num6;
                            }
                            else if (index1 > 200)
                            {
                                num7 = num3 * num6;
                                num8 = (float)(num4 * num6 * 0.699999988079071);
                            }
                            else if (index1 > 100)
                            {
                                num7 = (float)(num3 * num6 * 0.699999988079071);
                                num8 = num4 * num6;
                            }
                            else
                            {
                                num7 = num3 * num6;
                                num8 = (float)(num4 * num6 * 0.699999988079071);
                            }
                            Main.dust[index2].velocity *= 0.5f;
                            Main.dust[index2].velocity.X += num7;
                            Main.dust[index2].velocity.Y += num8;
                            if (Main.rand.Next(3) != 0)
                            {
                                Main.dust[index2].scale = 1.3f;
                                Main.dust[index2].noGravity = true;
                            }
                        }
                    }
                    if (type == 415)
                    {
                        Vector2 spinningpoint = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f);
                        float num2 = Main.rand.Next(5, 9);
                        float num3 = Main.rand.Next(10, 15) * 0.66f;
                        float num4 = Main.rand.Next(4, 7) / 2f;
                        int num5 = 30;
                        for (int index1 = 0; (double)index1 < num5 * num2; ++index1)
                        {
                            if (index1 % num5 == 0)
                                spinningpoint = Utils.RotatedBy(spinningpoint, 6.28318548202515 / num2, new Vector2());
                            float num6 = MathHelper.Lerp(num4, num3, (float)(index1 % num5) / num5);
                            int index2 = Dust.NewDust(new Vector2(position.X, position.Y), 6, 6, 130, 0.0f, 0.0f, 100, new Color(), 1f);
                            Main.dust[index2].velocity *= 0.1f;
                            Main.dust[index2].velocity += spinningpoint * num6;
                            Main.dust[index2].scale = 1.3f;
                            Main.dust[index2].noGravity = true;
                        }
                        for (int index1 = 0; index1 < 100; ++index1)
                        {
                            float num6 = num3;
                            if (index1 < 30)
                                num6 = (float)((num4 + num3) / 2.0);
                            int index2 = Dust.NewDust(new Vector2(position.X, position.Y), 6, 6, 130, 0.0f, 0.0f, 100, new Color(), 1f);
                            float num7 = Main.dust[index2].velocity.X;
                            float num8 = Main.dust[index2].velocity.Y;
                            if (num7 == 0.0 && num8 == 0.0)
                                num7 = 1f;
                            float num9 = (float)Math.Sqrt(num7 * num7 + num8 * num8);
                            float num10 = num6 / num9;
                            float num11 = num7 * num10;
                            float num12 = num8 * num10;
                            Main.dust[index2].velocity *= 0.5f;
                            Main.dust[index2].velocity.X += num11;
                            Main.dust[index2].velocity.Y += num12;
                            Main.dust[index2].scale = 1.3f;
                            Main.dust[index2].noGravity = true;
                        }
                    }
                    if (type == 416)
                    {
                        Vector2 spinningpoint1 = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f);
                        Vector2 spinningpoint2 = spinningpoint1;
                        float num2 = (float)(Main.rand.Next(3, 6) * 2);
                        int num3 = 20;
                        float num4 = Main.rand.Next(2) == 0 ? 1f : -1f;
                        bool flag = true;
                        for (int index1 = 0; (double)index1 < num3 * num2; ++index1)
                        {
                            if (index1 % num3 == 0)
                            {
                                spinningpoint2 = Utils.RotatedBy(spinningpoint2, num4 * (6.28318548202515 / num2), new Vector2());
                                spinningpoint1 = spinningpoint2;
                                flag = !flag;
                            }
                            else
                            {
                                float num5 = 6.283185f / (num3 * num2);
                                spinningpoint1 = Utils.RotatedBy(spinningpoint1, num5 * num4 * 3.0, new Vector2());
                            }
                            float num6 = MathHelper.Lerp(1f, 8f, (float)(index1 % num3) / num3);
                            int index2 = Dust.NewDust(new Vector2(position.X, position.Y), 6, 6, 131, 0.0f, 0.0f, 100, new Color(), 1.4f);
                            Main.dust[index2].velocity *= 0.1f;
                            Main.dust[index2].velocity += spinningpoint1 * num6;
                            if (flag)
                                Main.dust[index2].scale = 0.9f;
                            Main.dust[index2].noGravity = true;
                        }
                    }
                    if (type == 417)
                    {
                        float num2 = (float)Main.rand.NextDouble() * 6.283185f;
                        float num3 = (float)Main.rand.NextDouble() * 6.283185f;
                        float num4 = (float)(4.0 + Main.rand.NextDouble() * 3.0);
                        float num5 = (float)(4.0 + Main.rand.NextDouble() * 3.0);
                        float num6 = num4;
                        if (num5 > num6)
                            num6 = num5;
                        for (int index1 = 0; index1 < 150; ++index1)
                        {
                            int Type = 132;
                            float num7 = num6;
                            if (index1 > 50)
                                num7 = num5;
                            if (index1 > 50)
                                Type = 133;
                            if (index1 > 100)
                                num7 = num4;
                            if (index1 > 100)
                                Type = 132;
                            int index2 = Dust.NewDust(new Vector2(position.X, position.Y), 6, 6, Type, 0.0f, 0.0f, 100, new Color(), 1f);
                            Vector2 vector2 = Main.dust[index2].velocity;
                            vector2.Normalize();
                            Vector2 spinningpoint = vector2 * num7;
                            if (index1 > 100)
                            {
                                spinningpoint.X *= 0.5f;
                                spinningpoint = Utils.RotatedBy(spinningpoint, num2, new Vector2());
                            }
                            else if (index1 > 50)
                            {
                                spinningpoint.Y *= 0.5f;
                                spinningpoint = Utils.RotatedBy(spinningpoint, num3, new Vector2());
                            }
                            Main.dust[index2].velocity *= 0.2f;
                            Main.dust[index2].velocity += spinningpoint;
                            if (index1 <= 200)
                            {
                                Main.dust[index2].scale = 1.3f;
                                Main.dust[index2].noGravity = true;
                            }
                        }
                    }
                    if (type == 418)
                    {
                        Vector2 spinningpoint = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f);
                        float num2 = Main.rand.Next(5, 12);
                        float num3 = Main.rand.Next(9, 14) * 0.66f;
                        float num4 = Main.rand.Next(2, 4) * 0.66f;
                        float num5 = 15f;
                        for (float num6 = 0.0f; num6 < num2; ++num6)
                        {
                            for (int index1 = 0; index1 < 2; ++index1)
                            {
                                Vector2 vector2_1 = Utils.RotatedBy(spinningpoint, (index1 == 0 ? 1.0 : -1.0) * 6.28318548202515 / (num2 * 2.0), new Vector2());
                                for (float num7 = 0.0f; num7 < num5; ++num7)
                                {
                                    Vector2 vector2_2 = Vector2.SmoothStep(spinningpoint, vector2_1, num7 / num5);
                                    float num8 = MathHelper.SmoothStep(num3, num4, num7 / num5);
                                    int index2 = Dust.NewDust(new Vector2(position.X, position.Y), 6, 6, 134, 0.0f, 0.0f, 100, new Color(), 1.3f);
                                    Main.dust[index2].velocity *= 0.1f;
                                    Main.dust[index2].noGravity = true;
                                    Main.dust[index2].velocity += vector2_2 * num8;
                                }
                            }
                            spinningpoint = Utils.RotatedBy(spinningpoint, 6.28318548202515 / num2, new Vector2());
                        }
                        for (int index1 = 0; index1 < 120; ++index1)
                        {
                            float num6 = num3;
                            int Type = 133;
                            if (index1 < 80)
                                num6 = num4 - 0.5f;
                            else
                                Type = 131;
                            int index2 = Dust.NewDust(new Vector2(position.X, position.Y), 6, 6, Type, 0.0f, 0.0f, 100, new Color(), 1f);
                            float num7 = Main.dust[index2].velocity.X;
                            float num8 = Main.dust[index2].velocity.Y;
                            if (num7 == 0.0 && num8 == 0.0)
                                num7 = 1f;
                            float num9 = (float)Math.Sqrt(num7 * num7 + num8 * num8);
                            float num10 = num6 / num9;
                            float num11 = num7 * num10;
                            float num12 = num8 * num10;
                            Main.dust[index2].velocity *= 0.2f;
                            Main.dust[index2].velocity.X += num11;
                            Main.dust[index2].velocity.Y += num12;
                            Main.dust[index2].scale = 1.3f;
                            Main.dust[index2].noGravity = true;
                        }
                    }
                    position.X += (width / 2);
                    position.Y += (height / 2);
                    width = 192;
                    height = 192;
                    position.X -= (width / 2);
                    position.Y -= (height / 2);
                    penetrate = -1;
                    Damage();
                }
                else if (type == 312)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    position.X += (width / 2);
                    position.Y += (height / 2);
                    width = 22;
                    height = 22;
                    position.X -= (width / 2);
                    position.Y -= (height / 2);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 1.4f;
                    }
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 3.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 7f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 3f;
                    }
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        float num2 = 0.4f;
                        if (index1 == 1)
                            num2 = 0.8f;
                        int index2 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index2].velocity *= num2;
                        ++Main.gore[index2].velocity.X;
                        ++Main.gore[index2].velocity.Y;
                        int index3 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index3].velocity *= num2;
                        --Main.gore[index3].velocity.X;
                        ++Main.gore[index3].velocity.Y;
                        int index4 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index4].velocity *= num2;
                        ++Main.gore[index4].velocity.X;
                        --Main.gore[index4].velocity.Y;
                        int index5 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index5].velocity *= num2;
                        --Main.gore[index5].velocity.X;
                        --Main.gore[index5].velocity.Y;
                    }
                    position.X += (width / 2);
                    position.Y += (height / 2);
                    width = 128;
                    height = 128;
                    position.X -= (width / 2);
                    position.Y -= (height / 2);
                    Damage();
                }
                else if (type == 133 || type == 134 || (type == 135 || type == 136) || (type == 137 || type == 138 || (type == 303 || type == 338)) || type == 339)
                {
                    if (type == 30 || type == 133 || (type == 136 || type == 139))
                        Main.PlaySound(2, (int)position.X, (int)position.Y, 62);
                    else
                        Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    position.X += (width / 2);
                    position.Y += (height / 2);
                    width = 22;
                    height = 22;
                    position.X -= (width / 2);
                    position.Y -= (height / 2);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 1.4f;
                    }
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 3.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 7f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 3f;
                    }
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        float num2 = 0.4f;
                        if (index1 == 1)
                            num2 = 0.8f;
                        int index2 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index2].velocity *= num2;
                        ++Main.gore[index2].velocity.X;
                        ++Main.gore[index2].velocity.Y;
                        int index3 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index3].velocity *= num2;
                        --Main.gore[index3].velocity.X;
                        ++Main.gore[index3].velocity.Y;
                        int index4 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index4].velocity *= num2;
                        ++Main.gore[index4].velocity.X;
                        --Main.gore[index4].velocity.Y;
                        int index5 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index5].velocity *= num2;
                        --Main.gore[index5].velocity.X;
                        --Main.gore[index5].velocity.Y;
                    }
                }
                else if (type == 139 || type == 140 || (type == 141 || type == 142) || (type == 143 || type == 144 || (type == 340 || type == 341)))
                {
                    if (type == 30 || type == 133 || (type == 136 || type == 139))
                        Main.PlaySound(2, (int)position.X, (int)position.Y, 62);
                    else
                        Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    position.X += (width / 2);
                    position.Y += (height / 2);
                    width = 80;
                    height = 80;
                    position.X -= (width / 2);
                    position.Y -= (height / 2);
                    for (int index1 = 0; index1 < 40; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 2f);
                        Main.dust[index2].velocity *= 3f;
                        if (Main.rand.Next(2) == 0)
                        {
                            Main.dust[index2].scale = 0.5f;
                            Main.dust[index2].fadeIn = (float)(1.0 + Main.rand.Next(10) * 0.100000001490116);
                        }
                    }
                    for (int index1 = 0; index1 < 70; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 3f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 5f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 2f);
                        Main.dust[index3].velocity *= 2f;
                    }
                    for (int index1 = 0; index1 < 3; ++index1)
                    {
                        float num2 = 0.33f;
                        if (index1 == 1)
                            num2 = 0.66f;
                        if (index1 == 2)
                            num2 = 1f;
                        int index2 = Gore.NewGore(new Vector2((float)(position.X + (width / 2) - 24.0), (float)(position.Y + (height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index2].velocity *= num2;
                        ++Main.gore[index2].velocity.X;
                        ++Main.gore[index2].velocity.Y;
                        int index3 = Gore.NewGore(new Vector2((float)(position.X + (width / 2) - 24.0), (float)(position.Y + (height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index3].velocity *= num2;
                        --Main.gore[index3].velocity.X;
                        ++Main.gore[index3].velocity.Y;
                        int index4 = Gore.NewGore(new Vector2((float)(position.X + (width / 2) - 24.0), (float)(position.Y + (height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index4].velocity *= num2;
                        ++Main.gore[index4].velocity.X;
                        --Main.gore[index4].velocity.Y;
                        int index5 = Gore.NewGore(new Vector2((float)(position.X + (width / 2) - 24.0), (float)(position.Y + (height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index5].velocity *= num2;
                        --Main.gore[index5].velocity.X;
                        --Main.gore[index5].velocity.Y;
                    }
                    position.X += (width / 2);
                    position.Y += (height / 2);
                    width = 10;
                    height = 10;
                    position.X -= (width / 2);
                    position.Y -= (height / 2);
                }
                else if (type == 246)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 0.9f;
                    }
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 3f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 2f;
                    }
                    int index4 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index4].velocity *= 0.3f;
                    Main.gore[index4].velocity.X += Main.rand.Next(-1, 2);
                    Main.gore[index4].velocity.Y += Main.rand.Next(-1, 2);
                    position.X += (width / 2);
                    position.Y += (height / 2);
                    width = 150;
                    height = 150;
                    position.X -= (width / 2);
                    position.Y -= (height / 2);
                    penetrate = -1;
                    maxPenetrate = 0;
                    Damage();
                    if (owner == Main.myPlayer)
                    {
                        int num2 = Main.rand.Next(2, 6);
                        for (int index1 = 0; index1 < num2; ++index1)
                        {
                            float num3 = Main.rand.Next(-100, 101) + 0.01f;
                            float num4 = Main.rand.Next(-100, 101);
                            float num5 = num3 - 0.01f;
                            float num6 = 8f / (float)Math.Sqrt(num5 * num5 + num4 * num4);
                            int index2 = NewProjectile(Center.X - oldVelocity.X, Center.Y - oldVelocity.Y, num5 * num6, num4 * num6, 249, damage, knockBack, owner, 0.0f, 0.0f);
                            Main.projectile[index2].maxPenetrate = 0;
                        }
                    }
                }
                else if (type == 249)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    for (int index1 = 0; index1 < 7; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 0.8f;
                    }
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 2.5f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 1.5f;
                    }
                    int index = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index].velocity *= 0.2f;
                    Main.gore[index].velocity.X += Main.rand.Next(-1, 2);
                    Main.gore[index].velocity.Y += Main.rand.Next(-1, 2);
                    position.X += (width / 2);
                    position.Y += (height / 2);
                    width = 100;
                    height = 100;
                    position.X -= (width / 2);
                    position.Y -= (height / 2);
                    penetrate = -1;
                    Damage();
                }
                else if (type == 588)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    position = Center;
                    width = height = 22;
                    Center = position;
                    for (int index1 = 0; index1 < 8; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 219 + Main.rand.Next(5), 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 1.4f;
                        Main.dust[index2].fadeIn = 1f;
                        Main.dust[index2].noGravity = true;
                    }
                    for (int index1 = 0; index1 < 15; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 139 + Main.rand.Next(4), 0.0f, 0.0f, 0, new Color(), 1.6f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 5f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 139 + Main.rand.Next(4), 0.0f, 0.0f, 0, new Color(), 1.9f);
                        Main.dust[index3].velocity *= 3f;
                    }
                    if (Main.rand.Next(2) == 0)
                    {
                        int index = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(276, 283), 1f);
                        Main.gore[index].velocity *= 0.4f;
                        ++Main.gore[index].velocity.X;
                        ++Main.gore[index].velocity.Y;
                    }
                    if (Main.rand.Next(2) == 0)
                    {
                        int index = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(276, 283), 1f);
                        Main.gore[index].velocity *= 0.4f;
                        --Main.gore[index].velocity.X;
                        ++Main.gore[index].velocity.Y;
                    }
                    if (Main.rand.Next(2) == 0)
                    {
                        int index = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(276, 283), 1f);
                        Main.gore[index].velocity *= 0.4f;
                        ++Main.gore[index].velocity.X;
                        --Main.gore[index].velocity.Y;
                    }
                    if (Main.rand.Next(2) == 0)
                    {
                        int index = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(276, 283), 1f);
                        Main.gore[index].velocity *= 0.4f;
                        --Main.gore[index].velocity.X;
                        --Main.gore[index].velocity.Y;
                    }
                }
                else if (type == 28 || type == 30 || (type == 37 || type == 75) || (type == 102 || type == 164 || (type == 397 || type == 517)) || (type == 516 || type == 519))
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    position.X += (width / 2);
                    position.Y += (height / 2);
                    width = 22;
                    height = 22;
                    position.X -= (width / 2);
                    position.Y -= (height / 2);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 1.4f;
                    }
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 5f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 3f;
                    }
                    int index4 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index4].velocity *= 0.4f;
                    ++Main.gore[index4].velocity.X;
                    ++Main.gore[index4].velocity.Y;
                    int index5 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index5].velocity *= 0.4f;
                    --Main.gore[index5].velocity.X;
                    ++Main.gore[index5].velocity.Y;
                    int index6 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index6].velocity *= 0.4f;
                    ++Main.gore[index6].velocity.X;
                    --Main.gore[index6].velocity.Y;
                    int index7 = Gore.NewGore(new Vector2(position.X, position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index7].velocity *= 0.4f;
                    --Main.gore[index7].velocity.X;
                    --Main.gore[index7].velocity.Y;
                    if (type == 102)
                    {
                        position.X += (width / 2);
                        position.Y += (height / 2);
                        width = 128;
                        height = 128;
                        position.X -= (width / 2);
                        position.Y -= (height / 2);
                        damage = 40;
                        Damage();
                    }
                }
                else if (type == 29 || type == 108 || (type == 470 || type == 637))
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 14);
                    if (type == 29)
                    {
                        position.X += (width / 2);
                        position.Y += (height / 2);
                        width = 200;
                        height = 200;
                        position.X -= (width / 2);
                        position.Y -= (height / 2);
                    }
                    for (int index1 = 0; index1 < 50; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 31, 0.0f, 0.0f, 100, new Color(), 2f);
                        Main.dust[index2].velocity *= 1.4f;
                    }
                    for (int index1 = 0; index1 < 80; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 3f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 5f;
                        int index3 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 6, 0.0f, 0.0f, 100, new Color(), 2f);
                        Main.dust[index3].velocity *= 3f;
                    }
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        int index2 = Gore.NewGore(new Vector2((float)(position.X + (width / 2) - 24.0), (float)(position.Y + (height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index2].scale = 1.5f;
                        Main.gore[index2].velocity.X += 1.5f;
                        Main.gore[index2].velocity.Y += 1.5f;
                        int index3 = Gore.NewGore(new Vector2((float)(position.X + (width / 2) - 24.0), (float)(position.Y + (height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index3].scale = 1.5f;
                        Main.gore[index3].velocity.X -= 1.5f;
                        Main.gore[index3].velocity.Y += 1.5f;
                        int index4 = Gore.NewGore(new Vector2((float)(position.X + (width / 2) - 24.0), (float)(position.Y + (height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index4].scale = 1.5f;
                        Main.gore[index4].velocity.X += 1.5f;
                        Main.gore[index4].velocity.Y -= 1.5f;
                        int index5 = Gore.NewGore(new Vector2((float)(position.X + (width / 2) - 24.0), (float)(position.Y + (height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index5].scale = 1.5f;
                        Main.gore[index5].velocity.X -= 1.5f;
                        Main.gore[index5].velocity.Y -= 1.5f;
                    }
                    position.X += (width / 2);
                    position.Y += (height / 2);
                    width = 10;
                    height = 10;
                    position.X -= (width / 2);
                    position.Y -= (height / 2);
                }
                else if (type == 69)
                {
                    Main.PlaySound(13, (int)position.X, (int)position.Y, 1);
                    for (int index = 0; index < 5; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 13, 0.0f, 0.0f, 0, new Color(), 1f);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 33, 0.0f, -2f, 0, new Color(), 1.1f);
                        Main.dust[index2].alpha = 100;
                        Main.dust[index2].velocity.X *= 1.5f;
                        Main.dust[index2].velocity *= 3f;
                    }
                }
                else if (type == 70)
                {
                    Main.PlaySound(13, (int)position.X, (int)position.Y, 1);
                    for (int index = 0; index < 5; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 13, 0.0f, 0.0f, 0, new Color(), 1f);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 52, 0.0f, -2f, 0, new Color(), 1.1f);
                        Main.dust[index2].alpha = 100;
                        Main.dust[index2].velocity.X *= 1.5f;
                        Main.dust[index2].velocity *= 3f;
                    }
                }
                else if (type == 621)
                {
                    Main.PlaySound(13, (int)position.X, (int)position.Y, 1);
                    for (int index = 0; index < 5; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 13, 0.0f, 0.0f, 0, new Color(), 1f);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(position.X, position.Y), width, height, 266, 0.0f, -2f, 0, new Color(), 1.1f);
                        Main.dust[index2].alpha = 100;
                        Main.dust[index2].velocity.X *= 1.5f;
                        Main.dust[index2].velocity *= 3f;
                    }
                }
                else if (type == 114 || type == 115)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index1 = 4; index1 < 31; ++index1)
                    {
                        float num2 = oldVelocity.X * (30f / index1);
                        float num3 = oldVelocity.Y * (30f / index1);
                        int index2 = Dust.NewDust(new Vector2(position.X - num2, position.Y - num3), 8, 8, 27, oldVelocity.X, oldVelocity.Y, 100, new Color(), 1.4f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 0.5f;
                        int index3 = Dust.NewDust(new Vector2(position.X - num2, position.Y - num3), 8, 8, 27, oldVelocity.X, oldVelocity.Y, 100, new Color(), 0.9f);
                        Main.dust[index3].velocity *= 0.5f;
                    }
                }
                else if (type == 116)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index1 = 4; index1 < 31; ++index1)
                    {
                        float num2 = oldVelocity.X * (30f / index1);
                        float num3 = oldVelocity.Y * (30f / index1);
                        int index2 = Dust.NewDust(new Vector2(position.X - num2, position.Y - num3), 8, 8, 64, oldVelocity.X, oldVelocity.Y, 100, new Color(), 1.8f);
                        Main.dust[index2].noGravity = true;
                        int index3 = Dust.NewDust(new Vector2(position.X - num2, position.Y - num3), 8, 8, 64, oldVelocity.X, oldVelocity.Y, 100, new Color(), 1.4f);
                        Main.dust[index3].noGravity = true;
                    }
                }
                else if (type == 173)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index1 = 4; index1 < 24; ++index1)
                    {
                        float num2 = oldVelocity.X * (30f / index1);
                        float num3 = oldVelocity.Y * (30f / index1);
                        int Type;
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                Type = 15;
                                break;
                            case 1:
                                Type = 57;
                                break;
                            default:
                                Type = 58;
                                break;
                        }
                        int index2 = Dust.NewDust(new Vector2(position.X - num2, position.Y - num3), 8, 8, Type, oldVelocity.X * 0.2f, oldVelocity.Y * 0.2f, 100, new Color(), 1.8f);
                        Main.dust[index2].velocity *= 1.5f;
                        Main.dust[index2].noGravity = true;
                    }
                }
                else if (type == 132)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index1 = 4; index1 < 31; ++index1)
                    {
                        float num2 = oldVelocity.X * (30f / index1);
                        float num3 = oldVelocity.Y * (30f / index1);
                        int index2 = Dust.NewDust(new Vector2(oldPosition.X - num2, oldPosition.Y - num3), 8, 8, 107, oldVelocity.X, oldVelocity.Y, 100, new Color(), 1.8f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 0.5f;
                        int index3 = Dust.NewDust(new Vector2(oldPosition.X - num2, oldPosition.Y - num3), 8, 8, 107, oldVelocity.X, oldVelocity.Y, 100, new Color(), 1.4f);
                        Main.dust[index3].velocity *= 0.05f;
                    }
                }
                else if (type == 156)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index1 = 4; index1 < 31; ++index1)
                    {
                        float num2 = oldVelocity.X * (30f / index1);
                        float num3 = oldVelocity.Y * (30f / index1);
                        int index2 = Dust.NewDust(new Vector2(oldPosition.X - num2, oldPosition.Y - num3), 8, 8, 73, oldVelocity.X, oldVelocity.Y, 255, new Color(), 1.8f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 0.5f;
                        int index3 = Dust.NewDust(new Vector2(oldPosition.X - num2, oldPosition.Y - num3), 8, 8, 73, oldVelocity.X, oldVelocity.Y, 255, new Color(), 1.4f);
                        Main.dust[index3].velocity *= 0.05f;
                        Main.dust[index3].noGravity = true;
                    }
                }
                else if (type == 157)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 10);
                    for (int index1 = 4; index1 < 31; ++index1)
                    {
                        int index2 = Dust.NewDust(position, width, height, 107, oldVelocity.X, oldVelocity.Y, 100, new Color(), 1.8f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 0.5f;
                    }
                }
                else if (type == 370)
                {
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 4);
                    for (int index = 0; index < 5; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 13, 0.0f, 0.0f, 0, new Color(), 1f);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        Vector2 vector2 = new Vector2(Main.rand.Next(-10, 11), Main.rand.Next(-10, 11));
                        vector2.Normalize();
                        int index2 = Gore.NewGore(Center + vector2 * 10f, vector2 * Main.rand.Next(4, 9) * 0.66f + Vector2.UnitY * 1.5f, 331, Main.rand.Next(40, 141) * 0.01f);
                        Main.gore[index2].sticky = false;
                    }
                }
                else if (type == 371)
                {
                    Main.PlaySound(13, (int)position.X, (int)position.Y, 1);
                    Main.PlaySound(2, (int)position.X, (int)position.Y, 16);
                    for (int index = 0; index < 5; ++index)
                        Dust.NewDust(new Vector2(position.X, position.Y), width, height, 13, 0.0f, 0.0f, 0, new Color(), 1f);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        Vector2 vector2 = new Vector2(Main.rand.Next(-10, 11), Main.rand.Next(-10, 11));
                        vector2.Normalize();
                        vector2 *= 0.4f;
                        int index2 = Gore.NewGore(Center + vector2 * 10f, vector2 * Main.rand.Next(4, 9) * 0.66f + Vector2.UnitY * 1.5f, Main.rand.Next(435, 438), Main.rand.Next(20, 100) * 0.01f);
                        Main.gore[index2].sticky = false;
                    }
                }
            }
            if (owner == Main.myPlayer)
            {
                if (type == 28 || type == 29 || (type == 37 || type == 108) || (type == 136 || type == 137 || (type == 138 || type == 142)) || (type == 143 || type == 144 || (type == 339 || type == 341) || (type == 470 || type == 516 || (type == 519 || type == 637))))
                {
                    int num2 = 3;
                    if (type == 28 || type == 37 || (type == 516 || type == 519))
                        num2 = 4;
                    if (type == 29 || type == 470 || type == 637)
                        num2 = 7;
                    if (type == 142 || type == 143 || (type == 144 || type == 341))
                        num2 = 5;
                    if (type == 108)
                        num2 = 10;
                    int num3 = (int)(position.X / 16.0 - num2);
                    int num4 = (int)(position.X / 16.0 + num2);
                    int num5 = (int)(position.Y / 16.0 - num2);
                    int num6 = (int)(position.Y / 16.0 + num2);
                    if (num3 < 0)
                        num3 = 0;
                    if (num4 > Main.maxTilesX)
                        num4 = Main.maxTilesX;
                    if (num5 < 0)
                        num5 = 0;
                    if (num6 > Main.maxTilesY)
                        num6 = Main.maxTilesY;
                    bool flag1 = false;
                    for (int index1 = num3; index1 <= num4; ++index1)
                    {
                        for (int index2 = num5; index2 <= num6; ++index2)
                        {
                            float num7 = Math.Abs(index1 - position.X / 16f);
                            float num8 = Math.Abs(index2 - position.Y / 16f);
                            if (Math.Sqrt(num7 * num7 + num8 * num8) < num2 && Main.tile[index1, index2] != null && Main.tile[index1, index2].wall == 0)
                            {
                                flag1 = true;
                                break;
                            }
                        }
                    }
                    AchievementsHelper.CurrentlyMining = true;
                    for (int i1 = num3; i1 <= num4; ++i1)
                    {
                        for (int j1 = num5; j1 <= num6; ++j1)
                        {
                            float num7 = Math.Abs(i1 - position.X / 16f);
                            float num8 = Math.Abs(j1 - position.Y / 16f);
                            if (Math.Sqrt(num7 * num7 + num8 * num8) < num2)
                            {
                                bool flag2 = true;
                                if (Main.tile[i1, j1] != null && Main.tile[i1, j1].active())
                                {
                                    flag2 = true;
                                    if (Main.tileDungeon[Main.tile[i1, j1].type] || Main.tile[i1, j1].type == 21 || (Main.tile[i1, j1].type == 26 || Main.tile[i1, j1].type == 107) || (Main.tile[i1, j1].type == 108 || Main.tile[i1, j1].type == 111 || (Main.tile[i1, j1].type == 226 || Main.tile[i1, j1].type == 237)) || (Main.tile[i1, j1].type == 221 || Main.tile[i1, j1].type == 222 || (Main.tile[i1, j1].type == 223 || Main.tile[i1, j1].type == 211) || Main.tile[i1, j1].type == 404))
                                        flag2 = false;
                                    if (!Main.hardMode && Main.tile[i1, j1].type == 58)
                                        flag2 = false;
                                    if (flag2)
                                    {
                                        WorldGen.KillTile(i1, j1, false, false, false);
                                        if (!Main.tile[i1, j1].active() && Main.netMode != 0)
                                            NetMessage.SendData(17, -1, -1, "", 0, i1, j1, 0.0f, 0, 0, 0);
                                    }
                                }
                                if (flag2)
                                {
                                    for (int i2 = i1 - 1; i2 <= i1 + 1; ++i2)
                                    {
                                        for (int j2 = j1 - 1; j2 <= j1 + 1; ++j2)
                                        {
                                            if (Main.tile[i2, j2] != null && Main.tile[i2, j2].wall > 0 && flag1)
                                            {
                                                WorldGen.KillWall(i2, j2, false);
                                                if (Main.tile[i2, j2].wall == 0 && Main.netMode != 0)
                                                    NetMessage.SendData(17, -1, -1, "", 2, i2, j2, 0.0f, 0, 0, 0);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    AchievementsHelper.CurrentlyMining = false;
                }
                if (Main.netMode != 0)
                    NetMessage.SendData(29, -1, -1, "", identity, owner, 0.0f, 0.0f, 0, 0, 0);
                if (!noDropItem)
                {
                    int number = -1;
                    if (aiStyle == 10)
                    {
                        int i = (int)(position.X + (width / 2)) / 16;
                        int j = (int)(position.Y + (width / 2)) / 16;
                        int tempType = 0;
                        int Type = 2;
                        if (this.type == 109)
                        {
                            tempType = 147;
                            Type = 0;
                        }
                        if (this.type == 31)
                        {
                            tempType = 53;
                            Type = 0;
                        }
                        if (this.type == 42)
                        {
                            tempType = 53;
                            Type = 0;
                        }
                        if (this.type == 56)
                        {
                            tempType = 112;
                            Type = 0;
                        }
                        if (this.type == 65)
                        {
                            tempType = 112;
                            Type = 0;
                        }
                        if (this.type == 67)
                        {
                            tempType = 116;
                            Type = 0;
                        }
                        if (this.type == 68)
                        {
                            tempType = 116;
                            Type = 0;
                        }
                        if (this.type == 71)
                        {
                            tempType = 123;
                            Type = 0;
                        }
                        if (this.type == 39)
                        {
                            tempType = 59;
                            Type = 176;
                        }
                        if (this.type == 40)
                        {
                            tempType = 57;
                            Type = 172;
                        }
                        if (this.type == 179)
                        {
                            tempType = 224;
                            Type = 0;
                        }
                        if (this.type == 241)
                        {
                            tempType = 234;
                            Type = 0;
                        }
                        if (this.type == 354)
                        {
                            tempType = 234;
                            Type = 0;
                        }
                        if (this.type == 411)
                        {
                            tempType = 330;
                            Type = 71;
                        }
                        if (this.type == 412)
                        {
                            tempType = 331;
                            Type = 72;
                        }
                        if (this.type == 413)
                        {
                            tempType = 332;
                            Type = 73;
                        }
                        if (this.type == 414)
                        {
                            tempType = 333;
                            Type = 74;
                        }
                        if (this.type == 109)
                        {
                            int index = Player.FindClosest(position, width, height);
                            if ((Center - Main.player[index].Center).Length() > Main.maxScreenW * 0.75)
                            {
                                tempType = -1;
                                Type = 593;
                            }
                        }
                        if (Main.tile[i, j].halfBrick() && velocity.Y > 0.0 && Math.Abs(velocity.Y) > Math.Abs(velocity.X))
                            --j;
                        if (!Main.tile[i, j].active() && tempType >= 0)
                        {
                            bool flag = false;
                            if (j < Main.maxTilesY - 2 && Main.tile[i, j + 1] != null && (Main.tile[i, j + 1].active() && Main.tile[i, j + 1].type == 314))
                                flag = true;
                            if (!flag)
                                WorldGen.PlaceTile(i, j, tempType, false, true, -1, 0);
                            if (!flag && Main.tile[i, j].active() && Main.tile[i, j].type == tempType)
                            {
                                if (Main.tile[i, j + 1].halfBrick() || Main.tile[i, j + 1].slope() != 0)
                                {
                                    WorldGen.SlopeTile(i, j + 1, 0);
                                    if (Main.netMode == 2)
                                        NetMessage.SendData(17, -1, -1, "", 14, i, (j + 1), 0.0f, 0, 0, 0);
                                }
                                if (Main.netMode != 0)
                                    NetMessage.SendData(17, -1, -1, "", 1, i, j, tempType, 0, 0, 0);
                            }
                            else if (Type > 0)
                                number = Item.NewItem((int)position.X, (int)position.Y, width, height, Type, 1, false, 0, false);
                        }
                        else if (Type > 0)
                            number = Item.NewItem((int)position.X, (int)position.Y, width, height, Type, 1, false, 0, false);
                    }
                    if (this.type == 1 && Main.rand.Next(3) == 0)
                        number = Item.NewItem((int)position.X, (int)position.Y, width, height, 40, 1, false, 0, false);
                    if (this.type == 474 && Main.rand.Next(3) == 0)
                        number = Item.NewItem((int)position.X, (int)position.Y, width, height, 3003, 1, false, 0, false);
                    if (this.type == 103 && Main.rand.Next(6) == 0)
                        number = Main.rand.Next(3) != 0 ? Item.NewItem((int)position.X, (int)position.Y, width, height, 40, 1, false, 0, false) : Item.NewItem((int)position.X, (int)position.Y, width, height, 545, 1, false, 0, false);
                    if (this.type == 2 && Main.rand.Next(3) == 0)
                        number = Main.rand.Next(3) != 0 ? Item.NewItem((int)position.X, (int)position.Y, width, height, 40, 1, false, 0, false) : Item.NewItem((int)position.X, (int)position.Y, width, height, 41, 1, false, 0, false);
                    if (this.type == 172 && Main.rand.Next(3) == 0)
                        number = Main.rand.Next(3) != 0 ? Item.NewItem((int)position.X, (int)position.Y, width, height, 40, 1, false, 0, false) : Item.NewItem((int)position.X, (int)position.Y, width, height, 988, 1, false, 0, false);
                    if (this.type == 171)
                    {
                        if (ai[1] == 0.0)
                        {
                            number = Item.NewItem((int)position.X, (int)position.Y, width, height, 985, 1, false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                        else if (ai[1] < 10.0)
                        {
                            number = Item.NewItem((int)position.X, (int)position.Y, width, height, 965, (int)(10.0 - ai[1]), false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                    }
                    if (this.type == 475)
                    {
                        if (ai[1] == 0.0)
                        {
                            number = Item.NewItem((int)position.X, (int)position.Y, width, height, 3005, 1, false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                        else if (ai[1] < 10.0)
                        {
                            number = Item.NewItem((int)position.X, (int)position.Y, width, height, 2996, (int)(10.0 - ai[1]), false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                    }
                    if (this.type == 505)
                    {
                        if (ai[1] == 0.0)
                        {
                            number = Item.NewItem((int)position.X, (int)position.Y, width, height, 3079, 1, false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                        else if (ai[1] < 10.0)
                        {
                            number = Item.NewItem((int)position.X, (int)position.Y, width, height, 3077, (int)(10.0 - ai[1]), false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                    }
                    if (this.type == 506)
                    {
                        if (ai[1] == 0.0)
                        {
                            number = Item.NewItem((int)position.X, (int)position.Y, width, height, 3080, 1, false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                        else if (ai[1] < 10.0)
                        {
                            number = Item.NewItem((int)position.X, (int)position.Y, width, height, 3078, (int)(10.0 - ai[1]), false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                    }
                    if (this.type == 91 && Main.rand.Next(6) == 0)
                        number = Item.NewItem((int)position.X, (int)position.Y, width, height, 516, 1, false, 0, false);
                    if (this.type == 50 && Main.rand.Next(3) == 0)
                        number = Item.NewItem((int)position.X, (int)position.Y, width, height, 282, 1, false, 0, false);
                    if (this.type == 515 && Main.rand.Next(3) == 0)
                        number = Item.NewItem((int)position.X, (int)position.Y, width, height, 3112, 1, false, 0, false);
                    if (this.type == 53 && Main.rand.Next(3) == 0)
                        number = Item.NewItem((int)position.X, (int)position.Y, width, height, 286, 1, false, 0, false);
                    if (this.type == 48 && Main.rand.Next(2) == 0)
                        number = Item.NewItem((int)position.X, (int)position.Y, width, height, 279, 1, false, 0, false);
                    if (this.type == 54 && Main.rand.Next(2) == 0)
                        number = Item.NewItem((int)position.X, (int)position.Y, width, height, 287, 1, false, 0, false);
                    if (this.type == 3 && Main.rand.Next(2) == 0)
                        number = Item.NewItem((int)position.X, (int)position.Y, width, height, 42, 1, false, 0, false);
                    if (this.type == 4 && Main.rand.Next(4) == 0)
                        number = Item.NewItem((int)position.X, (int)position.Y, width, height, 47, 1, false, 0, false);
                    if (this.type == 12 && damage > 500)
                        number = Item.NewItem((int)position.X, (int)position.Y, width, height, 75, 1, false, 0, false);
                    if (this.type == 155)
                        number = Item.NewItem((int)position.X, (int)position.Y, width, height, 859, 1, false, 0, false);
                    if (this.type == 598 && Main.rand.Next(4) == 0)
                        number = Item.NewItem((int)position.X, (int)position.Y, width, height, 3378, 1, false, 0, false);
                    if (this.type == 599 && Main.rand.Next(4) == 0)
                        number = Item.NewItem((int)position.X, (int)position.Y, width, height, 3379, 1, false, 0, false);
                    if (this.type == 21 && Main.rand.Next(2) == 0)
                        number = Item.NewItem((int)position.X, (int)position.Y, width, height, 154, 1, false, 0, false);
                    if (Main.netMode == 1 && number >= 0)
                        NetMessage.SendData(21, -1, -1, "", number, 1f, 0.0f, 0.0f, 0, 0, 0);
                }
                if (type == 69 || type == 70 || type == 621)
                {
                    int i = (int)(position.X + (width / 2)) / 16;
                    int j = (int)(position.Y + (height / 2)) / 16;
                    if (type == 69)
                        WorldGen.Convert(i, j, 2, 4);
                    if (type == 70)
                        WorldGen.Convert(i, j, 1, 4);
                    if (type == 621)
                        WorldGen.Convert(i, j, 4, 4);
                }
                if (this.type == 370 || this.type == 371)
                {
                    float num2 = 80f;
                    int tempType = 119;
                    if (this.type == 371)
                        tempType = 120;
                    for (int index = 0; index < 255; ++index)
                    {
                        Player player = Main.player[index];
                        if (player.active && !player.dead && Vector2.Distance(Center, player.Center) < num2)
                            player.AddBuff(tempType, 1800, true);
                    }
                    for (int index = 0; index < 200; ++index)
                    {
                        NPC npc = Main.npc[index];
                        if (npc.active && npc.life > 0 && Vector2.Distance(Center, npc.Center) < num2)
                            npc.AddBuff(tempType, 1800, false);
                    }
                }
                if (type == 378)
                {
                    int num2 = Main.rand.Next(2, 4);
                    if (Main.rand.Next(5) == 0)
                        ++num2;
                    for (int index = 0; index < num2; ++index)
                    {
                        float num3 = velocity.X;
                        float num4 = velocity.Y;
                        NewProjectile(Center.X, Center.Y, num3 * (float)(1.0 + Main.rand.Next(-20, 21) * 0.00999999977648258), num4 * (float)(1.0 + Main.rand.Next(-20, 21) * 0.00999999977648258), 379, damage, knockBack, owner, 0.0f, 0.0f);
                    }
                }
            }
            active = false;
        }

        public Color GetAlpha(Color newColor)
        {
            if (type == 270)
                return new Color(255, 255, 255, Main.rand.Next(0, 255));
            int num1;
            int num2;
            int num3;
            if (type == 650)
            {
                int num4 = (int)(newColor.R * 1.5);
                int num5 = (int)(newColor.G * 1.5);
                int num6 = (int)(newColor.B * 1.5);
                if (num4 > 255)
                    num1 = 255;
                if (num5 > 255)
                    num2 = 255;
                if (num6 > 255)
                    num3 = 255;
            }
            else
            {
                if (type == 604 || type == 631)
                    return new Color(255 - alpha, 255 - alpha, 255 - alpha, 0);
                if (type == 636)
                    return new Color(255 - alpha, 255 - alpha, 255 - alpha, 64 - alpha / 4);
                if (type == 603 || type == 633)
                    return new Color(255, 255, 255, 200);
                if (type == 623 || type >= 625 && type <= 628)
                    return new Color(255 - alpha, 255 - alpha, 255 - alpha, 255 - alpha);
                if (type == 645 || type == 643)
                    return new Color(255 - alpha, 255 - alpha, 255 - alpha, 127 - alpha / 2);
                if (type == 611)
                    return new Color(255, 255, 255, 200);
                if (type == 640 || type == 644)
                    return new Color(255 - alpha, 255 - alpha, 255 - alpha, 0);
                if (type == 612)
                    return new Color(255, 255, 255, 127);
                if (aiStyle == 105)
                    return new Color(255 - alpha, 255 - alpha, 255 - alpha, 255 - alpha);
                if (type == 554)
                    return new Color(200, 200, 200, 200);
                if (type == 601)
                    return PortalHelper.GetPortalColor(owner, (int)ai[0]);
                if (type == 602)
                {
                    Color portalColor = PortalHelper.GetPortalColor(owner, (int)ai[1]);
                    portalColor.A = 227;
                    return portalColor;
                }
                if (type == 585)
                {
                    byte a = newColor.A;
                    newColor = Color.Lerp(newColor, Color.White, 0.5f);
                    newColor.A = a;
                    return newColor;
                }
                if (type == 573 || type == 578 || (type == 579 || type == 617) || type == 641)
                    return new Color(255 - alpha, 255 - alpha, 255 - alpha, 255 - alpha);
                if (type == 9 || type == 490)
                    return Color.White;
                if (type == 575 || type == 596)
                {
                    if (timeLeft < 30)
                        alpha = (int)(255 - 255 * (double)(timeLeft / 30f));
                    return new Color(255 - alpha, 255 - alpha, 255 - alpha, 128 - alpha / 2);
                }
                if (type == 546)
                    return new Color(255, 200, 255, 200);
                if (type == 553)
                    return new Color(255, 255, 200, 200);
                if (type == 540)
                    return new Color(255 - alpha, 255 - alpha, 255 - alpha, 0);
                if (type == 498)
                    return new Color(255, 100, 20, 200);
                if (type == 538)
                    return new Color(255 - alpha, 255 - alpha, 255 - alpha, 255 - alpha);
                if (type == 518)
                {
                    float num4 = (float)(1.0 - (double)alpha / 255);
                    return new Color((int)(200.0 * num4), (int)(200.0 * num4), (int)(200.0 * num4), (int)(100.0 * num4));
                }
                if (type == 518 || type == 595)
                {
                    Color color = Color.Lerp(newColor, Color.White, 0.85f);
                    color.A = Convert.ToByte(-128);
                    return color * (float)(1.0 - (double)alpha / 255);
                }
                if (type == 536 || type == 607)
                    return new Color(255 - alpha, 255 - alpha, 255 - alpha, 63 - alpha / 4);
                if (type == 591)
                    return new Color(255 - alpha, 255 - alpha, 255 - alpha, 63 - alpha / 4);
                if (type == 493 || type == 494)
                    return new Color(255 - alpha, 255 - alpha, 255 - alpha, 255 - alpha);
                if (type == 492)
                    return new Color(255, 255, 255, 255);
                if (type == 491)
                    return new Color(255, 255, 255, 255);
                if (type == 485 || type == 502)
                    return new Color(255, 255, 255, 200);
                if (type == 488)
                    return new Color(255, 255, 255, 255);
                if (type == 477 || type == 478 || type == 479)
                {
                    if (alpha == 0)
                        return new Color(255, 255, 255, 200);
                    return new Color(0, 0, 0, 0);
                }
                if (type == 473)
                    return new Color(255, 255, 255, 255);
                if (type == 50 || type == 53 || type == 515)
                    return new Color(255, 255, 255, 0);
                if (type == 92)
                    return new Color(255, 255, 255, 0);
                if (type == 91)
                    return new Color(200, 200, 200, 0);
                if (type == 34 || type == 15 || (type == 93 || type == 94) || (type == 95 || type == 96 || (type == 253 || type == 258)) || type == 102 && alpha < 255)
                    return new Color(200, 200, 200, 25);
                if (type == 465)
                    return new Color(255, 255, 255, 0) * (float)(1.0 - (double)alpha / 255);
                if (type == 503)
                    return Color.Lerp(Color.Lerp(newColor, Color.White, 0.5f) * (float)(1.0 - (double)alpha / 255), Color.Lerp(Color.Purple, Color.White, 0.33f), (float)(0.25 + Math.Cos(localAI[0]) * 0.25));
                if (type == 467)
                    return new Color(255, 255, 255, 255) * (float)(1.0 - (double)alpha / 255);
                if (type == 634 || type == 635)
                    return new Color(255, 255, 255, 127) * Opacity;
                if (type == 451)
                    return new Color(255, 255, 255, 200) * (float)((255 - (double)alpha) / 255);
                if (type == 454 || type == 452)
                    return new Color(255, 255, 255, 255) * (float)(1.0 - (double)alpha / 255);
                if (type == 464)
                    return new Color(255, 255, 255, 255) * (float)((255 - (double)alpha) / 255);
                if (type == 450)
                    return new Color(200, 200, 200, 255 - alpha);
                if (type == 459)
                    return new Color(255, 255, 255, 200);
                if (type == 447)
                    return new Color(255, 255, 255, 200);
                if (type == 446)
                    return Color.Lerp(newColor, Color.White, 0.8f) * (float)(1.0 - (double)alpha / 255);
                if (type >= 646 && type <= 649)
                    return Color.Lerp(newColor, Color.White, 0.8f) * (float)(1.0 - (double)alpha / 255);
                if (type == 445)
                    return new Color(255, 255, 255, 128) * (float)(1.0 - (double)alpha / 255);
                if (type == 440 || type == 449 || type == 606)
                {
                    num1 = 255 - alpha;
                    num2 = 255 - alpha;
                    num3 = 255 - alpha;
                }
                else
                {
                    if (type == 444)
                        return newColor * (float)(1.0 - (double)alpha / 255);
                    if (type == 443)
                        return new Color(255, 255, 255, 128) * (float)(1.0 - (double)alpha / 255);
                    if (type == 438)
                        return new Color(255, 255, 255, 128) * (float)(1.0 - (double)alpha / 255);
                    if (type == 592)
                        return new Color(255, 255, 255, 128) * (float)(1.0 - (double)alpha / 255);
                    if (type == 437)
                        return new Color(255, 255, 255, 0) * (float)(1.0 - (double)alpha / 255);
                    if (type == 462)
                        return new Color(255, 255, 255, 128) * (float)(1.0 - (double)alpha / 255);
                    if (type == 352)
                        return new Color(250, 250, 250, alpha);
                    if (type == 435)
                    {
                        newColor = Color.Lerp(newColor, Color.White, 0.8f);
                        return new Color(newColor.R, newColor.G, newColor.B, 25);
                    }
                    if (type == 436)
                    {
                        newColor = Color.Lerp(newColor, Color.White, 0.8f);
                        return new Color(newColor.R, newColor.G, newColor.B, 25);
                    }
                    if (type == 409)
                        return new Color(250, 250, 250, 200);
                    if (type == 348 || type == 349)
                        return new Color(200, 200, 200, alpha);
                    if (type == 337)
                        return new Color(250, 250, 250, 150);
                    if (type >= 424 && type <= 426)
                    {
                        byte num4 = 150;
                        if (newColor.R < num4)
                            newColor.R = num4;
                        if (newColor.G < num4)
                            newColor.G = num4;
                        if (newColor.B < num4)
                            newColor.B = num4;
                        return new Color(newColor.R, newColor.G, newColor.B, 255);
                    }
                    if (type == 431 || type == 432)
                        return new Color(250, 250, 250, 255 - alpha);
                    if (type == 343 || type == 344)
                    {
                        float num4 = (float)(1.0 - (double)alpha / 255);
                        return new Color((int)(250.0 * num4), (int)(250.0 * num4), (int)(250.0 * num4), (int)(100.0 * num4));
                    }
                    if (type == 332)
                        return new Color(255, 255, 255, 255);
                    if (type == 329)
                        return new Color(200, 200, 200, 50);
                    if (type >= 326 && type <= 328 || type >= 400 && type <= 402)
                        return Color.Transparent;
                    if (type == 324 && frame >= 6 && frame <= 9)
                        return new Color(255, 255, 255, 255);
                    if (type == 16)
                        return new Color(255, 255, 255, 0);
                    if (type == 321)
                        return new Color(200, 200, 200, 0);
                    if (type == 76 || type == 77 || type == 78)
                        return new Color(255, 255, 255, 0);
                    if (type == 308)
                        return new Color(200, 200, 255, 125);
                    if (type == 263)
                    {
                        if (timeLeft < 255)
                            return new Color(255, 255, 255, (byte)timeLeft);
                        return new Color(255, 255, 255, 255);
                    }
                    if (type == 274)
                    {
                        if (timeLeft >= 85)
                            return new Color(255, 255, 255, 100);
                        byte num4 = (byte)(timeLeft * 3);
                        byte num5 = (byte)(100.0 * (num4 / 255));
                        return new Color(num4, num4, num4, num5);
                    }
                    if (type == 5)
                        return new Color(255, 255, 255, 0);
                    if (type == 300 || type == 301)
                        return new Color(250, 250, 250, 50);
                    if (type == 304)
                        return new Color(255 - alpha, 255 - alpha, 255 - alpha, (byte)((255 - alpha) / 3.0));
                    if (type == 116 || type == 132 || (type == 156 || type == 157) || (type == 157 || type == 173))
                    {
                        if (localAI[1] >= 15.0)
                            return new Color(255, 255, 255, alpha);
                        if (localAI[1] < 5.0)
                            return Color.Transparent;
                        int num4 = (int)((localAI[1] - 5.0) / 10.0 * 255);
                        return new Color(num4, num4, num4, num4);
                    }
                    if (type == 254)
                    {
                        if (timeLeft < 30)
                            alpha = (int)(255 - 255 * (double)(timeLeft / 30f));
                        return new Color(255 - alpha, 255 - alpha, 255 - alpha, 0);
                    }
                    if (type == 265 || type == 355)
                    {
                        if (alpha > 0)
                            return Color.Transparent;
                        return new Color(255, 255, 255, 0);
                    }
                    if (type == 270 && ai[0] >= 0.0)
                    {
                        if (alpha > 0)
                            return Color.Transparent;
                        return new Color(255, 255, 255, 200);
                    }
                    if (type == 257)
                    {
                        if (alpha > 200)
                            return Color.Transparent;
                        return new Color(255 - alpha, 255 - alpha, 255 - alpha, 0);
                    }
                    if (type == 259)
                    {
                        if (alpha > 200)
                            return Color.Transparent;
                        return new Color(255 - alpha, 255 - alpha, 255 - alpha, 0);
                    }
                    if (type >= 150 && type <= 152)
                        return new Color(255 - alpha, 255 - alpha, 255 - alpha, 255 - alpha);
                    if (type == 250)
                        return Color.Transparent;
                    if (type == 251)
                        return new Color(255 - alpha, 255 - alpha, 255 - alpha, 0);
                    if (type == 131)
                        return new Color(255 - alpha, 255 - alpha, 255 - alpha, 0);
                    if (type == 211)
                        return new Color(255, 255, 255, 0);
                    if (type == 229)
                        return new Color(255, 255, 255, 50);
                    if (type == 221)
                        return new Color(255, 255, 255, 200);
                    if (type == 20)
                    {
                        if (alpha <= 150)
                            return new Color(255, 255, 255, 0);
                        return new Color(0, 0, 0, 0);
                    }
                    if (type == 207)
                    {
                        num1 = 255 - alpha;
                        num2 = 255 - alpha;
                        num3 = 255 - alpha;
                    }
                    else
                    {
                        if (type == 242)
                        {
                            if (alpha < 140)
                                return new Color(255, 255, 255, 100);
                            return Color.Transparent;
                        }
                        if (type == 638)
                            return new Color(255, 255, 255, 100) * Opacity;
                        if (type == 209)
                        {
                            num1 = newColor.R - alpha;
                            num2 = newColor.G - alpha;
                            num3 = newColor.B - alpha / 2;
                        }
                        else
                        {
                            if (type == 130)
                                return new Color(255, 255, 255, 175);
                            if (type == 182)
                                return new Color(255, 255, 255, 200);
                            if (type == 226)
                            {
                                int num4 = 255;
                                int num5 = 255;
                                int num6 = 255;
                                float num7 = (float)(Main.mouseTextColor / 200.0 - 0.300000011920929);
                                int num8 = (int)(num4 * num7);
                                int num9 = (int)(num5 * num7);
                                int num10 = (int)(num6 * num7);
                                int r = num8 + 50;
                                if (r > 255)
                                    r = 255;
                                int g = num9 + 50;
                                if (g > 255)
                                    g = 255;
                                int b = num10 + 50;
                                if (b > 255)
                                    b = 255;
                                return new Color(r, g, b, 200);
                            }
                            if (type == 227)
                            {
                                int num4;
                                int num5 = num4 = 255;
                                int num6 = num4;
                                int num7 = num4;
                                float num8 = (float)(Main.mouseTextColor / 100.0 - 1.60000002384186);
                                int num9 = (int)(num7 * num8);
                                int num10 = (int)(num6 * num8);
                                int num11 = (int)(num5 * num8);
                                int a = (int)(100.0 * num8);
                                int r = num9 + 50;
                                if (r > 255)
                                    r = 255;
                                int g = num10 + 50;
                                if (g > 255)
                                    g = 255;
                                int b = num11 + 50;
                                if (b > 255)
                                    b = 255;
                                return new Color(r, g, b, a);
                            }
                            if (type == 114 || type == 115)
                            {
                                if (localAI[1] >= 15.0)
                                    return new Color(255, 255, 255, alpha);
                                if (localAI[1] < 5.0)
                                    return Color.Transparent;
                                int num4 = (int)((localAI[1] - 5.0) / 10.0 * 255);
                                return new Color(num4, num4, num4, num4);
                            }
                            if (type == 83 || type == 88 || (type == 89 || type == 90) || (type == 100 || type == 104 || type == 279) || type >= 283 && type <= 287)
                            {
                                if (alpha < 200)
                                    return new Color(255 - alpha, 255 - alpha, 255 - alpha, 0);
                                return Color.Transparent;
                            }
                            if (type == 34 || type == 35 || (type == 15 || type == 19) || (type == 44 || type == 45))
                                return Color.White;
                            if (type == 79)
                            {
                                num1 = Main.DiscoR;
                                num2 = Main.DiscoG;
                                num3 = Main.DiscoB;
                                return new Color();
                            }
                            if (type == 9 || type == 15 || (type == 34 || type == 50) || (type == 53 || type == 76 || (type == 77 || type == 78)) || (type == 92 || type == 91))
                            {
                                num1 = newColor.R - alpha / 3;
                                num2 = newColor.G - alpha / 3;
                                num3 = newColor.B - alpha / 3;
                            }
                            else
                            {
                                if (type == 18)
                                    return new Color(255, 255, 255, 50);
                                if (type == 16 || type == 44 || type == 45)
                                {
                                    num1 = newColor.R;
                                    num2 = newColor.G;
                                    num3 = newColor.B;
                                }
                                else if (type == 12 || type == 72 || (type == 86 || type == 87))
                                    return new Color(255, 255, 255, newColor.A - alpha);
                            }
                        }
                    }
                }
            }
            float num12 = (float)(255 - alpha) / 255;
            int r1 = (int)(newColor.R * num12);
            int g1 = (int)(newColor.G * num12);
            int b1 = (int)(newColor.B * num12);
            int a1 = newColor.A - alpha;
            if (a1 < 0)
                a1 = 0;
            if (a1 > 255)
                a1 = 255;
            return new Color(r1, g1, b1, a1);
        }

        public override string ToString()
        {
            return "name:" + (object)name + ", active:" + (string)(object)(active ? 1 : 0) + ", whoAmI:" + (string)(object)whoAmI;
        }
    }
}
